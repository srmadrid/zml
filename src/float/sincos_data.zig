pub const types = @import("../types.zig");
pub const sin = @import("sin.zig");
pub const cos = @import("cos.zig");
pub const atnat = @import("atnat.zig");
pub const usncs = @import("usncs.zig");
pub const scast = types.scast;
pub const endian = @import("builtin").cpu.arch.endian();

pub const Sincos32 = struct {
    // Sign of sine in quadrants 0..3.
    sign: [4]f64,
    // 2 / PI ( * 2^24 if !TOINT_INTRINSICS).
    hpi_inv: f64,
    /// PI / 2.
    hpi: f64,
    // Cosine polynomial: c0, c1, c2, c3, c4.
    // Sine polynomial: s1, s2, s3.
    c0: f64,
    c1: f64,
    s1c2: @Vector(2, f64),
    s2c3: @Vector(2, f64),
    s3c4: @Vector(2, f64),
};

// PI / 4.
pub const pio4: f32 = 0x1.921fb6p-1;

// Polynomial data (the cosine polynomial is negated in the 2nd entry).
pub const __sincos32_table: [2]Sincos32 = .{
    .{
        .sign = .{ 1.0, -1.0, -1.0, 1.0 },
        .hpi_inv = 0x1.45f306dc9c883p+23,
        .hpi = 0x1.921fb54442d18p0,
        .c0 = 0x1p0,
        .c1 = -0x1.ffffffd0c621cp-2,
        .s1c2 = .{ -0x1.555545995a603p-3, 0x1.55553e1068f19p-5 },
        .s2c3 = .{ 0x1.1107605230bc4p-7, -0x1.6c087e89a359dp-10 },
        .s3c4 = .{ -0x1.994eb3774cf24p-13, 0x1.99343027bf8c3p-16 },
    },
    .{
        .sign = .{ 1.0, -1.0, -1.0, 1.0 },
        .hpi_inv = 0x1.45f306dc9c883p+23,
        .hpi = 0x1.921fb54442d18p0,
        .c0 = -0x1p0,
        .c1 = 0x1.ffffffd0c621cp-2,
        .s1c2 = .{ -0x1.555545995a603p-3, -0x1.55553e1068f19p-5 },
        .s2c3 = .{ 0x1.1107605230bc4p-7, 0x1.6c087e89a359dp-10 },
        .s3c4 = .{ -0x1.994eb3774cf24p-13, -0x1.99343027bf8c3p-16 },
    },
};

// Table with 4/PI to 192 bit precision.
pub const __inv_pio4: [24]u32 = .{
    0xa2,       0xa2f9,     0xa2f983,   0xa2f9836e,
    0xf9836e4e, 0x836e4e44, 0x6e4e4415, 0x4e441529,
    0x441529fc, 0x1529fc27, 0x29fc2757, 0xfc2757d1,
    0x2757d1f5, 0x57d1f534, 0xd1f534dd, 0xf534ddc0,
    0x34ddc0db, 0xddc0db62, 0xc0db6295, 0xdb629599,
    0x6295993c, 0x95993c43, 0x993c4390, 0x3c439041,
};

// Top 12 bits of the float representation with the sign bit cleared.
pub inline fn abstop12(x: f32) u32 {
    return (@as(u32, @bitCast(x)) >> 20) & 0x7ff;
}

// Fast range reduction using single multiply-subtract.  Return the modulo of
// X as a value between -PI/4 and PI/4 and store the quadrant in NP.
// The values for PI/2 and 2/PI are accessed via P.  Since PI/2 as a double
// is accurate to 55 bits and the worst-case cancellation happens at 6 * PI/4,
// the result is accurate for |X| <= 120.0.
pub inline fn reduce_fast(x: f64, p: *const Sincos32, np: *i32) f64 {
    // Use scaled float to int conversion with explicit rounding.
    // hpi_inv is prescaled by 2^24 so the quadrant ends up in bits 24..31.
    // This avoids inaccuracies introduced by truncating negative values.
    const r: f64 = x * p.hpi_inv;
    const n: i32 = (scast(i32, r) + 0x800000) >> 24;
    np.* = n;
    return x - scast(f64, n) * p.hpi;
}

// Reduce the range of XI to a multiple of PI/2 using fast integer arithmetic.
// XI is a reinterpreted float and must be >= 2.0f (the sign bit is ignored).
// Return the modulo between -PI/4 and PI/4 and store the quadrant in NP.
// Reduction uses a table of 4/PI with 192 bits of precision.  A 32x96->128 bit
// multiply computes the exact 2.62-bit fixed-point modulo.  Since the result
// can have at most 29 leading zeros after the binary point, the double
// precision result is accurate to 33 bits.
pub inline fn reduce_large(xi: u32, np: *i32) f64 {
    // 2PI * 2^-64.
    const pi63: f64 = 0x1.921fb54442d18p-62;

    const arr: [*]const u32 = @ptrCast(&__inv_pio4[(xi >> 26) & 15]);
    const shift: i32 = scast(i32, (xi >> 23) & 7);

    var xxi: u32 = (xi & 0xffffff) | 0x800000;
    xxi <<= @as(u5, @intCast(shift));

    var res0: u64 = xxi *% arr[0];
    const res1: u64 = scast(u64, xxi) * arr[4];
    const res2: u64 = scast(u64, xxi) * arr[8];
    res0 = (res2 >> 32) | (res0 << 32);
    res0 +%= res1;

    const n: u64 = (res0 +% (1 << 61)) >> 62;
    res0 -%= n << 62;
    const x: f64 = scast(f64, @as(i64, @bitCast(res0)));
    np.* = scast(i32, n);
    return x * pi63;
}

// Compute the sine and cosine of inputs X and X2 (X squared), using the
// polynomial P and store the results in SINP and COSP.  N is the quadrant,
// if odd the cosine and sine polynomials are swapped.
pub inline fn sincos32_poly(x: f64, x2: f64, p: *const Sincos32, n: i32, sinp: *f32, cosp: *f32) void {
    const vx2x2: @Vector(2, f64) = .{ x2, x2 };
    const vxx2: @Vector(2, f64) = .{ x, x2 };

    const vx3x4: @Vector(2, f64) = vx2x2 * vxx2;
    const vs1c2: @Vector(2, f64) = p.s2c3 + vx2x2 * p.s3c4;

    // Swap sin/cos result based on quadrant.
    var ss: *f32 = sinp;
    var cc: *f32 = cosp;
    if ((n & 1) != 0) {
        cc = sinp;
        ss = cosp;
    }

    const c1: f64 = p.c0 + x2 * p.c1;
    const vxc1: @Vector(2, f64) = .{ x, c1 };
    const vx5x6: @Vector(2, f64) = vx3x4 * vx2x2;

    var vsincos: @Vector(2, f64) = vxc1 + vx3x4 * p.s1c2;
    vsincos = vsincos + vx5x6 * vs1c2;
    ss.* = scast(f32, vsincos[0]);
    cc.* = scast(f32, vsincos[1]);
}

// Return the sine of inputs X and X2 (X squared) using the polynomial P.
// N is the quadrant, and if odd the cosine polynomial is used.
pub inline fn sin32_poly(x: f64, x2: f64, p: *const Sincos32, n: i32) f32 {
    if ((n & 1) == 0) {
        const x3: f64 = x * x2;
        const s1: f64 = p.s2c3[0] + x2 * p.s3c4[0];

        const x7: f64 = x3 * x2;
        const s: f64 = x + x3 * p.s1c2[0];

        return scast(f32, s + x7 * s1);
    } else {
        const x4: f64 = x2 * x2;
        const c2: f64 = p.s2c3[1] + x2 * p.s3c4[1];
        const c1: f64 = p.c0 + x2 * p.c1;

        const x6: f64 = x4 * x2;
        const c: f64 = c1 + x4 * p.s1c2[1];

        return scast(f32, c + x6 * c2);
    }
}

pub const sn3: f64 = -1.66666666666664880952546298448555e-01;
pub const sn5: f64 = 8.33333214285722277379541354343671e-03;
pub const cs2: f64 = 4.99999999999999999999950396842453e-01;
pub const cs4: f64 = -4.16666666666664434524222570944589e-02;
pub const cs6: f64 = 1.38888874007937613028114285595617e-03;

pub const __sincostab: [440][2]u32 = if (endian == .big) .{
    .{ 0x00000000, 0x00000000 },
    .{ 0x00000000, 0x00000000 },
    .{ 0x3ff00000, 0x00000000 },
    .{ 0x00000000, 0x00000000 },
    .{ 0x3f7fffea, 0xaaaeeeef },
    .{ 0xbc1e45e2, 0xec67b77c },
    .{ 0x3fefffc0, 0x00155552 },
    .{ 0x3c8f4a01, 0xa0196dae },
    .{ 0x3f8fffaa, 0xaaeeeed5 },
    .{ 0xbc02ab63, 0x9a9f0777 },
    .{ 0x3fefff00, 0x0155549f },
    .{ 0x3c828a28, 0xa03a5ef3 },
    .{ 0x3f97ff70, 0x01033255 },
    .{ 0x3bfefe2b, 0x51527336 },
    .{ 0x3feffdc0, 0x06bff7e6 },
    .{ 0x3c8ae6da, 0xe86977bd },
    .{ 0x3f9ffeaa, 0xaeeee86f },
    .{ 0xbc3cd406, 0xfb224ae2 },
    .{ 0x3feffc00, 0x155527d3 },
    .{ 0xbc83b544, 0x92d89b5b },
    .{ 0x3fa3feb2, 0xb12d45d5 },
    .{ 0x3c34ec54, 0x203d1c11 },
    .{ 0x3feff9c0, 0x3414a7ba },
    .{ 0x3c6991f4, 0xbe6c59bf },
    .{ 0x3fa7fdc0, 0x1032fba9 },
    .{ 0xbc4599bd, 0xf46e997a },
    .{ 0x3feff700, 0x6bfdf99f },
    .{ 0xbc78b3b5, 0x60648d5f },
    .{ 0x3fabfc6d, 0x78586dac },
    .{ 0x3c18e4fd, 0x03dbf236 },
    .{ 0x3feff3c0, 0xc8103a31 },
    .{ 0x3c74856d, 0xbddc0e66 },
    .{ 0x3faffaaa, 0xeeed4edb },
    .{ 0xbc42d16d, 0x32684b69 },
    .{ 0x3feff001, 0x5549f4d3 },
    .{ 0x3c832838, 0x7b99426f },
    .{ 0x3fb1fc34, 0x3d808bef },
    .{ 0xbc5f3d32, 0xe6f3be4f },
    .{ 0x3fefebc2, 0x22a8ef9f },
    .{ 0x3c579349, 0x34f54c77 },
    .{ 0x3fb3facb, 0x12d1755b },
    .{ 0xbc592191, 0x5299468c },
    .{ 0x3fefe703, 0x4129ef6f },
    .{ 0xbc6cbf43, 0x37c96f97 },
    .{ 0x3fb5f911, 0xfd10b737 },
    .{ 0xbc50184f, 0x02be9102 },
    .{ 0x3fefe1c4, 0xc3c873eb },
    .{ 0xbc35a9c9, 0x057c4a02 },
    .{ 0x3fb7f701, 0x032550e4 },
    .{ 0x3c3afc2d, 0x1800501a },
    .{ 0x3fefdc06, 0xbf7e6b9b },
    .{ 0x3c831902, 0xb535f8db },
    .{ 0x3fb9f490, 0x2d55d1f9 },
    .{ 0x3c52696d, 0x7eac1dc1 },
    .{ 0x3fefd5c9, 0x4b43e000 },
    .{ 0xbc62e768, 0xcb4f92f9 },
    .{ 0x3fbbf1b7, 0x8568391d },
    .{ 0x3c5e9184, 0x1dea4cc8 },
    .{ 0x3fefcf0c, 0x800e99b1 },
    .{ 0x3c6ea3d7, 0x86d186ac },
    .{ 0x3fbdee6f, 0x16c1cce6 },
    .{ 0xbc450f8e, 0x2fb71673 },
    .{ 0x3fefc7d0, 0x78d1bc88 },
    .{ 0x3c8075d2, 0x447db685 },
    .{ 0x3fbfeaae, 0xee86ee36 },
    .{ 0xbc4afcb2, 0xbcc6f03b },
    .{ 0x3fefc015, 0x527d5bd3 },
    .{ 0x3c8b68f3, 0x5094efb8 },
    .{ 0x3fc0f337, 0x8ddd71d1 },
    .{ 0x3c6d8468, 0x724f0f9e },
    .{ 0x3fefb7db, 0x2bfe0695 },
    .{ 0x3c821dad, 0xf4f65ab1 },
    .{ 0x3fc1f0d3, 0xd7afceaf },
    .{ 0xbc66ef95, 0x099769a5 },
    .{ 0x3fefaf22, 0x263c4bd3 },
    .{ 0xbc552ace, 0x133a2769 },
    .{ 0x3fc2ee28, 0x5e4ab88f },
    .{ 0xbc6e4d0f, 0x05dee058 },
    .{ 0x3fefa5ea, 0x641c36f2 },
    .{ 0x3c404da6, 0xed17cc7c },
    .{ 0x3fc3eb31, 0x2c5d66cb },
    .{ 0x3c647d66, 0x6b66cb91 },
    .{ 0x3fef9c34, 0x0a7cc428 },
    .{ 0x3c8c5b6b, 0x063b7462 },
    .{ 0x3fc4e7ea, 0x4dc5f27b },
    .{ 0x3c5949db, 0x2ac072fc },
    .{ 0x3fef91ff, 0x40374d01 },
    .{ 0xbc67d03f, 0x4d3a9e4c },
    .{ 0x3fc5e44f, 0xcfa126f3 },
    .{ 0xbc66f443, 0x063f89b6 },
    .{ 0x3fef874c, 0x2e1eecf6 },
    .{ 0xbc8c6514, 0xe1332b16 },
    .{ 0x3fc6e05d, 0xc05a4d4c },
    .{ 0xbbd32c5c, 0x8b81c940 },
    .{ 0x3fef7c1a, 0xfeffde24 },
    .{ 0xbc78f55b, 0xc47540b1 },
    .{ 0x3fc7dc10, 0x2fbaf2b5 },
    .{ 0x3c45ab50, 0xe23c97c3 },
    .{ 0x3fef706b, 0xdf9ece1c },
    .{ 0xbc8698c8, 0x0c36dcb4 },
    .{ 0x3fc8d763, 0x2efaa944 },
    .{ 0xbc620fa2, 0x62cbb953 },
    .{ 0x3fef643e, 0xfeb82acd },
    .{ 0x3c76b00a, 0xc1fe28ac },
    .{ 0x3fc9d252, 0xd0cec312 },
    .{ 0x3c59c43d, 0x80b1137d },
    .{ 0x3fef5794, 0x8cff6797 },
    .{ 0x3c6e3a0d, 0x3e03b1d5 },
    .{ 0x3fcaccdb, 0x297a0765 },
    .{ 0xbc59883b, 0x57d6cdeb },
    .{ 0x3fef4a6c, 0xbd1e3a79 },
    .{ 0x3c813df0, 0xedaebb57 },
    .{ 0x3fcbc6f8, 0x4edc6199 },
    .{ 0x3c69c1a5, 0x6a7b0cab },
    .{ 0x3fef3cc7, 0xc3b3d16e },
    .{ 0xbc621a3a, 0xd28a3494 },
    .{ 0x3fccc0a6, 0x588289a3 },
    .{ 0xbc6868d0, 0x9bc87c6b },
    .{ 0x3fef2ea5, 0xd753ffed },
    .{ 0x3c8cc421, 0x5f56d583 },
    .{ 0x3fcdb9e1, 0x5fb5a5d0 },
    .{ 0xbc632e20, 0xd6cc6fc2 },
    .{ 0x3fef2007, 0x3086649f },
    .{ 0x3c7b9404, 0x16c1984b },
    .{ 0x3fceb2a5, 0x7f8ae5a3 },
    .{ 0xbc60be06, 0xaf572ceb },
    .{ 0x3fef10ec, 0x09c5873b },
    .{ 0x3c8d9072, 0x762c1283 },
    .{ 0x3fcfaaee, 0xd4f31577 },
    .{ 0xbc615d88, 0x508e32b8 },
    .{ 0x3fef0154, 0x9f7deea1 },
    .{ 0x3c8d3c1e, 0x99e5cafd },
    .{ 0x3fd0515c, 0xbf65155c },
    .{ 0xbc79b8c2, 0x9dfd8ec8 },
    .{ 0x3feef141, 0x300d2f26 },
    .{ 0xbc82aa1b, 0x08ded372 },
    .{ 0x3fd0cd00, 0xcef36436 },
    .{ 0xbc79fb0a, 0x0c93e2b5 },
    .{ 0x3feee0b1, 0xfbc0f11c },
    .{ 0xbc4bfd23, 0x80bbc3b1 },
    .{ 0x3fd14861, 0xaa94ddeb },
    .{ 0xbc6be881, 0xb5b615a4 },
    .{ 0x3feecfa7, 0x44d5efa1 },
    .{ 0xbc556d0a, 0x4af541d0 },
    .{ 0x3fd1c37d, 0x64c6b876 },
    .{ 0x3c746076, 0xfe0dcff5 },
    .{ 0x3feebe21, 0x4f76efa8 },
    .{ 0xbc802f9f, 0x12ba543e },
    .{ 0x3fd23e52, 0x111aaf36 },
    .{ 0xbc74f080, 0x334eff18 },
    .{ 0x3feeac20, 0x61bbaf4f },
    .{ 0x3c62c1d5, 0x3e94658d },
    .{ 0x3fd2b8dd, 0xc43eb49f },
    .{ 0x3c615538, 0x99f2d807 },
    .{ 0x3fee99a4, 0xc3a7cd83 },
    .{ 0xbc82264b, 0x1bc53ce8 },
    .{ 0x3fd3331e, 0x94049f87 },
    .{ 0x3c7e0cb6, 0xb40c302c },
    .{ 0x3fee86ae, 0xbf29a9ed },
    .{ 0x3c89397a, 0xfdbb58a7 },
    .{ 0x3fd3ad12, 0x9769d3d8 },
    .{ 0x3c003d55, 0x04878398 },
    .{ 0x3fee733e, 0xa0193d40 },
    .{ 0xbc86428b, 0x3546ce13 },
    .{ 0x3fd426b7, 0xe69ee697 },
    .{ 0xbc7f09c7, 0x5705c59f },
    .{ 0x3fee5f54, 0xb436e9d0 },
    .{ 0x3c87eb0f, 0xd02fc8bc },
    .{ 0x3fd4a00c, 0x9b0f3d20 },
    .{ 0x3c7823ba, 0x6bb08ead },
    .{ 0x3fee4af1, 0x4b2a449c },
    .{ 0xbc868ca0, 0x2e8a6833 },
    .{ 0x3fd5190e, 0xcf68a77a },
    .{ 0x3c7b3571, 0x55eef0f3 },
    .{ 0x3fee3614, 0xb680d6a5 },
    .{ 0xbc727793, 0xaa015237 },
    .{ 0x3fd591bc, 0x9fa2f597 },
    .{ 0x3c67c74b, 0xac3fe0cb },
    .{ 0x3fee20bf, 0x49acd6c1 },
    .{ 0xbc5660ae, 0xc7ef636c },
    .{ 0x3fd60a14, 0x29078775 },
    .{ 0x3c5b1fd8, 0x0ba89133 },
    .{ 0x3fee0af1, 0x5a03dbce },
    .{ 0x3c5fe8e7, 0x02771ae6 },
    .{ 0x3fd68213, 0x8a38d7f7 },
    .{ 0xbc7d8892, 0x02444aad },
    .{ 0x3fedf4ab, 0x3ebd875e },
    .{ 0xbc8e2d8a, 0x7e6736c4 },
    .{ 0x3fd6f9b8, 0xe33a0255 },
    .{ 0x3c742bc1, 0x4ee9da0d },
    .{ 0x3feddded, 0x50f228d6 },
    .{ 0xbc6e80c8, 0xd42ba2bf },
    .{ 0x3fd77102, 0x55764214 },
    .{ 0xbc66ead7, 0x314bb6ce },
    .{ 0x3fedc6b7, 0xeb995912 },
    .{ 0x3c54b364, 0x776dcd35 },
    .{ 0x3fd7e7ee, 0x03c86d4e },
    .{ 0xbc7b63bc, 0xdabf5af2 },
    .{ 0x3fedaf0b, 0x6b888e83 },
    .{ 0x3c8a249e, 0x2b5e5cea },
    .{ 0x3fd85e7a, 0x12826949 },
    .{ 0x3c78a40e, 0x9b5face0 },
    .{ 0x3fed96e8, 0x2f71a9dc },
    .{ 0x3c8ff61b, 0xd5d2039d },
    .{ 0x3fd8d4a4, 0xa774992f },
    .{ 0x3c744a02, 0xea766326 },
    .{ 0x3fed7e4e, 0x97e17b4a },
    .{ 0xbc63b770, 0x352bed94 },
    .{ 0x3fd94a6b, 0xe9f546c5 },
    .{ 0xbc769ce1, 0x3e683f58 },
    .{ 0x3fed653f, 0x073e4040 },
    .{ 0xbc876236, 0x434bec37 },
    .{ 0x3fd9bfce, 0x02e80510 },
    .{ 0x3c709e39, 0xa320b0a4 },
    .{ 0x3fed4bb9, 0xe1c619e0 },
    .{ 0x3c8f34bb, 0x77858f61 },
    .{ 0x3fda34c9, 0x1cc50cca },
    .{ 0xbc5a310e, 0x3b50cecd },
    .{ 0x3fed31bf, 0x8d8d7c06 },
    .{ 0x3c7e60dd, 0x3089cbdd },
    .{ 0x3fdaa95b, 0x63a09277 },
    .{ 0xbc66293e, 0xb13c0381 },
    .{ 0x3fed1750, 0x727d94f0 },
    .{ 0x3c80d52b, 0x1ec1a48e },
    .{ 0x3fdb1d83, 0x05321617 },
    .{ 0xbc7ae242, 0xcb99f519 },
    .{ 0x3fecfc6c, 0xfa52ad9f },
    .{ 0x3c88b5b5, 0x508f2a0d },
    .{ 0x3fdb913e, 0x30dbac43 },
    .{ 0xbc7e38ad, 0x2f6c3ff1 },
    .{ 0x3fece115, 0x909a82e5 },
    .{ 0x3c81f139, 0xbb31109a },
    .{ 0x3fdc048b, 0x17b140a3 },
    .{ 0x3c619fe6, 0x757e9fa7 },
    .{ 0x3fecc54a, 0xa2b2972e },
    .{ 0x3c64ee16, 0x2ba83a98 },
    .{ 0x3fdc7767, 0xec7fd19e },
    .{ 0xbc5eb14d, 0x1a3d5826 },
    .{ 0x3feca90c, 0x9fc67d0b },
    .{ 0xbc646a81, 0x485e3462 },
    .{ 0x3fdce9d2, 0xe3d4a51f },
    .{ 0xbc62fc8a, 0x12dae298 },
    .{ 0x3fec8c5b, 0xf8ce1a84 },
    .{ 0x3c7ab3d1, 0xa1590123 },
    .{ 0x3fdd5bca, 0x34047661 },
    .{ 0x3c728a44, 0xa75fc29c },
    .{ 0x3fec6f39, 0x208be53b },
    .{ 0xbc8741db, 0xfbaadb42 },
    .{ 0x3fddcd4c, 0x15329c9a },
    .{ 0x3c70d4c6, 0xe171fd9a },
    .{ 0x3fec51a4, 0x8b8b175e },
    .{ 0xbc61bbb4, 0x3b9aa880 },
    .{ 0x3fde3e56, 0xc1582a69 },
    .{ 0xbc50a482, 0x1099f88f },
    .{ 0x3fec339e, 0xb01ddd81 },
    .{ 0xbc8caaf5, 0xee82c5c0 },
    .{ 0x3fdeaee8, 0x744b05f0 },
    .{ 0xbc5789b4, 0x3c9b027d },
    .{ 0x3fec1528, 0x065b7d50 },
    .{ 0xbc889211, 0x1312e828 },
    .{ 0x3fdf1eff, 0x6bc4f97b },
    .{ 0x3c717212, 0xf8a7525c },
    .{ 0x3febf641, 0x081e7536 },
    .{ 0x3c8b7bd7, 0x1628a9a1 },
    .{ 0x3fdf8e99, 0xe76abc97 },
    .{ 0x3c59d950, 0xaf2d00a3 },
    .{ 0x3febd6ea, 0x310294f5 },
    .{ 0x3c731bbc, 0xc88c109d },
    .{ 0x3fdffdb6, 0x28d2f57a },
    .{ 0x3c6f4a99, 0x2e905b6a },
    .{ 0x3febb723, 0xfe630f32 },
    .{ 0x3c772bd2, 0x452d0a39 },
    .{ 0x3fe03629, 0x39c69955 },
    .{ 0xbc82d8cd, 0x78397b01 },
    .{ 0x3feb96ee, 0xef58840e },
    .{ 0x3c545a3c, 0xc78fade0 },
    .{ 0x3fe06d36, 0x86946e5b },
    .{ 0x3c83f5ae, 0x4538ff1b },
    .{ 0x3feb764b, 0x84b704c2 },
    .{ 0xbc8f5848, 0xc21b389b },
    .{ 0x3fe0a402, 0x1e9e1001 },
    .{ 0xbc86f643, 0xa13914f6 },
    .{ 0x3feb553a, 0x410c104e },
    .{ 0x3c58ff79, 0x47027a16 },
    .{ 0x3fe0da8b, 0x26b5672e },
    .{ 0xbc8a58de, 0xf0bee909 },
    .{ 0x3feb33bb, 0xa89c8948 },
    .{ 0x3c8ea6a5, 0x1d1f6ca9 },
    .{ 0x3fe110d0, 0xc4b69c3b },
    .{ 0x3c8d9189, 0x98809981 },
    .{ 0x3feb11d0, 0x4162a4c6 },
    .{ 0x3c71dd56, 0x1efbc0c2 },
    .{ 0x3fe146d2, 0x1f8b7f82 },
    .{ 0x3c7bf953, 0x5e2739a8 },
    .{ 0x3feaef78, 0x930bd275 },
    .{ 0xbc7f8362, 0x79746f94 },
    .{ 0x3fe17c8e, 0x5f2eedb0 },
    .{ 0x3c635e57, 0x102e2488 },
    .{ 0x3feaccb5, 0x26f69de5 },
    .{ 0x3c88fb6a, 0x8dd6b6cc },
    .{ 0x3fe1b204, 0xacb02fdd },
    .{ 0xbc5f190c, 0x70cbb5ff },
    .{ 0x3feaa986, 0x88308913 },
    .{ 0xbc0b83d6, 0x07cd5070 },
    .{ 0x3fe1e734, 0x3236574c },
    .{ 0x3c722a3f, 0xa4f41d5a },
    .{ 0x3fea85ed, 0x4373e02d },
    .{ 0x3c69be06, 0x385ec792 },
    .{ 0x3fe21c1c, 0x1b0394cf },
    .{ 0x3c5e5b32, 0x4b23aa31 },
    .{ 0x3fea61e9, 0xe72586af },
    .{ 0x3c858330, 0xe2fd453f },
    .{ 0x3fe250bb, 0x93788bbb },
    .{ 0x3c7ea3d0, 0x2457bcce },
    .{ 0x3fea3d7d, 0x0352bdcf },
    .{ 0xbc868dba, 0xeca19669 },
    .{ 0x3fe28511, 0xc917a067 },
    .{ 0xbc801df1, 0xd9a16b70 },
    .{ 0x3fea18a7, 0x29aee445 },
    .{ 0x3c395e25, 0x736c0358 },
    .{ 0x3fe2b91d, 0xea88421e },
    .{ 0xbc8fa371, 0xdb216ab0 },
    .{ 0x3fe9f368, 0xed912f85 },
    .{ 0xbc81d200, 0xc5791606 },
    .{ 0x3fe2ecdf, 0x279a3082 },
    .{ 0x3c8d3557, 0xe0e7e37e },
    .{ 0x3fe9cdc2, 0xe3f25e5c },
    .{ 0x3c83f991, 0x12993f62 },
    .{ 0x3fe32054, 0xb148bc4f },
    .{ 0x3c8f6b42, 0x095a135b },
    .{ 0x3fe9a7b5, 0xa36a6514 },
    .{ 0x3c8722cf, 0xcc9fa7a9 },
    .{ 0x3fe3537d, 0xb9be0367 },
    .{ 0x3c6b327e, 0x7af040f0 },
    .{ 0x3fe98141, 0xc42e1310 },
    .{ 0x3c8d1ff8, 0x0488f08d },
    .{ 0x3fe38659, 0x7456282b },
    .{ 0xbc710fad, 0xa93b07a8 },
    .{ 0x3fe95a67, 0xe00cb1fd },
    .{ 0xbc80befd, 0xa21f862d },
    .{ 0x3fe3b8e7, 0x15a2840a },
    .{ 0xbc797653, 0xa7d2f07b },
    .{ 0x3fe93328, 0x926d9e92 },
    .{ 0xbc8bb770, 0x03600cda },
    .{ 0x3fe3eb25, 0xd36cd53a },
    .{ 0xbc5be570, 0xe1570fc0 },
    .{ 0x3fe90b84, 0x784ddaf7 },
    .{ 0xbc70feb1, 0x0ab93b87 },
    .{ 0x3fe41d14, 0xe4ba6790 },
    .{ 0x3c84608f, 0xd287ecf5 },
    .{ 0x3fe8e37c, 0x303d9ad1 },
    .{ 0xbc6463a4, 0xb53d4bf8 },
    .{ 0x3fe44eb3, 0x81cf386b },
    .{ 0xbc83ed6c, 0x1e6a5505 },
    .{ 0x3fe8bb10, 0x5a5dc900 },
    .{ 0x3c8863e0, 0x3e9474c1 },
    .{ 0x3fe48000, 0xe431159f },
    .{ 0xbc8b194a, 0x7463ed10 },
    .{ 0x3fe89241, 0x985d871f },
    .{ 0x3c8c48d9, 0xc413ed84 },
    .{ 0x3fe4b0fc, 0x46aab761 },
    .{ 0x3c20da05, 0x738cc59a },
    .{ 0x3fe86910, 0x8d77a6c6 },
    .{ 0x3c7338ff, 0xe2bfe9dd },
    .{ 0x3fe4e1a4, 0xe54ed51b },
    .{ 0xbc8a492f, 0x89b7c76a },
    .{ 0x3fe83f7d, 0xde701ca0 },
    .{ 0xbc4152cf, 0x609bc6e8 },
    .{ 0x3fe511f9, 0xfd7b351c },
    .{ 0xbc85c0e8, 0x61c48831 },
    .{ 0x3fe8158a, 0x31916d5d },
    .{ 0xbc6de8b9, 0x0b8228de },
    .{ 0x3fe541fa, 0xcddbb724 },
    .{ 0x3c7232c2, 0x8520d391 },
    .{ 0x3fe7eb36, 0x2eaa1488 },
    .{ 0x3c5a1d65, 0xa4a5959f },
    .{ 0x3fe571a6, 0x966d59b3 },
    .{ 0x3c5c843b, 0x4d0fb198 },
    .{ 0x3fe7c082, 0x7f09e54f },
    .{ 0xbc6c73d6, 0xd72aee68 },
    .{ 0x3fe5a0fc, 0x98813a12 },
    .{ 0xbc8d82e2, 0xb7d4227b },
    .{ 0x3fe7956f, 0xcd7f6543 },
    .{ 0xbc8ab276, 0xe9d45ae4 },
    .{ 0x3fe5cffc, 0x16bf8f0d },
    .{ 0x3c896cb3, 0x70eb578a },
    .{ 0x3fe769fe, 0xc655211f },
    .{ 0xbc6827d5, 0xcf8c68c5 },
    .{ 0x3fe5fea4, 0x552a9e57 },
    .{ 0x3c80b6ce, 0xf7ee20b7 },
    .{ 0x3fe73e30, 0x174efba1 },
    .{ 0xbc65d3ae, 0x3d94ad5f },
    .{ 0x3fe62cf4, 0x9921ac79 },
    .{ 0xbc8edd98, 0x55b6241a },
    .{ 0x3fe71204, 0x6fa77678 },
    .{ 0x3c8425b0, 0xa5029c81 },
    .{ 0x3fe65aec, 0x2963e755 },
    .{ 0x3c8126f9, 0x6b71053c },
    .{ 0x3fe6e57c, 0x800cf55e },
    .{ 0x3c860286, 0xdedbd0a6 },
    .{ 0x3fe6888a, 0x4e134b2f },
    .{ 0xbc86b7d3, 0x7644d5e6 },
    .{ 0x3fe6b898, 0xfa9efb5d },
    .{ 0x3c715ac7, 0x86ccf4b2 },
    .{ 0x3fe6b5ce, 0x50b7821a },
    .{ 0xbc65d515, 0x8f702e0f },
    .{ 0x3fe68b5a, 0x92eb6253 },
    .{ 0xbc89a91a, 0xd985f89c },
    .{ 0x3fe6e2b7, 0x7c40bde1 },
    .{ 0xbc70e729, 0x857fad53 },
    .{ 0x3fe65dc1, 0xfdeb8cba },
    .{ 0xbc597c1b, 0x47337c77 },
    .{ 0x3fe70f45, 0x1d0a8c40 },
    .{ 0x3c697ede, 0x3885770d },
    .{ 0x3fe62fcf, 0xf20191c7 },
    .{ 0x3c6d9143, 0x895756ef },
    .{ 0x3fe73b76, 0x80dea578 },
    .{ 0xbc722483, 0x06dc12a2 },
    .{ 0x3fe60185, 0x26f563df },
    .{ 0x3c846ca5, 0xe0e432d0 },
    .{ 0x3fe7674a, 0xf6f7b524 },
    .{ 0x3c7e9d3f, 0x94ac84a8 },
    .{ 0x3fe5d2e2, 0x55f1f17a },
    .{ 0x3c803141, 0x04c8892b },
    .{ 0x3fe792c1, 0xd0041d52 },
    .{ 0xbc8abf05, 0xeeb354eb },
    .{ 0x3fe5a3e8, 0x39824077 },
    .{ 0x3c8428aa, 0x2759be62 },
    .{ 0x3fe7bdda, 0x5e28b3c2 },
    .{ 0x3c4ad119, 0x7ccd0393 },
    .{ 0x3fe57497, 0x8d8e83f2 },
    .{ 0x3c8f4714, 0xaf282d23 },
    .{ 0x3fe7e893, 0xf5037959 },
    .{ 0x3c80eefb, 0xaa650c4c },
    .{ 0x3fe544f1, 0x0f592ca5 },
    .{ 0xbc8e7ae8, 0xe6c7a62f },
    .{ 0x3fe812ed, 0xe9ae4ba4 },
    .{ 0xbc87830a, 0xdf402dda },
    .{ 0x3fe514f5, 0x7d7bf3da },
    .{ 0x3c747a10, 0x8073c259 },
} else .{
    .{ 0x00000000, 0x00000000 },
    .{ 0x00000000, 0x00000000 },
    .{ 0x00000000, 0x3ff00000 },
    .{ 0x00000000, 0x00000000 },
    .{ 0xaaaeeeef, 0x3f7fffea },
    .{ 0xec67b77c, 0xbc1e45e2 },
    .{ 0x00155552, 0x3fefffc0 },
    .{ 0xa0196dae, 0x3c8f4a01 },
    .{ 0xaaeeeed5, 0x3f8fffaa },
    .{ 0x9a9f0777, 0xbc02ab63 },
    .{ 0x0155549f, 0x3fefff00 },
    .{ 0xa03a5ef3, 0x3c828a28 },
    .{ 0x01033255, 0x3f97ff70 },
    .{ 0x51527336, 0x3bfefe2b },
    .{ 0x06bff7e6, 0x3feffdc0 },
    .{ 0xe86977bd, 0x3c8ae6da },
    .{ 0xaeeee86f, 0x3f9ffeaa },
    .{ 0xfb224ae2, 0xbc3cd406 },
    .{ 0x155527d3, 0x3feffc00 },
    .{ 0x92d89b5b, 0xbc83b544 },
    .{ 0xb12d45d5, 0x3fa3feb2 },
    .{ 0x203d1c11, 0x3c34ec54 },
    .{ 0x3414a7ba, 0x3feff9c0 },
    .{ 0xbe6c59bf, 0x3c6991f4 },
    .{ 0x1032fba9, 0x3fa7fdc0 },
    .{ 0xf46e997a, 0xbc4599bd },
    .{ 0x6bfdf99f, 0x3feff700 },
    .{ 0x60648d5f, 0xbc78b3b5 },
    .{ 0x78586dac, 0x3fabfc6d },
    .{ 0x03dbf236, 0x3c18e4fd },
    .{ 0xc8103a31, 0x3feff3c0 },
    .{ 0xbddc0e66, 0x3c74856d },
    .{ 0xeeed4edb, 0x3faffaaa },
    .{ 0x32684b69, 0xbc42d16d },
    .{ 0x5549f4d3, 0x3feff001 },
    .{ 0x7b99426f, 0x3c832838 },
    .{ 0x3d808bef, 0x3fb1fc34 },
    .{ 0xe6f3be4f, 0xbc5f3d32 },
    .{ 0x22a8ef9f, 0x3fefebc2 },
    .{ 0x34f54c77, 0x3c579349 },
    .{ 0x12d1755b, 0x3fb3facb },
    .{ 0x5299468c, 0xbc592191 },
    .{ 0x4129ef6f, 0x3fefe703 },
    .{ 0x37c96f97, 0xbc6cbf43 },
    .{ 0xfd10b737, 0x3fb5f911 },
    .{ 0x02be9102, 0xbc50184f },
    .{ 0xc3c873eb, 0x3fefe1c4 },
    .{ 0x057c4a02, 0xbc35a9c9 },
    .{ 0x032550e4, 0x3fb7f701 },
    .{ 0x1800501a, 0x3c3afc2d },
    .{ 0xbf7e6b9b, 0x3fefdc06 },
    .{ 0xb535f8db, 0x3c831902 },
    .{ 0x2d55d1f9, 0x3fb9f490 },
    .{ 0x7eac1dc1, 0x3c52696d },
    .{ 0x4b43e000, 0x3fefd5c9 },
    .{ 0xcb4f92f9, 0xbc62e768 },
    .{ 0x8568391d, 0x3fbbf1b7 },
    .{ 0x1dea4cc8, 0x3c5e9184 },
    .{ 0x800e99b1, 0x3fefcf0c },
    .{ 0x86d186ac, 0x3c6ea3d7 },
    .{ 0x16c1cce6, 0x3fbdee6f },
    .{ 0x2fb71673, 0xbc450f8e },
    .{ 0x78d1bc88, 0x3fefc7d0 },
    .{ 0x447db685, 0x3c8075d2 },
    .{ 0xee86ee36, 0x3fbfeaae },
    .{ 0xbcc6f03b, 0xbc4afcb2 },
    .{ 0x527d5bd3, 0x3fefc015 },
    .{ 0x5094efb8, 0x3c8b68f3 },
    .{ 0x8ddd71d1, 0x3fc0f337 },
    .{ 0x724f0f9e, 0x3c6d8468 },
    .{ 0x2bfe0695, 0x3fefb7db },
    .{ 0xf4f65ab1, 0x3c821dad },
    .{ 0xd7afceaf, 0x3fc1f0d3 },
    .{ 0x099769a5, 0xbc66ef95 },
    .{ 0x263c4bd3, 0x3fefaf22 },
    .{ 0x133a2769, 0xbc552ace },
    .{ 0x5e4ab88f, 0x3fc2ee28 },
    .{ 0x05dee058, 0xbc6e4d0f },
    .{ 0x641c36f2, 0x3fefa5ea },
    .{ 0xed17cc7c, 0x3c404da6 },
    .{ 0x2c5d66cb, 0x3fc3eb31 },
    .{ 0x6b66cb91, 0x3c647d66 },
    .{ 0x0a7cc428, 0x3fef9c34 },
    .{ 0x063b7462, 0x3c8c5b6b },
    .{ 0x4dc5f27b, 0x3fc4e7ea },
    .{ 0x2ac072fc, 0x3c5949db },
    .{ 0x40374d01, 0x3fef91ff },
    .{ 0x4d3a9e4c, 0xbc67d03f },
    .{ 0xcfa126f3, 0x3fc5e44f },
    .{ 0x063f89b6, 0xbc66f443 },
    .{ 0x2e1eecf6, 0x3fef874c },
    .{ 0xe1332b16, 0xbc8c6514 },
    .{ 0xc05a4d4c, 0x3fc6e05d },
    .{ 0x8b81c940, 0xbbd32c5c },
    .{ 0xfeffde24, 0x3fef7c1a },
    .{ 0xc47540b1, 0xbc78f55b },
    .{ 0x2fbaf2b5, 0x3fc7dc10 },
    .{ 0xe23c97c3, 0x3c45ab50 },
    .{ 0xdf9ece1c, 0x3fef706b },
    .{ 0x0c36dcb4, 0xbc8698c8 },
    .{ 0x2efaa944, 0x3fc8d763 },
    .{ 0x62cbb953, 0xbc620fa2 },
    .{ 0xfeb82acd, 0x3fef643e },
    .{ 0xc1fe28ac, 0x3c76b00a },
    .{ 0xd0cec312, 0x3fc9d252 },
    .{ 0x80b1137d, 0x3c59c43d },
    .{ 0x8cff6797, 0x3fef5794 },
    .{ 0x3e03b1d5, 0x3c6e3a0d },
    .{ 0x297a0765, 0x3fcaccdb },
    .{ 0x57d6cdeb, 0xbc59883b },
    .{ 0xbd1e3a79, 0x3fef4a6c },
    .{ 0xedaebb57, 0x3c813df0 },
    .{ 0x4edc6199, 0x3fcbc6f8 },
    .{ 0x6a7b0cab, 0x3c69c1a5 },
    .{ 0xc3b3d16e, 0x3fef3cc7 },
    .{ 0xd28a3494, 0xbc621a3a },
    .{ 0x588289a3, 0x3fccc0a6 },
    .{ 0x9bc87c6b, 0xbc6868d0 },
    .{ 0xd753ffed, 0x3fef2ea5 },
    .{ 0x5f56d583, 0x3c8cc421 },
    .{ 0x5fb5a5d0, 0x3fcdb9e1 },
    .{ 0xd6cc6fc2, 0xbc632e20 },
    .{ 0x3086649f, 0x3fef2007 },
    .{ 0x16c1984b, 0x3c7b9404 },
    .{ 0x7f8ae5a3, 0x3fceb2a5 },
    .{ 0xaf572ceb, 0xbc60be06 },
    .{ 0x09c5873b, 0x3fef10ec },
    .{ 0x762c1283, 0x3c8d9072 },
    .{ 0xd4f31577, 0x3fcfaaee },
    .{ 0x508e32b8, 0xbc615d88 },
    .{ 0x9f7deea1, 0x3fef0154 },
    .{ 0x99e5cafd, 0x3c8d3c1e },
    .{ 0xbf65155c, 0x3fd0515c },
    .{ 0x9dfd8ec8, 0xbc79b8c2 },
    .{ 0x300d2f26, 0x3feef141 },
    .{ 0x08ded372, 0xbc82aa1b },
    .{ 0xcef36436, 0x3fd0cd00 },
    .{ 0x0c93e2b5, 0xbc79fb0a },
    .{ 0xfbc0f11c, 0x3feee0b1 },
    .{ 0x80bbc3b1, 0xbc4bfd23 },
    .{ 0xaa94ddeb, 0x3fd14861 },
    .{ 0xb5b615a4, 0xbc6be881 },
    .{ 0x44d5efa1, 0x3feecfa7 },
    .{ 0x4af541d0, 0xbc556d0a },
    .{ 0x64c6b876, 0x3fd1c37d },
    .{ 0xfe0dcff5, 0x3c746076 },
    .{ 0x4f76efa8, 0x3feebe21 },
    .{ 0x12ba543e, 0xbc802f9f },
    .{ 0x111aaf36, 0x3fd23e52 },
    .{ 0x334eff18, 0xbc74f080 },
    .{ 0x61bbaf4f, 0x3feeac20 },
    .{ 0x3e94658d, 0x3c62c1d5 },
    .{ 0xc43eb49f, 0x3fd2b8dd },
    .{ 0x99f2d807, 0x3c615538 },
    .{ 0xc3a7cd83, 0x3fee99a4 },
    .{ 0x1bc53ce8, 0xbc82264b },
    .{ 0x94049f87, 0x3fd3331e },
    .{ 0xb40c302c, 0x3c7e0cb6 },
    .{ 0xbf29a9ed, 0x3fee86ae },
    .{ 0xfdbb58a7, 0x3c89397a },
    .{ 0x9769d3d8, 0x3fd3ad12 },
    .{ 0x04878398, 0x3c003d55 },
    .{ 0xa0193d40, 0x3fee733e },
    .{ 0x3546ce13, 0xbc86428b },
    .{ 0xe69ee697, 0x3fd426b7 },
    .{ 0x5705c59f, 0xbc7f09c7 },
    .{ 0xb436e9d0, 0x3fee5f54 },
    .{ 0xd02fc8bc, 0x3c87eb0f },
    .{ 0x9b0f3d20, 0x3fd4a00c },
    .{ 0x6bb08ead, 0x3c7823ba },
    .{ 0x4b2a449c, 0x3fee4af1 },
    .{ 0x2e8a6833, 0xbc868ca0 },
    .{ 0xcf68a77a, 0x3fd5190e },
    .{ 0x55eef0f3, 0x3c7b3571 },
    .{ 0xb680d6a5, 0x3fee3614 },
    .{ 0xaa015237, 0xbc727793 },
    .{ 0x9fa2f597, 0x3fd591bc },
    .{ 0xac3fe0cb, 0x3c67c74b },
    .{ 0x49acd6c1, 0x3fee20bf },
    .{ 0xc7ef636c, 0xbc5660ae },
    .{ 0x29078775, 0x3fd60a14 },
    .{ 0x0ba89133, 0x3c5b1fd8 },
    .{ 0x5a03dbce, 0x3fee0af1 },
    .{ 0x02771ae6, 0x3c5fe8e7 },
    .{ 0x8a38d7f7, 0x3fd68213 },
    .{ 0x02444aad, 0xbc7d8892 },
    .{ 0x3ebd875e, 0x3fedf4ab },
    .{ 0x7e6736c4, 0xbc8e2d8a },
    .{ 0xe33a0255, 0x3fd6f9b8 },
    .{ 0x4ee9da0d, 0x3c742bc1 },
    .{ 0x50f228d6, 0x3feddded },
    .{ 0xd42ba2bf, 0xbc6e80c8 },
    .{ 0x55764214, 0x3fd77102 },
    .{ 0x314bb6ce, 0xbc66ead7 },
    .{ 0xeb995912, 0x3fedc6b7 },
    .{ 0x776dcd35, 0x3c54b364 },
    .{ 0x03c86d4e, 0x3fd7e7ee },
    .{ 0xdabf5af2, 0xbc7b63bc },
    .{ 0x6b888e83, 0x3fedaf0b },
    .{ 0x2b5e5cea, 0x3c8a249e },
    .{ 0x12826949, 0x3fd85e7a },
    .{ 0x9b5face0, 0x3c78a40e },
    .{ 0x2f71a9dc, 0x3fed96e8 },
    .{ 0xd5d2039d, 0x3c8ff61b },
    .{ 0xa774992f, 0x3fd8d4a4 },
    .{ 0xea766326, 0x3c744a02 },
    .{ 0x97e17b4a, 0x3fed7e4e },
    .{ 0x352bed94, 0xbc63b770 },
    .{ 0xe9f546c5, 0x3fd94a6b },
    .{ 0x3e683f58, 0xbc769ce1 },
    .{ 0x073e4040, 0x3fed653f },
    .{ 0x434bec37, 0xbc876236 },
    .{ 0x02e80510, 0x3fd9bfce },
    .{ 0xa320b0a4, 0x3c709e39 },
    .{ 0xe1c619e0, 0x3fed4bb9 },
    .{ 0x77858f61, 0x3c8f34bb },
    .{ 0x1cc50cca, 0x3fda34c9 },
    .{ 0x3b50cecd, 0xbc5a310e },
    .{ 0x8d8d7c06, 0x3fed31bf },
    .{ 0x3089cbdd, 0x3c7e60dd },
    .{ 0x63a09277, 0x3fdaa95b },
    .{ 0xb13c0381, 0xbc66293e },
    .{ 0x727d94f0, 0x3fed1750 },
    .{ 0x1ec1a48e, 0x3c80d52b },
    .{ 0x05321617, 0x3fdb1d83 },
    .{ 0xcb99f519, 0xbc7ae242 },
    .{ 0xfa52ad9f, 0x3fecfc6c },
    .{ 0x508f2a0d, 0x3c88b5b5 },
    .{ 0x30dbac43, 0x3fdb913e },
    .{ 0x2f6c3ff1, 0xbc7e38ad },
    .{ 0x909a82e5, 0x3fece115 },
    .{ 0xbb31109a, 0x3c81f139 },
    .{ 0x17b140a3, 0x3fdc048b },
    .{ 0x757e9fa7, 0x3c619fe6 },
    .{ 0xa2b2972e, 0x3fecc54a },
    .{ 0x2ba83a98, 0x3c64ee16 },
    .{ 0xec7fd19e, 0x3fdc7767 },
    .{ 0x1a3d5826, 0xbc5eb14d },
    .{ 0x9fc67d0b, 0x3feca90c },
    .{ 0x485e3462, 0xbc646a81 },
    .{ 0xe3d4a51f, 0x3fdce9d2 },
    .{ 0x12dae298, 0xbc62fc8a },
    .{ 0xf8ce1a84, 0x3fec8c5b },
    .{ 0xa1590123, 0x3c7ab3d1 },
    .{ 0x34047661, 0x3fdd5bca },
    .{ 0xa75fc29c, 0x3c728a44 },
    .{ 0x208be53b, 0x3fec6f39 },
    .{ 0xfbaadb42, 0xbc8741db },
    .{ 0x15329c9a, 0x3fddcd4c },
    .{ 0xe171fd9a, 0x3c70d4c6 },
    .{ 0x8b8b175e, 0x3fec51a4 },
    .{ 0x3b9aa880, 0xbc61bbb4 },
    .{ 0xc1582a69, 0x3fde3e56 },
    .{ 0x1099f88f, 0xbc50a482 },
    .{ 0xb01ddd81, 0x3fec339e },
    .{ 0xee82c5c0, 0xbc8caaf5 },
    .{ 0x744b05f0, 0x3fdeaee8 },
    .{ 0x3c9b027d, 0xbc5789b4 },
    .{ 0x065b7d50, 0x3fec1528 },
    .{ 0x1312e828, 0xbc889211 },
    .{ 0x6bc4f97b, 0x3fdf1eff },
    .{ 0xf8a7525c, 0x3c717212 },
    .{ 0x081e7536, 0x3febf641 },
    .{ 0x1628a9a1, 0x3c8b7bd7 },
    .{ 0xe76abc97, 0x3fdf8e99 },
    .{ 0xaf2d00a3, 0x3c59d950 },
    .{ 0x310294f5, 0x3febd6ea },
    .{ 0xc88c109d, 0x3c731bbc },
    .{ 0x28d2f57a, 0x3fdffdb6 },
    .{ 0x2e905b6a, 0x3c6f4a99 },
    .{ 0xfe630f32, 0x3febb723 },
    .{ 0x452d0a39, 0x3c772bd2 },
    .{ 0x39c69955, 0x3fe03629 },
    .{ 0x78397b01, 0xbc82d8cd },
    .{ 0xef58840e, 0x3feb96ee },
    .{ 0xc78fade0, 0x3c545a3c },
    .{ 0x86946e5b, 0x3fe06d36 },
    .{ 0x4538ff1b, 0x3c83f5ae },
    .{ 0x84b704c2, 0x3feb764b },
    .{ 0xc21b389b, 0xbc8f5848 },
    .{ 0x1e9e1001, 0x3fe0a402 },
    .{ 0xa13914f6, 0xbc86f643 },
    .{ 0x410c104e, 0x3feb553a },
    .{ 0x47027a16, 0x3c58ff79 },
    .{ 0x26b5672e, 0x3fe0da8b },
    .{ 0xf0bee909, 0xbc8a58de },
    .{ 0xa89c8948, 0x3feb33bb },
    .{ 0x1d1f6ca9, 0x3c8ea6a5 },
    .{ 0xc4b69c3b, 0x3fe110d0 },
    .{ 0x98809981, 0x3c8d9189 },
    .{ 0x4162a4c6, 0x3feb11d0 },
    .{ 0x1efbc0c2, 0x3c71dd56 },
    .{ 0x1f8b7f82, 0x3fe146d2 },
    .{ 0x5e2739a8, 0x3c7bf953 },
    .{ 0x930bd275, 0x3feaef78 },
    .{ 0x79746f94, 0xbc7f8362 },
    .{ 0x5f2eedb0, 0x3fe17c8e },
    .{ 0x102e2488, 0x3c635e57 },
    .{ 0x26f69de5, 0x3feaccb5 },
    .{ 0x8dd6b6cc, 0x3c88fb6a },
    .{ 0xacb02fdd, 0x3fe1b204 },
    .{ 0x70cbb5ff, 0xbc5f190c },
    .{ 0x88308913, 0x3feaa986 },
    .{ 0x07cd5070, 0xbc0b83d6 },
    .{ 0x3236574c, 0x3fe1e734 },
    .{ 0xa4f41d5a, 0x3c722a3f },
    .{ 0x4373e02d, 0x3fea85ed },
    .{ 0x385ec792, 0x3c69be06 },
    .{ 0x1b0394cf, 0x3fe21c1c },
    .{ 0x4b23aa31, 0x3c5e5b32 },
    .{ 0xe72586af, 0x3fea61e9 },
    .{ 0xe2fd453f, 0x3c858330 },
    .{ 0x93788bbb, 0x3fe250bb },
    .{ 0x2457bcce, 0x3c7ea3d0 },
    .{ 0x0352bdcf, 0x3fea3d7d },
    .{ 0xeca19669, 0xbc868dba },
    .{ 0xc917a067, 0x3fe28511 },
    .{ 0xd9a16b70, 0xbc801df1 },
    .{ 0x29aee445, 0x3fea18a7 },
    .{ 0x736c0358, 0x3c395e25 },
    .{ 0xea88421e, 0x3fe2b91d },
    .{ 0xdb216ab0, 0xbc8fa371 },
    .{ 0xed912f85, 0x3fe9f368 },
    .{ 0xc5791606, 0xbc81d200 },
    .{ 0x279a3082, 0x3fe2ecdf },
    .{ 0xe0e7e37e, 0x3c8d3557 },
    .{ 0xe3f25e5c, 0x3fe9cdc2 },
    .{ 0x12993f62, 0x3c83f991 },
    .{ 0xb148bc4f, 0x3fe32054 },
    .{ 0x095a135b, 0x3c8f6b42 },
    .{ 0xa36a6514, 0x3fe9a7b5 },
    .{ 0xcc9fa7a9, 0x3c8722cf },
    .{ 0xb9be0367, 0x3fe3537d },
    .{ 0x7af040f0, 0x3c6b327e },
    .{ 0xc42e1310, 0x3fe98141 },
    .{ 0x0488f08d, 0x3c8d1ff8 },
    .{ 0x7456282b, 0x3fe38659 },
    .{ 0xa93b07a8, 0xbc710fad },
    .{ 0xe00cb1fd, 0x3fe95a67 },
    .{ 0xa21f862d, 0xbc80befd },
    .{ 0x15a2840a, 0x3fe3b8e7 },
    .{ 0xa7d2f07b, 0xbc797653 },
    .{ 0x926d9e92, 0x3fe93328 },
    .{ 0x03600cda, 0xbc8bb770 },
    .{ 0xd36cd53a, 0x3fe3eb25 },
    .{ 0xe1570fc0, 0xbc5be570 },
    .{ 0x784ddaf7, 0x3fe90b84 },
    .{ 0x0ab93b87, 0xbc70feb1 },
    .{ 0xe4ba6790, 0x3fe41d14 },
    .{ 0xd287ecf5, 0x3c84608f },
    .{ 0x303d9ad1, 0x3fe8e37c },
    .{ 0xb53d4bf8, 0xbc6463a4 },
    .{ 0x81cf386b, 0x3fe44eb3 },
    .{ 0x1e6a5505, 0xbc83ed6c },
    .{ 0x5a5dc900, 0x3fe8bb10 },
    .{ 0x3e9474c1, 0x3c8863e0 },
    .{ 0xe431159f, 0x3fe48000 },
    .{ 0x7463ed10, 0xbc8b194a },
    .{ 0x985d871f, 0x3fe89241 },
    .{ 0xc413ed84, 0x3c8c48d9 },
    .{ 0x46aab761, 0x3fe4b0fc },
    .{ 0x738cc59a, 0x3c20da05 },
    .{ 0x8d77a6c6, 0x3fe86910 },
    .{ 0xe2bfe9dd, 0x3c7338ff },
    .{ 0xe54ed51b, 0x3fe4e1a4 },
    .{ 0x89b7c76a, 0xbc8a492f },
    .{ 0xde701ca0, 0x3fe83f7d },
    .{ 0x609bc6e8, 0xbc4152cf },
    .{ 0xfd7b351c, 0x3fe511f9 },
    .{ 0x61c48831, 0xbc85c0e8 },
    .{ 0x31916d5d, 0x3fe8158a },
    .{ 0x0b8228de, 0xbc6de8b9 },
    .{ 0xcddbb724, 0x3fe541fa },
    .{ 0x8520d391, 0x3c7232c2 },
    .{ 0x2eaa1488, 0x3fe7eb36 },
    .{ 0xa4a5959f, 0x3c5a1d65 },
    .{ 0x966d59b3, 0x3fe571a6 },
    .{ 0x4d0fb198, 0x3c5c843b },
    .{ 0x7f09e54f, 0x3fe7c082 },
    .{ 0xd72aee68, 0xbc6c73d6 },
    .{ 0x98813a12, 0x3fe5a0fc },
    .{ 0xb7d4227b, 0xbc8d82e2 },
    .{ 0xcd7f6543, 0x3fe7956f },
    .{ 0xe9d45ae4, 0xbc8ab276 },
    .{ 0x16bf8f0d, 0x3fe5cffc },
    .{ 0x70eb578a, 0x3c896cb3 },
    .{ 0xc655211f, 0x3fe769fe },
    .{ 0xcf8c68c5, 0xbc6827d5 },
    .{ 0x552a9e57, 0x3fe5fea4 },
    .{ 0xf7ee20b7, 0x3c80b6ce },
    .{ 0x174efba1, 0x3fe73e30 },
    .{ 0x3d94ad5f, 0xbc65d3ae },
    .{ 0x9921ac79, 0x3fe62cf4 },
    .{ 0x55b6241a, 0xbc8edd98 },
    .{ 0x6fa77678, 0x3fe71204 },
    .{ 0xa5029c81, 0x3c8425b0 },
    .{ 0x2963e755, 0x3fe65aec },
    .{ 0x6b71053c, 0x3c8126f9 },
    .{ 0x800cf55e, 0x3fe6e57c },
    .{ 0xdedbd0a6, 0x3c860286 },
    .{ 0x4e134b2f, 0x3fe6888a },
    .{ 0x7644d5e6, 0xbc86b7d3 },
    .{ 0xfa9efb5d, 0x3fe6b898 },
    .{ 0x86ccf4b2, 0x3c715ac7 },
    .{ 0x50b7821a, 0x3fe6b5ce },
    .{ 0x8f702e0f, 0xbc65d515 },
    .{ 0x92eb6253, 0x3fe68b5a },
    .{ 0xd985f89c, 0xbc89a91a },
    .{ 0x7c40bde1, 0x3fe6e2b7 },
    .{ 0x857fad53, 0xbc70e729 },
    .{ 0xfdeb8cba, 0x3fe65dc1 },
    .{ 0x47337c77, 0xbc597c1b },
    .{ 0x1d0a8c40, 0x3fe70f45 },
    .{ 0x3885770d, 0x3c697ede },
    .{ 0xf20191c7, 0x3fe62fcf },
    .{ 0x895756ef, 0x3c6d9143 },
    .{ 0x80dea578, 0x3fe73b76 },
    .{ 0x06dc12a2, 0xbc722483 },
    .{ 0x26f563df, 0x3fe60185 },
    .{ 0xe0e432d0, 0x3c846ca5 },
    .{ 0xf6f7b524, 0x3fe7674a },
    .{ 0x94ac84a8, 0x3c7e9d3f },
    .{ 0x55f1f17a, 0x3fe5d2e2 },
    .{ 0x04c8892b, 0x3c803141 },
    .{ 0xd0041d52, 0x3fe792c1 },
    .{ 0xeeb354eb, 0xbc8abf05 },
    .{ 0x39824077, 0x3fe5a3e8 },
    .{ 0x2759be62, 0x3c8428aa },
    .{ 0x5e28b3c2, 0x3fe7bdda },
    .{ 0x7ccd0393, 0x3c4ad119 },
    .{ 0x8d8e83f2, 0x3fe57497 },
    .{ 0xaf282d23, 0x3c8f4714 },
    .{ 0xf5037959, 0x3fe7e893 },
    .{ 0xaa650c4c, 0x3c80eefb },
    .{ 0x0f592ca5, 0x3fe544f1 },
    .{ 0xe6c7a62f, 0xbc8e7ae8 },
    .{ 0xe9ae4ba4, 0x3fe812ed },
    .{ 0xdf402dda, 0xbc87830a },
    .{ 0x7d7bf3da, 0x3fe514f5 },
    .{ 0x8073c259, 0x3c747a10 },
};

// Reduce range of x to within PI/2 with abs (x) < 105414350.  The high part
// is written to *a, the low part to *da.  Range reduction is accurate to 136
// bits so that when x is large and *a very close to zero, all 53 bits of *a
// are correct.
pub inline fn reduce_sincos64(x: f64, a: *f64, da: *f64) i32 {
    const t: f64 = (x * usncs.hpinv + usncs.toint);
    const xn: f64 = t - usncs.toint;
    const v: [2]i32 = @bitCast(t);
    const y: f64 = (x - xn * usncs.mp1) - xn * usncs.mp2;
    const n: i32 = v[atnat.LOW_HALF] & 3;

    var t1: f64 = xn * usncs.pp3;
    const t2: f64 = y - t1;
    var db: f64 = (y - t2) - t1;

    t1 = xn * usncs.pp4;
    const b: f64 = t2 - t1;
    db += (t2 - b) - t1;

    a.* = b;
    da.* = db;
    return n;
}

// Compute sin or cos (A + DA) for the given quadrant N.
pub inline fn do_sincos64(a: f64, da: f64, n: i32) f64 {
    var retval: f64 = undefined;
    if ((n & 1) != 0) {
        // Max ULP is 0.513.
        retval = cos.do_cos64(a, da);
    } else {
        // Max ULP is 0.501 if xx < 0.01588, otherwise ULP is 0.518.
        retval = sin.do_sin64(a, da);
    }

    return if ((n & 2) != 0) -retval else retval;
}

// sin x ~ ONE * x + x^3 ( SIN1 + SIN2 * x^2 + ... + SIN7 * x^12 + SIN8 * x^14 )
// x in <0,0.1484375>
pub const SIN1: f128 = -1.66666666666666666666666666666666538e-01; // bffc5555555555555555555555555550
pub const SIN2: f128 = 8.33333333333333333333333333307532934e-03; // 3ff811111111111111111111110e7340
pub const SIN3: f128 = -1.98412698412698412698412534478712057e-04; // bff2a01a01a01a01a01a019e7a626296
pub const SIN4: f128 = 2.75573192239858906520896496653095890e-06; // 3fec71de3a556c7338fa38527474b8f5
pub const SIN5: f128 = -2.50521083854417116999224301266655662e-08; // bfe5ae64567f544e16c7de65c2ea551f
pub const SIN6: f128 = 1.60590438367608957516841576404938118e-10; // 3fde6124613a811480538a9a41957115
pub const SIN7: f128 = -7.64716343504264506714019494041582610e-13; // bfd6ae7f3d5aef30c7bc660b060ef365
pub const SIN8: f128 = 2.81068754939739570236322404393398135e-15; // 3fce9510115aabf87aceb2022a9a9180
// sin x ~ ONE * x + x^3 ( SSIN1 + SSIN2 * x^2 + ... + SSIN4 * x^6 + SSIN5 * x^8 )
// x in <0,1/256>
pub const SSIN1: f128 = -1.66666666666666666666666666666666659e-01; // bffc5555555555555555555555555555
pub const SSIN2: f128 = 8.33333333333333333333333333146298442e-03; // 3ff81111111111111111111110fe195d
pub const SSIN3: f128 = -1.98412698412698412697726277416810661e-04; // bff2a01a01a01a01a019e7121e080d88
pub const SSIN4: f128 = 2.75573192239848624174178393552189149e-06; // 3fec71de3a556c640c6aaa51aa02ab41
pub const SSIN5: f128 = -2.50521016467996193495359189395805639e-08; // bfe5ae644ee90c47dc71839de75b2787
// cos x ~ ONE + x^2 ( SCOS1 + SCOS2 * x^2 + ... + SCOS4 * x^6 + SCOS5 * x^8 )
// x in <0,1/256>
pub const SCOS1: f128 = -5.00000000000000000000000000000000000e-01; // bffe0000000000000000000000000000
pub const SCOS2: f128 = 4.16666666666666666666666666556146073e-02; // 3ffa5555555555555555555555395023
pub const SCOS3: f128 = -1.38888888888888888888309442601939728e-03; // bff56c16c16c16c16c16a566e42c0375
pub const SCOS4: f128 = 2.48015873015862382987049502531095061e-05; // 3fefa01a01a019ee02dcf7da2d6d5444
pub const SCOS5: f128 = -2.75573112601362126593516899592158083e-07; // bfe927e4f5dce637cb0b54908754bde0
// cos x ~ ONE + x^2 ( COS1 + COS2 * x^2 + ... + COS7 * x^12 + COS8 * x^14 )
// x in <0,0.1484375>
pub const COS1: f128 = -4.99999999999999999999999999999999759e-01; // bffdfffffffffffffffffffffffffffb
pub const COS2: f128 = 4.16666666666666666666666666651287795e-02; // 3ffa5555555555555555555555516f30
pub const COS3: f128 = -1.38888888888888888888888742314300284e-03; // bff56c16c16c16c16c16c16a463dfd0d
pub const COS4: f128 = 2.48015873015873015867694002851118210e-05; // 3fefa01a01a01a01a0195cebe6f3d3a5
pub const COS5: f128 = -2.75573192239858811636614709689300351e-07; // bfe927e4fb7789f5aa8142a22044b51f
pub const COS6: f128 = 2.08767569877762248667431926878073669e-09; // 3fe21eed8eff881d1e9262d7adff4373
pub const COS7: f128 = -1.14707451049343817400420280514614892e-11; // bfda9397496922a9601ed3d4ca48944b
pub const COS8: f128 = 4.77810092804389587579843296923533297e-14; // 3fd2ae5f8197cbcdcaf7c3fb4523414c

pub const SINCOSL_COS_HI: u32 = 0;
pub const SINCOSL_COS_LO: u32 = 1;
pub const SINCOSL_SIN_HI: u32 = 2;
pub const SINCOSL_SIN_LO: u32 = 3;
