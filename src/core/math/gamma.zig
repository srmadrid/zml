const std = @import("std");
const types = @import("../types.zig");
const math = @import("../math.zig");
const roundeven = @import("roundeven.zig");
const mul_split = @import("mul_split.zig");
const lgamma = @import("lgamma.zig");
const dbl64 = @import("dbl64.zig");
const ldbl128 = @import("ldbl128.zig");
const EnsureFloat = types.EnsureFloat;
const cast = types.cast;

pub fn gamma(x: anytype) EnsureFloat(@TypeOf(x)) {
    comptime if (!types.isFixedPrecision(@TypeOf(x)) or types.isComplex(@TypeOf(x)))
        @compileError("x must be an int or float");

    switch (types.numericType(@TypeOf(x))) {
        .int => {
            return gamma(cast(EnsureFloat(@TypeOf(x)), x, .{}));
        },
        .float => {
            var local_signgam: i32 = undefined;
            const y: @TypeOf(x) = switch (@TypeOf(x)) {
                f16 => cast(f16, gamma_r32(cast(f32, x, .{}), &local_signgam), .{}),
                f32 => gamma_r32(x, &local_signgam),
                f64 => gamma_r64(x, &local_signgam),
                f80 => cast(f80, gamma_r128(cast(f128, x, .{}), &local_signgam), .{}),
                f128 => gamma_r128(x, &local_signgam),
                else => unreachable,
            };
            return if (local_signgam < 0) -y else y;
        },
        else => unreachable,
    }
}

fn gamma_r32(x: f32, signgamp: *i32) f32 {
    signgamp.* = 1;

    // List of exceptional cases. Each entry contains the 32-bit encoding u of x,
    // a binary32 approximation f of gamma(x), and a correction term df.
    const tb: [10]struct { u: u32, f: f32, df: f32 } = .{
        .{ .u = 0x27de86a9, .f = 0x1.268266p+47, .df = 0x1p22 }, // x = 0x1.bd0d52p-48
        .{ .u = 0x27e05475, .f = 0x1.242422p+47, .df = 0x1p22 }, // x = 0x1.c0a8eap-48
        .{ .u = 0xb63befb3, .f = -0x1.5cb6e4p+18, .df = 0x1p-7 }, // x = -0x1.77df66p-19
        .{ .u = 0x3c7bb570, .f = 0x1.021d9p+6, .df = 0x1p-19 }, // x = 0x1.f76aep-7
        .{ .u = 0x41e886d1, .f = 0x1.33136ap+98, .df = 0x1p73 }, // x = 0x1.d10da2p+4
        .{ .u = 0xc067d177, .f = 0x1.f6850cp-3, .df = 0x1p-28 }, // x = -0x1.cfa2eep+1
        .{ .u = 0xbd99da31, .f = -0x1.befe66p+3, .df = -0x1p-22 }, // x = -0x1.33b462p-4
        .{ .u = 0xbf54c45a, .f = -0x1.a6b4ecp+2, .df = 0x1p-23 }, // x = -0x1.a988b4p-1
        .{ .u = 0x41ee77fe, .f = 0x1.d3631cp+101, .df = -0x1p-76 }, // x = 0x1.dceffcp+4
        .{ .u = 0x3f843a64, .f = 0x1.f6c638p-1, .df = 0x1p-26 }, // x = 0x1.0874c8p+0
    };

    const t: u32 = @bitCast(x);
    const ax: u32 = t << 1;
    if (ax >= (0xff << 24)) { // x=NaN or +/-Inf
        @branchHint(.unlikely);
        if (ax == (0xff << 24)) { // x=+/-Inf
            if ((t >> 31) != 0) // x=-Inf
                return (x - x) / (x - x);

            return x; // x=+Inf
        }
        return x + x; // x=NaN
    }

    var z: f64 = cast(f64, x, .{});
    if (ax < 0x6d000000) { // |x| < 0x1p-18
        @branchHint(.unlikely);
        const d: f64 = (0x1.fa658c23b1578p-1 - 0x1.d0a118f324b63p-1 * z) * z - 0x1.2788cfc6fb619p-1;
        const f: f64 = 1 / z + d;
        const r: f32 = cast(f32, f, .{});
        const rt: u64 = @bitCast(f);
        if (((rt + 2) & 0xfffffff) < 4) {
            var i: u32 = 0;
            while (i < 10) {
                if (t == tb[i].u)
                    return tb[i].f + tb[i].df;

                i += 1;
            }
        }
        return r;
    }

    const fx: f32 = math.floor(x);
    if (x >= 0x1.18522p+5) {
        @branchHint(.unlikely);
        // Overflow case.  The original CORE-MATH code returns
        // 0x1p127f * 0x1p127f, but apparently some compilers replace this
        // by +Inf.
        return x * 0x1p127;
    }

    // compute k only after the overflow check, otherwise the case to integer
    // might overflow
    const k: i32 = cast(i32, fx, .{});
    if (fx == x) { // x is integer
        @branchHint(.unlikely);
        if (x == 0)
            return 1 / x;

        if (x < 0)
            return (0 - 0) / (0 - 0);

        var t0: f64 = 1;
        var x0: f64 = 1;
        var i: i32 = 1;
        while (i < k) {
            t0 *= x0;

            i += 1;
            x0 += 1;
        }

        return cast(f32, t0, .{});
    }

    if (x < -42.0) { // negative non-integer
        @branchHint(.unlikely);
        // For x < -42, x non-integer, |gamma(x)| < 2^-151.
        const sgn: [2]f32 = .{ 0x1p-127, -0x1p-127 };
        // Underflows always happens
        return 0x1p-127 * sgn[@intCast(k & 1)];
    }

    // The array c[] stores a degree-15 polynomial approximation for
    // gamma(x).
    const c: [16]f64 = .{ 0x1.c9a76be577123p+0, 0x1.8f2754ddcf90dp+0, 0x1.0d1191949419bp+0, 0x1.e1f42cf0ae4a1p-2, 0x1.82b358a3ab638p-3, 0x1.e1f2b30cd907bp-5, 0x1.240f6d4071bd8p-6, 0x1.1522c9f3cd012p-8, 0x1.1fd0051a0525bp-10, 0x1.9808a8b96c37ep-13, 0x1.b3f78e01152b5p-15, 0x1.49c85a7e1fd04p-18, 0x1.471ca49184475p-19, -0x1.368f0b7ed9e36p-23, 0x1.882222f9049efp-23, -0x1.a69ed2042842cp-25 };

    const m: f64 = z - 0x1.7p+1;
    const i: f64 = roundeven.roundeven_finite(m);
    const step: f64 = math.copysign(@as(f64, 1), i);
    const d: f64 = m - i;
    const d2: f64 = d * d;
    const d4: f64 = d2 * d2;
    const d8: f64 = d4 * d4;
    var f: f64 = (c[0] + d * c[1]) + d2 * (c[2] + d * c[3]) + d4 * ((c[4] + d * c[5]) + d2 * (c[6] + d * c[7])) + d8 * ((c[8] + d * c[9]) + d2 * (c[10] + d * c[11]) + d4 * ((c[12] + d * c[13]) + d2 * (c[14] + d * c[15])));
    const jm: i32 = cast(i32, math.abs(i), .{});
    var w: f64 = 1;
    if (jm != 0) {
        z -= 0.5 + step * 0.5;
        w = z;
        var j: i32 = jm - 1;
        while (j != 0) {
            z -= step;
            w *= z;

            j -= 1;
        }
    }

    if (i <= -0.5)
        w = 1 / w;

    f *= w;
    const rt: u64 = @bitCast(f);
    const r: f32 = cast(f32, f, .{});
    // Deal with exceptional cases.
    if (((rt + 2) & 0xfffffff) < 8) {
        @branchHint(.unlikely);
        var j: u32 = 0;
        while (j < 10) {
            if (t == tb[j].u)
                return tb[j].f + tb[j].df;

            j += 1;
        }
    }
    return r;
}

// Compute the product of X + X_EPS, X + X_EPS + 1, ..., X + X_EPS + N
// - 1, in the form R * (1 + *EPS) where the return value R is an
// approximation to the product and *EPS is set to indicate the
// approximate error in the return value.  X is such that all the
// values X + 1, ..., X + N - 1 are exactly representable, and X_EPS /
// X is small enough that factors quadratic in it can be
// neglected.
fn gamma_product64(x: f64, x_eps: f64, n: i32, eps: *f64) f64 {
    var ret: f64 = x;
    eps.* = x_eps / x;
    var i: i32 = 1;
    while (i < n) {
        eps.* += x_eps / (x + cast(f64, i, .{}));
        var lo: f64 = undefined;
        mul_split.mul_split64(&ret, &lo, ret, x + cast(f64, i, .{}));
        eps.* += lo / ret;

        i += 1;
    }

    return ret;
}

// Return gamma (X), for positive X less than 184, in the form R *
// 2^(*EXP2_ADJ), where R is the return value and *EXP2_ADJ is set to
// avoid overflow or underflow in intermediate calculations.
fn gamma_positive64(x: f64, exp2_adj: *i32) f64 {
    // Coefficients B_2k / 2k(2k-1) of x^-(2k-1) inside exp in Stirling's
    // approximation to gamma function.
    const gamma_coeff: [6]f64 = .{
        0x1.5555555555555p-4,
        -0xb.60b60b60b60b8p-12,
        0x3.4034034034034p-12,
        -0x2.7027027027028p-12,
        0x3.72a3c5631fe46p-12,
        -0x7.daac36664f1f4p-12,
    };

    var local_signgam: i32 = undefined;
    if (x < 0.5) {
        exp2_adj.* = 0;
        return math.exp(lgamma.lgamma_r64(x + 1, &local_signgam)) / x;
    } else if (x <= 1.5) {
        exp2_adj.* = 0;
        return math.exp(lgamma.lgamma_r64(x, &local_signgam));
    } else if (x < 6.5) {
        // Adjust into the range for using exp (lgamma).
        exp2_adj.* = 0;
        const n: f64 = math.ceil(x - 1.5);
        const x_adj: f64 = x - n;
        var eps: f64 = undefined;
        const prod: f64 = gamma_product64(x_adj, 0, cast(i32, n, .{}), &eps);
        return math.exp(lgamma.lgamma_r64(x_adj, &local_signgam)) * prod * (1 + eps);
    } else {
        var eps: f64 = 0;
        var x_eps: f64 = 0;
        var x_adj: f64 = x;
        var prod: f64 = 1;
        if (x < 12) {
            // Adjust into the range for applying Stirling's
            // approximation.
            const n: f64 = math.ceil(12 - x);
            x_adj = x + n;
            x_eps = (x - (x_adj - n));
            prod = gamma_product64(x_adj - n, x_eps, cast(i32, n, .{}), &eps);
        }
        // The result is now gamma (X_ADJ + X_EPS) / (PROD * (1 + EPS)).
        // Compute gamma (X_ADJ + X_EPS) using Stirling's approximation,
        // starting by computing pow (X_ADJ, X_ADJ) with a power of 2
        // factored out.
        const x_adj_int: f64 = math.round(x_adj);
        const x_adj_frac: f64 = x_adj - x_adj_int;
        var x_adj_log2: i32 = undefined;
        var x_adj_mant: f64 = math.frexp(x_adj, &x_adj_log2);
        if (x_adj_mant < std.math.sqrt1_2) {
            x_adj_log2 -= 1;
            x_adj_mant *= 2;
        }

        exp2_adj.* = x_adj_log2 * cast(i32, x_adj_int, .{});
        var h1: f64 = undefined;
        var l1: f64 = undefined;
        mul_split.mul_split64(&h1, &l1, math.pow(x_adj_mant, x_adj), math.exp2(cast(f64, x_adj_log2, .{}) * x_adj_frac));
        var h2: f64 = undefined;
        var l2: f64 = undefined;
        mul_split.mul_split64(&h2, &l2, math.exp(-x_adj), math.sqrt(2 * std.math.pi / x_adj));
        mul_split.mul_expansion64(&h1, &l1, h1, l1, h2, l2);
        // Divide by prod * (1 + eps).
        mul_split.div_expansion64(&h1, &l1, h1, l1, prod, prod * eps);
        var exp_adj: f64 = x_eps * math.log(x_adj);
        var bsum: f64 = gamma_coeff[5];
        const x_adj2: f64 = x_adj * x_adj;
        var i: u32 = 1;
        while (i <= 5) {
            bsum = bsum / x_adj2 + gamma_coeff[5 - i];

            i += 1;
        }
        exp_adj += bsum / x_adj;
        // Now return (h1+l1) * exp(exp_adj), where exp_adj is small.
        l1 += h1 * math.expm1(exp_adj);
        return h1 + l1;
    }
}

fn gamma_r64(x: f64, signgamp: *i32) f64 {
    var hx: i32 = undefined;
    var lx: i32 = undefined;
    dbl64.extractWords(&hx, &lx, x);

    if (((hx & 0x7fffffff) | lx) == 0) {
        @branchHint(.unlikely);
        // Return value for x == 0 is Inf with divide by zero exception.
        signgamp.* = 0;
        return 1 / x;
    }

    if (hx < 0 and @as(u32, @bitCast(hx)) < 0xfff00000 and math.rint(x) == x) {
        // Return value for integer x < 0 is NaN with invalid exception.
        signgamp.* = 0;
        return (x - x) / (x - x);
    }

    if (@as(u32, @bitCast(hx)) == 0xfff00000 and lx == 0) {
        @branchHint(.unlikely);
        // x == -Inf.  According to ISO this is NaN.
        signgamp.* = 0;
        return x - x;
    }

    if ((hx & 0x7ff00000) == 0x7ff00000) {
        @branchHint(.unlikely);
        // Positive infinity (return positive infinity) or NaN (return NaN).
        signgamp.* = 0;
        return x + x;
    }

    var ret: f64 = undefined;
    if (x >= 172) {
        // Overflow.
        signgamp.* = 0;
        return std.math.floatMax(f64) * std.math.floatMax(f64);
    } else {
        if (x > 0) {
            signgamp.* = 0;
            var exp2_adj: i32 = undefined;
            const tret: f64 = gamma_positive64(x, &exp2_adj);
            ret = math.scalbn(tret, exp2_adj);
        } else if (x >= -std.math.floatEps(f64) / 4.0) {
            signgamp.* = 0;
            ret = 1 / x;
        } else {
            const tx: f64 = math.trunc(x);
            signgamp.* = if (tx == 2 * math.trunc(tx / 2)) -1 else 1;
            if (x <= -184.0) {
                // Underflow.
                ret = std.math.floatMin(f64) * std.math.floatMin(f64);
            } else {
                var frac: f64 = tx - x;
                if (frac > 0.5)
                    frac = 1 - frac;

                const sinpix: f64 = if (frac <= 0.25) math.sin(std.math.pi * frac) else math.cos(std.math.pi * (0.5 - frac));
                var exp2_adj: i32 = undefined;
                var h2: f64 = gamma_positive64(-x, &exp2_adj);
                var h1: f64 = undefined;
                var l1: f64 = undefined;
                mul_split.mul_split64(&h1, &l1, sinpix, h2);
                // sinpix*gamma_positive(.) = h1 + l1
                var l2: f64 = undefined;
                mul_split.mul_split64(&h2, &l2, h1, x);
                // h1*x = h2 + l2
                // (h1 + l1) * x = h1*x + l1*x = h2 + l2 + l1*x
                l2 += l1 * x;
                // x*sinpix*gamma_positive(.) ~ h2 + l2
                h1 = 0x3.243f6a8885a3p+0; // binary64 approximation of Pi
                l1 = 0x8.d313198a2e038p-56; // |h1+l1-Pi| < 3e-33
                // Now we divide h1 + l1 by h2 + l2.
                mul_split.div_expansion64(&h1, &l1, h1, l1, h2, l2);
                ret = math.scalbn(-h1, -exp2_adj);

                if (ret < std.math.floatMin(f64)) {
                    const vret: f64 = ret * ret;
                    std.mem.doNotOptimizeAway(vret);
                }
            }
        }
    }

    if (std.math.isInf(ret) and x != 0) {
        if (signgamp.* < 0) {
            ret = -math.copysign(std.math.floatMax(f64), ret) * std.math.floatMax(f64);
            ret = -ret;
        } else {
            ret = math.copysign(std.math.floatMax(f64), ret) * std.math.floatMax(f64);
        }
        return ret;
    } else if (ret == 0) {
        if (signgamp.* < 0) {
            ret = -math.copysign(std.math.floatMin(f64), ret) * std.math.floatMin(f64);
            ret = -ret;
        } else {
            ret = math.copysign(std.math.floatMin(f64), ret) * std.math.floatMin(f64);
        }

        return ret;
    } else {
        return ret;
    }
}

// Compute the product of X + X_EPS, X + X_EPS + 1, ..., X + X_EPS + N
// - 1, in the form R * (1 + *EPS) where the return value R is an
// approximation to the product and *EPS is set to indicate the
// approximate error in the return value.  X is such that all the
// values X + 1, ..., X + N - 1 are exactly representable, and X_EPS /
// X is small enough that factors quadratic in it can be
// neglected.
fn gamma_product128(x: f128, x_eps: f128, n: i32, eps: *f128) f128 {
    var ret: f128 = x;
    eps.* = x_eps / x;
    var i: i32 = 1;
    while (i < n) {
        eps.* += x_eps / (x + cast(f128, i, .{}));
        var lo: f128 = undefined;
        mul_split.mul_split128(&ret, &lo, ret, x + cast(f128, i, .{}));
        eps.* += lo / ret;

        i += 1;
    }

    return ret;
}

// Return gamma (X), for positive X less than 1775, in the form R *
// 2^(*EXP2_ADJ), where R is the return value and *EXP2_ADJ is set to
// avoid overflow or underflow in intermediate calculations.
fn gamma_positive128(x: f128, exp2_adj: *i32) f128 {
    // Coefficients B_2k / 2k(2k-1) of x^-(2k-1) inside exp in Stirling's
    // approximation to gamma function.
    const gamma_coeff: [14]f128 = .{
        0x1.5555555555555555555555555555p-4,
        -0xb.60b60b60b60b60b60b60b60b60b8p-12,
        0x3.4034034034034034034034034034p-12,
        -0x2.7027027027027027027027027028p-12,
        0x3.72a3c5631fe46ae1d4e700dca8f2p-12,
        -0x7.daac36664f1f207daac36664f1f4p-12,
        0x1.a41a41a41a41a41a41a41a41a41ap-8,
        -0x7.90a1b2c3d4e5f708192a3b4c5d7p-8,
        0x2.dfd2c703c0cfff430edfd2c703cp-4,
        -0x1.6476701181f39edbdb9ce625987dp+0,
        0xd.672219167002d3a7a9c886459cp+0,
        -0x9.cd9292e6660d55b3f712eb9e07c8p+4,
        0x8.911a740da740da740da740da741p+8,
        -0x8.d0cc570e255bf59ff6eec24b49p+12,
    };

    var local_signgam: i32 = undefined;
    if (x < 0.5) {
        exp2_adj.* = 0;
        return math.exp(lgamma.lgamma_r128(x + 1, &local_signgam)) / x;
    } else if (x <= 1.5) {
        exp2_adj.* = 0;
        return math.exp(lgamma.lgamma_r128(x, &local_signgam));
    } else if (x < 12.5) {
        // Adjust into the range for using exp (lgamma).
        exp2_adj.* = 0;
        const n: f128 = math.ceil(x - 1.5);
        const x_adj: f128 = x - n;
        var eps: f128 = undefined;
        const prod: f128 = gamma_product128(x_adj, 0, cast(i32, n, .{}), &eps);
        return math.exp(lgamma.lgamma_r128(x_adj, &local_signgam)) * prod * (1 + eps);
    } else {
        var eps: f128 = 0;
        var x_eps: f128 = 0;
        var x_adj: f128 = x;
        var prod: f128 = 1;
        if (x < 24) {
            // Adjust into the range for applying Stirling's
            // approximation.
            const n: f128 = math.ceil(24 - x);
            x_adj = x + n;
            x_eps = (x - (x_adj - n));
            prod = gamma_product128(x_adj - n, x_eps, cast(i32, n, .{}), &eps);
        }
        // The result is now gamma (X_ADJ + X_EPS) / (PROD * (1 + EPS)).
        // Compute gamma (X_ADJ + X_EPS) using Stirling's approximation,
        // starting by computing pow (X_ADJ, X_ADJ) with a power of 2
        // factored out.
        var exp_adj: f128 = -eps;
        const x_adj_int: f128 = math.round(x_adj);
        const x_adj_frac: f128 = x_adj - x_adj_int;
        var x_adj_log2: i32 = undefined;
        var x_adj_mant: f128 = math.frexp(x_adj, &x_adj_log2);
        if (x_adj_mant < std.math.sqrt1_2) {
            x_adj_log2 -= 1;
            x_adj_mant *= 2;
        }

        exp2_adj.* = x_adj_log2 * cast(i32, x_adj_int, .{});
        const ret: f128 = math.pow(x_adj_mant, x_adj) * math.exp2(cast(f128, x_adj_log2, .{}) * x_adj_frac) * math.exp(-x_adj) * math.sqrt(2 * std.math.pi / x_adj) / prod;
        exp_adj += x_eps * math.log(x_adj);
        var bsum: f128 = gamma_coeff[13];
        const x_adj2: f128 = x_adj * x_adj;
        var i: u32 = 1;
        while (i <= 13) {
            bsum = bsum / x_adj2 + gamma_coeff[13 - i];

            i += 1;
        }

        exp_adj += bsum / x_adj;
        return ret + ret * math.expm1(exp_adj);
    }
}

fn gamma_r128(x: f128, signgamp: *i32) f128 {
    var hx: i64 = undefined;
    var lx: i64 = undefined;
    ldbl128.getWords(&hx, &lx, x);

    if (((hx & 0x7fffffffffffffff) | lx) == 0) {
        // Return value for x == 0 is Inf with divide by zero exception.
        signgamp.* = 0;
        return 1 / x;
    }

    if (hx < 0 and @as(u64, @bitCast(hx)) < 0xffff000000000000 and math.rint(x) == x) {
        // Return value for integer x < 0 is NaN with invalid exception.
        signgamp.* = 0;
        return (x - x) / (x - x);
    }

    if (hx == 0xffff000000000000 and lx == 0) {
        // x == -Inf.  According to ISO this is NaN.
        signgamp.* = 0;
        return x - x;
    }

    if ((hx & 0x7fff000000000000) == 0x7fff000000000000) {
        // Positive infinity (return positive infinity) or NaN (return NaN).
        signgamp.* = 0;
        return x + x;
    }

    var ret: f128 = undefined;
    if (x >= 1756) {
        // Overflow.
        signgamp.* = 0;
        return std.math.floatMax(f128) * std.math.floatMax(f128);
    } else {
        if (x > 0) {
            signgamp.* = 0;
            var exp2_adj: i32 = undefined;
            ret = gamma_positive128(x, &exp2_adj);
            ret = math.scalbn(ret, exp2_adj);
        } else if (x >= -std.math.floatEps(f128) / 4) {
            signgamp.* = 0;
            ret = 1 / x;
        } else {
            const tx: f128 = math.trunc(x);
            signgamp.* = if (tx == 2 * math.trunc(tx / 2)) -1 else 1;
            if (x <= -1775) {
                // Underflow.
                ret = std.math.floatMin(f128) * std.math.floatMin(f128);
            } else {
                var frac: f128 = tx - x;
                if (frac > 0.5)
                    frac = 1 - frac;

                const sinpix: f128 = if (frac <= 0.25) math.sin(std.math.pi * frac) else math.cos(std.math.pi * (0.5 - frac));
                var exp2_adj: i32 = undefined;
                ret = std.math.pi / (-x * sinpix * gamma_positive128(-x, &exp2_adj));
                ret = math.scalbn(ret, -exp2_adj);

                if (ret < std.math.floatMin(f128)) {
                    const vret: f128 = ret * ret;
                    std.mem.doNotOptimizeAway(vret);
                }
            }
        }
    }

    if (std.math.isInf(ret) and x != 0) {
        if (signgamp.* < 0) {
            return -(-math.copysign(std.math.floatMax(f128), ret) * std.math.floatMax(f128));
        } else {
            return math.copysign(std.math.floatMax(f128), ret) * std.math.floatMax(f128);
        }
    } else if (ret == 0) {
        if (signgamp.* < 0) {
            return -(-math.copysign(std.math.floatMin(f128), ret) * std.math.floatMin(f128));
        } else {
            return math.copysign(std.math.floatMin(f128), ret) * std.math.floatMin(f128);
        }
    } else {
        return ret;
    }
}

test gamma {
    try std.testing.expectEqual(0x1.c5bf8ap+0, gamma(@as(f32, 0x8p-4)));
    try std.testing.expectEqual(-0x3.8b7f14p+0, gamma(@as(f32, -0x8p-4)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f32, 0x1p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f32, 0x2p+0)));
    try std.testing.expectEqual(0x2p+0, gamma(@as(f32, 0x3p+0)));
    try std.testing.expectEqual(0x6p+0, gamma(@as(f32, 0x4p+0)));
    try std.testing.expectEqual(0x1.8p+4, gamma(@as(f32, 0x5p+0)));
    try std.testing.expectEqual(0x7.8p+4, gamma(@as(f32, 0x6p+0)));
    try std.testing.expectEqual(0x2.dp+8, gamma(@as(f32, 0x7p+0)));
    try std.testing.expectEqual(0x1.3bp+12, gamma(@as(f32, 0x8p+0)));
    try std.testing.expectEqual(0x9.d8p+12, gamma(@as(f32, 0x9p+0)));
    try std.testing.expectEqual(0x5.898p+16, gamma(@as(f32, 0xap+0)));
    try std.testing.expectEqual(0x1.4c4d5ap+0, gamma(@as(f32, 0xb.33334p-4)));
    try std.testing.expectEqual(0x1.4c4d5cp+0, gamma(@as(f32, 0xb.33333p-4)));
    try std.testing.expectEqual(0xe.b0d1bp-4, gamma(@as(f32, 0x1.333334p+0)));
    try std.testing.expectEqual(0xe.b0d1cp-4, gamma(@as(f32, 0x1.333332p+0)));
    try std.testing.expectEqual(0xe.2dfc5p-4, gamma(@as(f32, 0x1.8p+0)));
    try std.testing.expectEqual(0x1.544fa6p+0, gamma(@as(f32, 0x2.8p+0)));
    try std.testing.expectEqual(0x3.52c72p+0, gamma(@as(f32, 0x3.8p+0)));
    try std.testing.expectEqual(0xb.a1b8fp+0, gamma(@as(f32, 0x4.8p+0)));
    try std.testing.expectEqual(0x3.457c04p+4, gamma(@as(f32, 0x5.8p+0)));
    try std.testing.expectEqual(0x1.1fe2a2p+8, gamma(@as(f32, 0x6.8p+0)));
    try std.testing.expectEqual(0x7.4f4118p+8, gamma(@as(f32, 0x7.8p+0)));
    try std.testing.expectEqual(0x3.6d2684p+12, gamma(@as(f32, 0x8.8p+0)));
    try std.testing.expectEqual(0x1.d1fc76p+16, gamma(@as(f32, 0x9.8p+0)));
    try std.testing.expectEqual(0x2.5cff6p+0, gamma(@as(f32, -0x1.8p+0)));
    try std.testing.expectEqual(-0xf.1ffc1p-4, gamma(@as(f32, -0x2.8p+0)));
    try std.testing.expectEqual(0x4.5248p-4, gamma(@as(f32, -0x3.8p+0)));
    try std.testing.expectEqual(-0xf.5d71dp-8, gamma(@as(f32, -0x4.8p+0)));
    try std.testing.expectEqual(0x2.cb2bf8p-8, gamma(@as(f32, -0x5.8p+0)));
    try std.testing.expectEqual(-0x6.e06c38p-12, gamma(@as(f32, -0x6.8p+0)));
    try std.testing.expectEqual(0xe.ab919p-16, gamma(@as(f32, -0x7.8p+0)));
    try std.testing.expectEqual(-0x1.b9d4e4p-16, gamma(@as(f32, -0x8.8p+0)));
    try std.testing.expectEqual(0x2.e8232cp-20, gamma(@as(f32, -0x9.8p+0)));
    try std.testing.expectEqual(0xf.fffffp+20, gamma(@as(f32, 0x1p-24)));
    try std.testing.expectEqual(-0x1p+24, gamma(@as(f32, -0x1p-24)));
    try std.testing.expectEqual(0x2p+52, gamma(@as(f32, 0x8p-56)));
    try std.testing.expectEqual(-0x2p+52, gamma(@as(f32, -0x8p-56)));
    try std.testing.expectEqual(0x1p+64, gamma(@as(f32, 0x1p-64)));
    try std.testing.expectEqual(-0x1p+64, gamma(@as(f32, -0x1p-64)));
    try std.testing.expectEqual(0x4p+104, gamma(@as(f32, 0x4p-108)));
    try std.testing.expectEqual(-0x4p+104, gamma(@as(f32, -0x4p-108)));
    try std.testing.expectEqual(0x2p+112, gamma(@as(f32, 0x8p-116)));
    try std.testing.expectEqual(-0x2p+112, gamma(@as(f32, -0x8p-116)));
    try std.testing.expectEqual(0x8p+124, gamma(@as(f32, 0x2p-128)));
    try std.testing.expectEqual(-0x8p+124, gamma(@as(f32, -0x2p-128)));
    try std.testing.expectEqual(std.math.inf(f32), gamma(@as(f32, 0x1p-128)));
    try std.testing.expectEqual(-std.math.inf(f32), gamma(@as(f32, -0x1p-128)));
    try std.testing.expectEqual(std.math.inf(f32), gamma(@as(f32, 0x8p-152)));
    try std.testing.expectEqual(-std.math.inf(f32), gamma(@as(f32, -0x8p-152)));
    try std.testing.expectEqual(std.math.inf(f32), gamma(@as(f32, 0x8p-152)));
    try std.testing.expectEqual(-std.math.inf(f32), gamma(@as(f32, -0x8p-152)));
    try std.testing.expectEqual(std.math.inf(f32), gamma(@as(f32, 0x8p-152)));
    try std.testing.expectEqual(-std.math.inf(f32), gamma(@as(f32, -0x8p-152)));
    try std.testing.expectEqual(std.math.inf(f32), gamma(@as(f32, 0x8p-152)));
    try std.testing.expectEqual(-std.math.inf(f32), gamma(@as(f32, -0x8p-152)));
    try std.testing.expectEqual(std.math.inf(f32), gamma(@as(f32, 0x8p-152)));
    try std.testing.expectEqual(-std.math.inf(f32), gamma(@as(f32, -0x8p-152)));
    try std.testing.expectEqual(std.math.inf(f32), gamma(@as(f32, 0x8p-152)));
    try std.testing.expectEqual(-std.math.inf(f32), gamma(@as(f32, -0x8p-152)));
    try std.testing.expectEqual(std.math.inf(f32), gamma(@as(f32, 0x8p-152)));
    try std.testing.expectEqual(-std.math.inf(f32), gamma(@as(f32, -0x8p-152)));
    try std.testing.expectEqual(std.math.inf(f32), gamma(@as(f32, 0x8p-152)));
    try std.testing.expectEqual(-std.math.inf(f32), gamma(@as(f32, -0x8p-152)));
    try std.testing.expectEqual(0x1.3b0028p+12, gamma(@as(f32, 0x8.00001p+0)));
    try std.testing.expectEqual(0x1.3affecp+12, gamma(@as(f32, 0x7.fffff8p+0)));
    try std.testing.expectEqual(0x2.d0002cp+8, gamma(@as(f32, 0x7.000008p+0)));
    try std.testing.expectEqual(0x2.cfffd4p+8, gamma(@as(f32, 0x6.fffff8p+0)));
    try std.testing.expectEqual(0x7.800068p+4, gamma(@as(f32, 0x6.000008p+0)));
    try std.testing.expectEqual(0x7.7fff98p+4, gamma(@as(f32, 0x5.fffff8p+0)));
    try std.testing.expectEqual(0x1.800012p+4, gamma(@as(f32, 0x5.000008p+0)));
    try std.testing.expectEqual(0x1.7fffeep+4, gamma(@as(f32, 0x4.fffff8p+0)));
    try std.testing.expectEqual(0x6.00004p+0, gamma(@as(f32, 0x4.000008p+0)));
    try std.testing.expectEqual(0x5.ffffep+0, gamma(@as(f32, 0x3.fffffcp+0)));
    try std.testing.expectEqual(0x2.000008p+0, gamma(@as(f32, 0x3.000004p+0)));
    try std.testing.expectEqual(0x1.fffff8p+0, gamma(@as(f32, 0x2.fffffcp+0)));
    try std.testing.expectEqual(0x1.000002p+0, gamma(@as(f32, 0x2.000004p+0)));
    try std.testing.expectEqual(0xf.fffffp-4, gamma(@as(f32, 0x1.fffffep+0)));
    try std.testing.expectEqual(0xf.fffffp-4, gamma(@as(f32, 0x1.000002p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f32, 0xf.fffffp-4)));
    try std.testing.expectEqual(-0x1p+24, gamma(@as(f32, -0xf.fffffp-4)));
    try std.testing.expectEqual(0x7.fffff8p+20, gamma(@as(f32, -0x1.000002p+0)));
    try std.testing.expectEqual(0x4.000008p+20, gamma(@as(f32, -0x1.fffffep+0)));
    try std.testing.expectEqual(-0x1.fffff8p+20, gamma(@as(f32, -0x2.000004p+0)));
    try std.testing.expectEqual(-0xa.aaaaep+16, gamma(@as(f32, -0x2.fffffcp+0)));
    try std.testing.expectEqual(0xa.aaaa7p+16, gamma(@as(f32, -0x3.000004p+0)));
    try std.testing.expectEqual(0x2.aaaabcp+16, gamma(@as(f32, -0x3.fffffcp+0)));
    try std.testing.expectEqual(-0x1.555546p+16, gamma(@as(f32, -0x4.000008p+0)));
    try std.testing.expectEqual(-0x4.44448p+12, gamma(@as(f32, -0x4.fffff8p+0)));
    try std.testing.expectEqual(0x4.444408p+12, gamma(@as(f32, -0x5.000008p+0)));
    try std.testing.expectEqual(0xb.60b6bp+8, gamma(@as(f32, -0x5.fffff8p+0)));
    try std.testing.expectEqual(-0xb.60b56p+8, gamma(@as(f32, -0x6.000008p+0)));
    try std.testing.expectEqual(-0x1.a01a1cp+8, gamma(@as(f32, -0x6.fffff8p+0)));
    try std.testing.expectEqual(0x1.a019e8p+8, gamma(@as(f32, -0x7.000008p+0)));
    try std.testing.expectEqual(0x3.40343cp+4, gamma(@as(f32, -0x7.fffff8p+0)));
    try std.testing.expectEqual(-0x1.a019cap+4, gamma(@as(f32, -0x8.00001p+0)));
    try std.testing.expectEqual(0x4.9f9498p-4, gamma(@as(f32, -0x9.fffffp+0)));
    try std.testing.expectEqual(-0x4.9f934p-4, gamma(@as(f32, -0xa.00001p+0)));
    try std.testing.expectEqual(0x3.ca86e4p-44, gamma(@as(f32, -0x1.3ffffep+4)));
    try std.testing.expectEqual(-0x3.ca8408p-44, gamma(@as(f32, -0x1.400002p+4)));
    try std.testing.expectEqual(0x9.c99a5p-92, gamma(@as(f32, -0x1.dffffep+4)));
    try std.testing.expectEqual(-0x9.c992p-92, gamma(@as(f32, -0x1.e00002p+4)));
    try std.testing.expectEqual(0x7.28p-144, gamma(@as(f32, -0x2.7ffffcp+4)));
    try std.testing.expectEqual(-0x7.28p-144, gamma(@as(f32, -0x2.800004p+4)));
    try std.testing.expectEqual(-0x3p-148, gamma(@as(f32, -0x2.8ffffcp+4)));
    try std.testing.expectEqual(0x3p-148, gamma(@as(f32, -0x2.900004p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x2.9ffffcp+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0x2.a00004p+4)));
    try std.testing.expectEqual(0x1.3b0028p+12, gamma(@as(f32, 0x8.00001p+0)));
    try std.testing.expectEqual(0x1.3bp+12, gamma(@as(f32, 0x8p+0)));
    try std.testing.expectEqual(0x1.3bp+12, gamma(@as(f32, 0x8p+0)));
    try std.testing.expectEqual(0x1.3affecp+12, gamma(@as(f32, 0x7.fffff8p+0)));
    try std.testing.expectEqual(0x2.d0002cp+8, gamma(@as(f32, 0x7.000008p+0)));
    try std.testing.expectEqual(0x2.dp+8, gamma(@as(f32, 0x7p+0)));
    try std.testing.expectEqual(0x2.dp+8, gamma(@as(f32, 0x7p+0)));
    try std.testing.expectEqual(0x2.cfffd4p+8, gamma(@as(f32, 0x6.fffff8p+0)));
    try std.testing.expectEqual(0x7.800068p+4, gamma(@as(f32, 0x6.000008p+0)));
    try std.testing.expectEqual(0x7.8p+4, gamma(@as(f32, 0x6p+0)));
    try std.testing.expectEqual(0x7.8p+4, gamma(@as(f32, 0x6p+0)));
    try std.testing.expectEqual(0x7.7fff98p+4, gamma(@as(f32, 0x5.fffff8p+0)));
    try std.testing.expectEqual(0x1.800012p+4, gamma(@as(f32, 0x5.000008p+0)));
    try std.testing.expectEqual(0x1.8p+4, gamma(@as(f32, 0x5p+0)));
    try std.testing.expectEqual(0x1.8p+4, gamma(@as(f32, 0x5p+0)));
    try std.testing.expectEqual(0x1.7fffeep+4, gamma(@as(f32, 0x4.fffff8p+0)));
    try std.testing.expectEqual(0x6.00004p+0, gamma(@as(f32, 0x4.000008p+0)));
    try std.testing.expectEqual(0x6p+0, gamma(@as(f32, 0x4p+0)));
    try std.testing.expectEqual(0x6p+0, gamma(@as(f32, 0x4p+0)));
    try std.testing.expectEqual(0x5.ffffep+0, gamma(@as(f32, 0x3.fffffcp+0)));
    try std.testing.expectEqual(0x2.000008p+0, gamma(@as(f32, 0x3.000004p+0)));
    try std.testing.expectEqual(0x2p+0, gamma(@as(f32, 0x3p+0)));
    try std.testing.expectEqual(0x2p+0, gamma(@as(f32, 0x3p+0)));
    try std.testing.expectEqual(0x1.fffff8p+0, gamma(@as(f32, 0x2.fffffcp+0)));
    try std.testing.expectEqual(0x1.000002p+0, gamma(@as(f32, 0x2.000004p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f32, 0x2p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f32, 0x2p+0)));
    try std.testing.expectEqual(0xf.fffffp-4, gamma(@as(f32, 0x1.fffffep+0)));
    try std.testing.expectEqual(0xf.fffffp-4, gamma(@as(f32, 0x1.000002p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f32, 0x1p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f32, 0x1p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f32, 0xf.fffffp-4)));
    try std.testing.expectEqual(-0x1p+24, gamma(@as(f32, -0xf.fffffp-4)));
    try std.testing.expectEqual(0x7.fffff8p+20, gamma(@as(f32, -0x1.000002p+0)));
    try std.testing.expectEqual(0x4.000008p+20, gamma(@as(f32, -0x1.fffffep+0)));
    try std.testing.expectEqual(-0x1.fffff8p+20, gamma(@as(f32, -0x2.000004p+0)));
    try std.testing.expectEqual(-0xa.aaaaep+16, gamma(@as(f32, -0x2.fffffcp+0)));
    try std.testing.expectEqual(0xa.aaaa7p+16, gamma(@as(f32, -0x3.000004p+0)));
    try std.testing.expectEqual(0x2.aaaabcp+16, gamma(@as(f32, -0x3.fffffcp+0)));
    try std.testing.expectEqual(-0x1.555546p+16, gamma(@as(f32, -0x4.000008p+0)));
    try std.testing.expectEqual(-0x4.44448p+12, gamma(@as(f32, -0x4.fffff8p+0)));
    try std.testing.expectEqual(0x4.444408p+12, gamma(@as(f32, -0x5.000008p+0)));
    try std.testing.expectEqual(0xb.60b6bp+8, gamma(@as(f32, -0x5.fffff8p+0)));
    try std.testing.expectEqual(-0xb.60b56p+8, gamma(@as(f32, -0x6.000008p+0)));
    try std.testing.expectEqual(-0x1.a01a1cp+8, gamma(@as(f32, -0x6.fffff8p+0)));
    try std.testing.expectEqual(0x1.a019e8p+8, gamma(@as(f32, -0x7.000008p+0)));
    try std.testing.expectEqual(0x3.40343cp+4, gamma(@as(f32, -0x7.fffff8p+0)));
    try std.testing.expectEqual(-0x1.a019cap+4, gamma(@as(f32, -0x8.00001p+0)));
    try std.testing.expectEqual(0x4.9f9498p-4, gamma(@as(f32, -0x9.fffffp+0)));
    try std.testing.expectEqual(-0x4.9f934p-4, gamma(@as(f32, -0xa.00001p+0)));
    try std.testing.expectEqual(0x3.ca86e4p-44, gamma(@as(f32, -0x1.3ffffep+4)));
    try std.testing.expectEqual(-0x3.ca8408p-44, gamma(@as(f32, -0x1.400002p+4)));
    try std.testing.expectEqual(0x9.c99a5p-92, gamma(@as(f32, -0x1.dffffep+4)));
    try std.testing.expectEqual(-0x9.c992p-92, gamma(@as(f32, -0x1.e00002p+4)));
    try std.testing.expectEqual(0x7.28p-144, gamma(@as(f32, -0x2.7ffffcp+4)));
    try std.testing.expectEqual(-0x7.28p-144, gamma(@as(f32, -0x2.800004p+4)));
    try std.testing.expectEqual(-0x3p-148, gamma(@as(f32, -0x2.8ffffcp+4)));
    try std.testing.expectEqual(0x3p-148, gamma(@as(f32, -0x2.900004p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x2.9ffffcp+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0x2.a00004p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x3.1ffffcp+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0x3.200004p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x6.3ffff8p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0x6.400008p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x9.5ffffp+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0x9.60001p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0xb.4ffffp+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xb.50001p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xb.5ffffp+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0xb.60001p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0xb.6ffffp+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xb.70001p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xb.7ffffp+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0xb.80001p+4)));
    try std.testing.expectEqual(0x1.3b0028p+12, gamma(@as(f32, 0x8.00001p+0)));
    try std.testing.expectEqual(0x1.3bp+12, gamma(@as(f32, 0x8p+0)));
    try std.testing.expectEqual(0x1.3bp+12, gamma(@as(f32, 0x8p+0)));
    try std.testing.expectEqual(0x1.3affecp+12, gamma(@as(f32, 0x7.fffff8p+0)));
    try std.testing.expectEqual(0x2.d0002cp+8, gamma(@as(f32, 0x7.000008p+0)));
    try std.testing.expectEqual(0x2.dp+8, gamma(@as(f32, 0x7p+0)));
    try std.testing.expectEqual(0x2.dp+8, gamma(@as(f32, 0x7p+0)));
    try std.testing.expectEqual(0x2.cfffd4p+8, gamma(@as(f32, 0x6.fffff8p+0)));
    try std.testing.expectEqual(0x7.800068p+4, gamma(@as(f32, 0x6.000008p+0)));
    try std.testing.expectEqual(0x7.8p+4, gamma(@as(f32, 0x6p+0)));
    try std.testing.expectEqual(0x7.8p+4, gamma(@as(f32, 0x6p+0)));
    try std.testing.expectEqual(0x7.7fff98p+4, gamma(@as(f32, 0x5.fffff8p+0)));
    try std.testing.expectEqual(0x1.800012p+4, gamma(@as(f32, 0x5.000008p+0)));
    try std.testing.expectEqual(0x1.8p+4, gamma(@as(f32, 0x5p+0)));
    try std.testing.expectEqual(0x1.8p+4, gamma(@as(f32, 0x5p+0)));
    try std.testing.expectEqual(0x1.7fffeep+4, gamma(@as(f32, 0x4.fffff8p+0)));
    try std.testing.expectEqual(0x6.00004p+0, gamma(@as(f32, 0x4.000008p+0)));
    try std.testing.expectEqual(0x6p+0, gamma(@as(f32, 0x4p+0)));
    try std.testing.expectEqual(0x6p+0, gamma(@as(f32, 0x4p+0)));
    try std.testing.expectEqual(0x5.ffffep+0, gamma(@as(f32, 0x3.fffffcp+0)));
    try std.testing.expectEqual(0x2.000008p+0, gamma(@as(f32, 0x3.000004p+0)));
    try std.testing.expectEqual(0x2p+0, gamma(@as(f32, 0x3p+0)));
    try std.testing.expectEqual(0x2p+0, gamma(@as(f32, 0x3p+0)));
    try std.testing.expectEqual(0x1.fffff8p+0, gamma(@as(f32, 0x2.fffffcp+0)));
    try std.testing.expectEqual(0x1.000002p+0, gamma(@as(f32, 0x2.000004p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f32, 0x2p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f32, 0x2p+0)));
    try std.testing.expectEqual(0xf.fffffp-4, gamma(@as(f32, 0x1.fffffep+0)));
    try std.testing.expectEqual(0xf.fffffp-4, gamma(@as(f32, 0x1.000002p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f32, 0x1p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f32, 0x1p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f32, 0xf.fffffp-4)));
    try std.testing.expectEqual(-0x1p+24, gamma(@as(f32, -0xf.fffffp-4)));
    try std.testing.expectEqual(0x7.fffff8p+20, gamma(@as(f32, -0x1.000002p+0)));
    try std.testing.expectEqual(0x4.000008p+20, gamma(@as(f32, -0x1.fffffep+0)));
    try std.testing.expectEqual(-0x1.fffff8p+20, gamma(@as(f32, -0x2.000004p+0)));
    try std.testing.expectEqual(-0xa.aaaaep+16, gamma(@as(f32, -0x2.fffffcp+0)));
    try std.testing.expectEqual(0xa.aaaa7p+16, gamma(@as(f32, -0x3.000004p+0)));
    try std.testing.expectEqual(0x2.aaaabcp+16, gamma(@as(f32, -0x3.fffffcp+0)));
    try std.testing.expectEqual(-0x1.555546p+16, gamma(@as(f32, -0x4.000008p+0)));
    try std.testing.expectEqual(-0x4.44448p+12, gamma(@as(f32, -0x4.fffff8p+0)));
    try std.testing.expectEqual(0x4.444408p+12, gamma(@as(f32, -0x5.000008p+0)));
    try std.testing.expectEqual(0xb.60b6bp+8, gamma(@as(f32, -0x5.fffff8p+0)));
    try std.testing.expectEqual(-0xb.60b56p+8, gamma(@as(f32, -0x6.000008p+0)));
    try std.testing.expectEqual(-0x1.a01a1cp+8, gamma(@as(f32, -0x6.fffff8p+0)));
    try std.testing.expectEqual(0x1.a019e8p+8, gamma(@as(f32, -0x7.000008p+0)));
    try std.testing.expectEqual(0x3.40343cp+4, gamma(@as(f32, -0x7.fffff8p+0)));
    try std.testing.expectEqual(-0x1.a019cap+4, gamma(@as(f32, -0x8.00001p+0)));
    try std.testing.expectEqual(0x4.9f9498p-4, gamma(@as(f32, -0x9.fffffp+0)));
    try std.testing.expectEqual(-0x4.9f934p-4, gamma(@as(f32, -0xa.00001p+0)));
    try std.testing.expectEqual(0x3.ca86e4p-44, gamma(@as(f32, -0x1.3ffffep+4)));
    try std.testing.expectEqual(-0x3.ca8408p-44, gamma(@as(f32, -0x1.400002p+4)));
    try std.testing.expectEqual(0x9.c99a5p-92, gamma(@as(f32, -0x1.dffffep+4)));
    try std.testing.expectEqual(-0x9.c992p-92, gamma(@as(f32, -0x1.e00002p+4)));
    try std.testing.expectEqual(0x7.28p-144, gamma(@as(f32, -0x2.7ffffcp+4)));
    try std.testing.expectEqual(-0x7.28p-144, gamma(@as(f32, -0x2.800004p+4)));
    try std.testing.expectEqual(-0x3p-148, gamma(@as(f32, -0x2.8ffffcp+4)));
    try std.testing.expectEqual(0x3p-148, gamma(@as(f32, -0x2.900004p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x2.9ffffcp+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0x2.a00004p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x3.1ffffcp+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0x3.200004p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x6.3ffff8p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0x6.400008p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x9.5ffffp+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0x9.60001p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0xb.4ffffp+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xb.50001p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xb.5ffffp+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0xb.60001p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0xb.6ffffp+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xb.70001p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xb.7ffffp+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0xb.80001p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xb.bffffp+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0xb.c0001p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0xb.cffffp+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xb.d0001p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xb.dffffp+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0xb.e0001p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0xb.effffp+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xb.f0001p+4)));
    try std.testing.expectEqual(0x1.3b0028p+12, gamma(@as(f32, 0x8.00001p+0)));
    try std.testing.expectEqual(0x1.3bp+12, gamma(@as(f32, 0x8p+0)));
    try std.testing.expectEqual(0x1.3bp+12, gamma(@as(f32, 0x8p+0)));
    try std.testing.expectEqual(0x1.3affecp+12, gamma(@as(f32, 0x7.fffff8p+0)));
    try std.testing.expectEqual(0x2.d0002cp+8, gamma(@as(f32, 0x7.000008p+0)));
    try std.testing.expectEqual(0x2.dp+8, gamma(@as(f32, 0x7p+0)));
    try std.testing.expectEqual(0x2.dp+8, gamma(@as(f32, 0x7p+0)));
    try std.testing.expectEqual(0x2.cfffd4p+8, gamma(@as(f32, 0x6.fffff8p+0)));
    try std.testing.expectEqual(0x7.800068p+4, gamma(@as(f32, 0x6.000008p+0)));
    try std.testing.expectEqual(0x7.8p+4, gamma(@as(f32, 0x6p+0)));
    try std.testing.expectEqual(0x7.8p+4, gamma(@as(f32, 0x6p+0)));
    try std.testing.expectEqual(0x7.7fff98p+4, gamma(@as(f32, 0x5.fffff8p+0)));
    try std.testing.expectEqual(0x1.800012p+4, gamma(@as(f32, 0x5.000008p+0)));
    try std.testing.expectEqual(0x1.8p+4, gamma(@as(f32, 0x5p+0)));
    try std.testing.expectEqual(0x1.8p+4, gamma(@as(f32, 0x5p+0)));
    try std.testing.expectEqual(0x1.7fffeep+4, gamma(@as(f32, 0x4.fffff8p+0)));
    try std.testing.expectEqual(0x6.00004p+0, gamma(@as(f32, 0x4.000008p+0)));
    try std.testing.expectEqual(0x6p+0, gamma(@as(f32, 0x4p+0)));
    try std.testing.expectEqual(0x6p+0, gamma(@as(f32, 0x4p+0)));
    try std.testing.expectEqual(0x5.ffffep+0, gamma(@as(f32, 0x3.fffffcp+0)));
    try std.testing.expectEqual(0x2.000008p+0, gamma(@as(f32, 0x3.000004p+0)));
    try std.testing.expectEqual(0x2p+0, gamma(@as(f32, 0x3p+0)));
    try std.testing.expectEqual(0x2p+0, gamma(@as(f32, 0x3p+0)));
    try std.testing.expectEqual(0x1.fffff8p+0, gamma(@as(f32, 0x2.fffffcp+0)));
    try std.testing.expectEqual(0x1.000002p+0, gamma(@as(f32, 0x2.000004p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f32, 0x2p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f32, 0x2p+0)));
    try std.testing.expectEqual(0xf.fffffp-4, gamma(@as(f32, 0x1.fffffep+0)));
    try std.testing.expectEqual(0xf.fffffp-4, gamma(@as(f32, 0x1.000002p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f32, 0x1p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f32, 0x1p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f32, 0xf.fffffp-4)));
    try std.testing.expectEqual(-0x1p+24, gamma(@as(f32, -0xf.fffffp-4)));
    try std.testing.expectEqual(0x7.fffff8p+20, gamma(@as(f32, -0x1.000002p+0)));
    try std.testing.expectEqual(0x4.000008p+20, gamma(@as(f32, -0x1.fffffep+0)));
    try std.testing.expectEqual(-0x1.fffff8p+20, gamma(@as(f32, -0x2.000004p+0)));
    try std.testing.expectEqual(-0xa.aaaaep+16, gamma(@as(f32, -0x2.fffffcp+0)));
    try std.testing.expectEqual(0xa.aaaa7p+16, gamma(@as(f32, -0x3.000004p+0)));
    try std.testing.expectEqual(0x2.aaaabcp+16, gamma(@as(f32, -0x3.fffffcp+0)));
    try std.testing.expectEqual(-0x1.555546p+16, gamma(@as(f32, -0x4.000008p+0)));
    try std.testing.expectEqual(-0x4.44448p+12, gamma(@as(f32, -0x4.fffff8p+0)));
    try std.testing.expectEqual(0x4.444408p+12, gamma(@as(f32, -0x5.000008p+0)));
    try std.testing.expectEqual(0xb.60b6bp+8, gamma(@as(f32, -0x5.fffff8p+0)));
    try std.testing.expectEqual(-0xb.60b56p+8, gamma(@as(f32, -0x6.000008p+0)));
    try std.testing.expectEqual(-0x1.a01a1cp+8, gamma(@as(f32, -0x6.fffff8p+0)));
    try std.testing.expectEqual(0x1.a019e8p+8, gamma(@as(f32, -0x7.000008p+0)));
    try std.testing.expectEqual(0x3.40343cp+4, gamma(@as(f32, -0x7.fffff8p+0)));
    try std.testing.expectEqual(-0x1.a019cap+4, gamma(@as(f32, -0x8.00001p+0)));
    try std.testing.expectEqual(0x4.9f9498p-4, gamma(@as(f32, -0x9.fffffp+0)));
    try std.testing.expectEqual(-0x4.9f934p-4, gamma(@as(f32, -0xa.00001p+0)));
    try std.testing.expectEqual(0x3.ca86e4p-44, gamma(@as(f32, -0x1.3ffffep+4)));
    try std.testing.expectEqual(-0x3.ca8408p-44, gamma(@as(f32, -0x1.400002p+4)));
    try std.testing.expectEqual(0x9.c99a5p-92, gamma(@as(f32, -0x1.dffffep+4)));
    try std.testing.expectEqual(-0x9.c992p-92, gamma(@as(f32, -0x1.e00002p+4)));
    try std.testing.expectEqual(0x7.28p-144, gamma(@as(f32, -0x2.7ffffcp+4)));
    try std.testing.expectEqual(-0x7.28p-144, gamma(@as(f32, -0x2.800004p+4)));
    try std.testing.expectEqual(-0x3p-148, gamma(@as(f32, -0x2.8ffffcp+4)));
    try std.testing.expectEqual(0x3p-148, gamma(@as(f32, -0x2.900004p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x2.9ffffcp+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0x2.a00004p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x3.1ffffcp+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0x3.200004p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x6.3ffff8p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0x6.400008p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x9.5ffffp+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0x9.60001p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0xb.4ffffp+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xb.50001p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xb.5ffffp+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0xb.60001p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0xb.6ffffp+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xb.70001p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xb.7ffffp+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0xb.80001p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xb.bffffp+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0xb.c0001p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0xb.cffffp+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xb.d0001p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xb.dffffp+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0xb.e0001p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0xb.effffp+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xb.f0001p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xf.9ffffp+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0xf.a0001p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x1.f3fffep+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0x1.f40002p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x2.edfffcp+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0x2.ee0004p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x3.e7fffcp+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0x3.e80004p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x4.e1fff8p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0x4.e20008p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x5.dbfff8p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0x5.dc0008p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x6.d5fff8p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0x6.d60008p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0x6.e2fff8p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x6.e30008p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x6.e3fff8p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0x6.e40008p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0x6.e4fff8p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x6.e50008p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x6.e5fff8p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0x6.e60008p+8)));
    try std.testing.expectEqual(0x1.3b0028p+12, gamma(@as(f32, 0x8.00001p+0)));
    try std.testing.expectEqual(0x1.3bp+12, gamma(@as(f32, 0x8p+0)));
    try std.testing.expectEqual(0x1.3bp+12, gamma(@as(f32, 0x8p+0)));
    try std.testing.expectEqual(0x1.3affecp+12, gamma(@as(f32, 0x7.fffff8p+0)));
    try std.testing.expectEqual(0x2.d0002cp+8, gamma(@as(f32, 0x7.000008p+0)));
    try std.testing.expectEqual(0x2.dp+8, gamma(@as(f32, 0x7p+0)));
    try std.testing.expectEqual(0x2.dp+8, gamma(@as(f32, 0x7p+0)));
    try std.testing.expectEqual(0x2.cfffd4p+8, gamma(@as(f32, 0x6.fffff8p+0)));
    try std.testing.expectEqual(0x7.800068p+4, gamma(@as(f32, 0x6.000008p+0)));
    try std.testing.expectEqual(0x7.8p+4, gamma(@as(f32, 0x6p+0)));
    try std.testing.expectEqual(0x7.8p+4, gamma(@as(f32, 0x6p+0)));
    try std.testing.expectEqual(0x7.7fff98p+4, gamma(@as(f32, 0x5.fffff8p+0)));
    try std.testing.expectEqual(0x1.800012p+4, gamma(@as(f32, 0x5.000008p+0)));
    try std.testing.expectEqual(0x1.8p+4, gamma(@as(f32, 0x5p+0)));
    try std.testing.expectEqual(0x1.8p+4, gamma(@as(f32, 0x5p+0)));
    try std.testing.expectEqual(0x1.7fffeep+4, gamma(@as(f32, 0x4.fffff8p+0)));
    try std.testing.expectEqual(0x6.00004p+0, gamma(@as(f32, 0x4.000008p+0)));
    try std.testing.expectEqual(0x6p+0, gamma(@as(f32, 0x4p+0)));
    try std.testing.expectEqual(0x6p+0, gamma(@as(f32, 0x4p+0)));
    try std.testing.expectEqual(0x5.ffffep+0, gamma(@as(f32, 0x3.fffffcp+0)));
    try std.testing.expectEqual(0x2.000008p+0, gamma(@as(f32, 0x3.000004p+0)));
    try std.testing.expectEqual(0x2p+0, gamma(@as(f32, 0x3p+0)));
    try std.testing.expectEqual(0x2p+0, gamma(@as(f32, 0x3p+0)));
    try std.testing.expectEqual(0x1.fffff8p+0, gamma(@as(f32, 0x2.fffffcp+0)));
    try std.testing.expectEqual(0x1.000002p+0, gamma(@as(f32, 0x2.000004p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f32, 0x2p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f32, 0x2p+0)));
    try std.testing.expectEqual(0xf.fffffp-4, gamma(@as(f32, 0x1.fffffep+0)));
    try std.testing.expectEqual(0xf.fffffp-4, gamma(@as(f32, 0x1.000002p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f32, 0x1p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f32, 0x1p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f32, 0xf.fffffp-4)));
    try std.testing.expectEqual(-0x1p+24, gamma(@as(f32, -0xf.fffffp-4)));
    try std.testing.expectEqual(0x7.fffff8p+20, gamma(@as(f32, -0x1.000002p+0)));
    try std.testing.expectEqual(0x4.000008p+20, gamma(@as(f32, -0x1.fffffep+0)));
    try std.testing.expectEqual(-0x1.fffff8p+20, gamma(@as(f32, -0x2.000004p+0)));
    try std.testing.expectEqual(-0xa.aaaaep+16, gamma(@as(f32, -0x2.fffffcp+0)));
    try std.testing.expectEqual(0xa.aaaa7p+16, gamma(@as(f32, -0x3.000004p+0)));
    try std.testing.expectEqual(0x2.aaaabcp+16, gamma(@as(f32, -0x3.fffffcp+0)));
    try std.testing.expectEqual(-0x1.555546p+16, gamma(@as(f32, -0x4.000008p+0)));
    try std.testing.expectEqual(-0x4.44448p+12, gamma(@as(f32, -0x4.fffff8p+0)));
    try std.testing.expectEqual(0x4.444408p+12, gamma(@as(f32, -0x5.000008p+0)));
    try std.testing.expectEqual(0xb.60b6bp+8, gamma(@as(f32, -0x5.fffff8p+0)));
    try std.testing.expectEqual(-0xb.60b56p+8, gamma(@as(f32, -0x6.000008p+0)));
    try std.testing.expectEqual(-0x1.a01a1cp+8, gamma(@as(f32, -0x6.fffff8p+0)));
    try std.testing.expectEqual(0x1.a019e8p+8, gamma(@as(f32, -0x7.000008p+0)));
    try std.testing.expectEqual(0x3.40343cp+4, gamma(@as(f32, -0x7.fffff8p+0)));
    try std.testing.expectEqual(-0x1.a019cap+4, gamma(@as(f32, -0x8.00001p+0)));
    try std.testing.expectEqual(0x4.9f9498p-4, gamma(@as(f32, -0x9.fffffp+0)));
    try std.testing.expectEqual(-0x4.9f934p-4, gamma(@as(f32, -0xa.00001p+0)));
    try std.testing.expectEqual(0x3.ca86e4p-44, gamma(@as(f32, -0x1.3ffffep+4)));
    try std.testing.expectEqual(-0x3.ca8408p-44, gamma(@as(f32, -0x1.400002p+4)));
    try std.testing.expectEqual(0x9.c99a5p-92, gamma(@as(f32, -0x1.dffffep+4)));
    try std.testing.expectEqual(-0x9.c992p-92, gamma(@as(f32, -0x1.e00002p+4)));
    try std.testing.expectEqual(0x7.28p-144, gamma(@as(f32, -0x2.7ffffcp+4)));
    try std.testing.expectEqual(-0x7.28p-144, gamma(@as(f32, -0x2.800004p+4)));
    try std.testing.expectEqual(-0x3p-148, gamma(@as(f32, -0x2.8ffffcp+4)));
    try std.testing.expectEqual(0x3p-148, gamma(@as(f32, -0x2.900004p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x2.9ffffcp+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0x2.a00004p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x3.1ffffcp+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0x3.200004p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x6.3ffff8p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0x6.400008p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x9.5ffffp+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0x9.60001p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0xb.4ffffp+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xb.50001p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xb.5ffffp+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0xb.60001p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0xb.6ffffp+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xb.70001p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xb.7ffffp+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0xb.80001p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xb.bffffp+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0xb.c0001p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0xb.cffffp+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xb.d0001p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xb.dffffp+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0xb.e0001p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0xb.effffp+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xb.f0001p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xf.9ffffp+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0xf.a0001p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x1.f3fffep+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0x1.f40002p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x2.edfffcp+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0x2.ee0004p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x3.e7fffcp+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0x3.e80004p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x4.e1fff8p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0x4.e20008p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x5.dbfff8p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0x5.dc0008p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x6.d5fff8p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0x6.d60008p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0x6.e2fff8p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x6.e30008p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x6.e3fff8p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0x6.e40008p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0x6.e4fff8p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x6.e50008p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x6.e5fff8p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0x6.e60008p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x6.ebfff8p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0x6.ec0008p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0x6.ecfff8p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x6.ed0008p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x6.edfff8p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0x6.ee0008p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0x6.eefff8p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x6.ef0008p+8)));
    try std.testing.expectEqual(0x3.dad55cp-124, gamma(@as(f32, -0x2.146544p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0xa.c0001p+4)));
    try std.testing.expectEqual(0x5.52fadp+48, gamma(@as(f32, 0x1.28p+4)));
    try std.testing.expectEqual(0x6.27f2p+52, gamma(@as(f32, 0x1.38p+4)));
    try std.testing.expectEqual(0x1.22a308p+72, gamma(@as(f32, 0x1.78p+4)));
    try std.testing.expectEqual(0x1.4a25d4p+100, gamma(@as(f32, 0x1.d8p+4)));
    try std.testing.expectEqual(0x2.60b5cp+104, gamma(@as(f32, 0x1.e8p+4)));
    try std.testing.expectEqual(0x4.885a7p+108, gamma(@as(f32, 0x1.f8p+4)));
    try std.testing.expectEqual(0x8.ec721p+112, gamma(@as(f32, 0x2.08p+4)));
    try std.testing.expectEqual(0x1.22047cp+120, gamma(@as(f32, 0x2.18p+4)));
    try std.testing.expectEqual(0x2.5f396p+124, gamma(@as(f32, 0x2.28p+4)));
    try std.testing.expectEqual(0xf.fff81p+124, gamma(@as(f32, 0x2.30a43cp+4)));
    try std.testing.expectEqual(std.math.inf(f32), gamma(@as(f32, 0x2.30a44p+4)));
    try std.testing.expectEqual(std.math.inf(f32), gamma(@as(f32, 0xa.b9fd8p+4)));
    try std.testing.expectEqual(std.math.inf(f32), gamma(@as(f32, 0xa.b9fd7p+4)));
    try std.testing.expectEqual(std.math.inf(f32), gamma(@as(f32, 0xa.b9fd8p+4)));
    try std.testing.expectEqual(std.math.inf(f32), gamma(@as(f32, 0xa.b9fd7p+4)));
    try std.testing.expectEqual(std.math.inf(f32), gamma(@as(f32, 0xa.b9fd8p+4)));
    try std.testing.expectEqual(std.math.inf(f32), gamma(@as(f32, 0xa.b9fd7p+4)));
    try std.testing.expectEqual(std.math.inf(f32), gamma(@as(f32, 0xa.b9fd8p+4)));
    try std.testing.expectEqual(std.math.inf(f32), gamma(@as(f32, 0xa.b9fd7p+4)));
    try std.testing.expectEqual(std.math.inf(f32), gamma(@as(f32, 0x6.db8c68p+8)));
    try std.testing.expectEqual(std.math.inf(f32), gamma(@as(f32, 0x6.db8c6p+8)));
    try std.testing.expectEqual(std.math.inf(f32), gamma(@as(f32, 0x6.db8c68p+8)));
    try std.testing.expectEqual(std.math.inf(f32), gamma(@as(f32, 0x6.db8c6p+8)));
    try std.testing.expectEqual(std.math.inf(f32), gamma(@as(f32, 0x6.db8c68p+8)));
    try std.testing.expectEqual(std.math.inf(f32), gamma(@as(f32, 0x6.db8c6p+8)));
    try std.testing.expectEqual(std.math.inf(f32), gamma(@as(f32, 0x6.db8c68p+8)));
    try std.testing.expectEqual(std.math.inf(f32), gamma(@as(f32, 0x6.db8c6p+8)));
    try std.testing.expectEqual(std.math.inf(f32), gamma(@as(f32, 0x3.e8p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0x1.86a08p+16)));
    try std.testing.expectEqual(std.math.inf(f32), gamma(@as(f32, 0xf.fffffp+124)));
    try std.testing.expectEqual(-0x3.5a8a7p-128, gamma(@as(f32, -0x2.23p+4)));
    try std.testing.expectEqual(-0x3.3f853p-128, gamma(@as(f32, -0x2.231p+4)));
    try std.testing.expectEqual(-0x3.25ba98p-128, gamma(@as(f32, -0x2.232p+4)));
    try std.testing.expectEqual(-0x3.0d1788p-128, gamma(@as(f32, -0x2.233p+4)));
    try std.testing.expectEqual(-0x2.f58a58p-128, gamma(@as(f32, -0x2.234p+4)));
    try std.testing.expectEqual(-0x2.df02b8p-128, gamma(@as(f32, -0x2.235p+4)));
    try std.testing.expectEqual(-0x2.c9719p-128, gamma(@as(f32, -0x2.236p+4)));
    try std.testing.expectEqual(-0x2.b4c8e8p-128, gamma(@as(f32, -0x2.237p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xa.37p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xa.371p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xa.372p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xa.373p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xa.374p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xa.375p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xa.376p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xa.377p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xa.b0dp+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xa.b0d1p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xa.b0d2p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xa.b0d3p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xa.b0d4p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xa.b0d5p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xa.b0d6p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0xa.b0d7p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x6.db03p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x6.db031p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x6.db032p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x6.db033p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x6.db034p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x6.db035p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x6.db036p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x6.db037p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x6.db05p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x6.db051p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x6.db052p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x6.db053p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x6.db054p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x6.db055p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x6.db056p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x6.db057p+8)));
    try std.testing.expectEqual(0x6.79a698p+0, gamma(@as(f32, -0x3.06644cp+0)));
    try std.testing.expectEqual(-0x7.a358ep-8, gamma(@as(f32, -0x6.fe463p+0)));
    try std.testing.expectEqual(-0x7.a37bdp-8, gamma(@as(f32, -0x6.fe4638p+0)));
    try std.testing.expectEqual(0xc.2fa4dp-16, gamma(@as(f32, -0x7.a13d78p+0)));
    try std.testing.expectEqual(0xc.2fa48p-16, gamma(@as(f32, -0x7.a13d8p+0)));
    try std.testing.expectEqual(-0x3.ba613p-64, gamma(@as(f32, -0x1.4a5caap+4)));
    try std.testing.expectEqual(0xb.8dc3fp-20, gamma(@as(f32, -0x9.2d3a5p+0)));
    try std.testing.expectEqual(0x6.1254c8p-24, gamma(@as(f32, -0xb.0f63ep+0)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f32, -0x5.f0e02p+8)));
    try std.testing.expectEqual(0x1.7457c4p-24, gamma(@as(f32, -0xb.3123bp+0)));
    try std.testing.expectEqual(0x3.87a648p-20, gamma(@as(f32, -0x9.6d538p+0)));
    try std.testing.expectEqual(-0x5.e4e83p-32, gamma(@as(f32, -0xc.c2439p+0)));
    try std.testing.expectEqual(-0x1.a07f68p-28, gamma(@as(f32, -0xc.372fp+0)));
    try std.testing.expectEqual(-0x1.a07ecp-28, gamma(@as(f32, -0xc.372f1p+0)));
    try std.testing.expectEqual(-0x3.a90678p-24, gamma(@as(f32, -0xa.ccfcep+0)));
    try std.testing.expectEqual(0x7.0e2dap-20, gamma(@as(f32, -0x9.418c8p+0)));
    try std.testing.expectEqual(-0x6.97c608p-12, gamma(@as(f32, -0x6.ce9158p+0)));
    try std.testing.expectEqual(0x7.25083p-36, gamma(@as(f32, -0xd.cbf53p+0)));
    try std.testing.expectEqual(0x7.2508ep-36, gamma(@as(f32, -0xd.cbf54p+0)));
    try std.testing.expectEqual(0x3.d05efcp+0, gamma(@as(f32, -0x3.0aa534p+0)));
    try std.testing.expectEqual(-0xf.3fc2bp-72, gamma(@as(f32, -0x1.62b8c2p+4)));
    try std.testing.expectEqual(-0xf.3fb2ap-72, gamma(@as(f32, -0x1.62b8c4p+4)));
    try std.testing.expectEqual(0x3.fac96cp-24, gamma(@as(f32, -0xb.1626ap+0)));
    try std.testing.expectEqual(0x3.fac6p-24, gamma(@as(f32, -0xb.1626bp+0)));
    try std.testing.expectEqual(0xf.f7014p-8, gamma(@as(f32, -0x7.00cf3p+0)));
    try std.testing.expectEqual(0xf.f6628p-8, gamma(@as(f32, -0x7.00cf38p+0)));
    try std.testing.expectEqual(0x3.e85608p-24, gamma(@as(f32, -0xb.167e8p+0)));
    try std.testing.expectEqual(0x3.e852b8p-24, gamma(@as(f32, -0xb.167e9p+0)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x3.1029b4p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f32, -0x3.1029b8p+4)));

    try std.testing.expectEqual(0x1.c5bf891b4ef6bp+0, gamma(@as(f64, 0x8p-4)));
    // try std.testing.expectEqual(-0x3.8b7f12369ded6p+0, gamma(@as(f64, -0x8p-4)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f64, 0x1p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f64, 0x2p+0)));
    try std.testing.expectEqual(0x2p+0, gamma(@as(f64, 0x3p+0)));
    try std.testing.expectEqual(0x6p+0, gamma(@as(f64, 0x4p+0)));
    try std.testing.expectEqual(0x1.8p+4, gamma(@as(f64, 0x5p+0)));
    try std.testing.expectEqual(0x7.8p+4, gamma(@as(f64, 0x6p+0)));
    try std.testing.expectEqual(0x2.dp+8, gamma(@as(f64, 0x7p+0)));
    try std.testing.expectEqual(0x1.3bp+12, gamma(@as(f64, 0x8p+0)));
    try std.testing.expectEqual(0x9.d8p+12, gamma(@as(f64, 0x9p+0)));
    try std.testing.expectEqual(0x5.898p+16, gamma(@as(f64, 0xap+0)));
    try std.testing.expectEqual(0x1.4c4d596dc959p+0, gamma(@as(f64, 0xb.33334p-4)));
    try std.testing.expectEqual(0x1.4c4d5b0333f5p+0, gamma(@as(f64, 0xb.33333p-4)));
    try std.testing.expectEqual(0x1.4c4d5ab21ea22p+0, gamma(@as(f64, 0xb.3333333333338p-4)));
    try std.testing.expectEqual(0x1.4c4d5ab21ea23p+0, gamma(@as(f64, 0xb.333333333333p-4)));
    try std.testing.expectEqual(0xe.b0d1b1a770ff8p-4, gamma(@as(f64, 0x1.333334p+0)));
    try std.testing.expectEqual(0xe.b0d1ba257ebep-4, gamma(@as(f64, 0x1.333332p+0)));
    try std.testing.expectEqual(0xe.b0d1b50d100e8p-4, gamma(@as(f64, 0x1.3333333333334p+0)));
    try std.testing.expectEqual(0xe.b0d1b50d100fp-4, gamma(@as(f64, 0x1.3333333333333p+0)));
    try std.testing.expectEqual(0xe.2dfc48da77b58p-4, gamma(@as(f64, 0x1.8p+0)));
    try std.testing.expectEqual(0x1.544fa6d47b39p+0, gamma(@as(f64, 0x2.8p+0)));
    try std.testing.expectEqual(0x3.52c72113340e8p+0, gamma(@as(f64, 0x3.8p+0)));
    // try std.testing.expectEqual(0xb.a1b8f3c336328p+0, gamma(@as(f64, 0x4.8p+0)));
    try std.testing.expectEqual(0x3.457c048ee73e4p+4, gamma(@as(f64, 0x5.8p+0)));
    try std.testing.expectEqual(0x1.1fe2a1911f7d6p+8, gamma(@as(f64, 0x6.8p+0)));
    // try std.testing.expectEqual(0x7.4f411a2f4caf4p+8, gamma(@as(f64, 0x7.8p+0)));
    // try std.testing.expectEqual(0x3.6d2684462bf22p+12, gamma(@as(f64, 0x8.8p+0)));
    // try std.testing.expectEqual(0x1.d1fc76454758ap+16, gamma(@as(f64, 0x9.8p+0)));
    try std.testing.expectEqual(0x2.5cff6179be9e4p+0, gamma(@as(f64, -0x1.8p+0)));
    try std.testing.expectEqual(-0xf.1ffc097190c18p-4, gamma(@as(f64, -0x2.8p+0)));
    try std.testing.expectEqual(0x4.524802b2bba5p-4, gamma(@as(f64, -0x3.8p+0)));
    // try std.testing.expectEqual(-0xf.5d71d0b4624a8p-8, gamma(@as(f64, -0x4.8p+0)));
    // try std.testing.expectEqual(0x2.cb2bf7669d81ep-8, gamma(@as(f64, -0x5.8p+0)));
    // try std.testing.expectEqual(-0x6.e06c399a213fcp-12, gamma(@as(f64, -0x6.8p+0)));
    // try std.testing.expectEqual(0xe.ab918bf37a218p-16, gamma(@as(f64, -0x7.8p+0)));
    // try std.testing.expectEqual(-0x1.b9d4e349d2221p-16, gamma(@as(f64, -0x8.8p+0)));
    // try std.testing.expectEqual(0x2.e8232df597cdap-20, gamma(@as(f64, -0x9.8p+0)));
    try std.testing.expectEqual(0xf.fffff6c3b9918p+20, gamma(@as(f64, 0x1p-24)));
    try std.testing.expectEqual(-0x1.00000093c468ep+24, gamma(@as(f64, -0x1p-24)));
    // try std.testing.expectEqual(0x1.fffffffffffffp+52, gamma(@as(f64, 0x8p-56)));
    try std.testing.expectEqual(-0x2p+52, gamma(@as(f64, -0x8p-56)));
    try std.testing.expectEqual(0x1p+64, gamma(@as(f64, 0x1p-64)));
    try std.testing.expectEqual(-0x1p+64, gamma(@as(f64, -0x1p-64)));
    try std.testing.expectEqual(0x4p+104, gamma(@as(f64, 0x4p-108)));
    try std.testing.expectEqual(-0x4p+104, gamma(@as(f64, -0x4p-108)));
    try std.testing.expectEqual(0x2p+112, gamma(@as(f64, 0x8p-116)));
    try std.testing.expectEqual(-0x2p+112, gamma(@as(f64, -0x8p-116)));
    try std.testing.expectEqual(0x8p+124, gamma(@as(f64, 0x2p-128)));
    try std.testing.expectEqual(-0x8p+124, gamma(@as(f64, -0x2p-128)));
    try std.testing.expectEqual(0x1p+128, gamma(@as(f64, 0x1p-128)));
    try std.testing.expectEqual(-0x1p+128, gamma(@as(f64, -0x1p-128)));
    try std.testing.expectEqual(0x2p+148, gamma(@as(f64, 0x8p-152)));
    try std.testing.expectEqual(-0x2p+148, gamma(@as(f64, -0x8p-152)));
    try std.testing.expectEqual(0x2p+148, gamma(@as(f64, 0x8p-152)));
    try std.testing.expectEqual(0x8p+1020, gamma(@as(f64, 0x2p-1024)));
    try std.testing.expectEqual(-0x2p+148, gamma(@as(f64, -0x8p-152)));
    try std.testing.expectEqual(-0x8p+1020, gamma(@as(f64, -0x2p-1024)));
    try std.testing.expectEqual(0x2p+148, gamma(@as(f64, 0x8p-152)));
    try std.testing.expectEqual(std.math.inf(f64), gamma(@as(f64, 0x1p-1024)));
    try std.testing.expectEqual(-0x2p+148, gamma(@as(f64, -0x8p-152)));
    try std.testing.expectEqual(-std.math.inf(f64), gamma(@as(f64, -0x1p-1024)));
    try std.testing.expectEqual(0x2p+148, gamma(@as(f64, 0x8p-152)));
    try std.testing.expectEqual(std.math.inf(f64), gamma(@as(f64, 0x4p-1076)));
    try std.testing.expectEqual(-0x2p+148, gamma(@as(f64, -0x8p-152)));
    try std.testing.expectEqual(-std.math.inf(f64), gamma(@as(f64, -0x4p-1076)));
    try std.testing.expectEqual(0x2p+148, gamma(@as(f64, 0x8p-152)));
    try std.testing.expectEqual(std.math.inf(f64), gamma(@as(f64, 0x4p-1076)));
    try std.testing.expectEqual(-0x2p+148, gamma(@as(f64, -0x8p-152)));
    try std.testing.expectEqual(-std.math.inf(f64), gamma(@as(f64, -0x4p-1076)));
    try std.testing.expectEqual(0x2p+148, gamma(@as(f64, 0x8p-152)));
    try std.testing.expectEqual(std.math.inf(f64), gamma(@as(f64, 0x4p-1076)));
    try std.testing.expectEqual(-0x2p+148, gamma(@as(f64, -0x8p-152)));
    try std.testing.expectEqual(-std.math.inf(f64), gamma(@as(f64, -0x4p-1076)));
    try std.testing.expectEqual(0x2p+148, gamma(@as(f64, 0x8p-152)));
    try std.testing.expectEqual(std.math.inf(f64), gamma(@as(f64, 0x4p-1076)));
    try std.testing.expectEqual(-0x2p+148, gamma(@as(f64, -0x8p-152)));
    try std.testing.expectEqual(-std.math.inf(f64), gamma(@as(f64, -0x4p-1076)));
    try std.testing.expectEqual(0x2p+148, gamma(@as(f64, 0x8p-152)));
    try std.testing.expectEqual(std.math.inf(f64), gamma(@as(f64, 0x4p-1076)));
    try std.testing.expectEqual(-0x2p+148, gamma(@as(f64, -0x8p-152)));
    try std.testing.expectEqual(-std.math.inf(f64), gamma(@as(f64, -0x4p-1076)));
    // try std.testing.expectEqual(0x1.3b0027aed7d79p+12, gamma(@as(f64, 0x8.00001p+0)));
    try std.testing.expectEqual(0x1.3affec289603ep+12, gamma(@as(f64, 0x7.fffff8p+0)));
    // try std.testing.expectEqual(0x2.d0002a233e28p+8, gamma(@as(f64, 0x7.000008p+0)));
    try std.testing.expectEqual(0x2.cfffd5dcc46bp+8, gamma(@as(f64, 0x6.fffff8p+0)));
    try std.testing.expectEqual(0x7.8000665dfa8ccp+4, gamma(@as(f64, 0x6.000008p+0)));
    // try std.testing.expectEqual(0x7.7fff99a20b3f8p+4, gamma(@as(f64, 0x5.fffff8p+0)));
    try std.testing.expectEqual(0x1.80001212cb98dp+4, gamma(@as(f64, 0x5.000008p+0)));
    try std.testing.expectEqual(0x1.7fffeded35563p+4, gamma(@as(f64, 0x4.fffff8p+0)));
    try std.testing.expectEqual(0x6.00003c4b2deacp+0, gamma(@as(f64, 0x4.000008p+0)));
    try std.testing.expectEqual(0x5.ffffe1da6a16cp+0, gamma(@as(f64, 0x3.fffffcp+0)));
    try std.testing.expectEqual(0x2.00000761dcd4ep+0, gamma(@as(f64, 0x3.000004p+0)));
    try std.testing.expectEqual(0x1.fffff89e23531p+0, gamma(@as(f64, 0x2.fffffcp+0)));
    try std.testing.expectEqual(0x1.000001b0ee671p+0, gamma(@as(f64, 0x2.000004p+0)));
    try std.testing.expectEqual(0xf.fffff2788d17p-4, gamma(@as(f64, 0x1.fffffep+0)));
    try std.testing.expectEqual(0xf.ffffed877343p-4, gamma(@as(f64, 0x1.000002p+0)));
    try std.testing.expectEqual(0x1.00000093c468ep+0, gamma(@as(f64, 0xf.fffffp-4)));
    try std.testing.expectEqual(-0x1.0000006c3b998p+24, gamma(@as(f64, -0xf.fffffp-4)));
    // try std.testing.expectEqual(0x7.fffff93c46ab8p+20, gamma(@as(f64, -0x1.000002p+0)));
    try std.testing.expectEqual(0x4.00000761dcdecp+20, gamma(@as(f64, -0x1.fffffep+0)));
    // try std.testing.expectEqual(-0x1.fffff89e237b1p+20, gamma(@as(f64, -0x2.000004p+0)));
    // try std.testing.expectEqual(-0xa.aaaae042d3c5p+16, gamma(@as(f64, -0x2.fffffcp+0)));
    // try std.testing.expectEqual(0xa.aaaa7512849fp+16, gamma(@as(f64, -0x3.000004p+0)));
    try std.testing.expectEqual(0x2.aaaababb5fabep+16, gamma(@as(f64, -0x3.fffffcp+0)));
    // try std.testing.expectEqual(-0x1.55554544a1a9ap+16, gamma(@as(f64, -0x4.000008p+0)));
    try std.testing.expectEqual(-0x4.44447e809018cp+12, gamma(@as(f64, -0x4.fffff8p+0)));
    // try std.testing.expectEqual(0x4.44440a07fedb8p+12, gamma(@as(f64, -0x5.000008p+0)));
    try std.testing.expectEqual(0xb.60b6b5d7c934p+8, gamma(@as(f64, -0x5.fffff8p+0)));
    try std.testing.expectEqual(-0xb.60b560e9b5c88p+8, gamma(@as(f64, -0x6.000008p+0)));
    try std.testing.expectEqual(-0x1.a01a1bd5ccde2p+8, gamma(@as(f64, -0x6.fffff8p+0)));
    // try std.testing.expectEqual(0x1.a019e76a6a142p+8, gamma(@as(f64, -0x7.000008p+0)));
    // try std.testing.expectEqual(0x3.40343aebcdf72p+4, gamma(@as(f64, -0x7.fffff8p+0)));
    // try std.testing.expectEqual(-0x1.a019c9f48981cp+4, gamma(@as(f64, -0x8.00001p+0)));
    try std.testing.expectEqual(0x4.9f949bd5f3628p-4, gamma(@as(f64, -0x9.fffffp+0)));
    // try std.testing.expectEqual(-0x4.9f933fe684a2cp-4, gamma(@as(f64, -0xa.00001p+0)));
    // try std.testing.expectEqual(0x3.ca86e2f011eccp-44, gamma(@as(f64, -0x1.3ffffep+4)));
    // try std.testing.expectEqual(-0x3.ca8406112a1d4p-44, gamma(@as(f64, -0x1.400002p+4)));
    try std.testing.expectEqual(0x9.c99a5695c5708p-92, gamma(@as(f64, -0x1.dffffep+4)));
    // try std.testing.expectEqual(-0x9.c991f9b459728p-92, gamma(@as(f64, -0x1.e00002p+4)));
    // try std.testing.expectEqual(0x7.2a41f1f1fa7acp-144, gamma(@as(f64, -0x2.7ffffcp+4)));
    // try std.testing.expectEqual(-0x7.2a34af6633d2cp-144, gamma(@as(f64, -0x2.800004p+4)));
    try std.testing.expectEqual(-0x2.cbced32c2df66p-148, gamma(@as(f64, -0x2.8ffffcp+4)));
    // try std.testing.expectEqual(0x2.cbc99dbe11b36p-148, gamma(@as(f64, -0x2.900004p+4)));
    // try std.testing.expectEqual(0x1.10b05211e13c7p-152, gamma(@as(f64, -0x2.9ffffcp+4)));
    try std.testing.expectEqual(-0x1.10ae52d9a7c62p-152, gamma(@as(f64, -0x2.a00004p+4)));
    // try std.testing.expectEqual(0x1.3b0027aed7d79p+12, gamma(@as(f64, 0x8.00001p+0)));
    try std.testing.expectEqual(0x1.3bp+12, gamma(@as(f64, 0x8p+0)));
    try std.testing.expectEqual(0x1.3b00000000014p+12, gamma(@as(f64, 0x8.0000000000008p+0)));
    try std.testing.expectEqual(0x1.3bp+12, gamma(@as(f64, 0x8p+0)));
    try std.testing.expectEqual(0x1.3affec289603ep+12, gamma(@as(f64, 0x7.fffff8p+0)));
    // try std.testing.expectEqual(0x1.3affffffffff6p+12, gamma(@as(f64, 0x7.ffffffffffffcp+0)));
    // try std.testing.expectEqual(0x2.d0002a233e28p+8, gamma(@as(f64, 0x7.000008p+0)));
    try std.testing.expectEqual(0x2.dp+8, gamma(@as(f64, 0x7p+0)));
    try std.testing.expectEqual(0x2.d000000000016p+8, gamma(@as(f64, 0x7.0000000000004p+0)));
    try std.testing.expectEqual(0x2.dp+8, gamma(@as(f64, 0x7p+0)));
    try std.testing.expectEqual(0x2.cfffd5dcc46bp+8, gamma(@as(f64, 0x6.fffff8p+0)));
    try std.testing.expectEqual(0x2.cffffffffffeap+8, gamma(@as(f64, 0x6.ffffffffffffcp+0)));
    try std.testing.expectEqual(0x7.8000665dfa8ccp+4, gamma(@as(f64, 0x6.000008p+0)));
    try std.testing.expectEqual(0x7.8p+4, gamma(@as(f64, 0x6p+0)));
    // try std.testing.expectEqual(0x7.8000000000034p+4, gamma(@as(f64, 0x6.0000000000004p+0)));
    try std.testing.expectEqual(0x7.8p+4, gamma(@as(f64, 0x6p+0)));
    // try std.testing.expectEqual(0x7.7fff99a20b3f8p+4, gamma(@as(f64, 0x5.fffff8p+0)));
    try std.testing.expectEqual(0x7.7ffffffffffccp+4, gamma(@as(f64, 0x5.ffffffffffffcp+0)));
    try std.testing.expectEqual(0x1.80001212cb98dp+4, gamma(@as(f64, 0x5.000008p+0)));
    try std.testing.expectEqual(0x1.8p+4, gamma(@as(f64, 0x5p+0)));
    // try std.testing.expectEqual(0x1.8000000000009p+4, gamma(@as(f64, 0x5.0000000000004p+0)));
    try std.testing.expectEqual(0x1.8p+4, gamma(@as(f64, 0x5p+0)));
    try std.testing.expectEqual(0x1.7fffeded35563p+4, gamma(@as(f64, 0x4.fffff8p+0)));
    // try std.testing.expectEqual(0x1.7fffffffffff7p+4, gamma(@as(f64, 0x4.ffffffffffffcp+0)));
    try std.testing.expectEqual(0x6.00003c4b2deacp+0, gamma(@as(f64, 0x4.000008p+0)));
    try std.testing.expectEqual(0x6p+0, gamma(@as(f64, 0x4p+0)));
    // try std.testing.expectEqual(0x6.000000000002p+0, gamma(@as(f64, 0x4.0000000000004p+0)));
    try std.testing.expectEqual(0x6p+0, gamma(@as(f64, 0x4p+0)));
    try std.testing.expectEqual(0x5.ffffe1da6a16cp+0, gamma(@as(f64, 0x3.fffffcp+0)));
    // try std.testing.expectEqual(0x5.ffffffffffffp+0, gamma(@as(f64, 0x3.ffffffffffffep+0)));
    try std.testing.expectEqual(0x2.00000761dcd4ep+0, gamma(@as(f64, 0x3.000004p+0)));
    try std.testing.expectEqual(0x2p+0, gamma(@as(f64, 0x3p+0)));
    try std.testing.expectEqual(0x2.0000000000004p+0, gamma(@as(f64, 0x3.0000000000002p+0)));
    try std.testing.expectEqual(0x2p+0, gamma(@as(f64, 0x3p+0)));
    try std.testing.expectEqual(0x1.fffff89e23531p+0, gamma(@as(f64, 0x2.fffffcp+0)));
    try std.testing.expectEqual(0x1.ffffffffffffcp+0, gamma(@as(f64, 0x2.ffffffffffffep+0)));
    try std.testing.expectEqual(0x1.000001b0ee671p+0, gamma(@as(f64, 0x2.000004p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f64, 0x2p+0)));
    try std.testing.expectEqual(0x1.0000000000001p+0, gamma(@as(f64, 0x2.0000000000002p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f64, 0x2p+0)));
    try std.testing.expectEqual(0xf.fffff2788d17p-4, gamma(@as(f64, 0x1.fffffep+0)));
    // try std.testing.expectEqual(0xf.ffffffffffff8p-4, gamma(@as(f64, 0x1.fffffffffffffp+0)));
    try std.testing.expectEqual(0xf.ffffed877343p-4, gamma(@as(f64, 0x1.000002p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f64, 0x1p+0)));
    try std.testing.expectEqual(0xf.ffffffffffff8p-4, gamma(@as(f64, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f64, 0x1p+0)));
    try std.testing.expectEqual(0x1.00000093c468ep+0, gamma(@as(f64, 0xf.fffffp-4)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f64, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(-0x1.0000006c3b998p+24, gamma(@as(f64, -0xf.fffffp-4)));
    // try std.testing.expectEqual(-0x2p+52, gamma(@as(f64, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(0x7.fffff93c46ab8p+20, gamma(@as(f64, -0x1.000002p+0)));
    try std.testing.expectEqual(0xf.ffffffffffff8p+48, gamma(@as(f64, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(0x4.00000761dcdecp+20, gamma(@as(f64, -0x1.fffffep+0)));
    try std.testing.expectEqual(0x8.0000000000008p+48, gamma(@as(f64, -0x1.fffffffffffffp+0)));
    // try std.testing.expectEqual(-0x1.fffff89e237b1p+20, gamma(@as(f64, -0x2.000004p+0)));
    try std.testing.expectEqual(-0x3.ffffffffffff8p+48, gamma(@as(f64, -0x2.0000000000002p+0)));
    // try std.testing.expectEqual(-0xa.aaaae042d3c5p+16, gamma(@as(f64, -0x2.fffffcp+0)));
    try std.testing.expectEqual(-0x1.5555555555559p+48, gamma(@as(f64, -0x2.ffffffffffffep+0)));
    // try std.testing.expectEqual(0xa.aaaa7512849fp+16, gamma(@as(f64, -0x3.000004p+0)));
    try std.testing.expectEqual(0x1.5555555555552p+48, gamma(@as(f64, -0x3.0000000000002p+0)));
    try std.testing.expectEqual(0x2.aaaababb5fabep+16, gamma(@as(f64, -0x3.fffffcp+0)));
    // try std.testing.expectEqual(0x5.5555555555564p+44, gamma(@as(f64, -0x3.ffffffffffffep+0)));
    // try std.testing.expectEqual(-0x1.55554544a1a9ap+16, gamma(@as(f64, -0x4.000008p+0)));
    // try std.testing.expectEqual(-0x2.aaaaaaaaaaa9ap+44, gamma(@as(f64, -0x4.0000000000004p+0)));
    try std.testing.expectEqual(-0x4.44447e809018cp+12, gamma(@as(f64, -0x4.fffff8p+0)));
    // try std.testing.expectEqual(-0x8.88888888888cp+40, gamma(@as(f64, -0x4.ffffffffffffcp+0)));
    // try std.testing.expectEqual(0x4.44440a07fedb8p+12, gamma(@as(f64, -0x5.000008p+0)));
    // try std.testing.expectEqual(0x8.888888888885p+40, gamma(@as(f64, -0x5.0000000000004p+0)));
    try std.testing.expectEqual(0xb.60b6b5d7c934p+8, gamma(@as(f64, -0x5.fffff8p+0)));
    // try std.testing.expectEqual(0x1.6c16c16c16c21p+40, gamma(@as(f64, -0x5.ffffffffffffcp+0)));
    try std.testing.expectEqual(-0xb.60b560e9b5c88p+8, gamma(@as(f64, -0x6.000008p+0)));
    // try std.testing.expectEqual(-0x1.6c16c16c16c0cp+40, gamma(@as(f64, -0x6.0000000000004p+0)));
    try std.testing.expectEqual(-0x1.a01a1bd5ccde2p+8, gamma(@as(f64, -0x6.fffff8p+0)));
    // try std.testing.expectEqual(-0x3.403403403404ep+36, gamma(@as(f64, -0x6.ffffffffffffcp+0)));
    // try std.testing.expectEqual(0x1.a019e76a6a142p+8, gamma(@as(f64, -0x7.000008p+0)));
    try std.testing.expectEqual(0x3.403403403401ap+36, gamma(@as(f64, -0x7.0000000000004p+0)));
    // try std.testing.expectEqual(0x3.40343aebcdf72p+4, gamma(@as(f64, -0x7.fffff8p+0)));
    // try std.testing.expectEqual(0x6.80680680680ap+32, gamma(@as(f64, -0x7.ffffffffffffcp+0)));
    // try std.testing.expectEqual(-0x1.a019c9f48981cp+4, gamma(@as(f64, -0x8.00001p+0)));
    try std.testing.expectEqual(-0x3.4034034033ffcp+32, gamma(@as(f64, -0x8.0000000000008p+0)));
    try std.testing.expectEqual(0x4.9f949bd5f3628p-4, gamma(@as(f64, -0x9.fffffp+0)));
    try std.testing.expectEqual(0x9.3f27dbbc4fb9p+24, gamma(@as(f64, -0x9.ffffffffffff8p+0)));
    // try std.testing.expectEqual(-0x4.9f933fe684a2cp-4, gamma(@as(f64, -0xa.00001p+0)));
    try std.testing.expectEqual(-0x9.3f27dbbc4fa38p+24, gamma(@as(f64, -0xa.0000000000008p+0)));
    // try std.testing.expectEqual(0x3.ca86e2f011eccp-44, gamma(@as(f64, -0x1.3ffffep+4)));
    try std.testing.expectEqual(0x7.950ae90080a04p-16, gamma(@as(f64, -0x1.3ffffffffffffp+4)));
    // try std.testing.expectEqual(-0x3.ca8406112a1d4p-44, gamma(@as(f64, -0x1.400002p+4)));
    // try std.testing.expectEqual(-0x7.950ae90080724p-16, gamma(@as(f64, -0x1.4000000000001p+4)));
    try std.testing.expectEqual(0x9.c99a5695c5708p-92, gamma(@as(f64, -0x1.dffffep+4)));
    // try std.testing.expectEqual(0x1.3932c5047d651p-60, gamma(@as(f64, -0x1.dffffffffffffp+4)));
    // try std.testing.expectEqual(-0x9.c991f9b459728p-92, gamma(@as(f64, -0x1.e00002p+4)));
    // try std.testing.expectEqual(-0x1.3932c5047d5cbp-60, gamma(@as(f64, -0x1.e000000000001p+4)));
    // try std.testing.expectEqual(0x7.2a41f1f1fa7acp-144, gamma(@as(f64, -0x2.7ffffcp+4)));
    // try std.testing.expectEqual(0xe.5476a15095db8p-116, gamma(@as(f64, -0x2.7fffffffffffep+4)));
    // try std.testing.expectEqual(-0x7.2a34af6633d2cp-144, gamma(@as(f64, -0x2.800004p+4)));
    // try std.testing.expectEqual(-0xe.5476a15095078p-116, gamma(@as(f64, -0x2.8000000000002p+4)));
    try std.testing.expectEqual(-0x2.cbced32c2df66p-148, gamma(@as(f64, -0x2.8ffffcp+4)));
    // try std.testing.expectEqual(-0x5.979870e740b9cp-120, gamma(@as(f64, -0x2.8fffffffffffep+4)));
    // try std.testing.expectEqual(0x2.cbc99dbe11b36p-148, gamma(@as(f64, -0x2.900004p+4)));
    try std.testing.expectEqual(0x5.979870e740668p-120, gamma(@as(f64, -0x2.9000000000002p+4)));
    // try std.testing.expectEqual(0x1.10b05211e13c7p-152, gamma(@as(f64, -0x2.9ffffcp+4)));
    // try std.testing.expectEqual(0x2.215ea4ea61cdp-124, gamma(@as(f64, -0x2.9fffffffffffep+4)));
    try std.testing.expectEqual(-0x1.10ae52d9a7c62p-152, gamma(@as(f64, -0x2.a00004p+4)));
    // try std.testing.expectEqual(-0x2.215ea4ea61adp-124, gamma(@as(f64, -0x2.a000000000002p+4)));
    // try std.testing.expectEqual(0xd.d9c54ba29fa8p-200, gamma(@as(f64, -0x3.1ffffcp+4)));
    // try std.testing.expectEqual(0x1.bb36f6e12ce51p-168, gamma(@as(f64, -0x3.1fffffffffffep+4)));
    // try std.testing.expectEqual(-0xd.d9aa2280534p-200, gamma(@as(f64, -0x3.200004p+4)));
    // try std.testing.expectEqual(-0x1.bb36f6e12cc9fp-168, gamma(@as(f64, -0x3.2000000000002p+4)));
    // try std.testing.expectEqual(0x1.2d4cd4e344c77p-508, gamma(@as(f64, -0x6.3ffff8p+4)));
    // try std.testing.expectEqual(0x2.5a943cc0fd1b8p-480, gamma(@as(f64, -0x6.3fffffffffffcp+4)));
    // try std.testing.expectEqual(-0x1.2d4767e4f014dp-508, gamma(@as(f64, -0x6.400008p+4)));
    try std.testing.expectEqual(-0x2.5a943cc0fcc4cp-480, gamma(@as(f64, -0x6.4000000000004p+4)));
    try std.testing.expectEqual(0x8.d1a58f148fa5p-860, gamma(@as(f64, -0x9.5ffffp+4)));
    // try std.testing.expectEqual(0x1.1a2f2af6406aep-828, gamma(@as(f64, -0x9.5fffffffffff8p+4)));
    // try std.testing.expectEqual(-0x8.d14d214a189b8p-860, gamma(@as(f64, -0x9.60001p+4)));
    // try std.testing.expectEqual(-0x1.1a2f2af640127p-828, gamma(@as(f64, -0x9.6000000000008p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.4ffffp+4)));
    try std.testing.expectEqual(-0xb.f418p-1060, gamma(@as(f64, -0xb.4fffffffffff8p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.50001p+4)));
    try std.testing.expectEqual(0xb.f418p-1060, gamma(@as(f64, -0xb.5000000000008p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.5ffffp+4)));
    try std.testing.expectEqual(0x1.0dp-1064, gamma(@as(f64, -0xb.5fffffffffff8p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.60001p+4)));
    try std.testing.expectEqual(-0x1.0dp-1064, gamma(@as(f64, -0xb.6000000000008p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.6ffffp+4)));
    try std.testing.expectEqual(-0x1.8p-1072, gamma(@as(f64, -0xb.6fffffffffff8p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.70001p+4)));
    try std.testing.expectEqual(0x1.8p-1072, gamma(@as(f64, -0xb.7000000000008p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.7ffffp+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.7fffffffffff8p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.80001p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.8000000000008p+4)));
    // try std.testing.expectEqual(0x1.3b0027aed7d79p+12, gamma(@as(f64, 0x8.00001p+0)));
    try std.testing.expectEqual(0x1.3bp+12, gamma(@as(f64, 0x8p+0)));
    try std.testing.expectEqual(0x1.3b00000000014p+12, gamma(@as(f64, 0x8.0000000000008p+0)));
    try std.testing.expectEqual(0x1.3bp+12, gamma(@as(f64, 0x8p+0)));
    try std.testing.expectEqual(0x1.3affec289603ep+12, gamma(@as(f64, 0x7.fffff8p+0)));
    // try std.testing.expectEqual(0x1.3affffffffff6p+12, gamma(@as(f64, 0x7.ffffffffffffcp+0)));
    // try std.testing.expectEqual(0x2.d0002a233e28p+8, gamma(@as(f64, 0x7.000008p+0)));
    try std.testing.expectEqual(0x2.dp+8, gamma(@as(f64, 0x7p+0)));
    try std.testing.expectEqual(0x2.d000000000016p+8, gamma(@as(f64, 0x7.0000000000004p+0)));
    try std.testing.expectEqual(0x2.dp+8, gamma(@as(f64, 0x7p+0)));
    try std.testing.expectEqual(0x2.cfffd5dcc46bp+8, gamma(@as(f64, 0x6.fffff8p+0)));
    try std.testing.expectEqual(0x2.cffffffffffeap+8, gamma(@as(f64, 0x6.ffffffffffffcp+0)));
    try std.testing.expectEqual(0x7.8000665dfa8ccp+4, gamma(@as(f64, 0x6.000008p+0)));
    try std.testing.expectEqual(0x7.8p+4, gamma(@as(f64, 0x6p+0)));
    // try std.testing.expectEqual(0x7.8000000000034p+4, gamma(@as(f64, 0x6.0000000000004p+0)));
    try std.testing.expectEqual(0x7.8p+4, gamma(@as(f64, 0x6p+0)));
    // try std.testing.expectEqual(0x7.7fff99a20b3f8p+4, gamma(@as(f64, 0x5.fffff8p+0)));
    try std.testing.expectEqual(0x7.7ffffffffffccp+4, gamma(@as(f64, 0x5.ffffffffffffcp+0)));
    try std.testing.expectEqual(0x1.80001212cb98dp+4, gamma(@as(f64, 0x5.000008p+0)));
    try std.testing.expectEqual(0x1.8p+4, gamma(@as(f64, 0x5p+0)));
    // try std.testing.expectEqual(0x1.8000000000009p+4, gamma(@as(f64, 0x5.0000000000004p+0)));
    try std.testing.expectEqual(0x1.8p+4, gamma(@as(f64, 0x5p+0)));
    try std.testing.expectEqual(0x1.7fffeded35563p+4, gamma(@as(f64, 0x4.fffff8p+0)));
    // try std.testing.expectEqual(0x1.7fffffffffff7p+4, gamma(@as(f64, 0x4.ffffffffffffcp+0)));
    try std.testing.expectEqual(0x6.00003c4b2deacp+0, gamma(@as(f64, 0x4.000008p+0)));
    try std.testing.expectEqual(0x6p+0, gamma(@as(f64, 0x4p+0)));
    // try std.testing.expectEqual(0x6.000000000002p+0, gamma(@as(f64, 0x4.0000000000004p+0)));
    try std.testing.expectEqual(0x6p+0, gamma(@as(f64, 0x4p+0)));
    try std.testing.expectEqual(0x5.ffffe1da6a16cp+0, gamma(@as(f64, 0x3.fffffcp+0)));
    // try std.testing.expectEqual(0x5.ffffffffffffp+0, gamma(@as(f64, 0x3.ffffffffffffep+0)));
    try std.testing.expectEqual(0x2.00000761dcd4ep+0, gamma(@as(f64, 0x3.000004p+0)));
    try std.testing.expectEqual(0x2p+0, gamma(@as(f64, 0x3p+0)));
    try std.testing.expectEqual(0x2.0000000000004p+0, gamma(@as(f64, 0x3.0000000000002p+0)));
    try std.testing.expectEqual(0x2p+0, gamma(@as(f64, 0x3p+0)));
    try std.testing.expectEqual(0x1.fffff89e23531p+0, gamma(@as(f64, 0x2.fffffcp+0)));
    try std.testing.expectEqual(0x1.ffffffffffffcp+0, gamma(@as(f64, 0x2.ffffffffffffep+0)));
    try std.testing.expectEqual(0x1.000001b0ee671p+0, gamma(@as(f64, 0x2.000004p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f64, 0x2p+0)));
    try std.testing.expectEqual(0x1.0000000000001p+0, gamma(@as(f64, 0x2.0000000000002p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f64, 0x2p+0)));
    try std.testing.expectEqual(0xf.fffff2788d17p-4, gamma(@as(f64, 0x1.fffffep+0)));
    // try std.testing.expectEqual(0xf.ffffffffffff8p-4, gamma(@as(f64, 0x1.fffffffffffffp+0)));
    try std.testing.expectEqual(0xf.ffffed877343p-4, gamma(@as(f64, 0x1.000002p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f64, 0x1p+0)));
    try std.testing.expectEqual(0xf.ffffffffffff8p-4, gamma(@as(f64, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f64, 0x1p+0)));
    try std.testing.expectEqual(0x1.00000093c468ep+0, gamma(@as(f64, 0xf.fffffp-4)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f64, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(-0x1.0000006c3b998p+24, gamma(@as(f64, -0xf.fffffp-4)));
    // try std.testing.expectEqual(-0x2p+52, gamma(@as(f64, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(0x7.fffff93c46ab8p+20, gamma(@as(f64, -0x1.000002p+0)));
    try std.testing.expectEqual(0xf.ffffffffffff8p+48, gamma(@as(f64, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(0x4.00000761dcdecp+20, gamma(@as(f64, -0x1.fffffep+0)));
    try std.testing.expectEqual(0x8.0000000000008p+48, gamma(@as(f64, -0x1.fffffffffffffp+0)));
    // try std.testing.expectEqual(-0x1.fffff89e237b1p+20, gamma(@as(f64, -0x2.000004p+0)));
    try std.testing.expectEqual(-0x3.ffffffffffff8p+48, gamma(@as(f64, -0x2.0000000000002p+0)));
    // try std.testing.expectEqual(-0xa.aaaae042d3c5p+16, gamma(@as(f64, -0x2.fffffcp+0)));
    try std.testing.expectEqual(-0x1.5555555555559p+48, gamma(@as(f64, -0x2.ffffffffffffep+0)));
    // try std.testing.expectEqual(0xa.aaaa7512849fp+16, gamma(@as(f64, -0x3.000004p+0)));
    try std.testing.expectEqual(0x1.5555555555552p+48, gamma(@as(f64, -0x3.0000000000002p+0)));
    try std.testing.expectEqual(0x2.aaaababb5fabep+16, gamma(@as(f64, -0x3.fffffcp+0)));
    // try std.testing.expectEqual(0x5.5555555555564p+44, gamma(@as(f64, -0x3.ffffffffffffep+0)));
    // try std.testing.expectEqual(-0x1.55554544a1a9ap+16, gamma(@as(f64, -0x4.000008p+0)));
    // try std.testing.expectEqual(-0x2.aaaaaaaaaaa9ap+44, gamma(@as(f64, -0x4.0000000000004p+0)));
    try std.testing.expectEqual(-0x4.44447e809018cp+12, gamma(@as(f64, -0x4.fffff8p+0)));
    // try std.testing.expectEqual(-0x8.88888888888cp+40, gamma(@as(f64, -0x4.ffffffffffffcp+0)));
    // try std.testing.expectEqual(0x4.44440a07fedb8p+12, gamma(@as(f64, -0x5.000008p+0)));
    // try std.testing.expectEqual(0x8.888888888885p+40, gamma(@as(f64, -0x5.0000000000004p+0)));
    try std.testing.expectEqual(0xb.60b6b5d7c934p+8, gamma(@as(f64, -0x5.fffff8p+0)));
    // try std.testing.expectEqual(0x1.6c16c16c16c21p+40, gamma(@as(f64, -0x5.ffffffffffffcp+0)));
    try std.testing.expectEqual(-0xb.60b560e9b5c88p+8, gamma(@as(f64, -0x6.000008p+0)));
    // try std.testing.expectEqual(-0x1.6c16c16c16c0cp+40, gamma(@as(f64, -0x6.0000000000004p+0)));
    try std.testing.expectEqual(-0x1.a01a1bd5ccde2p+8, gamma(@as(f64, -0x6.fffff8p+0)));
    // try std.testing.expectEqual(-0x3.403403403404ep+36, gamma(@as(f64, -0x6.ffffffffffffcp+0)));
    // try std.testing.expectEqual(0x1.a019e76a6a142p+8, gamma(@as(f64, -0x7.000008p+0)));
    try std.testing.expectEqual(0x3.403403403401ap+36, gamma(@as(f64, -0x7.0000000000004p+0)));
    // try std.testing.expectEqual(0x3.40343aebcdf72p+4, gamma(@as(f64, -0x7.fffff8p+0)));
    // try std.testing.expectEqual(0x6.80680680680ap+32, gamma(@as(f64, -0x7.ffffffffffffcp+0)));
    // try std.testing.expectEqual(-0x1.a019c9f48981cp+4, gamma(@as(f64, -0x8.00001p+0)));
    try std.testing.expectEqual(-0x3.4034034033ffcp+32, gamma(@as(f64, -0x8.0000000000008p+0)));
    try std.testing.expectEqual(0x4.9f949bd5f3628p-4, gamma(@as(f64, -0x9.fffffp+0)));
    try std.testing.expectEqual(0x9.3f27dbbc4fb9p+24, gamma(@as(f64, -0x9.ffffffffffff8p+0)));
    // try std.testing.expectEqual(-0x4.9f933fe684a2cp-4, gamma(@as(f64, -0xa.00001p+0)));
    try std.testing.expectEqual(-0x9.3f27dbbc4fa38p+24, gamma(@as(f64, -0xa.0000000000008p+0)));
    // try std.testing.expectEqual(0x3.ca86e2f011eccp-44, gamma(@as(f64, -0x1.3ffffep+4)));
    try std.testing.expectEqual(0x7.950ae90080a04p-16, gamma(@as(f64, -0x1.3ffffffffffffp+4)));
    // try std.testing.expectEqual(-0x3.ca8406112a1d4p-44, gamma(@as(f64, -0x1.400002p+4)));
    // try std.testing.expectEqual(-0x7.950ae90080724p-16, gamma(@as(f64, -0x1.4000000000001p+4)));
    try std.testing.expectEqual(0x9.c99a5695c5708p-92, gamma(@as(f64, -0x1.dffffep+4)));
    // try std.testing.expectEqual(0x1.3932c5047d651p-60, gamma(@as(f64, -0x1.dffffffffffffp+4)));
    // try std.testing.expectEqual(-0x9.c991f9b459728p-92, gamma(@as(f64, -0x1.e00002p+4)));
    // try std.testing.expectEqual(-0x1.3932c5047d5cbp-60, gamma(@as(f64, -0x1.e000000000001p+4)));
    // try std.testing.expectEqual(0x7.2a41f1f1fa7acp-144, gamma(@as(f64, -0x2.7ffffcp+4)));
    // try std.testing.expectEqual(0xe.5476a15095db8p-116, gamma(@as(f64, -0x2.7fffffffffffep+4)));
    // try std.testing.expectEqual(-0x7.2a34af6633d2cp-144, gamma(@as(f64, -0x2.800004p+4)));
    // try std.testing.expectEqual(-0xe.5476a15095078p-116, gamma(@as(f64, -0x2.8000000000002p+4)));
    try std.testing.expectEqual(-0x2.cbced32c2df66p-148, gamma(@as(f64, -0x2.8ffffcp+4)));
    // try std.testing.expectEqual(-0x5.979870e740b9cp-120, gamma(@as(f64, -0x2.8fffffffffffep+4)));
    // try std.testing.expectEqual(0x2.cbc99dbe11b36p-148, gamma(@as(f64, -0x2.900004p+4)));
    try std.testing.expectEqual(0x5.979870e740668p-120, gamma(@as(f64, -0x2.9000000000002p+4)));
    // try std.testing.expectEqual(0x1.10b05211e13c7p-152, gamma(@as(f64, -0x2.9ffffcp+4)));
    // try std.testing.expectEqual(0x2.215ea4ea61cdp-124, gamma(@as(f64, -0x2.9fffffffffffep+4)));
    try std.testing.expectEqual(-0x1.10ae52d9a7c62p-152, gamma(@as(f64, -0x2.a00004p+4)));
    // try std.testing.expectEqual(-0x2.215ea4ea61adp-124, gamma(@as(f64, -0x2.a000000000002p+4)));
    // try std.testing.expectEqual(0xd.d9c54ba29fa8p-200, gamma(@as(f64, -0x3.1ffffcp+4)));
    // try std.testing.expectEqual(0x1.bb36f6e12ce51p-168, gamma(@as(f64, -0x3.1fffffffffffep+4)));
    // try std.testing.expectEqual(-0xd.d9aa2280534p-200, gamma(@as(f64, -0x3.200004p+4)));
    // try std.testing.expectEqual(-0x1.bb36f6e12cc9fp-168, gamma(@as(f64, -0x3.2000000000002p+4)));
    // try std.testing.expectEqual(0x1.2d4cd4e344c77p-508, gamma(@as(f64, -0x6.3ffff8p+4)));
    // try std.testing.expectEqual(0x2.5a943cc0fd1b8p-480, gamma(@as(f64, -0x6.3fffffffffffcp+4)));
    // try std.testing.expectEqual(-0x1.2d4767e4f014dp-508, gamma(@as(f64, -0x6.400008p+4)));
    try std.testing.expectEqual(-0x2.5a943cc0fcc4cp-480, gamma(@as(f64, -0x6.4000000000004p+4)));
    try std.testing.expectEqual(0x8.d1a58f148fa5p-860, gamma(@as(f64, -0x9.5ffffp+4)));
    // try std.testing.expectEqual(0x1.1a2f2af6406aep-828, gamma(@as(f64, -0x9.5fffffffffff8p+4)));
    // try std.testing.expectEqual(-0x8.d14d214a189b8p-860, gamma(@as(f64, -0x9.60001p+4)));
    // try std.testing.expectEqual(-0x1.1a2f2af640127p-828, gamma(@as(f64, -0x9.6000000000008p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.4ffffp+4)));
    try std.testing.expectEqual(-0xb.f418p-1060, gamma(@as(f64, -0xb.4fffffffffff8p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.50001p+4)));
    try std.testing.expectEqual(0xb.f418p-1060, gamma(@as(f64, -0xb.5000000000008p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.5ffffp+4)));
    try std.testing.expectEqual(0x1.0dp-1064, gamma(@as(f64, -0xb.5fffffffffff8p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.60001p+4)));
    try std.testing.expectEqual(-0x1.0dp-1064, gamma(@as(f64, -0xb.6000000000008p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.6ffffp+4)));
    try std.testing.expectEqual(-0x1.8p-1072, gamma(@as(f64, -0xb.6fffffffffff8p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.70001p+4)));
    try std.testing.expectEqual(0x1.8p-1072, gamma(@as(f64, -0xb.7000000000008p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.7ffffp+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.7fffffffffff8p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.80001p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.8000000000008p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.bffffp+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.bfffffffffff8p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.c0001p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.c000000000008p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.cffffp+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.cfffffffffff8p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.d0001p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.d000000000008p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.dffffp+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.dfffffffffff8p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.e0001p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.e000000000008p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.effffp+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.efffffffffff8p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.f0001p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.f000000000008p+4)));
    // try std.testing.expectEqual(0x1.3b0027aed7d79p+12, gamma(@as(f64, 0x8.00001p+0)));
    try std.testing.expectEqual(0x1.3bp+12, gamma(@as(f64, 0x8p+0)));
    try std.testing.expectEqual(0x1.3b00000000014p+12, gamma(@as(f64, 0x8.0000000000008p+0)));
    try std.testing.expectEqual(0x1.3bp+12, gamma(@as(f64, 0x8p+0)));
    try std.testing.expectEqual(0x1.3affec289603ep+12, gamma(@as(f64, 0x7.fffff8p+0)));
    // try std.testing.expectEqual(0x1.3affffffffff6p+12, gamma(@as(f64, 0x7.ffffffffffffcp+0)));
    // try std.testing.expectEqual(0x2.d0002a233e28p+8, gamma(@as(f64, 0x7.000008p+0)));
    try std.testing.expectEqual(0x2.dp+8, gamma(@as(f64, 0x7p+0)));
    try std.testing.expectEqual(0x2.d000000000016p+8, gamma(@as(f64, 0x7.0000000000004p+0)));
    try std.testing.expectEqual(0x2.dp+8, gamma(@as(f64, 0x7p+0)));
    try std.testing.expectEqual(0x2.cfffd5dcc46bp+8, gamma(@as(f64, 0x6.fffff8p+0)));
    try std.testing.expectEqual(0x2.cffffffffffeap+8, gamma(@as(f64, 0x6.ffffffffffffcp+0)));
    try std.testing.expectEqual(0x7.8000665dfa8ccp+4, gamma(@as(f64, 0x6.000008p+0)));
    try std.testing.expectEqual(0x7.8p+4, gamma(@as(f64, 0x6p+0)));
    // try std.testing.expectEqual(0x7.8000000000034p+4, gamma(@as(f64, 0x6.0000000000004p+0)));
    try std.testing.expectEqual(0x7.8p+4, gamma(@as(f64, 0x6p+0)));
    // try std.testing.expectEqual(0x7.7fff99a20b3f8p+4, gamma(@as(f64, 0x5.fffff8p+0)));
    try std.testing.expectEqual(0x7.7ffffffffffccp+4, gamma(@as(f64, 0x5.ffffffffffffcp+0)));
    try std.testing.expectEqual(0x1.80001212cb98dp+4, gamma(@as(f64, 0x5.000008p+0)));
    try std.testing.expectEqual(0x1.8p+4, gamma(@as(f64, 0x5p+0)));
    // try std.testing.expectEqual(0x1.8000000000009p+4, gamma(@as(f64, 0x5.0000000000004p+0)));
    try std.testing.expectEqual(0x1.8p+4, gamma(@as(f64, 0x5p+0)));
    try std.testing.expectEqual(0x1.7fffeded35563p+4, gamma(@as(f64, 0x4.fffff8p+0)));
    // try std.testing.expectEqual(0x1.7fffffffffff7p+4, gamma(@as(f64, 0x4.ffffffffffffcp+0)));
    try std.testing.expectEqual(0x6.00003c4b2deacp+0, gamma(@as(f64, 0x4.000008p+0)));
    try std.testing.expectEqual(0x6p+0, gamma(@as(f64, 0x4p+0)));
    // try std.testing.expectEqual(0x6.000000000002p+0, gamma(@as(f64, 0x4.0000000000004p+0)));
    try std.testing.expectEqual(0x6p+0, gamma(@as(f64, 0x4p+0)));
    try std.testing.expectEqual(0x5.ffffe1da6a16cp+0, gamma(@as(f64, 0x3.fffffcp+0)));
    // try std.testing.expectEqual(0x5.ffffffffffffp+0, gamma(@as(f64, 0x3.ffffffffffffep+0)));
    try std.testing.expectEqual(0x2.00000761dcd4ep+0, gamma(@as(f64, 0x3.000004p+0)));
    try std.testing.expectEqual(0x2p+0, gamma(@as(f64, 0x3p+0)));
    try std.testing.expectEqual(0x2.0000000000004p+0, gamma(@as(f64, 0x3.0000000000002p+0)));
    try std.testing.expectEqual(0x2p+0, gamma(@as(f64, 0x3p+0)));
    try std.testing.expectEqual(0x1.fffff89e23531p+0, gamma(@as(f64, 0x2.fffffcp+0)));
    try std.testing.expectEqual(0x1.ffffffffffffcp+0, gamma(@as(f64, 0x2.ffffffffffffep+0)));
    try std.testing.expectEqual(0x1.000001b0ee671p+0, gamma(@as(f64, 0x2.000004p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f64, 0x2p+0)));
    try std.testing.expectEqual(0x1.0000000000001p+0, gamma(@as(f64, 0x2.0000000000002p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f64, 0x2p+0)));
    try std.testing.expectEqual(0xf.fffff2788d17p-4, gamma(@as(f64, 0x1.fffffep+0)));
    // try std.testing.expectEqual(0xf.ffffffffffff8p-4, gamma(@as(f64, 0x1.fffffffffffffp+0)));
    try std.testing.expectEqual(0xf.ffffed877343p-4, gamma(@as(f64, 0x1.000002p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f64, 0x1p+0)));
    try std.testing.expectEqual(0xf.ffffffffffff8p-4, gamma(@as(f64, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f64, 0x1p+0)));
    try std.testing.expectEqual(0x1.00000093c468ep+0, gamma(@as(f64, 0xf.fffffp-4)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f64, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(-0x1.0000006c3b998p+24, gamma(@as(f64, -0xf.fffffp-4)));
    // try std.testing.expectEqual(-0x2p+52, gamma(@as(f64, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(0x7.fffff93c46ab8p+20, gamma(@as(f64, -0x1.000002p+0)));
    try std.testing.expectEqual(0xf.ffffffffffff8p+48, gamma(@as(f64, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(0x4.00000761dcdecp+20, gamma(@as(f64, -0x1.fffffep+0)));
    try std.testing.expectEqual(0x8.0000000000008p+48, gamma(@as(f64, -0x1.fffffffffffffp+0)));
    // try std.testing.expectEqual(-0x1.fffff89e237b1p+20, gamma(@as(f64, -0x2.000004p+0)));
    try std.testing.expectEqual(-0x3.ffffffffffff8p+48, gamma(@as(f64, -0x2.0000000000002p+0)));
    // try std.testing.expectEqual(-0xa.aaaae042d3c5p+16, gamma(@as(f64, -0x2.fffffcp+0)));
    try std.testing.expectEqual(-0x1.5555555555559p+48, gamma(@as(f64, -0x2.ffffffffffffep+0)));
    // try std.testing.expectEqual(0xa.aaaa7512849fp+16, gamma(@as(f64, -0x3.000004p+0)));
    try std.testing.expectEqual(0x1.5555555555552p+48, gamma(@as(f64, -0x3.0000000000002p+0)));
    try std.testing.expectEqual(0x2.aaaababb5fabep+16, gamma(@as(f64, -0x3.fffffcp+0)));
    // try std.testing.expectEqual(0x5.5555555555564p+44, gamma(@as(f64, -0x3.ffffffffffffep+0)));
    // try std.testing.expectEqual(-0x1.55554544a1a9ap+16, gamma(@as(f64, -0x4.000008p+0)));
    // try std.testing.expectEqual(-0x2.aaaaaaaaaaa9ap+44, gamma(@as(f64, -0x4.0000000000004p+0)));
    try std.testing.expectEqual(-0x4.44447e809018cp+12, gamma(@as(f64, -0x4.fffff8p+0)));
    // try std.testing.expectEqual(-0x8.88888888888cp+40, gamma(@as(f64, -0x4.ffffffffffffcp+0)));
    // try std.testing.expectEqual(0x4.44440a07fedb8p+12, gamma(@as(f64, -0x5.000008p+0)));
    // try std.testing.expectEqual(0x8.888888888885p+40, gamma(@as(f64, -0x5.0000000000004p+0)));
    try std.testing.expectEqual(0xb.60b6b5d7c934p+8, gamma(@as(f64, -0x5.fffff8p+0)));
    // try std.testing.expectEqual(0x1.6c16c16c16c21p+40, gamma(@as(f64, -0x5.ffffffffffffcp+0)));
    try std.testing.expectEqual(-0xb.60b560e9b5c88p+8, gamma(@as(f64, -0x6.000008p+0)));
    // try std.testing.expectEqual(-0x1.6c16c16c16c0cp+40, gamma(@as(f64, -0x6.0000000000004p+0)));
    try std.testing.expectEqual(-0x1.a01a1bd5ccde2p+8, gamma(@as(f64, -0x6.fffff8p+0)));
    // try std.testing.expectEqual(-0x3.403403403404ep+36, gamma(@as(f64, -0x6.ffffffffffffcp+0)));
    // try std.testing.expectEqual(0x1.a019e76a6a142p+8, gamma(@as(f64, -0x7.000008p+0)));
    try std.testing.expectEqual(0x3.403403403401ap+36, gamma(@as(f64, -0x7.0000000000004p+0)));
    // try std.testing.expectEqual(0x3.40343aebcdf72p+4, gamma(@as(f64, -0x7.fffff8p+0)));
    // try std.testing.expectEqual(0x6.80680680680ap+32, gamma(@as(f64, -0x7.ffffffffffffcp+0)));
    // try std.testing.expectEqual(-0x1.a019c9f48981cp+4, gamma(@as(f64, -0x8.00001p+0)));
    try std.testing.expectEqual(-0x3.4034034033ffcp+32, gamma(@as(f64, -0x8.0000000000008p+0)));
    try std.testing.expectEqual(0x4.9f949bd5f3628p-4, gamma(@as(f64, -0x9.fffffp+0)));
    try std.testing.expectEqual(0x9.3f27dbbc4fb9p+24, gamma(@as(f64, -0x9.ffffffffffff8p+0)));
    // try std.testing.expectEqual(-0x4.9f933fe684a2cp-4, gamma(@as(f64, -0xa.00001p+0)));
    try std.testing.expectEqual(-0x9.3f27dbbc4fa38p+24, gamma(@as(f64, -0xa.0000000000008p+0)));
    // try std.testing.expectEqual(0x3.ca86e2f011eccp-44, gamma(@as(f64, -0x1.3ffffep+4)));
    try std.testing.expectEqual(0x7.950ae90080a04p-16, gamma(@as(f64, -0x1.3ffffffffffffp+4)));
    // try std.testing.expectEqual(-0x3.ca8406112a1d4p-44, gamma(@as(f64, -0x1.400002p+4)));
    // try std.testing.expectEqual(-0x7.950ae90080724p-16, gamma(@as(f64, -0x1.4000000000001p+4)));
    try std.testing.expectEqual(0x9.c99a5695c5708p-92, gamma(@as(f64, -0x1.dffffep+4)));
    // try std.testing.expectEqual(0x1.3932c5047d651p-60, gamma(@as(f64, -0x1.dffffffffffffp+4)));
    // try std.testing.expectEqual(-0x9.c991f9b459728p-92, gamma(@as(f64, -0x1.e00002p+4)));
    // try std.testing.expectEqual(-0x1.3932c5047d5cbp-60, gamma(@as(f64, -0x1.e000000000001p+4)));
    // try std.testing.expectEqual(0x7.2a41f1f1fa7acp-144, gamma(@as(f64, -0x2.7ffffcp+4)));
    // try std.testing.expectEqual(0xe.5476a15095db8p-116, gamma(@as(f64, -0x2.7fffffffffffep+4)));
    // try std.testing.expectEqual(-0x7.2a34af6633d2cp-144, gamma(@as(f64, -0x2.800004p+4)));
    // try std.testing.expectEqual(-0xe.5476a15095078p-116, gamma(@as(f64, -0x2.8000000000002p+4)));
    try std.testing.expectEqual(-0x2.cbced32c2df66p-148, gamma(@as(f64, -0x2.8ffffcp+4)));
    // try std.testing.expectEqual(-0x5.979870e740b9cp-120, gamma(@as(f64, -0x2.8fffffffffffep+4)));
    // try std.testing.expectEqual(0x2.cbc99dbe11b36p-148, gamma(@as(f64, -0x2.900004p+4)));
    try std.testing.expectEqual(0x5.979870e740668p-120, gamma(@as(f64, -0x2.9000000000002p+4)));
    // try std.testing.expectEqual(0x1.10b05211e13c7p-152, gamma(@as(f64, -0x2.9ffffcp+4)));
    // try std.testing.expectEqual(0x2.215ea4ea61cdp-124, gamma(@as(f64, -0x2.9fffffffffffep+4)));
    try std.testing.expectEqual(-0x1.10ae52d9a7c62p-152, gamma(@as(f64, -0x2.a00004p+4)));
    // try std.testing.expectEqual(-0x2.215ea4ea61adp-124, gamma(@as(f64, -0x2.a000000000002p+4)));
    // try std.testing.expectEqual(0xd.d9c54ba29fa8p-200, gamma(@as(f64, -0x3.1ffffcp+4)));
    // try std.testing.expectEqual(0x1.bb36f6e12ce51p-168, gamma(@as(f64, -0x3.1fffffffffffep+4)));
    // try std.testing.expectEqual(-0xd.d9aa2280534p-200, gamma(@as(f64, -0x3.200004p+4)));
    // try std.testing.expectEqual(-0x1.bb36f6e12cc9fp-168, gamma(@as(f64, -0x3.2000000000002p+4)));
    // try std.testing.expectEqual(0x1.2d4cd4e344c77p-508, gamma(@as(f64, -0x6.3ffff8p+4)));
    // try std.testing.expectEqual(0x2.5a943cc0fd1b8p-480, gamma(@as(f64, -0x6.3fffffffffffcp+4)));
    // try std.testing.expectEqual(-0x1.2d4767e4f014dp-508, gamma(@as(f64, -0x6.400008p+4)));
    try std.testing.expectEqual(-0x2.5a943cc0fcc4cp-480, gamma(@as(f64, -0x6.4000000000004p+4)));
    try std.testing.expectEqual(0x8.d1a58f148fa5p-860, gamma(@as(f64, -0x9.5ffffp+4)));
    // try std.testing.expectEqual(0x1.1a2f2af6406aep-828, gamma(@as(f64, -0x9.5fffffffffff8p+4)));
    // try std.testing.expectEqual(-0x8.d14d214a189b8p-860, gamma(@as(f64, -0x9.60001p+4)));
    // try std.testing.expectEqual(-0x1.1a2f2af640127p-828, gamma(@as(f64, -0x9.6000000000008p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.4ffffp+4)));
    try std.testing.expectEqual(-0xb.f418p-1060, gamma(@as(f64, -0xb.4fffffffffff8p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.50001p+4)));
    try std.testing.expectEqual(0xb.f418p-1060, gamma(@as(f64, -0xb.5000000000008p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.5ffffp+4)));
    try std.testing.expectEqual(0x1.0dp-1064, gamma(@as(f64, -0xb.5fffffffffff8p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.60001p+4)));
    try std.testing.expectEqual(-0x1.0dp-1064, gamma(@as(f64, -0xb.6000000000008p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.6ffffp+4)));
    try std.testing.expectEqual(-0x1.8p-1072, gamma(@as(f64, -0xb.6fffffffffff8p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.70001p+4)));
    try std.testing.expectEqual(0x1.8p-1072, gamma(@as(f64, -0xb.7000000000008p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.7ffffp+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.7fffffffffff8p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.80001p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.8000000000008p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.bffffp+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.bfffffffffff8p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.c0001p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.c000000000008p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.cffffp+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.cfffffffffff8p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.d0001p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.d000000000008p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.dffffp+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.dfffffffffff8p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.e0001p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.e000000000008p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.effffp+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.efffffffffff8p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.f0001p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.f000000000008p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xf.9ffffp+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xf.9fffffffffff8p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xf.a0001p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xf.a000000000008p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x1.f3fffep+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x1.f3fffffffffffp+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x1.f40002p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x1.f400000000001p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x2.edfffcp+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x2.edffffffffffep+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x2.ee0004p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x2.ee00000000002p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x3.e7fffcp+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x3.e7ffffffffffep+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x3.e80004p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x3.e800000000002p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x4.e1fff8p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x4.e1ffffffffffcp+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x4.e20008p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x4.e200000000004p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x5.dbfff8p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x5.dbffffffffffcp+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x5.dc0008p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x5.dc00000000004p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.d5fff8p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.d5ffffffffffcp+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x6.d60008p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x6.d600000000004p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x6.e2fff8p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x6.e2ffffffffffcp+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.e30008p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.e300000000004p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.e3fff8p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.e3ffffffffffcp+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x6.e40008p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x6.e400000000004p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x6.e4fff8p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x6.e4ffffffffffcp+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.e50008p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.e500000000004p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.e5fff8p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.e5ffffffffffcp+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x6.e60008p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x6.e600000000004p+8)));
    // try std.testing.expectEqual(0x1.3b0027aed7d79p+12, gamma(@as(f64, 0x8.00001p+0)));
    try std.testing.expectEqual(0x1.3bp+12, gamma(@as(f64, 0x8p+0)));
    try std.testing.expectEqual(0x1.3b00000000014p+12, gamma(@as(f64, 0x8.0000000000008p+0)));
    try std.testing.expectEqual(0x1.3bp+12, gamma(@as(f64, 0x8p+0)));
    try std.testing.expectEqual(0x1.3affec289603ep+12, gamma(@as(f64, 0x7.fffff8p+0)));
    // try std.testing.expectEqual(0x1.3affffffffff6p+12, gamma(@as(f64, 0x7.ffffffffffffcp+0)));
    // try std.testing.expectEqual(0x2.d0002a233e28p+8, gamma(@as(f64, 0x7.000008p+0)));
    try std.testing.expectEqual(0x2.dp+8, gamma(@as(f64, 0x7p+0)));
    try std.testing.expectEqual(0x2.d000000000016p+8, gamma(@as(f64, 0x7.0000000000004p+0)));
    try std.testing.expectEqual(0x2.dp+8, gamma(@as(f64, 0x7p+0)));
    try std.testing.expectEqual(0x2.cfffd5dcc46bp+8, gamma(@as(f64, 0x6.fffff8p+0)));
    try std.testing.expectEqual(0x2.cffffffffffeap+8, gamma(@as(f64, 0x6.ffffffffffffcp+0)));
    try std.testing.expectEqual(0x7.8000665dfa8ccp+4, gamma(@as(f64, 0x6.000008p+0)));
    try std.testing.expectEqual(0x7.8p+4, gamma(@as(f64, 0x6p+0)));
    // try std.testing.expectEqual(0x7.8000000000034p+4, gamma(@as(f64, 0x6.0000000000004p+0)));
    try std.testing.expectEqual(0x7.8p+4, gamma(@as(f64, 0x6p+0)));
    // try std.testing.expectEqual(0x7.7fff99a20b3f8p+4, gamma(@as(f64, 0x5.fffff8p+0)));
    try std.testing.expectEqual(0x7.7ffffffffffccp+4, gamma(@as(f64, 0x5.ffffffffffffcp+0)));
    try std.testing.expectEqual(0x1.80001212cb98dp+4, gamma(@as(f64, 0x5.000008p+0)));
    try std.testing.expectEqual(0x1.8p+4, gamma(@as(f64, 0x5p+0)));
    // try std.testing.expectEqual(0x1.8000000000009p+4, gamma(@as(f64, 0x5.0000000000004p+0)));
    try std.testing.expectEqual(0x1.8p+4, gamma(@as(f64, 0x5p+0)));
    try std.testing.expectEqual(0x1.7fffeded35563p+4, gamma(@as(f64, 0x4.fffff8p+0)));
    // try std.testing.expectEqual(0x1.7fffffffffff7p+4, gamma(@as(f64, 0x4.ffffffffffffcp+0)));
    try std.testing.expectEqual(0x6.00003c4b2deacp+0, gamma(@as(f64, 0x4.000008p+0)));
    try std.testing.expectEqual(0x6p+0, gamma(@as(f64, 0x4p+0)));
    // try std.testing.expectEqual(0x6.000000000002p+0, gamma(@as(f64, 0x4.0000000000004p+0)));
    try std.testing.expectEqual(0x6p+0, gamma(@as(f64, 0x4p+0)));
    try std.testing.expectEqual(0x5.ffffe1da6a16cp+0, gamma(@as(f64, 0x3.fffffcp+0)));
    // try std.testing.expectEqual(0x5.ffffffffffffp+0, gamma(@as(f64, 0x3.ffffffffffffep+0)));
    try std.testing.expectEqual(0x2.00000761dcd4ep+0, gamma(@as(f64, 0x3.000004p+0)));
    try std.testing.expectEqual(0x2p+0, gamma(@as(f64, 0x3p+0)));
    try std.testing.expectEqual(0x2.0000000000004p+0, gamma(@as(f64, 0x3.0000000000002p+0)));
    try std.testing.expectEqual(0x2p+0, gamma(@as(f64, 0x3p+0)));
    try std.testing.expectEqual(0x1.fffff89e23531p+0, gamma(@as(f64, 0x2.fffffcp+0)));
    try std.testing.expectEqual(0x1.ffffffffffffcp+0, gamma(@as(f64, 0x2.ffffffffffffep+0)));
    try std.testing.expectEqual(0x1.000001b0ee671p+0, gamma(@as(f64, 0x2.000004p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f64, 0x2p+0)));
    try std.testing.expectEqual(0x1.0000000000001p+0, gamma(@as(f64, 0x2.0000000000002p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f64, 0x2p+0)));
    try std.testing.expectEqual(0xf.fffff2788d17p-4, gamma(@as(f64, 0x1.fffffep+0)));
    // try std.testing.expectEqual(0xf.ffffffffffff8p-4, gamma(@as(f64, 0x1.fffffffffffffp+0)));
    try std.testing.expectEqual(0xf.ffffed877343p-4, gamma(@as(f64, 0x1.000002p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f64, 0x1p+0)));
    try std.testing.expectEqual(0xf.ffffffffffff8p-4, gamma(@as(f64, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f64, 0x1p+0)));
    try std.testing.expectEqual(0x1.00000093c468ep+0, gamma(@as(f64, 0xf.fffffp-4)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f64, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(-0x1.0000006c3b998p+24, gamma(@as(f64, -0xf.fffffp-4)));
    // try std.testing.expectEqual(-0x2p+52, gamma(@as(f64, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(0x7.fffff93c46ab8p+20, gamma(@as(f64, -0x1.000002p+0)));
    try std.testing.expectEqual(0xf.ffffffffffff8p+48, gamma(@as(f64, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(0x4.00000761dcdecp+20, gamma(@as(f64, -0x1.fffffep+0)));
    try std.testing.expectEqual(0x8.0000000000008p+48, gamma(@as(f64, -0x1.fffffffffffffp+0)));
    // try std.testing.expectEqual(-0x1.fffff89e237b1p+20, gamma(@as(f64, -0x2.000004p+0)));
    try std.testing.expectEqual(-0x3.ffffffffffff8p+48, gamma(@as(f64, -0x2.0000000000002p+0)));
    // try std.testing.expectEqual(-0xa.aaaae042d3c5p+16, gamma(@as(f64, -0x2.fffffcp+0)));
    try std.testing.expectEqual(-0x1.5555555555559p+48, gamma(@as(f64, -0x2.ffffffffffffep+0)));
    // try std.testing.expectEqual(0xa.aaaa7512849fp+16, gamma(@as(f64, -0x3.000004p+0)));
    try std.testing.expectEqual(0x1.5555555555552p+48, gamma(@as(f64, -0x3.0000000000002p+0)));
    try std.testing.expectEqual(0x2.aaaababb5fabep+16, gamma(@as(f64, -0x3.fffffcp+0)));
    // try std.testing.expectEqual(0x5.5555555555564p+44, gamma(@as(f64, -0x3.ffffffffffffep+0)));
    // try std.testing.expectEqual(-0x1.55554544a1a9ap+16, gamma(@as(f64, -0x4.000008p+0)));
    // try std.testing.expectEqual(-0x2.aaaaaaaaaaa9ap+44, gamma(@as(f64, -0x4.0000000000004p+0)));
    try std.testing.expectEqual(-0x4.44447e809018cp+12, gamma(@as(f64, -0x4.fffff8p+0)));
    // try std.testing.expectEqual(-0x8.88888888888cp+40, gamma(@as(f64, -0x4.ffffffffffffcp+0)));
    // try std.testing.expectEqual(0x4.44440a07fedb8p+12, gamma(@as(f64, -0x5.000008p+0)));
    // try std.testing.expectEqual(0x8.888888888885p+40, gamma(@as(f64, -0x5.0000000000004p+0)));
    try std.testing.expectEqual(0xb.60b6b5d7c934p+8, gamma(@as(f64, -0x5.fffff8p+0)));
    // try std.testing.expectEqual(0x1.6c16c16c16c21p+40, gamma(@as(f64, -0x5.ffffffffffffcp+0)));
    try std.testing.expectEqual(-0xb.60b560e9b5c88p+8, gamma(@as(f64, -0x6.000008p+0)));
    // try std.testing.expectEqual(-0x1.6c16c16c16c0cp+40, gamma(@as(f64, -0x6.0000000000004p+0)));
    try std.testing.expectEqual(-0x1.a01a1bd5ccde2p+8, gamma(@as(f64, -0x6.fffff8p+0)));
    // try std.testing.expectEqual(-0x3.403403403404ep+36, gamma(@as(f64, -0x6.ffffffffffffcp+0)));
    // try std.testing.expectEqual(0x1.a019e76a6a142p+8, gamma(@as(f64, -0x7.000008p+0)));
    try std.testing.expectEqual(0x3.403403403401ap+36, gamma(@as(f64, -0x7.0000000000004p+0)));
    // try std.testing.expectEqual(0x3.40343aebcdf72p+4, gamma(@as(f64, -0x7.fffff8p+0)));
    // try std.testing.expectEqual(0x6.80680680680ap+32, gamma(@as(f64, -0x7.ffffffffffffcp+0)));
    // try std.testing.expectEqual(-0x1.a019c9f48981cp+4, gamma(@as(f64, -0x8.00001p+0)));
    try std.testing.expectEqual(-0x3.4034034033ffcp+32, gamma(@as(f64, -0x8.0000000000008p+0)));
    try std.testing.expectEqual(0x4.9f949bd5f3628p-4, gamma(@as(f64, -0x9.fffffp+0)));
    try std.testing.expectEqual(0x9.3f27dbbc4fb9p+24, gamma(@as(f64, -0x9.ffffffffffff8p+0)));
    // try std.testing.expectEqual(-0x4.9f933fe684a2cp-4, gamma(@as(f64, -0xa.00001p+0)));
    try std.testing.expectEqual(-0x9.3f27dbbc4fa38p+24, gamma(@as(f64, -0xa.0000000000008p+0)));
    // try std.testing.expectEqual(0x3.ca86e2f011eccp-44, gamma(@as(f64, -0x1.3ffffep+4)));
    try std.testing.expectEqual(0x7.950ae90080a04p-16, gamma(@as(f64, -0x1.3ffffffffffffp+4)));
    // try std.testing.expectEqual(-0x3.ca8406112a1d4p-44, gamma(@as(f64, -0x1.400002p+4)));
    // try std.testing.expectEqual(-0x7.950ae90080724p-16, gamma(@as(f64, -0x1.4000000000001p+4)));
    try std.testing.expectEqual(0x9.c99a5695c5708p-92, gamma(@as(f64, -0x1.dffffep+4)));
    // try std.testing.expectEqual(0x1.3932c5047d651p-60, gamma(@as(f64, -0x1.dffffffffffffp+4)));
    // try std.testing.expectEqual(-0x9.c991f9b459728p-92, gamma(@as(f64, -0x1.e00002p+4)));
    // try std.testing.expectEqual(-0x1.3932c5047d5cbp-60, gamma(@as(f64, -0x1.e000000000001p+4)));
    // try std.testing.expectEqual(0x7.2a41f1f1fa7acp-144, gamma(@as(f64, -0x2.7ffffcp+4)));
    // try std.testing.expectEqual(0xe.5476a15095db8p-116, gamma(@as(f64, -0x2.7fffffffffffep+4)));
    // try std.testing.expectEqual(-0x7.2a34af6633d2cp-144, gamma(@as(f64, -0x2.800004p+4)));
    // try std.testing.expectEqual(-0xe.5476a15095078p-116, gamma(@as(f64, -0x2.8000000000002p+4)));
    try std.testing.expectEqual(-0x2.cbced32c2df66p-148, gamma(@as(f64, -0x2.8ffffcp+4)));
    // try std.testing.expectEqual(-0x5.979870e740b9cp-120, gamma(@as(f64, -0x2.8fffffffffffep+4)));
    // try std.testing.expectEqual(0x2.cbc99dbe11b36p-148, gamma(@as(f64, -0x2.900004p+4)));
    try std.testing.expectEqual(0x5.979870e740668p-120, gamma(@as(f64, -0x2.9000000000002p+4)));
    // try std.testing.expectEqual(0x1.10b05211e13c7p-152, gamma(@as(f64, -0x2.9ffffcp+4)));
    // try std.testing.expectEqual(0x2.215ea4ea61cdp-124, gamma(@as(f64, -0x2.9fffffffffffep+4)));
    try std.testing.expectEqual(-0x1.10ae52d9a7c62p-152, gamma(@as(f64, -0x2.a00004p+4)));
    // try std.testing.expectEqual(-0x2.215ea4ea61adp-124, gamma(@as(f64, -0x2.a000000000002p+4)));
    // try std.testing.expectEqual(0xd.d9c54ba29fa8p-200, gamma(@as(f64, -0x3.1ffffcp+4)));
    // try std.testing.expectEqual(0x1.bb36f6e12ce51p-168, gamma(@as(f64, -0x3.1fffffffffffep+4)));
    // try std.testing.expectEqual(-0xd.d9aa2280534p-200, gamma(@as(f64, -0x3.200004p+4)));
    // try std.testing.expectEqual(-0x1.bb36f6e12cc9fp-168, gamma(@as(f64, -0x3.2000000000002p+4)));
    // try std.testing.expectEqual(0x1.2d4cd4e344c77p-508, gamma(@as(f64, -0x6.3ffff8p+4)));
    // try std.testing.expectEqual(0x2.5a943cc0fd1b8p-480, gamma(@as(f64, -0x6.3fffffffffffcp+4)));
    // try std.testing.expectEqual(-0x1.2d4767e4f014dp-508, gamma(@as(f64, -0x6.400008p+4)));
    try std.testing.expectEqual(-0x2.5a943cc0fcc4cp-480, gamma(@as(f64, -0x6.4000000000004p+4)));
    try std.testing.expectEqual(0x8.d1a58f148fa5p-860, gamma(@as(f64, -0x9.5ffffp+4)));
    // try std.testing.expectEqual(0x1.1a2f2af6406aep-828, gamma(@as(f64, -0x9.5fffffffffff8p+4)));
    // try std.testing.expectEqual(-0x8.d14d214a189b8p-860, gamma(@as(f64, -0x9.60001p+4)));
    // try std.testing.expectEqual(-0x1.1a2f2af640127p-828, gamma(@as(f64, -0x9.6000000000008p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.4ffffp+4)));
    try std.testing.expectEqual(-0xb.f418p-1060, gamma(@as(f64, -0xb.4fffffffffff8p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.50001p+4)));
    try std.testing.expectEqual(0xb.f418p-1060, gamma(@as(f64, -0xb.5000000000008p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.5ffffp+4)));
    try std.testing.expectEqual(0x1.0dp-1064, gamma(@as(f64, -0xb.5fffffffffff8p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.60001p+4)));
    try std.testing.expectEqual(-0x1.0dp-1064, gamma(@as(f64, -0xb.6000000000008p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.6ffffp+4)));
    try std.testing.expectEqual(-0x1.8p-1072, gamma(@as(f64, -0xb.6fffffffffff8p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.70001p+4)));
    try std.testing.expectEqual(0x1.8p-1072, gamma(@as(f64, -0xb.7000000000008p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.7ffffp+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.7fffffffffff8p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.80001p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.8000000000008p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.bffffp+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.bfffffffffff8p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.c0001p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.c000000000008p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.cffffp+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.cfffffffffff8p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.d0001p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.d000000000008p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.dffffp+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.dfffffffffff8p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.e0001p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.e000000000008p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.effffp+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xb.efffffffffff8p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.f0001p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xb.f000000000008p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xf.9ffffp+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0xf.9fffffffffff8p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xf.a0001p+4)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0xf.a000000000008p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x1.f3fffep+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x1.f3fffffffffffp+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x1.f40002p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x1.f400000000001p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x2.edfffcp+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x2.edffffffffffep+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x2.ee0004p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x2.ee00000000002p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x3.e7fffcp+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x3.e7ffffffffffep+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x3.e80004p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x3.e800000000002p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x4.e1fff8p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x4.e1ffffffffffcp+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x4.e20008p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x4.e200000000004p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x5.dbfff8p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x5.dbffffffffffcp+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x5.dc0008p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x5.dc00000000004p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.d5fff8p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.d5ffffffffffcp+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x6.d60008p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x6.d600000000004p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x6.e2fff8p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x6.e2ffffffffffcp+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.e30008p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.e300000000004p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.e3fff8p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.e3ffffffffffcp+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x6.e40008p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x6.e400000000004p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x6.e4fff8p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x6.e4ffffffffffcp+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.e50008p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.e500000000004p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.e5fff8p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.e5ffffffffffcp+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x6.e60008p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x6.e600000000004p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.ebfff8p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.ebffffffffffcp+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x6.ec0008p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x6.ec00000000004p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x6.ecfff8p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x6.ecffffffffffcp+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.ed0008p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.ed00000000004p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.edfff8p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.edffffffffffcp+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x6.ee0008p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x6.ee00000000004p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x6.eefff8p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x6.eeffffffffffcp+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.ef0008p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.ef00000000004p+8)));
    // try std.testing.expectEqual(0x3.dad55d40f5984p-124, gamma(@as(f64, -0x2.146544p+4)));
    try std.testing.expectEqual(-0x3.73075511ee22cp-1020, gamma(@as(f64, -0xa.c0001p+4)));
    // try std.testing.expectEqual(-0xd.cc629963ba2dp-1012, gamma(@as(f64, -0xa.c000000400008p+4)));
    // try std.testing.expectEqual(0x5.52facf180f08p+48, gamma(@as(f64, 0x1.28p+4)));
    // try std.testing.expectEqual(0x6.27f1ff73d1618p+52, gamma(@as(f64, 0x1.38p+4)));
    // try std.testing.expectEqual(0x1.22a3089777c43p+72, gamma(@as(f64, 0x1.78p+4)));
    // try std.testing.expectEqual(0x1.4a25d38b82b7ep+100, gamma(@as(f64, 0x1.d8p+4)));
    try std.testing.expectEqual(0x2.60b5be093903p+104, gamma(@as(f64, 0x1.e8p+4)));
    try std.testing.expectEqual(0x4.885a724194adcp+108, gamma(@as(f64, 0x1.f8p+4)));
    // try std.testing.expectEqual(0x8.ec7210f11cb6p+112, gamma(@as(f64, 0x2.08p+4)));
    try std.testing.expectEqual(0x1.22047b269c252p+120, gamma(@as(f64, 0x2.18p+4)));
    // try std.testing.expectEqual(0x2.5f3961d8d6edap+124, gamma(@as(f64, 0x2.28p+4)));
    // try std.testing.expectEqual(0xf.fff8101486328p+124, gamma(@as(f64, 0x2.30a43cp+4)));
    // try std.testing.expectEqual(0x1.000063b3eab1ap+128, gamma(@as(f64, 0x2.30a44p+4)));
    try std.testing.expectEqual(std.math.inf(f64), gamma(@as(f64, 0xa.b9fd8p+4)));
    // try std.testing.expectEqual(0xf.fff229034ceb8p+1020, gamma(@as(f64, 0xa.b9fd7p+4)));
    // try std.testing.expectEqual(0xf.ffffffffff288p+1020, gamma(@as(f64, 0xa.b9fd72b0fb238p+4)));
    try std.testing.expectEqual(std.math.inf(f64), gamma(@as(f64, 0xa.b9fd8p+4)));
    // try std.testing.expectEqual(0xf.fff229034ceb8p+1020, gamma(@as(f64, 0xa.b9fd7p+4)));
    try std.testing.expectEqual(std.math.inf(f64), gamma(@as(f64, 0xa.b9fd72b0fb24p+4)));
    try std.testing.expectEqual(std.math.inf(f64), gamma(@as(f64, 0xa.b9fd8p+4)));
    // try std.testing.expectEqual(0xf.fff229034ceb8p+1020, gamma(@as(f64, 0xa.b9fd7p+4)));
    try std.testing.expectEqual(std.math.inf(f64), gamma(@as(f64, 0xa.b9fd72b0fb24p+4)));
    // try std.testing.expectEqual(0xf.ffffffffff288p+1020, gamma(@as(f64, 0xa.b9fd72b0fb238p+4)));
    try std.testing.expectEqual(std.math.inf(f64), gamma(@as(f64, 0xa.b9fd8p+4)));
    // try std.testing.expectEqual(0xf.fff229034ceb8p+1020, gamma(@as(f64, 0xa.b9fd7p+4)));
    try std.testing.expectEqual(std.math.inf(f64), gamma(@as(f64, 0xa.b9fd72b0fb24p+4)));
    // try std.testing.expectEqual(0xf.ffffffffff288p+1020, gamma(@as(f64, 0xa.b9fd72b0fb238p+4)));
    try std.testing.expectEqual(std.math.inf(f64), gamma(@as(f64, 0x6.db8c68p+8)));
    try std.testing.expectEqual(std.math.inf(f64), gamma(@as(f64, 0x6.db8c6p+8)));
    try std.testing.expectEqual(std.math.inf(f64), gamma(@as(f64, 0x6.db8c603359a98p+8)));
    try std.testing.expectEqual(std.math.inf(f64), gamma(@as(f64, 0x6.db8c603359a94p+8)));
    try std.testing.expectEqual(std.math.inf(f64), gamma(@as(f64, 0x6.db8c68p+8)));
    try std.testing.expectEqual(std.math.inf(f64), gamma(@as(f64, 0x6.db8c6p+8)));
    try std.testing.expectEqual(std.math.inf(f64), gamma(@as(f64, 0x6.db8c603359a98p+8)));
    try std.testing.expectEqual(std.math.inf(f64), gamma(@as(f64, 0x6.db8c603359a94p+8)));
    try std.testing.expectEqual(std.math.inf(f64), gamma(@as(f64, 0x6.db8c68p+8)));
    try std.testing.expectEqual(std.math.inf(f64), gamma(@as(f64, 0x6.db8c6p+8)));
    try std.testing.expectEqual(std.math.inf(f64), gamma(@as(f64, 0x6.db8c603359a98p+8)));
    try std.testing.expectEqual(std.math.inf(f64), gamma(@as(f64, 0x6.db8c603359a94p+8)));
    try std.testing.expectEqual(std.math.inf(f64), gamma(@as(f64, 0x6.db8c68p+8)));
    try std.testing.expectEqual(std.math.inf(f64), gamma(@as(f64, 0x6.db8c6p+8)));
    try std.testing.expectEqual(std.math.inf(f64), gamma(@as(f64, 0x6.db8c603359a98p+8)));
    try std.testing.expectEqual(std.math.inf(f64), gamma(@as(f64, 0x6.db8c603359a94p+8)));
    try std.testing.expectEqual(std.math.inf(f64), gamma(@as(f64, 0x3.e8p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x1.86a08p+16)));
    try std.testing.expectEqual(std.math.inf(f64), gamma(@as(f64, 0xf.fffffp+124)));
    try std.testing.expectEqual(std.math.inf(f64), gamma(@as(f64, 0xf.ffffffffffff8p+1020)));
    // try std.testing.expectEqual(-0x3.5a8a6f18f81e6p-128, gamma(@as(f64, -0x2.23p+4)));
    // try std.testing.expectEqual(-0x3.3f852f434e41ap-128, gamma(@as(f64, -0x2.231p+4)));
    // try std.testing.expectEqual(-0x3.25ba99c456cdp-128, gamma(@as(f64, -0x2.232p+4)));
    // try std.testing.expectEqual(-0x3.0d178ada33294p-128, gamma(@as(f64, -0x2.233p+4)));
    // try std.testing.expectEqual(-0x2.f58a5ad6817b8p-128, gamma(@as(f64, -0x2.234p+4)));
    // try std.testing.expectEqual(-0x2.df02ba328f3c8p-128, gamma(@as(f64, -0x2.235p+4)));
    // try std.testing.expectEqual(-0x2.c97191a1b363p-128, gamma(@as(f64, -0x2.236p+4)));
    try std.testing.expectEqual(-0x2.b4c8e59fb606cp-128, gamma(@as(f64, -0x2.237p+4)));
    // try std.testing.expectEqual(0x6.db2af70b7fcdp-972, gamma(@as(f64, -0xa.37p+4)));
    try std.testing.expectEqual(0x6.b47d85f25e08cp-972, gamma(@as(f64, -0xa.371p+4)));
    // try std.testing.expectEqual(0x6.8eed33948a45cp-972, gamma(@as(f64, -0xa.372p+4)));
    try std.testing.expectEqual(0x6.6a708251e7f04p-972, gamma(@as(f64, -0xa.373p+4)));
    try std.testing.expectEqual(0x6.46fe544d4abdp-972, gamma(@as(f64, -0xa.374p+4)));
    // try std.testing.expectEqual(0x6.248de7164ec2p-972, gamma(@as(f64, -0xa.375p+4)));
    // try std.testing.expectEqual(0x6.0316cf8d71614p-972, gamma(@as(f64, -0xa.376p+4)));
    try std.testing.expectEqual(0x5.e290f5fef5a4cp-972, gamma(@as(f64, -0xa.377p+4)));
    try std.testing.expectEqual(0x2.34bfd99e74438p-1024, gamma(@as(f64, -0xa.b0dp+4)));
    try std.testing.expectEqual(0x2.315d5e8fc2c78p-1024, gamma(@as(f64, -0xa.b0d1p+4)));
    try std.testing.expectEqual(0x2.2e036152e0294p-1024, gamma(@as(f64, -0xa.b0d2p+4)));
    try std.testing.expectEqual(0x2.2ab1c2e8316e4p-1024, gamma(@as(f64, -0xa.b0d3p+4)));
    // try std.testing.expectEqual(0x2.276864e5dfa94p-1024, gamma(@as(f64, -0xa.b0d4p+4)));
    try std.testing.expectEqual(0x2.2427297453f68p-1024, gamma(@as(f64, -0xa.b0d5p+4)));
    try std.testing.expectEqual(0x2.20edf34accb34p-1024, gamma(@as(f64, -0xa.b0d6p+4)));
    // try std.testing.expectEqual(0x2.1dbca5ac0b1d4p-1024, gamma(@as(f64, -0xa.b0d7p+4)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.db03p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.db031p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.db032p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.db033p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.db034p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.db035p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.db036p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.db037p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.db05p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.db051p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.db052p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.db053p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.db054p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.db055p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.db056p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f64, -0x6.db057p+8)));
    // try std.testing.expectEqual(0x6.79a69724dabd4p+0, gamma(@as(f64, -0x3.06644cp+0)));
    // try std.testing.expectEqual(-0x7.a358e3487d19p-8, gamma(@as(f64, -0x6.fe463p+0)));
    try std.testing.expectEqual(-0x7.a37bcf5d98268p-8, gamma(@as(f64, -0x6.fe4638p+0)));
    try std.testing.expectEqual(-0x7.a376e9732b0c4p-8, gamma(@as(f64, -0x6.fe4636e0c5064p+0)));
    // try std.testing.expectEqual(0xc.2fa4c8813bd48p-16, gamma(@as(f64, -0x7.a13d78p+0)));
    // try std.testing.expectEqual(0xc.2fa4808244778p-16, gamma(@as(f64, -0x7.a13d8p+0)));
    // try std.testing.expectEqual(0xc.2fa4b50e0b768p-16, gamma(@as(f64, -0x7.a13d7a2945cd4p+0)));
    try std.testing.expectEqual(0xc.2fa4b50e0b74p-16, gamma(@as(f64, -0x7.a13d7a2945cd8p+0)));
    // try std.testing.expectEqual(-0x3.ba6130492158ap-64, gamma(@as(f64, -0x1.4a5caap+4)));
    // try std.testing.expectEqual(0xb.8dc3f1f706c5p-20, gamma(@as(f64, -0x9.2d3a5p+0)));
    // try std.testing.expectEqual(0x6.1254c93775c1p-24, gamma(@as(f64, -0xb.0f63ep+0)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f64, -0x5.f0e02p+8)));
    try std.testing.expectEqual(0x1.7457c3b4ad98fp-24, gamma(@as(f64, -0xb.3123bp+0)));
    // try std.testing.expectEqual(0x3.87a648c74383ap-20, gamma(@as(f64, -0x9.6d538p+0)));
    // try std.testing.expectEqual(-0x5.e4e82c4f3208p-32, gamma(@as(f64, -0xc.c2439p+0)));
    // try std.testing.expectEqual(-0x1.a07f67df4a68bp-28, gamma(@as(f64, -0xc.372fp+0)));
    try std.testing.expectEqual(-0x1.a07ebff6ed1d9p-28, gamma(@as(f64, -0xc.372f1p+0)));
    // try std.testing.expectEqual(-0x1.a07f3bcc8e5d2p-28, gamma(@as(f64, -0xc.372f043322128p+0)));
    // try std.testing.expectEqual(-0x3.a90676ce3e42ap-24, gamma(@as(f64, -0xa.ccfcep+0)));
    // try std.testing.expectEqual(0x7.0e2da01118b54p-20, gamma(@as(f64, -0x9.418c8p+0)));
    // try std.testing.expectEqual(-0x6.97c60a22487f4p-12, gamma(@as(f64, -0x6.ce9158p+0)));
    // try std.testing.expectEqual(0x7.25082d9261008p-36, gamma(@as(f64, -0xd.cbf53p+0)));
    // try std.testing.expectEqual(0x7.2508e12d1cf5cp-36, gamma(@as(f64, -0xd.cbf54p+0)));
    // try std.testing.expectEqual(0x7.2508c022ac5ap-36, gamma(@as(f64, -0xd.cbf53d0e7d06p+0)));
    try std.testing.expectEqual(0x3.d05efb28d49ccp+0, gamma(@as(f64, -0x3.0aa534p+0)));
    try std.testing.expectEqual(-0xf.3fc2acf5d8ap-72, gamma(@as(f64, -0x1.62b8c2p+4)));
    // try std.testing.expectEqual(-0xf.3fb29bd00da8p-72, gamma(@as(f64, -0x1.62b8c4p+4)));
    // try std.testing.expectEqual(-0xf.3fb73d327d6a8p-72, gamma(@as(f64, -0x1.62b8c36c7180bp+4)));
    try std.testing.expectEqual(0x3.fac96a100e61p-24, gamma(@as(f64, -0xb.1626ap+0)));
    // try std.testing.expectEqual(0x3.fac600633d742p-24, gamma(@as(f64, -0xb.1626bp+0)));
    // try std.testing.expectEqual(0x3.fac7890382d7ep-24, gamma(@as(f64, -0xb.1626a8cf433b8p+0)));
    try std.testing.expectEqual(0xf.f7014642d9848p-8, gamma(@as(f64, -0x7.00cf3p+0)));
    // try std.testing.expectEqual(0xf.f6627d248f8ep-8, gamma(@as(f64, -0x7.00cf38p+0)));
    // try std.testing.expectEqual(0xf.f6ecad999981p-8, gamma(@as(f64, -0x7.00cf31099d4bcp+0)));
    // try std.testing.expectEqual(0x3.e85606c693e9cp-24, gamma(@as(f64, -0xb.167e8p+0)));
    // try std.testing.expectEqual(0x3.e852b838ddf24p-24, gamma(@as(f64, -0xb.167e9p+0)));
    // try std.testing.expectEqual(0x3.e854a96acdfa8p-24, gamma(@as(f64, -0xb.167e869a56f1p+0)));
    // try std.testing.expectEqual(0x3.fd9063a22653ep-204, gamma(@as(f64, -0x3.1029b4p+4)));
    // try std.testing.expectEqual(0x3.fd2a955e20f58p-204, gamma(@as(f64, -0x3.1029b8p+4)));
    // try std.testing.expectEqual(0x3.fd7a5e1abda5cp-204, gamma(@as(f64, -0x3.1029b4dd6fb6p+4)));

    try std.testing.expectEqual(0x1.c5bf891b4ef6aa7ap+0, gamma(@as(f80, 0x8p-4)));
    try std.testing.expectEqual(-0x3.8b7f12369ded54f4p+0, gamma(@as(f80, -0x8p-4)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f80, 0x1p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f80, 0x2p+0)));
    try std.testing.expectEqual(0x2p+0, gamma(@as(f80, 0x3p+0)));
    try std.testing.expectEqual(0x6p+0, gamma(@as(f80, 0x4p+0)));
    try std.testing.expectEqual(0x1.8p+4, gamma(@as(f80, 0x5p+0)));
    try std.testing.expectEqual(0x7.8p+4, gamma(@as(f80, 0x6p+0)));
    try std.testing.expectEqual(0x2.dp+8, gamma(@as(f80, 0x7p+0)));
    try std.testing.expectEqual(0x1.3bp+12, gamma(@as(f80, 0x8p+0)));
    try std.testing.expectEqual(0x9.d8p+12, gamma(@as(f80, 0x9p+0)));
    try std.testing.expectEqual(0x5.898p+16, gamma(@as(f80, 0xap+0)));
    try std.testing.expectEqual(0x1.4c4d596dc959027ep+0, gamma(@as(f80, 0xb.33334p-4)));
    try std.testing.expectEqual(0x1.4c4d5b0333f50082p+0, gamma(@as(f80, 0xb.33333p-4)));
    try std.testing.expectEqual(0x1.4c4d5ab21ea21ffep+0, gamma(@as(f80, 0xb.3333333333338p-4)));
    try std.testing.expectEqual(0x1.4c4d5ab21ea22caap+0, gamma(@as(f80, 0xb.333333333333p-4)));
    try std.testing.expectEqual(0x1.4c4d5ab21ea22796p+0, gamma(@as(f80, 0xb.333333333333334p-4)));
    try std.testing.expectEqual(0x1.4c4d5ab21ea22798p+0, gamma(@as(f80, 0xb.333333333333333p-4)));
    try std.testing.expectEqual(0xe.b0d1b1a770ff551p-4, gamma(@as(f80, 0x1.333334p+0)));
    try std.testing.expectEqual(0xe.b0d1ba257ebddc3p-4, gamma(@as(f80, 0x1.333332p+0)));
    try std.testing.expectEqual(0xe.b0d1b50d100e9aep-4, gamma(@as(f80, 0x1.3333333333334p+0)));
    try std.testing.expectEqual(0xe.b0d1b50d100ededp-4, gamma(@as(f80, 0x1.3333333333333p+0)));
    try std.testing.expectEqual(0xe.b0d1b50d100ed14p-4, gamma(@as(f80, 0x1.3333333333333334p+0)));
    try std.testing.expectEqual(0xe.b0d1b50d100ed14p-4, gamma(@as(f80, 0x1.3333333333333332p+0)));
    try std.testing.expectEqual(0xe.2dfc48da77b553dp-4, gamma(@as(f80, 0x1.8p+0)));
    try std.testing.expectEqual(0x1.544fa6d47b38ffdcp+0, gamma(@as(f80, 0x2.8p+0)));
    try std.testing.expectEqual(0x3.52c72113340e7fa4p+0, gamma(@as(f80, 0x3.8p+0)));
    try std.testing.expectEqual(0xb.a1b8f3c33632becp+0, gamma(@as(f80, 0x4.8p+0)));
    try std.testing.expectEqual(0x3.457c048ee73e45a4p+4, gamma(@as(f80, 0x5.8p+0)));
    try std.testing.expectEqual(0x1.1fe2a1911f7d67fp+8, gamma(@as(f80, 0x6.8p+0)));
    try std.testing.expectEqual(0x7.4f411a2f4caf23ap+8, gamma(@as(f80, 0x7.8p+0)));
    try std.testing.expectEqual(0x3.6d2684462bf218b4p+12, gamma(@as(f80, 0x8.8p+0)));
    try std.testing.expectEqual(0x1.d1fc764547589d1ep+16, gamma(@as(f80, 0x9.8p+0)));
    try std.testing.expectEqual(0x2.5cff6179be9e38a4p+0, gamma(@as(f80, -0x1.8p+0)));
    try std.testing.expectEqual(-0xf.1ffc097190c16a7p-4, gamma(@as(f80, -0x2.8p+0)));
    try std.testing.expectEqual(0x4.524802b2bba4f9d8p-4, gamma(@as(f80, -0x3.8p+0)));
    try std.testing.expectEqual(-0xf.5d71d0b4624a94dp-8, gamma(@as(f80, -0x4.8p+0)));
    try std.testing.expectEqual(0x2.cb2bf7669d81ec8p-8, gamma(@as(f80, -0x5.8p+0)));
    try std.testing.expectEqual(-0x6.e06c399a213fdp-12, gamma(@as(f80, -0x6.8p+0)));
    try std.testing.expectEqual(0xe.ab918bf37a21bbcp-16, gamma(@as(f80, -0x7.8p+0)));
    try std.testing.expectEqual(-0x1.b9d4e349d2221618p-16, gamma(@as(f80, -0x8.8p+0)));
    try std.testing.expectEqual(0x2.e8232df597cd9e78p-20, gamma(@as(f80, -0x9.8p+0)));
    try std.testing.expectEqual(0xf.fffff6c3b9919b5p+20, gamma(@as(f80, 0x1p-24)));
    try std.testing.expectEqual(-0x1.00000093c468e0bp+24, gamma(@as(f80, -0x1p-24)));
    try std.testing.expectEqual(0x1.fffffffffffff6c4p+52, gamma(@as(f80, 0x8p-56)));
    try std.testing.expectEqual(-0x2.000000000000093cp+52, gamma(@as(f80, -0x8p-56)));
    try std.testing.expectEqual(0xf.fffffffffffffffp+60, gamma(@as(f80, 0x1p-64)));
    try std.testing.expectEqual(-0x1p+64, gamma(@as(f80, -0x1p-64)));
    try std.testing.expectEqual(0x4p+104, gamma(@as(f80, 0x4p-108)));
    try std.testing.expectEqual(-0x4p+104, gamma(@as(f80, -0x4p-108)));
    try std.testing.expectEqual(0x2p+112, gamma(@as(f80, 0x8p-116)));
    try std.testing.expectEqual(-0x2p+112, gamma(@as(f80, -0x8p-116)));
    try std.testing.expectEqual(0x8p+124, gamma(@as(f80, 0x2p-128)));
    try std.testing.expectEqual(-0x8p+124, gamma(@as(f80, -0x2p-128)));
    try std.testing.expectEqual(0x1p+128, gamma(@as(f80, 0x1p-128)));
    try std.testing.expectEqual(-0x1p+128, gamma(@as(f80, -0x1p-128)));
    try std.testing.expectEqual(0x2p+148, gamma(@as(f80, 0x8p-152)));
    try std.testing.expectEqual(-0x2p+148, gamma(@as(f80, -0x8p-152)));
    try std.testing.expectEqual(0x2p+148, gamma(@as(f80, 0x8p-152)));
    try std.testing.expectEqual(0x8p+1020, gamma(@as(f80, 0x2p-1024)));
    try std.testing.expectEqual(-0x2p+148, gamma(@as(f80, -0x8p-152)));
    try std.testing.expectEqual(-0x8p+1020, gamma(@as(f80, -0x2p-1024)));
    try std.testing.expectEqual(0x2p+148, gamma(@as(f80, 0x8p-152)));
    try std.testing.expectEqual(0x1p+1024, gamma(@as(f80, 0x1p-1024)));
    try std.testing.expectEqual(-0x2p+148, gamma(@as(f80, -0x8p-152)));
    try std.testing.expectEqual(-0x1p+1024, gamma(@as(f80, -0x1p-1024)));
    try std.testing.expectEqual(0x2p+148, gamma(@as(f80, 0x8p-152)));
    try std.testing.expectEqual(0x4p+1072, gamma(@as(f80, 0x4p-1076)));
    try std.testing.expectEqual(-0x2p+148, gamma(@as(f80, -0x8p-152)));
    try std.testing.expectEqual(-0x4p+1072, gamma(@as(f80, -0x4p-1076)));
    try std.testing.expectEqual(0x2p+148, gamma(@as(f80, 0x8p-152)));
    try std.testing.expectEqual(0x4p+1072, gamma(@as(f80, 0x4p-1076)));
    try std.testing.expectEqual(0x8p+16380, gamma(@as(f80, 0x2p-16384)));
    try std.testing.expectEqual(-0x2p+148, gamma(@as(f80, -0x8p-152)));
    try std.testing.expectEqual(-0x4p+1072, gamma(@as(f80, -0x4p-1076)));
    try std.testing.expectEqual(-0x8p+16380, gamma(@as(f80, -0x2p-16384)));
    try std.testing.expectEqual(0x2p+148, gamma(@as(f80, 0x8p-152)));
    try std.testing.expectEqual(0x4p+1072, gamma(@as(f80, 0x4p-1076)));
    try std.testing.expectEqual(std.math.inf(f80), gamma(@as(f80, 0x1p-16384)));
    try std.testing.expectEqual(-0x2p+148, gamma(@as(f80, -0x8p-152)));
    try std.testing.expectEqual(-0x4p+1072, gamma(@as(f80, -0x4p-1076)));
    try std.testing.expectEqual(-std.math.inf(f80), gamma(@as(f80, -0x1p-16384)));
    try std.testing.expectEqual(0x2p+148, gamma(@as(f80, 0x8p-152)));
    try std.testing.expectEqual(0x4p+1072, gamma(@as(f80, 0x4p-1076)));
    try std.testing.expectEqual(std.math.inf(f80), gamma(@as(f80, 0x8p-16448)));
    try std.testing.expectEqual(-0x2p+148, gamma(@as(f80, -0x8p-152)));
    try std.testing.expectEqual(-0x4p+1072, gamma(@as(f80, -0x4p-1076)));
    try std.testing.expectEqual(-std.math.inf(f80), gamma(@as(f80, -0x8p-16448)));
    try std.testing.expectEqual(0x2p+148, gamma(@as(f80, 0x8p-152)));
    try std.testing.expectEqual(0x4p+1072, gamma(@as(f80, 0x4p-1076)));
    try std.testing.expectEqual(std.math.inf(f80), gamma(@as(f80, 0x8p-16448)));
    try std.testing.expectEqual(-0x2p+148, gamma(@as(f80, -0x8p-152)));
    try std.testing.expectEqual(-0x4p+1072, gamma(@as(f80, -0x4p-1076)));
    try std.testing.expectEqual(-std.math.inf(f80), gamma(@as(f80, -0x8p-16448)));
    try std.testing.expectEqual(0x1.3b0027aed7d78dfep+12, gamma(@as(f80, 0x8.00001p+0)));
    try std.testing.expectEqual(0x1.3affec289603de8p+12, gamma(@as(f80, 0x7.fffff8p+0)));
    try std.testing.expectEqual(0x2.d0002a233e27fbd8p+8, gamma(@as(f80, 0x7.000008p+0)));
    try std.testing.expectEqual(0x2.cfffd5dcc46af8ep+8, gamma(@as(f80, 0x6.fffff8p+0)));
    try std.testing.expectEqual(0x7.8000665dfa8cccfp+4, gamma(@as(f80, 0x6.000008p+0)));
    try std.testing.expectEqual(0x7.7fff99a20b3f6fcp+4, gamma(@as(f80, 0x5.fffff8p+0)));
    try std.testing.expectEqual(0x1.80001212cb98d7b8p+4, gamma(@as(f80, 0x5.000008p+0)));
    try std.testing.expectEqual(0x1.7fffeded35562b7cp+4, gamma(@as(f80, 0x4.fffff8p+0)));
    try std.testing.expectEqual(0x6.00003c4b2deac88p+0, gamma(@as(f80, 0x4.000008p+0)));
    try std.testing.expectEqual(0x5.ffffe1da6a16afc8p+0, gamma(@as(f80, 0x3.fffffcp+0)));
    try std.testing.expectEqual(0x2.00000761dcd4d598p+0, gamma(@as(f80, 0x3.000004p+0)));
    try std.testing.expectEqual(0x1.fffff89e23530d72p+0, gamma(@as(f80, 0x2.fffffcp+0)));
    try std.testing.expectEqual(0x1.000001b0ee6708fp+0, gamma(@as(f80, 0x2.000004p+0)));
    try std.testing.expectEqual(0xf.fffff2788d16cb5p-4, gamma(@as(f80, 0x1.fffffep+0)));
    try std.testing.expectEqual(0xf.ffffed877342ddp-4, gamma(@as(f80, 0x1.000002p+0)));
    try std.testing.expectEqual(0x1.00000093c468e0bp+0, gamma(@as(f80, 0xf.fffffp-4)));
    try std.testing.expectEqual(-0x1.0000006c3b9985fp+24, gamma(@as(f80, -0xf.fffffp-4)));
    try std.testing.expectEqual(0x7.fffff93c46ab65a8p+20, gamma(@as(f80, -0x1.000002p+0)));
    try std.testing.expectEqual(0x4.00000761dcdedcd8p+20, gamma(@as(f80, -0x1.fffffep+0)));
    try std.testing.expectEqual(-0x1.fffff89e237b0d72p+20, gamma(@as(f80, -0x2.000004p+0)));
    try std.testing.expectEqual(-0xa.aaaae042d3c4cc4p+16, gamma(@as(f80, -0x2.fffffcp+0)));
    try std.testing.expectEqual(0xa.aaaa7512849ed9bp+16, gamma(@as(f80, -0x3.000004p+0)));
    try std.testing.expectEqual(0x2.aaaababb5fabee7p+16, gamma(@as(f80, -0x3.fffffcp+0)));
    try std.testing.expectEqual(-0x1.55554544a1a9a1e4p+16, gamma(@as(f80, -0x4.000008p+0)));
    try std.testing.expectEqual(-0x4.44447e809018a708p+12, gamma(@as(f80, -0x4.fffff8p+0)));
    try std.testing.expectEqual(0x4.44440a07fedb92d8p+12, gamma(@as(f80, -0x5.000008p+0)));
    try std.testing.expectEqual(0xb.60b6b5d7c934328p+8, gamma(@as(f80, -0x5.fffff8p+0)));
    try std.testing.expectEqual(-0xb.60b560e9b5c85p+8, gamma(@as(f80, -0x6.000008p+0)));
    try std.testing.expectEqual(-0x1.a01a1bd5ccde202p+8, gamma(@as(f80, -0x6.fffff8p+0)));
    try std.testing.expectEqual(0x1.a019e76a6a142418p+8, gamma(@as(f80, -0x7.000008p+0)));
    try std.testing.expectEqual(0x3.40343aebcdf72c1p+4, gamma(@as(f80, -0x7.fffff8p+0)));
    try std.testing.expectEqual(-0x1.a019c9f48981c2aep+4, gamma(@as(f80, -0x8.00001p+0)));
    try std.testing.expectEqual(0x4.9f949bd5f3629adp-4, gamma(@as(f80, -0x9.fffffp+0)));
    try std.testing.expectEqual(-0x4.9f933fe684a2dc1p-4, gamma(@as(f80, -0xa.00001p+0)));
    try std.testing.expectEqual(0x3.ca86e2f011ecb5bp-44, gamma(@as(f80, -0x1.3ffffep+4)));
    try std.testing.expectEqual(-0x3.ca8406112a1d38bp-44, gamma(@as(f80, -0x1.400002p+4)));
    try std.testing.expectEqual(0x9.c99a5695c570514p-92, gamma(@as(f80, -0x1.dffffep+4)));
    try std.testing.expectEqual(-0x9.c991f9b45972556p-92, gamma(@as(f80, -0x1.e00002p+4)));
    try std.testing.expectEqual(0x7.2a41f1f1fa7ab86p-144, gamma(@as(f80, -0x2.7ffffcp+4)));
    try std.testing.expectEqual(-0x7.2a34af6633d2b3a8p-144, gamma(@as(f80, -0x2.800004p+4)));
    try std.testing.expectEqual(-0x2.cbced32c2df66774p-148, gamma(@as(f80, -0x2.8ffffcp+4)));
    try std.testing.expectEqual(0x2.cbc99dbe11b36858p-148, gamma(@as(f80, -0x2.900004p+4)));
    try std.testing.expectEqual(0x1.10b05211e13c736ap-152, gamma(@as(f80, -0x2.9ffffcp+4)));
    try std.testing.expectEqual(-0x1.10ae52d9a7c6190ap-152, gamma(@as(f80, -0x2.a00004p+4)));
    try std.testing.expectEqual(0x1.3b0027aed7d78dfep+12, gamma(@as(f80, 0x8.00001p+0)));
    try std.testing.expectEqual(0x1.3bp+12, gamma(@as(f80, 0x8p+0)));
    try std.testing.expectEqual(0x1.3b00000000013d76p+12, gamma(@as(f80, 0x8.0000000000008p+0)));
    try std.testing.expectEqual(0x1.3bp+12, gamma(@as(f80, 0x8p+0)));
    try std.testing.expectEqual(0x1.3affec289603de8p+12, gamma(@as(f80, 0x7.fffff8p+0)));
    try std.testing.expectEqual(0x1.3affffffffff6144p+12, gamma(@as(f80, 0x7.ffffffffffffcp+0)));
    try std.testing.expectEqual(0x2.d0002a233e27fbd8p+8, gamma(@as(f80, 0x7.000008p+0)));
    try std.testing.expectEqual(0x2.dp+8, gamma(@as(f80, 0x7p+0)));
    try std.testing.expectEqual(0x2.d000000000015118p+8, gamma(@as(f80, 0x7.0000000000004p+0)));
    try std.testing.expectEqual(0x2.dp+8, gamma(@as(f80, 0x7p+0)));
    try std.testing.expectEqual(0x2.cfffd5dcc46af8ep+8, gamma(@as(f80, 0x6.fffff8p+0)));
    try std.testing.expectEqual(0x2.cffffffffffeaee8p+8, gamma(@as(f80, 0x6.ffffffffffffcp+0)));
    try std.testing.expectEqual(0x7.8000665dfa8cccfp+4, gamma(@as(f80, 0x6.000008p+0)));
    try std.testing.expectEqual(0x7.8p+4, gamma(@as(f80, 0x6p+0)));
    try std.testing.expectEqual(0x7.80000000000332fp+4, gamma(@as(f80, 0x6.0000000000004p+0)));
    try std.testing.expectEqual(0x7.8p+4, gamma(@as(f80, 0x6p+0)));
    try std.testing.expectEqual(0x7.7fff99a20b3f6fcp+4, gamma(@as(f80, 0x5.fffff8p+0)));
    try std.testing.expectEqual(0x7.7ffffffffffccd1p+4, gamma(@as(f80, 0x5.ffffffffffffcp+0)));
    try std.testing.expectEqual(0x1.80001212cb98d7b8p+4, gamma(@as(f80, 0x5.000008p+0)));
    try std.testing.expectEqual(0x1.8p+4, gamma(@as(f80, 0x5p+0)));
    try std.testing.expectEqual(0x1.8000000000009096p+4, gamma(@as(f80, 0x5.0000000000004p+0)));
    try std.testing.expectEqual(0x1.8p+4, gamma(@as(f80, 0x5p+0)));
    try std.testing.expectEqual(0x1.7fffeded35562b7cp+4, gamma(@as(f80, 0x4.fffff8p+0)));
    try std.testing.expectEqual(0x1.7fffffffffff6f6ap+4, gamma(@as(f80, 0x4.ffffffffffffcp+0)));
    try std.testing.expectEqual(0x6.00003c4b2deac88p+0, gamma(@as(f80, 0x4.000008p+0)));
    try std.testing.expectEqual(0x6p+0, gamma(@as(f80, 0x4p+0)));
    try std.testing.expectEqual(0x6.000000000001e258p+0, gamma(@as(f80, 0x4.0000000000004p+0)));
    try std.testing.expectEqual(0x6p+0, gamma(@as(f80, 0x4p+0)));
    try std.testing.expectEqual(0x5.ffffe1da6a16afc8p+0, gamma(@as(f80, 0x3.fffffcp+0)));
    try std.testing.expectEqual(0x5.ffffffffffff0edp+0, gamma(@as(f80, 0x3.ffffffffffffep+0)));
    try std.testing.expectEqual(0x2.00000761dcd4d598p+0, gamma(@as(f80, 0x3.000004p+0)));
    try std.testing.expectEqual(0x2p+0, gamma(@as(f80, 0x3p+0)));
    try std.testing.expectEqual(0x2.0000000000003b1p+0, gamma(@as(f80, 0x3.0000000000002p+0)));
    try std.testing.expectEqual(0x2p+0, gamma(@as(f80, 0x3p+0)));
    try std.testing.expectEqual(0x1.fffff89e23530d72p+0, gamma(@as(f80, 0x2.fffffcp+0)));
    try std.testing.expectEqual(0x1.ffffffffffffc4f2p+0, gamma(@as(f80, 0x2.ffffffffffffep+0)));
    try std.testing.expectEqual(0x1.000001b0ee6708fp+0, gamma(@as(f80, 0x2.000004p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f80, 0x2p+0)));
    try std.testing.expectEqual(0x1.0000000000000d88p+0, gamma(@as(f80, 0x2.0000000000002p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f80, 0x2p+0)));
    try std.testing.expectEqual(0xf.fffff2788d16cb5p-4, gamma(@as(f80, 0x1.fffffep+0)));
    try std.testing.expectEqual(0xf.ffffffffffff93cp-4, gamma(@as(f80, 0x1.fffffffffffffp+0)));
    try std.testing.expectEqual(0xf.ffffed877342ddp-4, gamma(@as(f80, 0x1.000002p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f80, 0x1p+0)));
    try std.testing.expectEqual(0xf.ffffffffffff6c4p-4, gamma(@as(f80, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f80, 0x1p+0)));
    try std.testing.expectEqual(0x1.00000093c468e0bp+0, gamma(@as(f80, 0xf.fffffp-4)));
    try std.testing.expectEqual(0x1.000000000000049ep+0, gamma(@as(f80, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(-0x1.0000006c3b9985fp+24, gamma(@as(f80, -0xf.fffffp-4)));
    try std.testing.expectEqual(-0x2.00000000000006c4p+52, gamma(@as(f80, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(0x7.fffff93c46ab65a8p+20, gamma(@as(f80, -0x1.000002p+0)));
    try std.testing.expectEqual(0xf.ffffffffffff93cp+48, gamma(@as(f80, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(0x4.00000761dcdedcd8p+20, gamma(@as(f80, -0x1.fffffep+0)));
    try std.testing.expectEqual(0x8.000000000000762p+48, gamma(@as(f80, -0x1.fffffffffffffp+0)));
    try std.testing.expectEqual(-0x1.fffff89e237b0d72p+20, gamma(@as(f80, -0x2.000004p+0)));
    try std.testing.expectEqual(-0x3.ffffffffffff89e4p+48, gamma(@as(f80, -0x2.0000000000002p+0)));
    try std.testing.expectEqual(-0xa.aaaae042d3c4cc4p+16, gamma(@as(f80, -0x2.fffffcp+0)));
    try std.testing.expectEqual(-0x1.5555555555558aeep+48, gamma(@as(f80, -0x2.ffffffffffffep+0)));
    try std.testing.expectEqual(0xa.aaaa7512849ed9bp+16, gamma(@as(f80, -0x3.000004p+0)));
    try std.testing.expectEqual(0x1.5555555555551fbep+48, gamma(@as(f80, -0x3.0000000000002p+0)));
    try std.testing.expectEqual(0x2.aaaababb5fabee7p+16, gamma(@as(f80, -0x3.fffffcp+0)));
    try std.testing.expectEqual(0x5.555555555556566p+44, gamma(@as(f80, -0x3.ffffffffffffep+0)));
    try std.testing.expectEqual(-0x1.55554544a1a9a1e4p+16, gamma(@as(f80, -0x4.000008p+0)));
    try std.testing.expectEqual(-0x2.aaaaaaaaaaa9a9ap+44, gamma(@as(f80, -0x4.0000000000004p+0)));
    try std.testing.expectEqual(-0x4.44447e809018a708p+12, gamma(@as(f80, -0x4.fffff8p+0)));
    try std.testing.expectEqual(-0x8.88888888888c2c5p+40, gamma(@as(f80, -0x4.ffffffffffffcp+0)));
    try std.testing.expectEqual(0x4.44440a07fedb92d8p+12, gamma(@as(f80, -0x5.000008p+0)));
    try std.testing.expectEqual(0x8.888888888884e4cp+40, gamma(@as(f80, -0x5.0000000000004p+0)));
    try std.testing.expectEqual(0xb.60b6b5d7c934328p+8, gamma(@as(f80, -0x5.fffff8p+0)));
    try std.testing.expectEqual(0x1.6c16c16c16c2168ep+40, gamma(@as(f80, -0x5.ffffffffffffcp+0)));
    try std.testing.expectEqual(-0xb.60b560e9b5c85p+8, gamma(@as(f80, -0x6.000008p+0)));
    try std.testing.expectEqual(-0x1.6c16c16c16c0c1ap+40, gamma(@as(f80, -0x6.0000000000004p+0)));
    try std.testing.expectEqual(-0x1.a01a1bd5ccde202p+8, gamma(@as(f80, -0x6.fffff8p+0)));
    try std.testing.expectEqual(-0x3.403403403404e39p+36, gamma(@as(f80, -0x6.ffffffffffffcp+0)));
    try std.testing.expectEqual(0x1.a019e76a6a142418p+8, gamma(@as(f80, -0x7.000008p+0)));
    try std.testing.expectEqual(0x3.4034034034019cd8p+36, gamma(@as(f80, -0x7.0000000000004p+0)));
    try std.testing.expectEqual(0x3.40343aebcdf72c1p+4, gamma(@as(f80, -0x7.fffff8p+0)));
    try std.testing.expectEqual(0x6.806806806809fb2p+32, gamma(@as(f80, -0x7.ffffffffffffcp+0)));
    try std.testing.expectEqual(-0x1.a019c9f48981c2aep+4, gamma(@as(f80, -0x8.00001p+0)));
    try std.testing.expectEqual(-0x3.4034034033ffc57cp+32, gamma(@as(f80, -0x8.0000000000008p+0)));
    try std.testing.expectEqual(0x4.9f949bd5f3629adp-4, gamma(@as(f80, -0x9.fffffp+0)));
    try std.testing.expectEqual(0x9.3f27dbbc4fb918fp+24, gamma(@as(f80, -0x9.ffffffffffff8p+0)));
    try std.testing.expectEqual(-0x4.9f933fe684a2dc1p-4, gamma(@as(f80, -0xa.00001p+0)));
    try std.testing.expectEqual(-0x9.3f27dbbc4fa35ap+24, gamma(@as(f80, -0xa.0000000000008p+0)));
    try std.testing.expectEqual(0x3.ca86e2f011ecb5bp-44, gamma(@as(f80, -0x1.3ffffep+4)));
    try std.testing.expectEqual(0x7.950ae90080a028ep-16, gamma(@as(f80, -0x1.3ffffffffffffp+4)));
    try std.testing.expectEqual(-0x3.ca8406112a1d38bp-44, gamma(@as(f80, -0x1.400002p+4)));
    try std.testing.expectEqual(-0x7.950ae90080725afp-16, gamma(@as(f80, -0x1.4000000000001p+4)));
    try std.testing.expectEqual(0x9.c99a5695c570514p-92, gamma(@as(f80, -0x1.dffffep+4)));
    try std.testing.expectEqual(0x1.3932c5047d65147ep-60, gamma(@as(f80, -0x1.dffffffffffffp+4)));
    try std.testing.expectEqual(-0x9.c991f9b45972556p-92, gamma(@as(f80, -0x1.e00002p+4)));
    try std.testing.expectEqual(-0x1.3932c5047d5cb79cp-60, gamma(@as(f80, -0x1.e000000000001p+4)));
    try std.testing.expectEqual(0x7.2a41f1f1fa7ab86p-144, gamma(@as(f80, -0x2.7ffffcp+4)));
    try std.testing.expectEqual(0xe.5476a15095db947p-116, gamma(@as(f80, -0x2.7fffffffffffep+4)));
    try std.testing.expectEqual(-0x7.2a34af6633d2b3a8p-144, gamma(@as(f80, -0x2.800004p+4)));
    try std.testing.expectEqual(-0xe.5476a15095076bbp-116, gamma(@as(f80, -0x2.8000000000002p+4)));
    try std.testing.expectEqual(-0x2.cbced32c2df66774p-148, gamma(@as(f80, -0x2.8ffffcp+4)));
    try std.testing.expectEqual(-0x5.979870e740b9dd68p-120, gamma(@as(f80, -0x2.8fffffffffffep+4)));
    try std.testing.expectEqual(0x2.cbc99dbe11b36858p-148, gamma(@as(f80, -0x2.900004p+4)));
    try std.testing.expectEqual(0x5.979870e740668688p-120, gamma(@as(f80, -0x2.9000000000002p+4)));
    try std.testing.expectEqual(0x1.10b05211e13c736ap-152, gamma(@as(f80, -0x2.9ffffcp+4)));
    try std.testing.expectEqual(0x2.215ea4ea61cd009cp-124, gamma(@as(f80, -0x2.9fffffffffffep+4)));
    try std.testing.expectEqual(-0x1.10ae52d9a7c6190ap-152, gamma(@as(f80, -0x2.a00004p+4)));
    try std.testing.expectEqual(-0x2.215ea4ea61ad0d18p-124, gamma(@as(f80, -0x2.a000000000002p+4)));
    try std.testing.expectEqual(0xd.d9c54ba29fa7f03p-200, gamma(@as(f80, -0x3.1ffffcp+4)));
    try std.testing.expectEqual(0x1.bb36f6e12ce51698p-168, gamma(@as(f80, -0x3.1fffffffffffep+4)));
    try std.testing.expectEqual(-0xd.d9aa2280533fc1p-200, gamma(@as(f80, -0x3.200004p+4)));
    try std.testing.expectEqual(-0x1.bb36f6e12cc9ed74p-168, gamma(@as(f80, -0x3.2000000000002p+4)));
    try std.testing.expectEqual(0x1.2d4cd4e344c76df8p-508, gamma(@as(f80, -0x6.3ffff8p+4)));
    try std.testing.expectEqual(0x2.5a943cc0fd1b86bp-480, gamma(@as(f80, -0x6.3fffffffffffcp+4)));
    try std.testing.expectEqual(-0x1.2d4767e4f014d48cp-508, gamma(@as(f80, -0x6.400008p+4)));
    try std.testing.expectEqual(-0x2.5a943cc0fcc4b6ccp-480, gamma(@as(f80, -0x6.4000000000004p+4)));
    try std.testing.expectEqual(0x8.d1a58f148fa4d62p-860, gamma(@as(f80, -0x9.5ffffp+4)));
    try std.testing.expectEqual(0x1.1a2f2af6406ada84p-828, gamma(@as(f80, -0x9.5fffffffffff8p+4)));
    try std.testing.expectEqual(-0x8.d14d214a189b93bp-860, gamma(@as(f80, -0x9.60001p+4)));
    try std.testing.expectEqual(-0x1.1a2f2af640126cbap-828, gamma(@as(f80, -0x9.6000000000008p+4)));
    try std.testing.expectEqual(-0x5.fa2b7cb1342f0618p-1088, gamma(@as(f80, -0xb.4ffffp+4)));
    try std.testing.expectEqual(-0xb.f418cc537d2800dp-1060, gamma(@as(f80, -0xb.4fffffffffff8p+4)));
    try std.testing.expectEqual(0x5.f9ed505798c523e8p-1088, gamma(@as(f80, -0xb.50001p+4)));
    try std.testing.expectEqual(0xb.f418cc5379453b4p-1060, gamma(@as(f80, -0xb.5000000000008p+4)));
    try std.testing.expectEqual(0x8.6853b8676d944b5p-1096, gamma(@as(f80, -0xb.5ffffp+4)));
    try std.testing.expectEqual(0x1.0d04fe453ad3bd2p-1064, gamma(@as(f80, -0xb.5fffffffffff8p+4)));
    try std.testing.expectEqual(-0x8.67fc2cebc2f23e2p-1096, gamma(@as(f80, -0xb.60001p+4)));
    try std.testing.expectEqual(-0x1.0d04fe453a7c31a6p-1064, gamma(@as(f80, -0xb.6000000000008p+4)));
    try std.testing.expectEqual(-0xb.c2e7e440d1188c1p-1104, gamma(@as(f80, -0xb.6ffffp+4)));
    try std.testing.expectEqual(-0x1.785552e9f05ed314p-1072, gamma(@as(f80, -0xb.6fffffffffff8p+4)));
    try std.testing.expectEqual(0xb.c26d4bc450a5bc9p-1104, gamma(@as(f80, -0xb.70001p+4)));
    try std.testing.expectEqual(0x1.785552e9efe43a98p-1072, gamma(@as(f80, -0xb.7000000000008p+4)));
    try std.testing.expectEqual(0x1.05d1632f1f3e377ap-1108, gamma(@as(f80, -0xb.7ffffp+4)));
    try std.testing.expectEqual(0x2.0b981a509c577f38p-1080, gamma(@as(f80, -0xb.7fffffffffff8p+4)));
    try std.testing.expectEqual(-0x1.05c6b740afc189ep-1108, gamma(@as(f80, -0xb.80001p+4)));
    try std.testing.expectEqual(-0x2.0b981a509bacc054p-1080, gamma(@as(f80, -0xb.8000000000008p+4)));
    try std.testing.expectEqual(0x1.3b0027aed7d78dfep+12, gamma(@as(f80, 0x8.00001p+0)));
    try std.testing.expectEqual(0x1.3bp+12, gamma(@as(f80, 0x8p+0)));
    try std.testing.expectEqual(0x1.3b00000000013d76p+12, gamma(@as(f80, 0x8.0000000000008p+0)));
    try std.testing.expectEqual(0x1.3b00000000000028p+12, gamma(@as(f80, 0x8.000000000000001p+0)));
    try std.testing.expectEqual(0x1.3bp+12, gamma(@as(f80, 0x8p+0)));
    try std.testing.expectEqual(0x1.3affec289603de8p+12, gamma(@as(f80, 0x7.fffff8p+0)));
    try std.testing.expectEqual(0x1.3affffffffff6144p+12, gamma(@as(f80, 0x7.ffffffffffffcp+0)));
    try std.testing.expectEqual(0x1.3affffffffffffecp+12, gamma(@as(f80, 0x7.fffffffffffffff8p+0)));
    try std.testing.expectEqual(0x2.d0002a233e27fbd8p+8, gamma(@as(f80, 0x7.000008p+0)));
    try std.testing.expectEqual(0x2.dp+8, gamma(@as(f80, 0x7p+0)));
    try std.testing.expectEqual(0x2.d000000000015118p+8, gamma(@as(f80, 0x7.0000000000004p+0)));
    try std.testing.expectEqual(0x2.d00000000000002cp+8, gamma(@as(f80, 0x7.0000000000000008p+0)));
    try std.testing.expectEqual(0x2.dp+8, gamma(@as(f80, 0x7p+0)));
    try std.testing.expectEqual(0x2.cfffd5dcc46af8ep+8, gamma(@as(f80, 0x6.fffff8p+0)));
    try std.testing.expectEqual(0x2.cffffffffffeaee8p+8, gamma(@as(f80, 0x6.ffffffffffffcp+0)));
    try std.testing.expectEqual(0x2.cfffffffffffffd4p+8, gamma(@as(f80, 0x6.fffffffffffffff8p+0)));
    try std.testing.expectEqual(0x7.8000665dfa8cccfp+4, gamma(@as(f80, 0x6.000008p+0)));
    try std.testing.expectEqual(0x7.8p+4, gamma(@as(f80, 0x6p+0)));
    try std.testing.expectEqual(0x7.80000000000332fp+4, gamma(@as(f80, 0x6.0000000000004p+0)));
    try std.testing.expectEqual(0x7.8000000000000068p+4, gamma(@as(f80, 0x6.0000000000000008p+0)));
    try std.testing.expectEqual(0x7.8p+4, gamma(@as(f80, 0x6p+0)));
    try std.testing.expectEqual(0x7.7fff99a20b3f6fcp+4, gamma(@as(f80, 0x5.fffff8p+0)));
    try std.testing.expectEqual(0x7.7ffffffffffccd1p+4, gamma(@as(f80, 0x5.ffffffffffffcp+0)));
    try std.testing.expectEqual(0x7.7fffffffffffff98p+4, gamma(@as(f80, 0x5.fffffffffffffff8p+0)));
    try std.testing.expectEqual(0x1.80001212cb98d7b8p+4, gamma(@as(f80, 0x5.000008p+0)));
    try std.testing.expectEqual(0x1.8p+4, gamma(@as(f80, 0x5p+0)));
    try std.testing.expectEqual(0x1.8000000000009096p+4, gamma(@as(f80, 0x5.0000000000004p+0)));
    try std.testing.expectEqual(0x1.8000000000000012p+4, gamma(@as(f80, 0x5.0000000000000008p+0)));
    try std.testing.expectEqual(0x1.8p+4, gamma(@as(f80, 0x5p+0)));
    try std.testing.expectEqual(0x1.7fffeded35562b7cp+4, gamma(@as(f80, 0x4.fffff8p+0)));
    try std.testing.expectEqual(0x1.7fffffffffff6f6ap+4, gamma(@as(f80, 0x4.ffffffffffffcp+0)));
    try std.testing.expectEqual(0x1.7fffffffffffffeep+4, gamma(@as(f80, 0x4.fffffffffffffff8p+0)));
    try std.testing.expectEqual(0x6.00003c4b2deac88p+0, gamma(@as(f80, 0x4.000008p+0)));
    try std.testing.expectEqual(0x6p+0, gamma(@as(f80, 0x4p+0)));
    try std.testing.expectEqual(0x6.000000000001e258p+0, gamma(@as(f80, 0x4.0000000000004p+0)));
    try std.testing.expectEqual(0x6.000000000000004p+0, gamma(@as(f80, 0x4.0000000000000008p+0)));
    try std.testing.expectEqual(0x6p+0, gamma(@as(f80, 0x4p+0)));
    try std.testing.expectEqual(0x5.ffffe1da6a16afc8p+0, gamma(@as(f80, 0x3.fffffcp+0)));
    try std.testing.expectEqual(0x5.ffffffffffff0edp+0, gamma(@as(f80, 0x3.ffffffffffffep+0)));
    try std.testing.expectEqual(0x5.ffffffffffffffep+0, gamma(@as(f80, 0x3.fffffffffffffffcp+0)));
    try std.testing.expectEqual(0x2.00000761dcd4d598p+0, gamma(@as(f80, 0x3.000004p+0)));
    try std.testing.expectEqual(0x2p+0, gamma(@as(f80, 0x3p+0)));
    try std.testing.expectEqual(0x2.0000000000003b1p+0, gamma(@as(f80, 0x3.0000000000002p+0)));
    try std.testing.expectEqual(0x2.0000000000000008p+0, gamma(@as(f80, 0x3.0000000000000004p+0)));
    try std.testing.expectEqual(0x2p+0, gamma(@as(f80, 0x3p+0)));
    try std.testing.expectEqual(0x1.fffff89e23530d72p+0, gamma(@as(f80, 0x2.fffffcp+0)));
    try std.testing.expectEqual(0x1.ffffffffffffc4f2p+0, gamma(@as(f80, 0x2.ffffffffffffep+0)));
    try std.testing.expectEqual(0x1.fffffffffffffff8p+0, gamma(@as(f80, 0x2.fffffffffffffffcp+0)));
    try std.testing.expectEqual(0x1.000001b0ee6708fp+0, gamma(@as(f80, 0x2.000004p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f80, 0x2p+0)));
    try std.testing.expectEqual(0x1.0000000000000d88p+0, gamma(@as(f80, 0x2.0000000000002p+0)));
    try std.testing.expectEqual(0x1.0000000000000002p+0, gamma(@as(f80, 0x2.0000000000000004p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f80, 0x2p+0)));
    try std.testing.expectEqual(0xf.fffff2788d16cb5p-4, gamma(@as(f80, 0x1.fffffep+0)));
    try std.testing.expectEqual(0xf.ffffffffffff93cp-4, gamma(@as(f80, 0x1.fffffffffffffp+0)));
    try std.testing.expectEqual(0xf.fffffffffffffffp-4, gamma(@as(f80, 0x1.fffffffffffffffep+0)));
    try std.testing.expectEqual(0xf.ffffed877342ddp-4, gamma(@as(f80, 0x1.000002p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f80, 0x1p+0)));
    try std.testing.expectEqual(0xf.ffffffffffff6c4p-4, gamma(@as(f80, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(0xf.fffffffffffffffp-4, gamma(@as(f80, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f80, 0x1p+0)));
    try std.testing.expectEqual(0x1.00000093c468e0bp+0, gamma(@as(f80, 0xf.fffffp-4)));
    try std.testing.expectEqual(0x1.000000000000049ep+0, gamma(@as(f80, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f80, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(-0x1.0000006c3b9985fp+24, gamma(@as(f80, -0xf.fffffp-4)));
    try std.testing.expectEqual(-0x2.00000000000006c4p+52, gamma(@as(f80, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(-0x1p+64, gamma(@as(f80, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(0x7.fffff93c46ab65a8p+20, gamma(@as(f80, -0x1.000002p+0)));
    try std.testing.expectEqual(0xf.ffffffffffff93cp+48, gamma(@as(f80, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(0x7.fffffffffffffff8p+60, gamma(@as(f80, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(0x4.00000761dcdedcd8p+20, gamma(@as(f80, -0x1.fffffep+0)));
    try std.testing.expectEqual(0x8.000000000000762p+48, gamma(@as(f80, -0x1.fffffffffffffp+0)));
    try std.testing.expectEqual(0x4.0000000000000008p+60, gamma(@as(f80, -0x1.fffffffffffffffep+0)));
    try std.testing.expectEqual(-0x1.fffff89e237b0d72p+20, gamma(@as(f80, -0x2.000004p+0)));
    try std.testing.expectEqual(-0x3.ffffffffffff89e4p+48, gamma(@as(f80, -0x2.0000000000002p+0)));
    try std.testing.expectEqual(-0x1.fffffffffffffff8p+60, gamma(@as(f80, -0x2.0000000000000004p+0)));
    try std.testing.expectEqual(-0xa.aaaae042d3c4cc4p+16, gamma(@as(f80, -0x2.fffffcp+0)));
    try std.testing.expectEqual(-0x1.5555555555558aeep+48, gamma(@as(f80, -0x2.ffffffffffffep+0)));
    try std.testing.expectEqual(-0xa.aaaaaaaaaaaaaaep+56, gamma(@as(f80, -0x2.fffffffffffffffcp+0)));
    try std.testing.expectEqual(0xa.aaaa7512849ed9bp+16, gamma(@as(f80, -0x3.000004p+0)));
    try std.testing.expectEqual(0x1.5555555555551fbep+48, gamma(@as(f80, -0x3.0000000000002p+0)));
    try std.testing.expectEqual(0xa.aaaaaaaaaaaaaa7p+56, gamma(@as(f80, -0x3.0000000000000004p+0)));
    try std.testing.expectEqual(0x2.aaaababb5fabee7p+16, gamma(@as(f80, -0x3.fffffcp+0)));
    try std.testing.expectEqual(0x5.555555555556566p+44, gamma(@as(f80, -0x3.ffffffffffffep+0)));
    try std.testing.expectEqual(0x2.aaaaaaaaaaaaaabcp+56, gamma(@as(f80, -0x3.fffffffffffffffcp+0)));
    try std.testing.expectEqual(-0x1.55554544a1a9a1e4p+16, gamma(@as(f80, -0x4.000008p+0)));
    try std.testing.expectEqual(-0x2.aaaaaaaaaaa9a9ap+44, gamma(@as(f80, -0x4.0000000000004p+0)));
    try std.testing.expectEqual(-0x1.5555555555555546p+56, gamma(@as(f80, -0x4.0000000000000008p+0)));
    try std.testing.expectEqual(-0x4.44447e809018a708p+12, gamma(@as(f80, -0x4.fffff8p+0)));
    try std.testing.expectEqual(-0x8.88888888888c2c5p+40, gamma(@as(f80, -0x4.ffffffffffffcp+0)));
    try std.testing.expectEqual(-0x4.444444444444448p+52, gamma(@as(f80, -0x4.fffffffffffffff8p+0)));
    try std.testing.expectEqual(0x4.44440a07fedb92d8p+12, gamma(@as(f80, -0x5.000008p+0)));
    try std.testing.expectEqual(0x8.888888888884e4cp+40, gamma(@as(f80, -0x5.0000000000004p+0)));
    try std.testing.expectEqual(0x4.4444444444444408p+52, gamma(@as(f80, -0x5.0000000000000008p+0)));
    try std.testing.expectEqual(0xb.60b6b5d7c934328p+8, gamma(@as(f80, -0x5.fffff8p+0)));
    try std.testing.expectEqual(0x1.6c16c16c16c2168ep+40, gamma(@as(f80, -0x5.ffffffffffffcp+0)));
    try std.testing.expectEqual(0xb.60b60b60b60b616p+48, gamma(@as(f80, -0x5.fffffffffffffff8p+0)));
    try std.testing.expectEqual(-0xb.60b560e9b5c85p+8, gamma(@as(f80, -0x6.000008p+0)));
    try std.testing.expectEqual(-0x1.6c16c16c16c0c1ap+40, gamma(@as(f80, -0x6.0000000000004p+0)));
    try std.testing.expectEqual(-0xb.60b60b60b60b601p+48, gamma(@as(f80, -0x6.0000000000000008p+0)));
    try std.testing.expectEqual(-0x1.a01a1bd5ccde202p+8, gamma(@as(f80, -0x6.fffff8p+0)));
    try std.testing.expectEqual(-0x3.403403403404e39p+36, gamma(@as(f80, -0x6.ffffffffffffcp+0)));
    try std.testing.expectEqual(-0x1.a01a01a01a01a034p+48, gamma(@as(f80, -0x6.fffffffffffffff8p+0)));
    try std.testing.expectEqual(0x1.a019e76a6a142418p+8, gamma(@as(f80, -0x7.000008p+0)));
    try std.testing.expectEqual(0x3.4034034034019cd8p+36, gamma(@as(f80, -0x7.0000000000004p+0)));
    try std.testing.expectEqual(0x1.a01a01a01a01ap+48, gamma(@as(f80, -0x7.0000000000000008p+0)));
    try std.testing.expectEqual(0x3.40343aebcdf72c1p+4, gamma(@as(f80, -0x7.fffff8p+0)));
    try std.testing.expectEqual(0x6.806806806809fb2p+32, gamma(@as(f80, -0x7.ffffffffffffcp+0)));
    try std.testing.expectEqual(0x3.403403403403406cp+44, gamma(@as(f80, -0x7.fffffffffffffff8p+0)));
    try std.testing.expectEqual(-0x1.a019c9f48981c2aep+4, gamma(@as(f80, -0x8.00001p+0)));
    try std.testing.expectEqual(-0x3.4034034033ffc57cp+32, gamma(@as(f80, -0x8.0000000000008p+0)));
    try std.testing.expectEqual(-0x1.a01a01a01a019fe2p+44, gamma(@as(f80, -0x8.000000000000001p+0)));
    try std.testing.expectEqual(0x4.9f949bd5f3629adp-4, gamma(@as(f80, -0x9.fffffp+0)));
    try std.testing.expectEqual(0x9.3f27dbbc4fb918fp+24, gamma(@as(f80, -0x9.ffffffffffff8p+0)));
    try std.testing.expectEqual(0x4.9f93edde27d71d68p+36, gamma(@as(f80, -0x9.fffffffffffffffp+0)));
    try std.testing.expectEqual(-0x4.9f933fe684a2dc1p-4, gamma(@as(f80, -0xa.00001p+0)));
    try std.testing.expectEqual(-0x9.3f27dbbc4fa35ap+24, gamma(@as(f80, -0xa.0000000000008p+0)));
    try std.testing.expectEqual(-0x4.9f93edde27d71c1p+36, gamma(@as(f80, -0xa.000000000000001p+0)));
    try std.testing.expectEqual(0x3.ca86e2f011ecb5bp-44, gamma(@as(f80, -0x1.3ffffep+4)));
    try std.testing.expectEqual(0x7.950ae90080a028ep-16, gamma(@as(f80, -0x1.3ffffffffffffp+4)));
    try std.testing.expectEqual(0x3.ca8574804044a264p-4, gamma(@as(f80, -0x1.3ffffffffffffffep+4)));
    try std.testing.expectEqual(-0x3.ca8406112a1d38bp-44, gamma(@as(f80, -0x1.400002p+4)));
    try std.testing.expectEqual(-0x7.950ae90080725afp-16, gamma(@as(f80, -0x1.4000000000001p+4)));
    try std.testing.expectEqual(-0x3.ca85748040449f88p-4, gamma(@as(f80, -0x1.4000000000000002p+4)));
    try std.testing.expectEqual(0x9.c99a5695c570514p-92, gamma(@as(f80, -0x1.dffffep+4)));
    try std.testing.expectEqual(0x1.3932c5047d65147ep-60, gamma(@as(f80, -0x1.dffffffffffffp+4)));
    try std.testing.expectEqual(0x9.c9962823eb07349p-52, gamma(@as(f80, -0x1.dffffffffffffffep+4)));
    try std.testing.expectEqual(-0x9.c991f9b45972556p-92, gamma(@as(f80, -0x1.e00002p+4)));
    try std.testing.expectEqual(-0x1.3932c5047d5cb79cp-60, gamma(@as(f80, -0x1.e000000000001p+4)));
    try std.testing.expectEqual(-0x9.c9962823eb072c3p-52, gamma(@as(f80, -0x1.e000000000000002p+4)));
    try std.testing.expectEqual(0x7.2a41f1f1fa7ab86p-144, gamma(@as(f80, -0x2.7ffffcp+4)));
    try std.testing.expectEqual(0xe.5476a15095db947p-116, gamma(@as(f80, -0x2.7fffffffffffep+4)));
    try std.testing.expectEqual(0x7.2a3b50a84ab8c6a8p-104, gamma(@as(f80, -0x2.7ffffffffffffffcp+4)));
    try std.testing.expectEqual(-0x7.2a34af6633d2b3a8p-144, gamma(@as(f80, -0x2.800004p+4)));
    try std.testing.expectEqual(-0xe.5476a15095076bbp-116, gamma(@as(f80, -0x2.8000000000002p+4)));
    try std.testing.expectEqual(-0x7.2a3b50a84ab8b968p-104, gamma(@as(f80, -0x2.8000000000000004p+4)));
    try std.testing.expectEqual(-0x2.cbced32c2df66774p-148, gamma(@as(f80, -0x2.8ffffcp+4)));
    try std.testing.expectEqual(-0x5.979870e740b9dd68p-120, gamma(@as(f80, -0x2.8fffffffffffep+4)));
    try std.testing.expectEqual(-0x2.cbcc3873a0481b98p-108, gamma(@as(f80, -0x2.8ffffffffffffffcp+4)));
    try std.testing.expectEqual(0x2.cbc99dbe11b36858p-148, gamma(@as(f80, -0x2.900004p+4)));
    try std.testing.expectEqual(0x5.979870e740668688p-120, gamma(@as(f80, -0x2.9000000000002p+4)));
    try std.testing.expectEqual(0x2.cbcc3873a048166p-108, gamma(@as(f80, -0x2.9000000000000004p+4)));
    try std.testing.expectEqual(0x1.10b05211e13c736ap-152, gamma(@as(f80, -0x2.9ffffcp+4)));
    try std.testing.expectEqual(0x2.215ea4ea61cd009cp-124, gamma(@as(f80, -0x2.9fffffffffffep+4)));
    try std.testing.expectEqual(0x1.10af527530de846cp-112, gamma(@as(f80, -0x2.9ffffffffffffffcp+4)));
    try std.testing.expectEqual(-0x1.10ae52d9a7c6190ap-152, gamma(@as(f80, -0x2.a00004p+4)));
    try std.testing.expectEqual(-0x2.215ea4ea61ad0d18p-124, gamma(@as(f80, -0x2.a000000000002p+4)));
    try std.testing.expectEqual(-0x1.10af527530de826cp-112, gamma(@as(f80, -0x2.a000000000000004p+4)));
    try std.testing.expectEqual(0xd.d9c54ba29fa7f03p-200, gamma(@as(f80, -0x3.1ffffcp+4)));
    try std.testing.expectEqual(0x1.bb36f6e12ce51698p-168, gamma(@as(f80, -0x3.1fffffffffffep+4)));
    try std.testing.expectEqual(0xd.d9b7b70966bc1dcp-160, gamma(@as(f80, -0x3.1ffffffffffffffcp+4)));
    try std.testing.expectEqual(-0xd.d9aa2280533fc1p-200, gamma(@as(f80, -0x3.200004p+4)));
    try std.testing.expectEqual(-0x1.bb36f6e12cc9ed74p-168, gamma(@as(f80, -0x3.2000000000002p+4)));
    try std.testing.expectEqual(-0xd.d9b7b70966bc02ap-160, gamma(@as(f80, -0x3.2000000000000004p+4)));
    try std.testing.expectEqual(0x1.2d4cd4e344c76df8p-508, gamma(@as(f80, -0x6.3ffff8p+4)));
    try std.testing.expectEqual(0x2.5a943cc0fd1b86bp-480, gamma(@as(f80, -0x6.3fffffffffffcp+4)));
    try std.testing.expectEqual(0x1.2d4a1e607e781214p-468, gamma(@as(f80, -0x6.3ffffffffffffff8p+4)));
    try std.testing.expectEqual(-0x1.2d4767e4f014d48cp-508, gamma(@as(f80, -0x6.400008p+4)));
    try std.testing.expectEqual(-0x2.5a943cc0fcc4b6ccp-480, gamma(@as(f80, -0x6.4000000000004p+4)));
    try std.testing.expectEqual(-0x1.2d4a1e607e780ca8p-468, gamma(@as(f80, -0x6.4000000000000008p+4)));
    try std.testing.expectEqual(0x8.d1a58f148fa4d62p-860, gamma(@as(f80, -0x9.5ffffp+4)));
    try std.testing.expectEqual(0x1.1a2f2af6406ada84p-828, gamma(@as(f80, -0x9.5fffffffffff8p+4)));
    try std.testing.expectEqual(0x8.d17957b201f5493p-820, gamma(@as(f80, -0x9.5ffffffffffffffp+4)));
    try std.testing.expectEqual(-0x8.d14d214a189b93bp-860, gamma(@as(f80, -0x9.60001p+4)));
    try std.testing.expectEqual(-0x1.1a2f2af640126cbap-828, gamma(@as(f80, -0x9.6000000000008p+4)));
    try std.testing.expectEqual(-0x8.d17957b201f4f0cp-820, gamma(@as(f80, -0x9.600000000000001p+4)));
    try std.testing.expectEqual(-0x5.fa2b7cb1342f0618p-1088, gamma(@as(f80, -0xb.4ffffp+4)));
    try std.testing.expectEqual(-0xb.f418cc537d2800dp-1060, gamma(@as(f80, -0xb.4fffffffffff8p+4)));
    try std.testing.expectEqual(-0x5.fa0c6629bd9b6e18p-1048, gamma(@as(f80, -0xb.4ffffffffffffffp+4)));
    try std.testing.expectEqual(0x5.f9ed505798c523e8p-1088, gamma(@as(f80, -0xb.50001p+4)));
    try std.testing.expectEqual(0xb.f418cc5379453b4p-1060, gamma(@as(f80, -0xb.5000000000008p+4)));
    try std.testing.expectEqual(0x5.fa0c6629bd9b2ffp-1048, gamma(@as(f80, -0xb.500000000000001p+4)));
    try std.testing.expectEqual(0x8.6853b8676d944b5p-1096, gamma(@as(f80, -0xb.5ffffp+4)));
    try std.testing.expectEqual(0x1.0d04fe453ad3bd2p-1064, gamma(@as(f80, -0xb.5fffffffffff8p+4)));
    try std.testing.expectEqual(0x8.6827f229d53fe6ep-1056, gamma(@as(f80, -0xb.5ffffffffffffffp+4)));
    try std.testing.expectEqual(-0x8.67fc2cebc2f23e2p-1096, gamma(@as(f80, -0xb.60001p+4)));
    try std.testing.expectEqual(-0x1.0d04fe453a7c31a6p-1064, gamma(@as(f80, -0xb.6000000000008p+4)));
    try std.testing.expectEqual(-0x8.6827f229d53f8f5p-1056, gamma(@as(f80, -0xb.600000000000001p+4)));
    try std.testing.expectEqual(-0xb.c2e7e440d1188c1p-1104, gamma(@as(f80, -0xb.6ffffp+4)));
    try std.testing.expectEqual(-0x1.785552e9f05ed314p-1072, gamma(@as(f80, -0xb.6fffffffffff8p+4)));
    try std.testing.expectEqual(-0xb.c2aa974f810c74p-1064, gamma(@as(f80, -0xb.6ffffffffffffffp+4)));
    try std.testing.expectEqual(0xb.c26d4bc450a5bc9p-1104, gamma(@as(f80, -0xb.70001p+4)));
    try std.testing.expectEqual(0x1.785552e9efe43a98p-1072, gamma(@as(f80, -0xb.7000000000008p+4)));
    try std.testing.expectEqual(0xb.c2aa974f810bf96p-1064, gamma(@as(f80, -0xb.700000000000001p+4)));
    try std.testing.expectEqual(0x1.05d1632f1f3e377ap-1108, gamma(@as(f80, -0xb.7ffffp+4)));
    try std.testing.expectEqual(0x2.0b981a509c577f38p-1080, gamma(@as(f80, -0xb.7fffffffffff8p+4)));
    try std.testing.expectEqual(0x1.05cc0d284e011538p-1068, gamma(@as(f80, -0xb.7ffffffffffffffp+4)));
    try std.testing.expectEqual(-0x1.05c6b740afc189ep-1108, gamma(@as(f80, -0xb.80001p+4)));
    try std.testing.expectEqual(-0x2.0b981a509bacc054p-1080, gamma(@as(f80, -0xb.8000000000008p+4)));
    try std.testing.expectEqual(-0x1.05cc0d284e010a8cp-1068, gamma(@as(f80, -0xb.800000000000001p+4)));
    try std.testing.expectEqual(0x3.a18e29bac973933p-1140, gamma(@as(f80, -0xb.bffffp+4)));
    try std.testing.expectEqual(0x7.42f647bca86c528p-1112, gamma(@as(f80, -0xb.bfffffffffff8p+4)));
    try std.testing.expectEqual(0x3.a17b23de539e0f2p-1100, gamma(@as(f80, -0xb.bffffffffffffffp+4)));
    try std.testing.expectEqual(-0x3.a1681e71734405bcp-1140, gamma(@as(f80, -0xb.c0001p+4)));
    try std.testing.expectEqual(-0x7.42f647bca60b9de8p-1112, gamma(@as(f80, -0xb.c000000000008p+4)));
    try std.testing.expectEqual(-0x3.a17b23de539de914p-1100, gamma(@as(f80, -0xb.c00000000000001p+4)));
    try std.testing.expectEqual(-0x4.eb1490744e9508c8p-1148, gamma(@as(f80, -0xb.cffffp+4)));
    try std.testing.expectEqual(-0x9.d5f58b282beb2e5p-1120, gamma(@as(f80, -0xb.cfffffffffff8p+4)));
    try std.testing.expectEqual(-0x4.eafac59415275c48p-1108, gamma(@as(f80, -0xb.cffffffffffffffp+4)));
    try std.testing.expectEqual(0x4.eae0fb4b4576d3fp-1148, gamma(@as(f80, -0xb.d0001p+4)));
    try std.testing.expectEqual(0x9.d5f58b2828b1dbcp-1120, gamma(@as(f80, -0xb.d000000000008p+4)));
    try std.testing.expectEqual(0x4.eafac594152728b8p-1108, gamma(@as(f80, -0xb.d00000000000001p+4)));
    try std.testing.expectEqual(0x6.a071f95f54494e5p-1156, gamma(@as(f80, -0xb.dffffp+4)));
    try std.testing.expectEqual(0xd.409e5fdfe4f1fbp-1128, gamma(@as(f80, -0xb.dfffffffffff8p+4)));
    try std.testing.expectEqual(0x6.a04f2feff162d8p-1116, gamma(@as(f80, -0xb.dffffffffffffffp+4)));
    try std.testing.expectEqual(-0x6.a02c674cee90e1p-1156, gamma(@as(f80, -0xb.e0001p+4)));
    try std.testing.expectEqual(-0xd.409e5fdfe098d9ep-1128, gamma(@as(f80, -0xb.e000000000008p+4)));
    try std.testing.expectEqual(-0x6.a04f2feff162927p-1116, gamma(@as(f80, -0xb.e00000000000001p+4)));
    try std.testing.expectEqual(-0x8.e1c509b9188f73dp-1164, gamma(@as(f80, -0xb.effffp+4)));
    try std.testing.expectEqual(-0x1.1c32cbb79d3b2faep-1132, gamma(@as(f80, -0xb.efffffffffff8p+4)));
    try std.testing.expectEqual(-0x8.e1965dbce864508p-1124, gamma(@as(f80, -0xb.effffffffffffffp+4)));
    try std.testing.expectEqual(0x8.e167b2d322aba2p-1164, gamma(@as(f80, -0xb.f0001p+4)));
    try std.testing.expectEqual(0x1.1c32cbb79cddd8c8p-1132, gamma(@as(f80, -0xb.f000000000008p+4)));
    try std.testing.expectEqual(0x8.e1965dbce863f32p-1124, gamma(@as(f80, -0xb.f00000000000001p+4)));
    try std.testing.expectEqual(0x1.3b0027aed7d78dfep+12, gamma(@as(f80, 0x8.00001p+0)));
    try std.testing.expectEqual(0x1.3bp+12, gamma(@as(f80, 0x8p+0)));
    try std.testing.expectEqual(0x1.3b00000000013d76p+12, gamma(@as(f80, 0x8.0000000000008p+0)));
    try std.testing.expectEqual(0x1.3b00000000000028p+12, gamma(@as(f80, 0x8.000000000000001p+0)));
    try std.testing.expectEqual(0x1.3bp+12, gamma(@as(f80, 0x8p+0)));
    try std.testing.expectEqual(0x1.3affec289603de8p+12, gamma(@as(f80, 0x7.fffff8p+0)));
    try std.testing.expectEqual(0x1.3affffffffff6144p+12, gamma(@as(f80, 0x7.ffffffffffffcp+0)));
    try std.testing.expectEqual(0x1.3affffffffffffecp+12, gamma(@as(f80, 0x7.fffffffffffffff8p+0)));
    try std.testing.expectEqual(0x2.d0002a233e27fbd8p+8, gamma(@as(f80, 0x7.000008p+0)));
    try std.testing.expectEqual(0x2.dp+8, gamma(@as(f80, 0x7p+0)));
    try std.testing.expectEqual(0x2.d000000000015118p+8, gamma(@as(f80, 0x7.0000000000004p+0)));
    try std.testing.expectEqual(0x2.d00000000000002cp+8, gamma(@as(f80, 0x7.0000000000000008p+0)));
    try std.testing.expectEqual(0x2.dp+8, gamma(@as(f80, 0x7p+0)));
    try std.testing.expectEqual(0x2.cfffd5dcc46af8ep+8, gamma(@as(f80, 0x6.fffff8p+0)));
    try std.testing.expectEqual(0x2.cffffffffffeaee8p+8, gamma(@as(f80, 0x6.ffffffffffffcp+0)));
    try std.testing.expectEqual(0x2.cfffffffffffffd4p+8, gamma(@as(f80, 0x6.fffffffffffffff8p+0)));
    try std.testing.expectEqual(0x7.8000665dfa8cccfp+4, gamma(@as(f80, 0x6.000008p+0)));
    try std.testing.expectEqual(0x7.8p+4, gamma(@as(f80, 0x6p+0)));
    try std.testing.expectEqual(0x7.80000000000332fp+4, gamma(@as(f80, 0x6.0000000000004p+0)));
    try std.testing.expectEqual(0x7.8000000000000068p+4, gamma(@as(f80, 0x6.0000000000000008p+0)));
    try std.testing.expectEqual(0x7.8p+4, gamma(@as(f80, 0x6p+0)));
    try std.testing.expectEqual(0x7.7fff99a20b3f6fcp+4, gamma(@as(f80, 0x5.fffff8p+0)));
    try std.testing.expectEqual(0x7.7ffffffffffccd1p+4, gamma(@as(f80, 0x5.ffffffffffffcp+0)));
    try std.testing.expectEqual(0x7.7fffffffffffff98p+4, gamma(@as(f80, 0x5.fffffffffffffff8p+0)));
    try std.testing.expectEqual(0x1.80001212cb98d7b8p+4, gamma(@as(f80, 0x5.000008p+0)));
    try std.testing.expectEqual(0x1.8p+4, gamma(@as(f80, 0x5p+0)));
    try std.testing.expectEqual(0x1.8000000000009096p+4, gamma(@as(f80, 0x5.0000000000004p+0)));
    try std.testing.expectEqual(0x1.8000000000000012p+4, gamma(@as(f80, 0x5.0000000000000008p+0)));
    try std.testing.expectEqual(0x1.8p+4, gamma(@as(f80, 0x5p+0)));
    try std.testing.expectEqual(0x1.7fffeded35562b7cp+4, gamma(@as(f80, 0x4.fffff8p+0)));
    try std.testing.expectEqual(0x1.7fffffffffff6f6ap+4, gamma(@as(f80, 0x4.ffffffffffffcp+0)));
    try std.testing.expectEqual(0x1.7fffffffffffffeep+4, gamma(@as(f80, 0x4.fffffffffffffff8p+0)));
    try std.testing.expectEqual(0x6.00003c4b2deac88p+0, gamma(@as(f80, 0x4.000008p+0)));
    try std.testing.expectEqual(0x6p+0, gamma(@as(f80, 0x4p+0)));
    try std.testing.expectEqual(0x6.000000000001e258p+0, gamma(@as(f80, 0x4.0000000000004p+0)));
    try std.testing.expectEqual(0x6.000000000000004p+0, gamma(@as(f80, 0x4.0000000000000008p+0)));
    try std.testing.expectEqual(0x6p+0, gamma(@as(f80, 0x4p+0)));
    try std.testing.expectEqual(0x5.ffffe1da6a16afc8p+0, gamma(@as(f80, 0x3.fffffcp+0)));
    try std.testing.expectEqual(0x5.ffffffffffff0edp+0, gamma(@as(f80, 0x3.ffffffffffffep+0)));
    try std.testing.expectEqual(0x5.ffffffffffffffep+0, gamma(@as(f80, 0x3.fffffffffffffffcp+0)));
    try std.testing.expectEqual(0x2.00000761dcd4d598p+0, gamma(@as(f80, 0x3.000004p+0)));
    try std.testing.expectEqual(0x2p+0, gamma(@as(f80, 0x3p+0)));
    try std.testing.expectEqual(0x2.0000000000003b1p+0, gamma(@as(f80, 0x3.0000000000002p+0)));
    try std.testing.expectEqual(0x2.0000000000000008p+0, gamma(@as(f80, 0x3.0000000000000004p+0)));
    try std.testing.expectEqual(0x2p+0, gamma(@as(f80, 0x3p+0)));
    try std.testing.expectEqual(0x1.fffff89e23530d72p+0, gamma(@as(f80, 0x2.fffffcp+0)));
    try std.testing.expectEqual(0x1.ffffffffffffc4f2p+0, gamma(@as(f80, 0x2.ffffffffffffep+0)));
    try std.testing.expectEqual(0x1.fffffffffffffff8p+0, gamma(@as(f80, 0x2.fffffffffffffffcp+0)));
    try std.testing.expectEqual(0x1.000001b0ee6708fp+0, gamma(@as(f80, 0x2.000004p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f80, 0x2p+0)));
    try std.testing.expectEqual(0x1.0000000000000d88p+0, gamma(@as(f80, 0x2.0000000000002p+0)));
    try std.testing.expectEqual(0x1.0000000000000002p+0, gamma(@as(f80, 0x2.0000000000000004p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f80, 0x2p+0)));
    try std.testing.expectEqual(0xf.fffff2788d16cb5p-4, gamma(@as(f80, 0x1.fffffep+0)));
    try std.testing.expectEqual(0xf.ffffffffffff93cp-4, gamma(@as(f80, 0x1.fffffffffffffp+0)));
    try std.testing.expectEqual(0xf.fffffffffffffffp-4, gamma(@as(f80, 0x1.fffffffffffffffep+0)));
    try std.testing.expectEqual(0xf.ffffed877342ddp-4, gamma(@as(f80, 0x1.000002p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f80, 0x1p+0)));
    try std.testing.expectEqual(0xf.ffffffffffff6c4p-4, gamma(@as(f80, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(0xf.fffffffffffffffp-4, gamma(@as(f80, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f80, 0x1p+0)));
    try std.testing.expectEqual(0x1.00000093c468e0bp+0, gamma(@as(f80, 0xf.fffffp-4)));
    try std.testing.expectEqual(0x1.000000000000049ep+0, gamma(@as(f80, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f80, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(-0x1.0000006c3b9985fp+24, gamma(@as(f80, -0xf.fffffp-4)));
    try std.testing.expectEqual(-0x2.00000000000006c4p+52, gamma(@as(f80, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(-0x1p+64, gamma(@as(f80, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(0x7.fffff93c46ab65a8p+20, gamma(@as(f80, -0x1.000002p+0)));
    try std.testing.expectEqual(0xf.ffffffffffff93cp+48, gamma(@as(f80, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(0x7.fffffffffffffff8p+60, gamma(@as(f80, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(0x4.00000761dcdedcd8p+20, gamma(@as(f80, -0x1.fffffep+0)));
    try std.testing.expectEqual(0x8.000000000000762p+48, gamma(@as(f80, -0x1.fffffffffffffp+0)));
    try std.testing.expectEqual(0x4.0000000000000008p+60, gamma(@as(f80, -0x1.fffffffffffffffep+0)));
    try std.testing.expectEqual(-0x1.fffff89e237b0d72p+20, gamma(@as(f80, -0x2.000004p+0)));
    try std.testing.expectEqual(-0x3.ffffffffffff89e4p+48, gamma(@as(f80, -0x2.0000000000002p+0)));
    try std.testing.expectEqual(-0x1.fffffffffffffff8p+60, gamma(@as(f80, -0x2.0000000000000004p+0)));
    try std.testing.expectEqual(-0xa.aaaae042d3c4cc4p+16, gamma(@as(f80, -0x2.fffffcp+0)));
    try std.testing.expectEqual(-0x1.5555555555558aeep+48, gamma(@as(f80, -0x2.ffffffffffffep+0)));
    try std.testing.expectEqual(-0xa.aaaaaaaaaaaaaaep+56, gamma(@as(f80, -0x2.fffffffffffffffcp+0)));
    try std.testing.expectEqual(0xa.aaaa7512849ed9bp+16, gamma(@as(f80, -0x3.000004p+0)));
    try std.testing.expectEqual(0x1.5555555555551fbep+48, gamma(@as(f80, -0x3.0000000000002p+0)));
    try std.testing.expectEqual(0xa.aaaaaaaaaaaaaa7p+56, gamma(@as(f80, -0x3.0000000000000004p+0)));
    try std.testing.expectEqual(0x2.aaaababb5fabee7p+16, gamma(@as(f80, -0x3.fffffcp+0)));
    try std.testing.expectEqual(0x5.555555555556566p+44, gamma(@as(f80, -0x3.ffffffffffffep+0)));
    try std.testing.expectEqual(0x2.aaaaaaaaaaaaaabcp+56, gamma(@as(f80, -0x3.fffffffffffffffcp+0)));
    try std.testing.expectEqual(-0x1.55554544a1a9a1e4p+16, gamma(@as(f80, -0x4.000008p+0)));
    try std.testing.expectEqual(-0x2.aaaaaaaaaaa9a9ap+44, gamma(@as(f80, -0x4.0000000000004p+0)));
    try std.testing.expectEqual(-0x1.5555555555555546p+56, gamma(@as(f80, -0x4.0000000000000008p+0)));
    try std.testing.expectEqual(-0x4.44447e809018a708p+12, gamma(@as(f80, -0x4.fffff8p+0)));
    try std.testing.expectEqual(-0x8.88888888888c2c5p+40, gamma(@as(f80, -0x4.ffffffffffffcp+0)));
    try std.testing.expectEqual(-0x4.444444444444448p+52, gamma(@as(f80, -0x4.fffffffffffffff8p+0)));
    try std.testing.expectEqual(0x4.44440a07fedb92d8p+12, gamma(@as(f80, -0x5.000008p+0)));
    try std.testing.expectEqual(0x8.888888888884e4cp+40, gamma(@as(f80, -0x5.0000000000004p+0)));
    try std.testing.expectEqual(0x4.4444444444444408p+52, gamma(@as(f80, -0x5.0000000000000008p+0)));
    try std.testing.expectEqual(0xb.60b6b5d7c934328p+8, gamma(@as(f80, -0x5.fffff8p+0)));
    try std.testing.expectEqual(0x1.6c16c16c16c2168ep+40, gamma(@as(f80, -0x5.ffffffffffffcp+0)));
    try std.testing.expectEqual(0xb.60b60b60b60b616p+48, gamma(@as(f80, -0x5.fffffffffffffff8p+0)));
    try std.testing.expectEqual(-0xb.60b560e9b5c85p+8, gamma(@as(f80, -0x6.000008p+0)));
    try std.testing.expectEqual(-0x1.6c16c16c16c0c1ap+40, gamma(@as(f80, -0x6.0000000000004p+0)));
    try std.testing.expectEqual(-0xb.60b60b60b60b601p+48, gamma(@as(f80, -0x6.0000000000000008p+0)));
    try std.testing.expectEqual(-0x1.a01a1bd5ccde202p+8, gamma(@as(f80, -0x6.fffff8p+0)));
    try std.testing.expectEqual(-0x3.403403403404e39p+36, gamma(@as(f80, -0x6.ffffffffffffcp+0)));
    try std.testing.expectEqual(-0x1.a01a01a01a01a034p+48, gamma(@as(f80, -0x6.fffffffffffffff8p+0)));
    try std.testing.expectEqual(0x1.a019e76a6a142418p+8, gamma(@as(f80, -0x7.000008p+0)));
    try std.testing.expectEqual(0x3.4034034034019cd8p+36, gamma(@as(f80, -0x7.0000000000004p+0)));
    try std.testing.expectEqual(0x1.a01a01a01a01ap+48, gamma(@as(f80, -0x7.0000000000000008p+0)));
    try std.testing.expectEqual(0x3.40343aebcdf72c1p+4, gamma(@as(f80, -0x7.fffff8p+0)));
    try std.testing.expectEqual(0x6.806806806809fb2p+32, gamma(@as(f80, -0x7.ffffffffffffcp+0)));
    try std.testing.expectEqual(0x3.403403403403406cp+44, gamma(@as(f80, -0x7.fffffffffffffff8p+0)));
    try std.testing.expectEqual(-0x1.a019c9f48981c2aep+4, gamma(@as(f80, -0x8.00001p+0)));
    try std.testing.expectEqual(-0x3.4034034033ffc57cp+32, gamma(@as(f80, -0x8.0000000000008p+0)));
    try std.testing.expectEqual(-0x1.a01a01a01a019fe2p+44, gamma(@as(f80, -0x8.000000000000001p+0)));
    try std.testing.expectEqual(0x4.9f949bd5f3629adp-4, gamma(@as(f80, -0x9.fffffp+0)));
    try std.testing.expectEqual(0x9.3f27dbbc4fb918fp+24, gamma(@as(f80, -0x9.ffffffffffff8p+0)));
    try std.testing.expectEqual(0x4.9f93edde27d71d68p+36, gamma(@as(f80, -0x9.fffffffffffffffp+0)));
    try std.testing.expectEqual(-0x4.9f933fe684a2dc1p-4, gamma(@as(f80, -0xa.00001p+0)));
    try std.testing.expectEqual(-0x9.3f27dbbc4fa35ap+24, gamma(@as(f80, -0xa.0000000000008p+0)));
    try std.testing.expectEqual(-0x4.9f93edde27d71c1p+36, gamma(@as(f80, -0xa.000000000000001p+0)));
    try std.testing.expectEqual(0x3.ca86e2f011ecb5bp-44, gamma(@as(f80, -0x1.3ffffep+4)));
    try std.testing.expectEqual(0x7.950ae90080a028ep-16, gamma(@as(f80, -0x1.3ffffffffffffp+4)));
    try std.testing.expectEqual(0x3.ca8574804044a264p-4, gamma(@as(f80, -0x1.3ffffffffffffffep+4)));
    try std.testing.expectEqual(-0x3.ca8406112a1d38bp-44, gamma(@as(f80, -0x1.400002p+4)));
    try std.testing.expectEqual(-0x7.950ae90080725afp-16, gamma(@as(f80, -0x1.4000000000001p+4)));
    try std.testing.expectEqual(-0x3.ca85748040449f88p-4, gamma(@as(f80, -0x1.4000000000000002p+4)));
    try std.testing.expectEqual(0x9.c99a5695c570514p-92, gamma(@as(f80, -0x1.dffffep+4)));
    try std.testing.expectEqual(0x1.3932c5047d65147ep-60, gamma(@as(f80, -0x1.dffffffffffffp+4)));
    try std.testing.expectEqual(0x9.c9962823eb07349p-52, gamma(@as(f80, -0x1.dffffffffffffffep+4)));
    try std.testing.expectEqual(-0x9.c991f9b45972556p-92, gamma(@as(f80, -0x1.e00002p+4)));
    try std.testing.expectEqual(-0x1.3932c5047d5cb79cp-60, gamma(@as(f80, -0x1.e000000000001p+4)));
    try std.testing.expectEqual(-0x9.c9962823eb072c3p-52, gamma(@as(f80, -0x1.e000000000000002p+4)));
    try std.testing.expectEqual(0x7.2a41f1f1fa7ab86p-144, gamma(@as(f80, -0x2.7ffffcp+4)));
    try std.testing.expectEqual(0xe.5476a15095db947p-116, gamma(@as(f80, -0x2.7fffffffffffep+4)));
    try std.testing.expectEqual(0x7.2a3b50a84ab8c6a8p-104, gamma(@as(f80, -0x2.7ffffffffffffffcp+4)));
    try std.testing.expectEqual(-0x7.2a34af6633d2b3a8p-144, gamma(@as(f80, -0x2.800004p+4)));
    try std.testing.expectEqual(-0xe.5476a15095076bbp-116, gamma(@as(f80, -0x2.8000000000002p+4)));
    try std.testing.expectEqual(-0x7.2a3b50a84ab8b968p-104, gamma(@as(f80, -0x2.8000000000000004p+4)));
    try std.testing.expectEqual(-0x2.cbced32c2df66774p-148, gamma(@as(f80, -0x2.8ffffcp+4)));
    try std.testing.expectEqual(-0x5.979870e740b9dd68p-120, gamma(@as(f80, -0x2.8fffffffffffep+4)));
    try std.testing.expectEqual(-0x2.cbcc3873a0481b98p-108, gamma(@as(f80, -0x2.8ffffffffffffffcp+4)));
    try std.testing.expectEqual(0x2.cbc99dbe11b36858p-148, gamma(@as(f80, -0x2.900004p+4)));
    try std.testing.expectEqual(0x5.979870e740668688p-120, gamma(@as(f80, -0x2.9000000000002p+4)));
    try std.testing.expectEqual(0x2.cbcc3873a048166p-108, gamma(@as(f80, -0x2.9000000000000004p+4)));
    try std.testing.expectEqual(0x1.10b05211e13c736ap-152, gamma(@as(f80, -0x2.9ffffcp+4)));
    try std.testing.expectEqual(0x2.215ea4ea61cd009cp-124, gamma(@as(f80, -0x2.9fffffffffffep+4)));
    try std.testing.expectEqual(0x1.10af527530de846cp-112, gamma(@as(f80, -0x2.9ffffffffffffffcp+4)));
    try std.testing.expectEqual(-0x1.10ae52d9a7c6190ap-152, gamma(@as(f80, -0x2.a00004p+4)));
    try std.testing.expectEqual(-0x2.215ea4ea61ad0d18p-124, gamma(@as(f80, -0x2.a000000000002p+4)));
    try std.testing.expectEqual(-0x1.10af527530de826cp-112, gamma(@as(f80, -0x2.a000000000000004p+4)));
    try std.testing.expectEqual(0xd.d9c54ba29fa7f03p-200, gamma(@as(f80, -0x3.1ffffcp+4)));
    try std.testing.expectEqual(0x1.bb36f6e12ce51698p-168, gamma(@as(f80, -0x3.1fffffffffffep+4)));
    try std.testing.expectEqual(0xd.d9b7b70966bc1dcp-160, gamma(@as(f80, -0x3.1ffffffffffffffcp+4)));
    try std.testing.expectEqual(-0xd.d9aa2280533fc1p-200, gamma(@as(f80, -0x3.200004p+4)));
    try std.testing.expectEqual(-0x1.bb36f6e12cc9ed74p-168, gamma(@as(f80, -0x3.2000000000002p+4)));
    try std.testing.expectEqual(-0xd.d9b7b70966bc02ap-160, gamma(@as(f80, -0x3.2000000000000004p+4)));
    try std.testing.expectEqual(0x1.2d4cd4e344c76df8p-508, gamma(@as(f80, -0x6.3ffff8p+4)));
    try std.testing.expectEqual(0x2.5a943cc0fd1b86bp-480, gamma(@as(f80, -0x6.3fffffffffffcp+4)));
    try std.testing.expectEqual(0x1.2d4a1e607e781214p-468, gamma(@as(f80, -0x6.3ffffffffffffff8p+4)));
    try std.testing.expectEqual(-0x1.2d4767e4f014d48cp-508, gamma(@as(f80, -0x6.400008p+4)));
    try std.testing.expectEqual(-0x2.5a943cc0fcc4b6ccp-480, gamma(@as(f80, -0x6.4000000000004p+4)));
    try std.testing.expectEqual(-0x1.2d4a1e607e780ca8p-468, gamma(@as(f80, -0x6.4000000000000008p+4)));
    try std.testing.expectEqual(0x8.d1a58f148fa4d62p-860, gamma(@as(f80, -0x9.5ffffp+4)));
    try std.testing.expectEqual(0x1.1a2f2af6406ada84p-828, gamma(@as(f80, -0x9.5fffffffffff8p+4)));
    try std.testing.expectEqual(0x8.d17957b201f5493p-820, gamma(@as(f80, -0x9.5ffffffffffffffp+4)));
    try std.testing.expectEqual(-0x8.d14d214a189b93bp-860, gamma(@as(f80, -0x9.60001p+4)));
    try std.testing.expectEqual(-0x1.1a2f2af640126cbap-828, gamma(@as(f80, -0x9.6000000000008p+4)));
    try std.testing.expectEqual(-0x8.d17957b201f4f0cp-820, gamma(@as(f80, -0x9.600000000000001p+4)));
    try std.testing.expectEqual(-0x5.fa2b7cb1342f0618p-1088, gamma(@as(f80, -0xb.4ffffp+4)));
    try std.testing.expectEqual(-0xb.f418cc537d2800dp-1060, gamma(@as(f80, -0xb.4fffffffffff8p+4)));
    try std.testing.expectEqual(-0x5.fa0c6629bd9b6e18p-1048, gamma(@as(f80, -0xb.4ffffffffffffffp+4)));
    try std.testing.expectEqual(0x5.f9ed505798c523e8p-1088, gamma(@as(f80, -0xb.50001p+4)));
    try std.testing.expectEqual(0xb.f418cc5379453b4p-1060, gamma(@as(f80, -0xb.5000000000008p+4)));
    try std.testing.expectEqual(0x5.fa0c6629bd9b2ffp-1048, gamma(@as(f80, -0xb.500000000000001p+4)));
    try std.testing.expectEqual(0x8.6853b8676d944b5p-1096, gamma(@as(f80, -0xb.5ffffp+4)));
    try std.testing.expectEqual(0x1.0d04fe453ad3bd2p-1064, gamma(@as(f80, -0xb.5fffffffffff8p+4)));
    try std.testing.expectEqual(0x8.6827f229d53fe6ep-1056, gamma(@as(f80, -0xb.5ffffffffffffffp+4)));
    try std.testing.expectEqual(-0x8.67fc2cebc2f23e2p-1096, gamma(@as(f80, -0xb.60001p+4)));
    try std.testing.expectEqual(-0x1.0d04fe453a7c31a6p-1064, gamma(@as(f80, -0xb.6000000000008p+4)));
    try std.testing.expectEqual(-0x8.6827f229d53f8f5p-1056, gamma(@as(f80, -0xb.600000000000001p+4)));
    try std.testing.expectEqual(-0xb.c2e7e440d1188c1p-1104, gamma(@as(f80, -0xb.6ffffp+4)));
    try std.testing.expectEqual(-0x1.785552e9f05ed314p-1072, gamma(@as(f80, -0xb.6fffffffffff8p+4)));
    try std.testing.expectEqual(-0xb.c2aa974f810c74p-1064, gamma(@as(f80, -0xb.6ffffffffffffffp+4)));
    try std.testing.expectEqual(0xb.c26d4bc450a5bc9p-1104, gamma(@as(f80, -0xb.70001p+4)));
    try std.testing.expectEqual(0x1.785552e9efe43a98p-1072, gamma(@as(f80, -0xb.7000000000008p+4)));
    try std.testing.expectEqual(0xb.c2aa974f810bf96p-1064, gamma(@as(f80, -0xb.700000000000001p+4)));
    try std.testing.expectEqual(0x1.05d1632f1f3e377ap-1108, gamma(@as(f80, -0xb.7ffffp+4)));
    try std.testing.expectEqual(0x2.0b981a509c577f38p-1080, gamma(@as(f80, -0xb.7fffffffffff8p+4)));
    try std.testing.expectEqual(0x1.05cc0d284e011538p-1068, gamma(@as(f80, -0xb.7ffffffffffffffp+4)));
    try std.testing.expectEqual(-0x1.05c6b740afc189ep-1108, gamma(@as(f80, -0xb.80001p+4)));
    try std.testing.expectEqual(-0x2.0b981a509bacc054p-1080, gamma(@as(f80, -0xb.8000000000008p+4)));
    try std.testing.expectEqual(-0x1.05cc0d284e010a8cp-1068, gamma(@as(f80, -0xb.800000000000001p+4)));
    try std.testing.expectEqual(0x3.a18e29bac973933p-1140, gamma(@as(f80, -0xb.bffffp+4)));
    try std.testing.expectEqual(0x7.42f647bca86c528p-1112, gamma(@as(f80, -0xb.bfffffffffff8p+4)));
    try std.testing.expectEqual(0x3.a17b23de539e0f2p-1100, gamma(@as(f80, -0xb.bffffffffffffffp+4)));
    try std.testing.expectEqual(-0x3.a1681e71734405bcp-1140, gamma(@as(f80, -0xb.c0001p+4)));
    try std.testing.expectEqual(-0x7.42f647bca60b9de8p-1112, gamma(@as(f80, -0xb.c000000000008p+4)));
    try std.testing.expectEqual(-0x3.a17b23de539de914p-1100, gamma(@as(f80, -0xb.c00000000000001p+4)));
    try std.testing.expectEqual(-0x4.eb1490744e9508c8p-1148, gamma(@as(f80, -0xb.cffffp+4)));
    try std.testing.expectEqual(-0x9.d5f58b282beb2e5p-1120, gamma(@as(f80, -0xb.cfffffffffff8p+4)));
    try std.testing.expectEqual(-0x4.eafac59415275c48p-1108, gamma(@as(f80, -0xb.cffffffffffffffp+4)));
    try std.testing.expectEqual(0x4.eae0fb4b4576d3fp-1148, gamma(@as(f80, -0xb.d0001p+4)));
    try std.testing.expectEqual(0x9.d5f58b2828b1dbcp-1120, gamma(@as(f80, -0xb.d000000000008p+4)));
    try std.testing.expectEqual(0x4.eafac594152728b8p-1108, gamma(@as(f80, -0xb.d00000000000001p+4)));
    try std.testing.expectEqual(0x6.a071f95f54494e5p-1156, gamma(@as(f80, -0xb.dffffp+4)));
    try std.testing.expectEqual(0xd.409e5fdfe4f1fbp-1128, gamma(@as(f80, -0xb.dfffffffffff8p+4)));
    try std.testing.expectEqual(0x6.a04f2feff162d8p-1116, gamma(@as(f80, -0xb.dffffffffffffffp+4)));
    try std.testing.expectEqual(-0x6.a02c674cee90e1p-1156, gamma(@as(f80, -0xb.e0001p+4)));
    try std.testing.expectEqual(-0xd.409e5fdfe098d9ep-1128, gamma(@as(f80, -0xb.e000000000008p+4)));
    try std.testing.expectEqual(-0x6.a04f2feff162927p-1116, gamma(@as(f80, -0xb.e00000000000001p+4)));
    try std.testing.expectEqual(-0x8.e1c509b9188f73dp-1164, gamma(@as(f80, -0xb.effffp+4)));
    try std.testing.expectEqual(-0x1.1c32cbb79d3b2faep-1132, gamma(@as(f80, -0xb.efffffffffff8p+4)));
    try std.testing.expectEqual(-0x8.e1965dbce864508p-1124, gamma(@as(f80, -0xb.effffffffffffffp+4)));
    try std.testing.expectEqual(0x8.e167b2d322aba2p-1164, gamma(@as(f80, -0xb.f0001p+4)));
    try std.testing.expectEqual(0x1.1c32cbb79cddd8c8p-1132, gamma(@as(f80, -0xb.f000000000008p+4)));
    try std.testing.expectEqual(0x8.e1965dbce863f32p-1124, gamma(@as(f80, -0xb.f00000000000001p+4)));
    try std.testing.expectEqual(0xf.1f88ab042ff7085p-1624, gamma(@as(f80, -0xf.9ffffp+4)));
    try std.testing.expectEqual(0x1.e3e6a471e8ca39e2p-1592, gamma(@as(f80, -0xf.9fffffffffff8p+4)));
    try std.testing.expectEqual(0xf.1f35238f43b5eeep-1584, gamma(@as(f80, -0xf.9ffffffffffffffp+4)));
    try std.testing.expectEqual(-0xf.1ee19e1960e8838p-1624, gamma(@as(f80, -0xf.a0001p+4)));
    try std.testing.expectEqual(-0x1.e3e6a471e8232cf6p-1592, gamma(@as(f80, -0xf.a000000000008p+4)));
    try std.testing.expectEqual(-0xf.1f35238f43b547ep-1584, gamma(@as(f80, -0xf.a00000000000001p+4)));
    try std.testing.expectEqual(0xc.8678d8710ada4b6p-3756, gamma(@as(f80, -0x1.f3fffep+8)));
    try std.testing.expectEqual(0x1.90bba4f1c2ba52b8p-3724, gamma(@as(f80, -0x1.f3fffffffffffp+8)));
    try std.testing.expectEqual(0xc.85dd278e10f5cb2p-3716, gamma(@as(f80, -0x1.f3fffffffffffffep+8)));
    try std.testing.expectEqual(-0xc.85417edf037af34p-3756, gamma(@as(f80, -0x1.f40002p+8)));
    try std.testing.expectEqual(-0x1.90bba4f1c182f926p-3724, gamma(@as(f80, -0x1.f400000000001p+8)));
    try std.testing.expectEqual(-0xc.85dd278e10f493dp-3716, gamma(@as(f80, -0x1.f400000000000002p+8)));
    try std.testing.expectEqual(0x7.433bfad52f116278p-6076, gamma(@as(f80, -0x2.edfffcp+8)));
    try std.testing.expectEqual(0xe.84f75c0458390c3p-6048, gamma(@as(f80, -0x2.edffffffffffep+8)));
    try std.testing.expectEqual(0x7.427bae02261b355p-6036, gamma(@as(f80, -0x2.edfffffffffffffcp+8)));
    try std.testing.expectEqual(-0x7.41bb7690a9f2317p-6076, gamma(@as(f80, -0x2.ee0004p+8)));
    try std.testing.expectEqual(-0xe.84f75c044030c7fp-6048, gamma(@as(f80, -0x2.ee00000000002p+8)));
    try std.testing.expectEqual(-0x7.427bae022619b4c8p-6036, gamma(@as(f80, -0x2.ee00000000000004p+8)));
    try std.testing.expectEqual(0x1.84b976c2ef57b0dep-8516, gamma(@as(f80, -0x3.e7fffcp+8)));
    try std.testing.expectEqual(0x3.091f067a14e8282cp-8488, gamma(@as(f80, -0x3.e7ffffffffffep+8)));
    try std.testing.expectEqual(0x1.848f833d0924b534p-8476, gamma(@as(f80, -0x3.e7fffffffffffffcp+8)));
    try std.testing.expectEqual(-0x1.8465948dfc562cbap-8516, gamma(@as(f80, -0x3.e80004p+8)));
    try std.testing.expectEqual(-0x3.091f067a0faa04ep-8488, gamma(@as(f80, -0x3.e800000000002p+8)));
    try std.testing.expectEqual(-0x1.848f833d09246152p-8476, gamma(@as(f80, -0x3.e800000000000004p+8)));
    try std.testing.expectEqual(0x4.ca1e38696cc9387p-11052, gamma(@as(f80, -0x4.e1fff8p+8)));
    try std.testing.expectEqual(0x9.921a2cbd0d9296fp-11024, gamma(@as(f80, -0x4.e1ffffffffffcp+8)));
    try std.testing.expectEqual(0x4.c90d165e7e424f5p-11012, gamma(@as(f80, -0x4.e1fffffffffffff8p+8)));
    try std.testing.expectEqual(-0x4.c7fc351a014d05e8p-11052, gamma(@as(f80, -0x4.e20008p+8)));
    try std.testing.expectEqual(-0x9.921a2cbceb72625p-11024, gamma(@as(f80, -0x4.e200000000004p+8)));
    try std.testing.expectEqual(-0x4.c90d165e7e402d5p-11012, gamma(@as(f80, -0x4.e200000000000008p+8)));
    try std.testing.expectEqual(0x1.401ec2203b3432aap-13656, gamma(@as(f80, -0x5.dbfff8p+8)));
    try std.testing.expectEqual(0x2.7fab407c88e5794p-13628, gamma(@as(f80, -0x5.dbffffffffffcp+8)));
    try std.testing.expectEqual(0x1.3fd5a03e422a3d9ep-13616, gamma(@as(f80, -0x5.dbfffffffffffff8p+8)));
    try std.testing.expectEqual(-0x1.3f8c90181e39f8dep-13656, gamma(@as(f80, -0x5.dc0008p+8)));
    try std.testing.expectEqual(-0x2.7fab407c7fc258d8p-13628, gamma(@as(f80, -0x5.dc00000000004p+8)));
    try std.testing.expectEqual(-0x1.3fd5a03e4229ab6cp-13616, gamma(@as(f80, -0x5.dc00000000000008p+8)));
    try std.testing.expectEqual(0x4.084b5636bf26a37p-16324, gamma(@as(f80, -0x6.d5fff8p+8)));
    try std.testing.expectEqual(0x8.0eb51434948b528p-16296, gamma(@as(f80, -0x6.d5ffffffffffcp+8)));
    try std.testing.expectEqual(0x4.075a8a1a42c12708p-16284, gamma(@as(f80, -0x6.d5fffffffffffff8p+8)));
    try std.testing.expectEqual(-0x4.0669f97879582148p-16324, gamma(@as(f80, -0x6.d60008p+8)));
    try std.testing.expectEqual(-0x8.0eb51434767586fp-16296, gamma(@as(f80, -0x6.d600000000004p+8)));
    try std.testing.expectEqual(-0x4.075a8a1a42bf45a8p-16284, gamma(@as(f80, -0x6.d600000000000008p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f80, -0x6.e2fff8p+8)));
    try std.testing.expectEqual(-0x7.628p-16436, gamma(@as(f80, -0x6.e2ffffffffffcp+8)));
    try std.testing.expectEqual(-0x3.b15668p-16424, gamma(@as(f80, -0x6.e2fffffffffffff8p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f80, -0x6.e30008p+8)));
    try std.testing.expectEqual(0x7.628p-16436, gamma(@as(f80, -0x6.e300000000004p+8)));
    try std.testing.expectEqual(0x3.b15668p-16424, gamma(@as(f80, -0x6.e300000000000008p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f80, -0x6.e3fff8p+8)));
    try std.testing.expectEqual(0x1p-16444, gamma(@as(f80, -0x6.e3ffffffffffcp+8)));
    try std.testing.expectEqual(0x8.93p-16436, gamma(@as(f80, -0x6.e3fffffffffffff8p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f80, -0x6.e40008p+8)));
    try std.testing.expectEqual(-0x1p-16444, gamma(@as(f80, -0x6.e400000000004p+8)));
    try std.testing.expectEqual(-0x8.93p-16436, gamma(@as(f80, -0x6.e400000000000008p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f80, -0x6.e4fff8p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f80, -0x6.e4ffffffffffcp+8)));
    try std.testing.expectEqual(-0x1p-16444, gamma(@as(f80, -0x6.e4fffffffffffff8p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f80, -0x6.e50008p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f80, -0x6.e500000000004p+8)));
    try std.testing.expectEqual(0x1p-16444, gamma(@as(f80, -0x6.e500000000000008p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f80, -0x6.e5fff8p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f80, -0x6.e5ffffffffffcp+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f80, -0x6.e5fffffffffffff8p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f80, -0x6.e60008p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f80, -0x6.e600000000004p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f80, -0x6.e600000000000008p+8)));
    try std.testing.expectEqual(0x1.3b0027aed7d78dfep+12, gamma(@as(f80, 0x8.00001p+0)));
    try std.testing.expectEqual(0x1.3bp+12, gamma(@as(f80, 0x8p+0)));
    try std.testing.expectEqual(0x1.3b00000000013d76p+12, gamma(@as(f80, 0x8.0000000000008p+0)));
    try std.testing.expectEqual(0x1.3b00000000000028p+12, gamma(@as(f80, 0x8.000000000000001p+0)));
    try std.testing.expectEqual(0x1.3bp+12, gamma(@as(f80, 0x8p+0)));
    try std.testing.expectEqual(0x1.3affec289603de8p+12, gamma(@as(f80, 0x7.fffff8p+0)));
    try std.testing.expectEqual(0x1.3affffffffff6144p+12, gamma(@as(f80, 0x7.ffffffffffffcp+0)));
    try std.testing.expectEqual(0x1.3affffffffffffecp+12, gamma(@as(f80, 0x7.fffffffffffffff8p+0)));
    try std.testing.expectEqual(0x2.d0002a233e27fbd8p+8, gamma(@as(f80, 0x7.000008p+0)));
    try std.testing.expectEqual(0x2.dp+8, gamma(@as(f80, 0x7p+0)));
    try std.testing.expectEqual(0x2.d000000000015118p+8, gamma(@as(f80, 0x7.0000000000004p+0)));
    try std.testing.expectEqual(0x2.d00000000000002cp+8, gamma(@as(f80, 0x7.0000000000000008p+0)));
    try std.testing.expectEqual(0x2.dp+8, gamma(@as(f80, 0x7p+0)));
    try std.testing.expectEqual(0x2.cfffd5dcc46af8ep+8, gamma(@as(f80, 0x6.fffff8p+0)));
    try std.testing.expectEqual(0x2.cffffffffffeaee8p+8, gamma(@as(f80, 0x6.ffffffffffffcp+0)));
    try std.testing.expectEqual(0x2.cfffffffffffffd4p+8, gamma(@as(f80, 0x6.fffffffffffffff8p+0)));
    try std.testing.expectEqual(0x7.8000665dfa8cccfp+4, gamma(@as(f80, 0x6.000008p+0)));
    try std.testing.expectEqual(0x7.8p+4, gamma(@as(f80, 0x6p+0)));
    try std.testing.expectEqual(0x7.80000000000332fp+4, gamma(@as(f80, 0x6.0000000000004p+0)));
    try std.testing.expectEqual(0x7.8000000000000068p+4, gamma(@as(f80, 0x6.0000000000000008p+0)));
    try std.testing.expectEqual(0x7.8p+4, gamma(@as(f80, 0x6p+0)));
    try std.testing.expectEqual(0x7.7fff99a20b3f6fcp+4, gamma(@as(f80, 0x5.fffff8p+0)));
    try std.testing.expectEqual(0x7.7ffffffffffccd1p+4, gamma(@as(f80, 0x5.ffffffffffffcp+0)));
    try std.testing.expectEqual(0x7.7fffffffffffff98p+4, gamma(@as(f80, 0x5.fffffffffffffff8p+0)));
    try std.testing.expectEqual(0x1.80001212cb98d7b8p+4, gamma(@as(f80, 0x5.000008p+0)));
    try std.testing.expectEqual(0x1.8p+4, gamma(@as(f80, 0x5p+0)));
    try std.testing.expectEqual(0x1.8000000000009096p+4, gamma(@as(f80, 0x5.0000000000004p+0)));
    try std.testing.expectEqual(0x1.8000000000000012p+4, gamma(@as(f80, 0x5.0000000000000008p+0)));
    try std.testing.expectEqual(0x1.8p+4, gamma(@as(f80, 0x5p+0)));
    try std.testing.expectEqual(0x1.7fffeded35562b7cp+4, gamma(@as(f80, 0x4.fffff8p+0)));
    try std.testing.expectEqual(0x1.7fffffffffff6f6ap+4, gamma(@as(f80, 0x4.ffffffffffffcp+0)));
    try std.testing.expectEqual(0x1.7fffffffffffffeep+4, gamma(@as(f80, 0x4.fffffffffffffff8p+0)));
    try std.testing.expectEqual(0x6.00003c4b2deac88p+0, gamma(@as(f80, 0x4.000008p+0)));
    try std.testing.expectEqual(0x6p+0, gamma(@as(f80, 0x4p+0)));
    try std.testing.expectEqual(0x6.000000000001e258p+0, gamma(@as(f80, 0x4.0000000000004p+0)));
    try std.testing.expectEqual(0x6.000000000000004p+0, gamma(@as(f80, 0x4.0000000000000008p+0)));
    try std.testing.expectEqual(0x6p+0, gamma(@as(f80, 0x4p+0)));
    try std.testing.expectEqual(0x5.ffffe1da6a16afc8p+0, gamma(@as(f80, 0x3.fffffcp+0)));
    try std.testing.expectEqual(0x5.ffffffffffff0edp+0, gamma(@as(f80, 0x3.ffffffffffffep+0)));
    try std.testing.expectEqual(0x5.ffffffffffffffep+0, gamma(@as(f80, 0x3.fffffffffffffffcp+0)));
    try std.testing.expectEqual(0x2.00000761dcd4d598p+0, gamma(@as(f80, 0x3.000004p+0)));
    try std.testing.expectEqual(0x2p+0, gamma(@as(f80, 0x3p+0)));
    try std.testing.expectEqual(0x2.0000000000003b1p+0, gamma(@as(f80, 0x3.0000000000002p+0)));
    try std.testing.expectEqual(0x2.0000000000000008p+0, gamma(@as(f80, 0x3.0000000000000004p+0)));
    try std.testing.expectEqual(0x2p+0, gamma(@as(f80, 0x3p+0)));
    try std.testing.expectEqual(0x1.fffff89e23530d72p+0, gamma(@as(f80, 0x2.fffffcp+0)));
    try std.testing.expectEqual(0x1.ffffffffffffc4f2p+0, gamma(@as(f80, 0x2.ffffffffffffep+0)));
    try std.testing.expectEqual(0x1.fffffffffffffff8p+0, gamma(@as(f80, 0x2.fffffffffffffffcp+0)));
    try std.testing.expectEqual(0x1.000001b0ee6708fp+0, gamma(@as(f80, 0x2.000004p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f80, 0x2p+0)));
    try std.testing.expectEqual(0x1.0000000000000d88p+0, gamma(@as(f80, 0x2.0000000000002p+0)));
    try std.testing.expectEqual(0x1.0000000000000002p+0, gamma(@as(f80, 0x2.0000000000000004p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f80, 0x2p+0)));
    try std.testing.expectEqual(0xf.fffff2788d16cb5p-4, gamma(@as(f80, 0x1.fffffep+0)));
    try std.testing.expectEqual(0xf.ffffffffffff93cp-4, gamma(@as(f80, 0x1.fffffffffffffp+0)));
    try std.testing.expectEqual(0xf.fffffffffffffffp-4, gamma(@as(f80, 0x1.fffffffffffffffep+0)));
    try std.testing.expectEqual(0xf.ffffed877342ddp-4, gamma(@as(f80, 0x1.000002p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f80, 0x1p+0)));
    try std.testing.expectEqual(0xf.ffffffffffff6c4p-4, gamma(@as(f80, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(0xf.fffffffffffffffp-4, gamma(@as(f80, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f80, 0x1p+0)));
    try std.testing.expectEqual(0x1.00000093c468e0bp+0, gamma(@as(f80, 0xf.fffffp-4)));
    try std.testing.expectEqual(0x1.000000000000049ep+0, gamma(@as(f80, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f80, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(-0x1.0000006c3b9985fp+24, gamma(@as(f80, -0xf.fffffp-4)));
    try std.testing.expectEqual(-0x2.00000000000006c4p+52, gamma(@as(f80, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(-0x1p+64, gamma(@as(f80, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(0x7.fffff93c46ab65a8p+20, gamma(@as(f80, -0x1.000002p+0)));
    try std.testing.expectEqual(0xf.ffffffffffff93cp+48, gamma(@as(f80, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(0x7.fffffffffffffff8p+60, gamma(@as(f80, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(0x4.00000761dcdedcd8p+20, gamma(@as(f80, -0x1.fffffep+0)));
    try std.testing.expectEqual(0x8.000000000000762p+48, gamma(@as(f80, -0x1.fffffffffffffp+0)));
    try std.testing.expectEqual(0x4.0000000000000008p+60, gamma(@as(f80, -0x1.fffffffffffffffep+0)));
    try std.testing.expectEqual(-0x1.fffff89e237b0d72p+20, gamma(@as(f80, -0x2.000004p+0)));
    try std.testing.expectEqual(-0x3.ffffffffffff89e4p+48, gamma(@as(f80, -0x2.0000000000002p+0)));
    try std.testing.expectEqual(-0x1.fffffffffffffff8p+60, gamma(@as(f80, -0x2.0000000000000004p+0)));
    try std.testing.expectEqual(-0xa.aaaae042d3c4cc4p+16, gamma(@as(f80, -0x2.fffffcp+0)));
    try std.testing.expectEqual(-0x1.5555555555558aeep+48, gamma(@as(f80, -0x2.ffffffffffffep+0)));
    try std.testing.expectEqual(-0xa.aaaaaaaaaaaaaaep+56, gamma(@as(f80, -0x2.fffffffffffffffcp+0)));
    try std.testing.expectEqual(0xa.aaaa7512849ed9bp+16, gamma(@as(f80, -0x3.000004p+0)));
    try std.testing.expectEqual(0x1.5555555555551fbep+48, gamma(@as(f80, -0x3.0000000000002p+0)));
    try std.testing.expectEqual(0xa.aaaaaaaaaaaaaa7p+56, gamma(@as(f80, -0x3.0000000000000004p+0)));
    try std.testing.expectEqual(0x2.aaaababb5fabee7p+16, gamma(@as(f80, -0x3.fffffcp+0)));
    try std.testing.expectEqual(0x5.555555555556566p+44, gamma(@as(f80, -0x3.ffffffffffffep+0)));
    try std.testing.expectEqual(0x2.aaaaaaaaaaaaaabcp+56, gamma(@as(f80, -0x3.fffffffffffffffcp+0)));
    try std.testing.expectEqual(-0x1.55554544a1a9a1e4p+16, gamma(@as(f80, -0x4.000008p+0)));
    try std.testing.expectEqual(-0x2.aaaaaaaaaaa9a9ap+44, gamma(@as(f80, -0x4.0000000000004p+0)));
    try std.testing.expectEqual(-0x1.5555555555555546p+56, gamma(@as(f80, -0x4.0000000000000008p+0)));
    try std.testing.expectEqual(-0x4.44447e809018a708p+12, gamma(@as(f80, -0x4.fffff8p+0)));
    try std.testing.expectEqual(-0x8.88888888888c2c5p+40, gamma(@as(f80, -0x4.ffffffffffffcp+0)));
    try std.testing.expectEqual(-0x4.444444444444448p+52, gamma(@as(f80, -0x4.fffffffffffffff8p+0)));
    try std.testing.expectEqual(0x4.44440a07fedb92d8p+12, gamma(@as(f80, -0x5.000008p+0)));
    try std.testing.expectEqual(0x8.888888888884e4cp+40, gamma(@as(f80, -0x5.0000000000004p+0)));
    try std.testing.expectEqual(0x4.4444444444444408p+52, gamma(@as(f80, -0x5.0000000000000008p+0)));
    try std.testing.expectEqual(0xb.60b6b5d7c934328p+8, gamma(@as(f80, -0x5.fffff8p+0)));
    try std.testing.expectEqual(0x1.6c16c16c16c2168ep+40, gamma(@as(f80, -0x5.ffffffffffffcp+0)));
    try std.testing.expectEqual(0xb.60b60b60b60b616p+48, gamma(@as(f80, -0x5.fffffffffffffff8p+0)));
    try std.testing.expectEqual(-0xb.60b560e9b5c85p+8, gamma(@as(f80, -0x6.000008p+0)));
    try std.testing.expectEqual(-0x1.6c16c16c16c0c1ap+40, gamma(@as(f80, -0x6.0000000000004p+0)));
    try std.testing.expectEqual(-0xb.60b60b60b60b601p+48, gamma(@as(f80, -0x6.0000000000000008p+0)));
    try std.testing.expectEqual(-0x1.a01a1bd5ccde202p+8, gamma(@as(f80, -0x6.fffff8p+0)));
    try std.testing.expectEqual(-0x3.403403403404e39p+36, gamma(@as(f80, -0x6.ffffffffffffcp+0)));
    try std.testing.expectEqual(-0x1.a01a01a01a01a034p+48, gamma(@as(f80, -0x6.fffffffffffffff8p+0)));
    try std.testing.expectEqual(0x1.a019e76a6a142418p+8, gamma(@as(f80, -0x7.000008p+0)));
    try std.testing.expectEqual(0x3.4034034034019cd8p+36, gamma(@as(f80, -0x7.0000000000004p+0)));
    try std.testing.expectEqual(0x1.a01a01a01a01ap+48, gamma(@as(f80, -0x7.0000000000000008p+0)));
    try std.testing.expectEqual(0x3.40343aebcdf72c1p+4, gamma(@as(f80, -0x7.fffff8p+0)));
    try std.testing.expectEqual(0x6.806806806809fb2p+32, gamma(@as(f80, -0x7.ffffffffffffcp+0)));
    try std.testing.expectEqual(0x3.403403403403406cp+44, gamma(@as(f80, -0x7.fffffffffffffff8p+0)));
    try std.testing.expectEqual(-0x1.a019c9f48981c2aep+4, gamma(@as(f80, -0x8.00001p+0)));
    try std.testing.expectEqual(-0x3.4034034033ffc57cp+32, gamma(@as(f80, -0x8.0000000000008p+0)));
    try std.testing.expectEqual(-0x1.a01a01a01a019fe2p+44, gamma(@as(f80, -0x8.000000000000001p+0)));
    try std.testing.expectEqual(0x4.9f949bd5f3629adp-4, gamma(@as(f80, -0x9.fffffp+0)));
    try std.testing.expectEqual(0x9.3f27dbbc4fb918fp+24, gamma(@as(f80, -0x9.ffffffffffff8p+0)));
    try std.testing.expectEqual(0x4.9f93edde27d71d68p+36, gamma(@as(f80, -0x9.fffffffffffffffp+0)));
    try std.testing.expectEqual(-0x4.9f933fe684a2dc1p-4, gamma(@as(f80, -0xa.00001p+0)));
    try std.testing.expectEqual(-0x9.3f27dbbc4fa35ap+24, gamma(@as(f80, -0xa.0000000000008p+0)));
    try std.testing.expectEqual(-0x4.9f93edde27d71c1p+36, gamma(@as(f80, -0xa.000000000000001p+0)));
    try std.testing.expectEqual(0x3.ca86e2f011ecb5bp-44, gamma(@as(f80, -0x1.3ffffep+4)));
    try std.testing.expectEqual(0x7.950ae90080a028ep-16, gamma(@as(f80, -0x1.3ffffffffffffp+4)));
    try std.testing.expectEqual(0x3.ca8574804044a264p-4, gamma(@as(f80, -0x1.3ffffffffffffffep+4)));
    try std.testing.expectEqual(-0x3.ca8406112a1d38bp-44, gamma(@as(f80, -0x1.400002p+4)));
    try std.testing.expectEqual(-0x7.950ae90080725afp-16, gamma(@as(f80, -0x1.4000000000001p+4)));
    try std.testing.expectEqual(-0x3.ca85748040449f88p-4, gamma(@as(f80, -0x1.4000000000000002p+4)));
    try std.testing.expectEqual(0x9.c99a5695c570514p-92, gamma(@as(f80, -0x1.dffffep+4)));
    try std.testing.expectEqual(0x1.3932c5047d65147ep-60, gamma(@as(f80, -0x1.dffffffffffffp+4)));
    try std.testing.expectEqual(0x9.c9962823eb07349p-52, gamma(@as(f80, -0x1.dffffffffffffffep+4)));
    try std.testing.expectEqual(-0x9.c991f9b45972556p-92, gamma(@as(f80, -0x1.e00002p+4)));
    try std.testing.expectEqual(-0x1.3932c5047d5cb79cp-60, gamma(@as(f80, -0x1.e000000000001p+4)));
    try std.testing.expectEqual(-0x9.c9962823eb072c3p-52, gamma(@as(f80, -0x1.e000000000000002p+4)));
    try std.testing.expectEqual(0x7.2a41f1f1fa7ab86p-144, gamma(@as(f80, -0x2.7ffffcp+4)));
    try std.testing.expectEqual(0xe.5476a15095db947p-116, gamma(@as(f80, -0x2.7fffffffffffep+4)));
    try std.testing.expectEqual(0x7.2a3b50a84ab8c6a8p-104, gamma(@as(f80, -0x2.7ffffffffffffffcp+4)));
    try std.testing.expectEqual(-0x7.2a34af6633d2b3a8p-144, gamma(@as(f80, -0x2.800004p+4)));
    try std.testing.expectEqual(-0xe.5476a15095076bbp-116, gamma(@as(f80, -0x2.8000000000002p+4)));
    try std.testing.expectEqual(-0x7.2a3b50a84ab8b968p-104, gamma(@as(f80, -0x2.8000000000000004p+4)));
    try std.testing.expectEqual(-0x2.cbced32c2df66774p-148, gamma(@as(f80, -0x2.8ffffcp+4)));
    try std.testing.expectEqual(-0x5.979870e740b9dd68p-120, gamma(@as(f80, -0x2.8fffffffffffep+4)));
    try std.testing.expectEqual(-0x2.cbcc3873a0481b98p-108, gamma(@as(f80, -0x2.8ffffffffffffffcp+4)));
    try std.testing.expectEqual(0x2.cbc99dbe11b36858p-148, gamma(@as(f80, -0x2.900004p+4)));
    try std.testing.expectEqual(0x5.979870e740668688p-120, gamma(@as(f80, -0x2.9000000000002p+4)));
    try std.testing.expectEqual(0x2.cbcc3873a048166p-108, gamma(@as(f80, -0x2.9000000000000004p+4)));
    try std.testing.expectEqual(0x1.10b05211e13c736ap-152, gamma(@as(f80, -0x2.9ffffcp+4)));
    try std.testing.expectEqual(0x2.215ea4ea61cd009cp-124, gamma(@as(f80, -0x2.9fffffffffffep+4)));
    try std.testing.expectEqual(0x1.10af527530de846cp-112, gamma(@as(f80, -0x2.9ffffffffffffffcp+4)));
    try std.testing.expectEqual(-0x1.10ae52d9a7c6190ap-152, gamma(@as(f80, -0x2.a00004p+4)));
    try std.testing.expectEqual(-0x2.215ea4ea61ad0d18p-124, gamma(@as(f80, -0x2.a000000000002p+4)));
    try std.testing.expectEqual(-0x1.10af527530de826cp-112, gamma(@as(f80, -0x2.a000000000000004p+4)));
    try std.testing.expectEqual(0xd.d9c54ba29fa7f03p-200, gamma(@as(f80, -0x3.1ffffcp+4)));
    try std.testing.expectEqual(0x1.bb36f6e12ce51698p-168, gamma(@as(f80, -0x3.1fffffffffffep+4)));
    try std.testing.expectEqual(0xd.d9b7b70966bc1dcp-160, gamma(@as(f80, -0x3.1ffffffffffffffcp+4)));
    try std.testing.expectEqual(-0xd.d9aa2280533fc1p-200, gamma(@as(f80, -0x3.200004p+4)));
    try std.testing.expectEqual(-0x1.bb36f6e12cc9ed74p-168, gamma(@as(f80, -0x3.2000000000002p+4)));
    try std.testing.expectEqual(-0xd.d9b7b70966bc02ap-160, gamma(@as(f80, -0x3.2000000000000004p+4)));
    try std.testing.expectEqual(0x1.2d4cd4e344c76df8p-508, gamma(@as(f80, -0x6.3ffff8p+4)));
    try std.testing.expectEqual(0x2.5a943cc0fd1b86bp-480, gamma(@as(f80, -0x6.3fffffffffffcp+4)));
    try std.testing.expectEqual(0x1.2d4a1e607e781214p-468, gamma(@as(f80, -0x6.3ffffffffffffff8p+4)));
    try std.testing.expectEqual(-0x1.2d4767e4f014d48cp-508, gamma(@as(f80, -0x6.400008p+4)));
    try std.testing.expectEqual(-0x2.5a943cc0fcc4b6ccp-480, gamma(@as(f80, -0x6.4000000000004p+4)));
    try std.testing.expectEqual(-0x1.2d4a1e607e780ca8p-468, gamma(@as(f80, -0x6.4000000000000008p+4)));
    try std.testing.expectEqual(0x8.d1a58f148fa4d62p-860, gamma(@as(f80, -0x9.5ffffp+4)));
    try std.testing.expectEqual(0x1.1a2f2af6406ada84p-828, gamma(@as(f80, -0x9.5fffffffffff8p+4)));
    try std.testing.expectEqual(0x8.d17957b201f5493p-820, gamma(@as(f80, -0x9.5ffffffffffffffp+4)));
    try std.testing.expectEqual(-0x8.d14d214a189b93bp-860, gamma(@as(f80, -0x9.60001p+4)));
    try std.testing.expectEqual(-0x1.1a2f2af640126cbap-828, gamma(@as(f80, -0x9.6000000000008p+4)));
    try std.testing.expectEqual(-0x8.d17957b201f4f0cp-820, gamma(@as(f80, -0x9.600000000000001p+4)));
    try std.testing.expectEqual(-0x5.fa2b7cb1342f0618p-1088, gamma(@as(f80, -0xb.4ffffp+4)));
    try std.testing.expectEqual(-0xb.f418cc537d2800dp-1060, gamma(@as(f80, -0xb.4fffffffffff8p+4)));
    try std.testing.expectEqual(-0x5.fa0c6629bd9b6e18p-1048, gamma(@as(f80, -0xb.4ffffffffffffffp+4)));
    try std.testing.expectEqual(0x5.f9ed505798c523e8p-1088, gamma(@as(f80, -0xb.50001p+4)));
    try std.testing.expectEqual(0xb.f418cc5379453b4p-1060, gamma(@as(f80, -0xb.5000000000008p+4)));
    try std.testing.expectEqual(0x5.fa0c6629bd9b2ffp-1048, gamma(@as(f80, -0xb.500000000000001p+4)));
    try std.testing.expectEqual(0x8.6853b8676d944b5p-1096, gamma(@as(f80, -0xb.5ffffp+4)));
    try std.testing.expectEqual(0x1.0d04fe453ad3bd2p-1064, gamma(@as(f80, -0xb.5fffffffffff8p+4)));
    try std.testing.expectEqual(0x8.6827f229d53fe6ep-1056, gamma(@as(f80, -0xb.5ffffffffffffffp+4)));
    try std.testing.expectEqual(-0x8.67fc2cebc2f23e2p-1096, gamma(@as(f80, -0xb.60001p+4)));
    try std.testing.expectEqual(-0x1.0d04fe453a7c31a6p-1064, gamma(@as(f80, -0xb.6000000000008p+4)));
    try std.testing.expectEqual(-0x8.6827f229d53f8f5p-1056, gamma(@as(f80, -0xb.600000000000001p+4)));
    try std.testing.expectEqual(-0xb.c2e7e440d1188c1p-1104, gamma(@as(f80, -0xb.6ffffp+4)));
    try std.testing.expectEqual(-0x1.785552e9f05ed314p-1072, gamma(@as(f80, -0xb.6fffffffffff8p+4)));
    try std.testing.expectEqual(-0xb.c2aa974f810c74p-1064, gamma(@as(f80, -0xb.6ffffffffffffffp+4)));
    try std.testing.expectEqual(0xb.c26d4bc450a5bc9p-1104, gamma(@as(f80, -0xb.70001p+4)));
    try std.testing.expectEqual(0x1.785552e9efe43a98p-1072, gamma(@as(f80, -0xb.7000000000008p+4)));
    try std.testing.expectEqual(0xb.c2aa974f810bf96p-1064, gamma(@as(f80, -0xb.700000000000001p+4)));
    try std.testing.expectEqual(0x1.05d1632f1f3e377ap-1108, gamma(@as(f80, -0xb.7ffffp+4)));
    try std.testing.expectEqual(0x2.0b981a509c577f38p-1080, gamma(@as(f80, -0xb.7fffffffffff8p+4)));
    try std.testing.expectEqual(0x1.05cc0d284e011538p-1068, gamma(@as(f80, -0xb.7ffffffffffffffp+4)));
    try std.testing.expectEqual(-0x1.05c6b740afc189ep-1108, gamma(@as(f80, -0xb.80001p+4)));
    try std.testing.expectEqual(-0x2.0b981a509bacc054p-1080, gamma(@as(f80, -0xb.8000000000008p+4)));
    try std.testing.expectEqual(-0x1.05cc0d284e010a8cp-1068, gamma(@as(f80, -0xb.800000000000001p+4)));
    try std.testing.expectEqual(0x3.a18e29bac973933p-1140, gamma(@as(f80, -0xb.bffffp+4)));
    try std.testing.expectEqual(0x7.42f647bca86c528p-1112, gamma(@as(f80, -0xb.bfffffffffff8p+4)));
    try std.testing.expectEqual(0x3.a17b23de539e0f2p-1100, gamma(@as(f80, -0xb.bffffffffffffffp+4)));
    try std.testing.expectEqual(-0x3.a1681e71734405bcp-1140, gamma(@as(f80, -0xb.c0001p+4)));
    try std.testing.expectEqual(-0x7.42f647bca60b9de8p-1112, gamma(@as(f80, -0xb.c000000000008p+4)));
    try std.testing.expectEqual(-0x3.a17b23de539de914p-1100, gamma(@as(f80, -0xb.c00000000000001p+4)));
    try std.testing.expectEqual(-0x4.eb1490744e9508c8p-1148, gamma(@as(f80, -0xb.cffffp+4)));
    try std.testing.expectEqual(-0x9.d5f58b282beb2e5p-1120, gamma(@as(f80, -0xb.cfffffffffff8p+4)));
    try std.testing.expectEqual(-0x4.eafac59415275c48p-1108, gamma(@as(f80, -0xb.cffffffffffffffp+4)));
    try std.testing.expectEqual(0x4.eae0fb4b4576d3fp-1148, gamma(@as(f80, -0xb.d0001p+4)));
    try std.testing.expectEqual(0x9.d5f58b2828b1dbcp-1120, gamma(@as(f80, -0xb.d000000000008p+4)));
    try std.testing.expectEqual(0x4.eafac594152728b8p-1108, gamma(@as(f80, -0xb.d00000000000001p+4)));
    try std.testing.expectEqual(0x6.a071f95f54494e5p-1156, gamma(@as(f80, -0xb.dffffp+4)));
    try std.testing.expectEqual(0xd.409e5fdfe4f1fbp-1128, gamma(@as(f80, -0xb.dfffffffffff8p+4)));
    try std.testing.expectEqual(0x6.a04f2feff162d8p-1116, gamma(@as(f80, -0xb.dffffffffffffffp+4)));
    try std.testing.expectEqual(-0x6.a02c674cee90e1p-1156, gamma(@as(f80, -0xb.e0001p+4)));
    try std.testing.expectEqual(-0xd.409e5fdfe098d9ep-1128, gamma(@as(f80, -0xb.e000000000008p+4)));
    try std.testing.expectEqual(-0x6.a04f2feff162927p-1116, gamma(@as(f80, -0xb.e00000000000001p+4)));
    try std.testing.expectEqual(-0x8.e1c509b9188f73dp-1164, gamma(@as(f80, -0xb.effffp+4)));
    try std.testing.expectEqual(-0x1.1c32cbb79d3b2faep-1132, gamma(@as(f80, -0xb.efffffffffff8p+4)));
    try std.testing.expectEqual(-0x8.e1965dbce864508p-1124, gamma(@as(f80, -0xb.effffffffffffffp+4)));
    try std.testing.expectEqual(0x8.e167b2d322aba2p-1164, gamma(@as(f80, -0xb.f0001p+4)));
    try std.testing.expectEqual(0x1.1c32cbb79cddd8c8p-1132, gamma(@as(f80, -0xb.f000000000008p+4)));
    try std.testing.expectEqual(0x8.e1965dbce863f32p-1124, gamma(@as(f80, -0xb.f00000000000001p+4)));
    try std.testing.expectEqual(0xf.1f88ab042ff7085p-1624, gamma(@as(f80, -0xf.9ffffp+4)));
    try std.testing.expectEqual(0x1.e3e6a471e8ca39e2p-1592, gamma(@as(f80, -0xf.9fffffffffff8p+4)));
    try std.testing.expectEqual(0xf.1f35238f43b5eeep-1584, gamma(@as(f80, -0xf.9ffffffffffffffp+4)));
    try std.testing.expectEqual(-0xf.1ee19e1960e8838p-1624, gamma(@as(f80, -0xf.a0001p+4)));
    try std.testing.expectEqual(-0x1.e3e6a471e8232cf6p-1592, gamma(@as(f80, -0xf.a000000000008p+4)));
    try std.testing.expectEqual(-0xf.1f35238f43b547ep-1584, gamma(@as(f80, -0xf.a00000000000001p+4)));
    try std.testing.expectEqual(0xc.8678d8710ada4b6p-3756, gamma(@as(f80, -0x1.f3fffep+8)));
    try std.testing.expectEqual(0x1.90bba4f1c2ba52b8p-3724, gamma(@as(f80, -0x1.f3fffffffffffp+8)));
    try std.testing.expectEqual(0xc.85dd278e10f5cb2p-3716, gamma(@as(f80, -0x1.f3fffffffffffffep+8)));
    try std.testing.expectEqual(-0xc.85417edf037af34p-3756, gamma(@as(f80, -0x1.f40002p+8)));
    try std.testing.expectEqual(-0x1.90bba4f1c182f926p-3724, gamma(@as(f80, -0x1.f400000000001p+8)));
    try std.testing.expectEqual(-0xc.85dd278e10f493dp-3716, gamma(@as(f80, -0x1.f400000000000002p+8)));
    try std.testing.expectEqual(0x7.433bfad52f116278p-6076, gamma(@as(f80, -0x2.edfffcp+8)));
    try std.testing.expectEqual(0xe.84f75c0458390c3p-6048, gamma(@as(f80, -0x2.edffffffffffep+8)));
    try std.testing.expectEqual(0x7.427bae02261b355p-6036, gamma(@as(f80, -0x2.edfffffffffffffcp+8)));
    try std.testing.expectEqual(-0x7.41bb7690a9f2317p-6076, gamma(@as(f80, -0x2.ee0004p+8)));
    try std.testing.expectEqual(-0xe.84f75c044030c7fp-6048, gamma(@as(f80, -0x2.ee00000000002p+8)));
    try std.testing.expectEqual(-0x7.427bae022619b4c8p-6036, gamma(@as(f80, -0x2.ee00000000000004p+8)));
    try std.testing.expectEqual(0x1.84b976c2ef57b0dep-8516, gamma(@as(f80, -0x3.e7fffcp+8)));
    try std.testing.expectEqual(0x3.091f067a14e8282cp-8488, gamma(@as(f80, -0x3.e7ffffffffffep+8)));
    try std.testing.expectEqual(0x1.848f833d0924b534p-8476, gamma(@as(f80, -0x3.e7fffffffffffffcp+8)));
    try std.testing.expectEqual(-0x1.8465948dfc562cbap-8516, gamma(@as(f80, -0x3.e80004p+8)));
    try std.testing.expectEqual(-0x3.091f067a0faa04ep-8488, gamma(@as(f80, -0x3.e800000000002p+8)));
    try std.testing.expectEqual(-0x1.848f833d09246152p-8476, gamma(@as(f80, -0x3.e800000000000004p+8)));
    try std.testing.expectEqual(0x4.ca1e38696cc9387p-11052, gamma(@as(f80, -0x4.e1fff8p+8)));
    try std.testing.expectEqual(0x9.921a2cbd0d9296fp-11024, gamma(@as(f80, -0x4.e1ffffffffffcp+8)));
    try std.testing.expectEqual(0x4.c90d165e7e424f5p-11012, gamma(@as(f80, -0x4.e1fffffffffffff8p+8)));
    try std.testing.expectEqual(-0x4.c7fc351a014d05e8p-11052, gamma(@as(f80, -0x4.e20008p+8)));
    try std.testing.expectEqual(-0x9.921a2cbceb72625p-11024, gamma(@as(f80, -0x4.e200000000004p+8)));
    try std.testing.expectEqual(-0x4.c90d165e7e402d5p-11012, gamma(@as(f80, -0x4.e200000000000008p+8)));
    try std.testing.expectEqual(0x1.401ec2203b3432aap-13656, gamma(@as(f80, -0x5.dbfff8p+8)));
    try std.testing.expectEqual(0x2.7fab407c88e5794p-13628, gamma(@as(f80, -0x5.dbffffffffffcp+8)));
    try std.testing.expectEqual(0x1.3fd5a03e422a3d9ep-13616, gamma(@as(f80, -0x5.dbfffffffffffff8p+8)));
    try std.testing.expectEqual(-0x1.3f8c90181e39f8dep-13656, gamma(@as(f80, -0x5.dc0008p+8)));
    try std.testing.expectEqual(-0x2.7fab407c7fc258d8p-13628, gamma(@as(f80, -0x5.dc00000000004p+8)));
    try std.testing.expectEqual(-0x1.3fd5a03e4229ab6cp-13616, gamma(@as(f80, -0x5.dc00000000000008p+8)));
    try std.testing.expectEqual(0x4.084b5636bf26a37p-16324, gamma(@as(f80, -0x6.d5fff8p+8)));
    try std.testing.expectEqual(0x8.0eb51434948b528p-16296, gamma(@as(f80, -0x6.d5ffffffffffcp+8)));
    try std.testing.expectEqual(0x4.075a8a1a42c12708p-16284, gamma(@as(f80, -0x6.d5fffffffffffff8p+8)));
    try std.testing.expectEqual(-0x4.0669f97879582148p-16324, gamma(@as(f80, -0x6.d60008p+8)));
    try std.testing.expectEqual(-0x8.0eb51434767586fp-16296, gamma(@as(f80, -0x6.d600000000004p+8)));
    try std.testing.expectEqual(-0x4.075a8a1a42bf45a8p-16284, gamma(@as(f80, -0x6.d600000000000008p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f80, -0x6.e2fff8p+8)));
    try std.testing.expectEqual(-0x7.628p-16436, gamma(@as(f80, -0x6.e2ffffffffffcp+8)));
    try std.testing.expectEqual(-0x3.b15668p-16424, gamma(@as(f80, -0x6.e2fffffffffffff8p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f80, -0x6.e30008p+8)));
    try std.testing.expectEqual(0x7.628p-16436, gamma(@as(f80, -0x6.e300000000004p+8)));
    try std.testing.expectEqual(0x3.b15668p-16424, gamma(@as(f80, -0x6.e300000000000008p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f80, -0x6.e3fff8p+8)));
    try std.testing.expectEqual(0x1p-16444, gamma(@as(f80, -0x6.e3ffffffffffcp+8)));
    try std.testing.expectEqual(0x8.93p-16436, gamma(@as(f80, -0x6.e3fffffffffffff8p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f80, -0x6.e40008p+8)));
    try std.testing.expectEqual(-0x1p-16444, gamma(@as(f80, -0x6.e400000000004p+8)));
    try std.testing.expectEqual(-0x8.93p-16436, gamma(@as(f80, -0x6.e400000000000008p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f80, -0x6.e4fff8p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f80, -0x6.e4ffffffffffcp+8)));
    try std.testing.expectEqual(-0x1p-16444, gamma(@as(f80, -0x6.e4fffffffffffff8p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f80, -0x6.e50008p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f80, -0x6.e500000000004p+8)));
    try std.testing.expectEqual(0x1p-16444, gamma(@as(f80, -0x6.e500000000000008p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f80, -0x6.e5fff8p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f80, -0x6.e5ffffffffffcp+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f80, -0x6.e5fffffffffffff8p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f80, -0x6.e60008p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f80, -0x6.e600000000004p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f80, -0x6.e600000000000008p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f80, -0x6.ebfff8p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f80, -0x6.ebffffffffffcp+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f80, -0x6.ebfffffffffffff8p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f80, -0x6.ec0008p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f80, -0x6.ec00000000004p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f80, -0x6.ec00000000000008p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f80, -0x6.ecfff8p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f80, -0x6.ecffffffffffcp+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f80, -0x6.ecfffffffffffff8p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f80, -0x6.ed0008p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f80, -0x6.ed00000000004p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f80, -0x6.ed00000000000008p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f80, -0x6.edfff8p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f80, -0x6.edffffffffffcp+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f80, -0x6.edfffffffffffff8p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f80, -0x6.ee0008p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f80, -0x6.ee00000000004p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f80, -0x6.ee00000000000008p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f80, -0x6.eefff8p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f80, -0x6.eeffffffffffcp+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f80, -0x6.eefffffffffffff8p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f80, -0x6.ef0008p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f80, -0x6.ef00000000004p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f80, -0x6.ef00000000000008p+8)));
    try std.testing.expectEqual(0x3.dad55d40f5984ddp-124, gamma(@as(f80, -0x2.146544p+4)));
    try std.testing.expectEqual(-0x3.73075511ee22b5p-1020, gamma(@as(f80, -0xa.c0001p+4)));
    try std.testing.expectEqual(-0xd.cc629963ba2d24fp-1012, gamma(@as(f80, -0xa.c000000400008p+4)));
    try std.testing.expectEqual(0x5.52facf180f081e28p+48, gamma(@as(f80, 0x1.28p+4)));
    try std.testing.expectEqual(0x6.27f1ff73d16162d8p+52, gamma(@as(f80, 0x1.38p+4)));
    try std.testing.expectEqual(0x1.22a3089777c436c4p+72, gamma(@as(f80, 0x1.78p+4)));
    try std.testing.expectEqual(0x1.4a25d38b82b7dc7ep+100, gamma(@as(f80, 0x1.d8p+4)));
    try std.testing.expectEqual(0x2.60b5be093902fe88p+104, gamma(@as(f80, 0x1.e8p+4)));
    try std.testing.expectEqual(0x4.885a724194adb53p+108, gamma(@as(f80, 0x1.f8p+4)));
    try std.testing.expectEqual(0x8.ec7210f11cb5fccp+112, gamma(@as(f80, 0x2.08p+4)));
    try std.testing.expectEqual(0x1.22047b269c251a96p+120, gamma(@as(f80, 0x2.18p+4)));
    try std.testing.expectEqual(0x2.5f3961d8d6edafa8p+124, gamma(@as(f80, 0x2.28p+4)));
    try std.testing.expectEqual(0xf.fff81014863292cp+124, gamma(@as(f80, 0x2.30a43cp+4)));
    try std.testing.expectEqual(0x1.000063b3eab1992cp+128, gamma(@as(f80, 0x2.30a44p+4)));
    try std.testing.expectEqual(0x1.0004470cc9ee80b2p+1024, gamma(@as(f80, 0xa.b9fd8p+4)));
    try std.testing.expectEqual(0xf.fff229034ceb4a5p+1020, gamma(@as(f80, 0xa.b9fd7p+4)));
    try std.testing.expectEqual(0xf.ffffffffff28752p+1020, gamma(@as(f80, 0xa.b9fd72b0fb238p+4)));
    try std.testing.expectEqual(0x1.0004470cc9ee80b2p+1024, gamma(@as(f80, 0xa.b9fd8p+4)));
    try std.testing.expectEqual(0xf.fff229034ceb4a5p+1020, gamma(@as(f80, 0xa.b9fd7p+4)));
    try std.testing.expectEqual(0x1.00000000001baafp+1024, gamma(@as(f80, 0xa.b9fd72b0fb24p+4)));
    try std.testing.expectEqual(0x1.0004470cc9ee80b2p+1024, gamma(@as(f80, 0xa.b9fd8p+4)));
    try std.testing.expectEqual(0xf.fff229034ceb4a5p+1020, gamma(@as(f80, 0xa.b9fd7p+4)));
    try std.testing.expectEqual(0x1.00000000001baafp+1024, gamma(@as(f80, 0xa.b9fd72b0fb24p+4)));
    try std.testing.expectEqual(0xf.ffffffffff28752p+1020, gamma(@as(f80, 0xa.b9fd72b0fb238p+4)));
    try std.testing.expectEqual(0xf.ffffffffffffcb9p+1020, gamma(@as(f80, 0xa.b9fd72b0fb23a9ep+4)));
    try std.testing.expectEqual(0xf.ffffffffffff795p+1020, gamma(@as(f80, 0xa.b9fd72b0fb23a9dp+4)));
    try std.testing.expectEqual(0x1.0004470cc9ee80b2p+1024, gamma(@as(f80, 0xa.b9fd8p+4)));
    try std.testing.expectEqual(0xf.fff229034ceb4a5p+1020, gamma(@as(f80, 0xa.b9fd7p+4)));
    try std.testing.expectEqual(0x1.00000000001baafp+1024, gamma(@as(f80, 0xa.b9fd72b0fb24p+4)));
    try std.testing.expectEqual(0xf.ffffffffff28752p+1020, gamma(@as(f80, 0xa.b9fd72b0fb238p+4)));
    try std.testing.expectEqual(0xf.ffffffffffffcb9p+1020, gamma(@as(f80, 0xa.b9fd72b0fb23a9ep+4)));
    try std.testing.expectEqual(0xf.ffffffffffff795p+1020, gamma(@as(f80, 0xa.b9fd72b0fb23a9dp+4)));
    try std.testing.expectEqual(std.math.inf(f80), gamma(@as(f80, 0x6.db8c68p+8)));
    try std.testing.expectEqual(0xf.ffe8067b83ee062p+16380, gamma(@as(f80, 0x6.db8c6p+8)));
    try std.testing.expectEqual(std.math.inf(f80), gamma(@as(f80, 0x6.db8c603359a98p+8)));
    try std.testing.expectEqual(0xf.ffffffffe91b897p+16380, gamma(@as(f80, 0x6.db8c603359a94p+8)));
    try std.testing.expectEqual(0xf.fffffffffffff31p+16380, gamma(@as(f80, 0x6.db8c603359a97108p+8)));
    try std.testing.expectEqual(std.math.inf(f80), gamma(@as(f80, 0x6.db8c68p+8)));
    try std.testing.expectEqual(0xf.ffe8067b83ee062p+16380, gamma(@as(f80, 0x6.db8c6p+8)));
    try std.testing.expectEqual(std.math.inf(f80), gamma(@as(f80, 0x6.db8c603359a98p+8)));
    try std.testing.expectEqual(0xf.ffffffffe91b897p+16380, gamma(@as(f80, 0x6.db8c603359a94p+8)));
    try std.testing.expectEqual(std.math.inf(f80), gamma(@as(f80, 0x6.db8c603359a9711p+8)));
    try std.testing.expectEqual(std.math.inf(f80), gamma(@as(f80, 0x6.db8c68p+8)));
    try std.testing.expectEqual(0xf.ffe8067b83ee062p+16380, gamma(@as(f80, 0x6.db8c6p+8)));
    try std.testing.expectEqual(std.math.inf(f80), gamma(@as(f80, 0x6.db8c603359a98p+8)));
    try std.testing.expectEqual(0xf.ffffffffe91b897p+16380, gamma(@as(f80, 0x6.db8c603359a94p+8)));
    try std.testing.expectEqual(std.math.inf(f80), gamma(@as(f80, 0x6.db8c603359a9711p+8)));
    try std.testing.expectEqual(0xf.fffffffffffff31p+16380, gamma(@as(f80, 0x6.db8c603359a97108p+8)));
    try std.testing.expectEqual(std.math.inf(f80), gamma(@as(f80, 0x6.db8c68p+8)));
    try std.testing.expectEqual(0xf.ffe8067b83ee062p+16380, gamma(@as(f80, 0x6.db8c6p+8)));
    try std.testing.expectEqual(std.math.inf(f80), gamma(@as(f80, 0x6.db8c603359a98p+8)));
    try std.testing.expectEqual(0xf.ffffffffe91b897p+16380, gamma(@as(f80, 0x6.db8c603359a94p+8)));
    try std.testing.expectEqual(std.math.inf(f80), gamma(@as(f80, 0x6.db8c603359a9711p+8)));
    try std.testing.expectEqual(0xf.fffffffffffff31p+16380, gamma(@as(f80, 0x6.db8c603359a97108p+8)));
    try std.testing.expectEqual(0xa.cb6219668cf4989p+8516, gamma(@as(f80, 0x3.e8p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f80, -0x1.86a08p+16)));
    try std.testing.expectEqual(std.math.inf(f80), gamma(@as(f80, 0xf.fffffp+124)));
    try std.testing.expectEqual(std.math.inf(f80), gamma(@as(f80, 0xf.ffffffffffff8p+1020)));
    try std.testing.expectEqual(std.math.inf(f80), gamma(@as(f80, 0xf.fffffffffffffffp+16380)));
    try std.testing.expectEqual(-0x3.5a8a6f18f81e6524p-128, gamma(@as(f80, -0x2.23p+4)));
    try std.testing.expectEqual(-0x3.3f852f434e4198b8p-128, gamma(@as(f80, -0x2.231p+4)));
    try std.testing.expectEqual(-0x3.25ba99c456cd0b74p-128, gamma(@as(f80, -0x2.232p+4)));
    try std.testing.expectEqual(-0x3.0d178ada332940b4p-128, gamma(@as(f80, -0x2.233p+4)));
    try std.testing.expectEqual(-0x2.f58a5ad6817b88bp-128, gamma(@as(f80, -0x2.234p+4)));
    try std.testing.expectEqual(-0x2.df02ba328f3c7b58p-128, gamma(@as(f80, -0x2.235p+4)));
    try std.testing.expectEqual(-0x2.c97191a1b362fd04p-128, gamma(@as(f80, -0x2.236p+4)));
    try std.testing.expectEqual(-0x2.b4c8e59fb606bb28p-128, gamma(@as(f80, -0x2.237p+4)));
    try std.testing.expectEqual(0x6.db2af70b7fccf478p-972, gamma(@as(f80, -0xa.37p+4)));
    try std.testing.expectEqual(0x6.b47d85f25e08b8f8p-972, gamma(@as(f80, -0xa.371p+4)));
    try std.testing.expectEqual(0x6.8eed33948a45afp-972, gamma(@as(f80, -0xa.372p+4)));
    try std.testing.expectEqual(0x6.6a708251e7f023ep-972, gamma(@as(f80, -0xa.373p+4)));
    try std.testing.expectEqual(0x6.46fe544d4abcf29p-972, gamma(@as(f80, -0xa.374p+4)));
    try std.testing.expectEqual(0x6.248de7164ec1f49p-972, gamma(@as(f80, -0xa.375p+4)));
    try std.testing.expectEqual(0x6.0316cf8d71613dbp-972, gamma(@as(f80, -0xa.376p+4)));
    try std.testing.expectEqual(0x5.e290f5fef5a4b8ap-972, gamma(@as(f80, -0xa.377p+4)));
    try std.testing.expectEqual(0x2.34bfd99e74439228p-1024, gamma(@as(f80, -0xa.b0dp+4)));
    try std.testing.expectEqual(0x2.315d5e8fc2c79ea8p-1024, gamma(@as(f80, -0xa.b0d1p+4)));
    try std.testing.expectEqual(0x2.2e036152e0295eep-1024, gamma(@as(f80, -0xa.b0d2p+4)));
    try std.testing.expectEqual(0x2.2ab1c2e8316e32p-1024, gamma(@as(f80, -0xa.b0d3p+4)));
    try std.testing.expectEqual(0x2.276864e5dfa92d04p-1024, gamma(@as(f80, -0xa.b0d4p+4)));
    try std.testing.expectEqual(0x2.2427297453f68e9p-1024, gamma(@as(f80, -0xa.b0d5p+4)));
    try std.testing.expectEqual(0x2.20edf34accb325a4p-1024, gamma(@as(f80, -0xa.b0d6p+4)));
    try std.testing.expectEqual(0x2.1dbca5ac0b1d582p-1024, gamma(@as(f80, -0xa.b0d7p+4)));
    try std.testing.expectEqual(0x2.ada76d6717d20c28p-16384, gamma(@as(f80, -0x6.db03p+8)));
    try std.testing.expectEqual(0x2.9e718cc02784aa78p-16384, gamma(@as(f80, -0x6.db031p+8)));
    try std.testing.expectEqual(0x2.8fd8039433412058p-16384, gamma(@as(f80, -0x6.db032p+8)));
    try std.testing.expectEqual(0x2.81d19f44bc6c07ep-16384, gamma(@as(f80, -0x6.db033p+8)));
    try std.testing.expectEqual(0x2.7455e2534efabe68p-16384, gamma(@as(f80, -0x6.db034p+8)));
    try std.testing.expectEqual(0x2.675cf34b296c78f8p-16384, gamma(@as(f80, -0x6.db035p+8)));
    try std.testing.expectEqual(0x2.5adf8d90ee8b477p-16384, gamma(@as(f80, -0x6.db036p+8)));
    try std.testing.expectEqual(0x2.4ed6f3da84f2d8c8p-16384, gamma(@as(f80, -0x6.db037p+8)));
    try std.testing.expectEqual(0x1.8439ab543adb63ap-16384, gamma(@as(f80, -0x6.db05p+8)));
    try std.testing.expectEqual(0x1.7ebd5e525657d1b8p-16384, gamma(@as(f80, -0x6.db051p+8)));
    try std.testing.expectEqual(0x1.7963a77beed5c948p-16384, gamma(@as(f80, -0x6.db052p+8)));
    try std.testing.expectEqual(0x1.742b469da476f64p-16384, gamma(@as(f80, -0x6.db053p+8)));
    try std.testing.expectEqual(0x1.6f130ac394a6d3b8p-16384, gamma(@as(f80, -0x6.db054p+8)));
    try std.testing.expectEqual(0x1.6a19d153bc18813p-16384, gamma(@as(f80, -0x6.db055p+8)));
    try std.testing.expectEqual(0x1.653e85385dd6a198p-16384, gamma(@as(f80, -0x6.db056p+8)));
    try std.testing.expectEqual(0x1.60801e19256ca5cp-16384, gamma(@as(f80, -0x6.db057p+8)));
    try std.testing.expectEqual(0x6.79a69724dabd5bb8p+0, gamma(@as(f80, -0x3.06644cp+0)));
    try std.testing.expectEqual(-0x7.a358e3487d191788p-8, gamma(@as(f80, -0x6.fe463p+0)));
    try std.testing.expectEqual(-0x7.a37bcf5d9826858p-8, gamma(@as(f80, -0x6.fe4638p+0)));
    try std.testing.expectEqual(-0x7.a376e9732b0c2478p-8, gamma(@as(f80, -0x6.fe4636e0c5064p+0)));
    try std.testing.expectEqual(0xc.2fa4c8813bd49bfp-16, gamma(@as(f80, -0x7.a13d78p+0)));
    try std.testing.expectEqual(0xc.2fa480824477725p-16, gamma(@as(f80, -0x7.a13d8p+0)));
    try std.testing.expectEqual(0xc.2fa4b50e0b76495p-16, gamma(@as(f80, -0x7.a13d7a2945cd4p+0)));
    try std.testing.expectEqual(0xc.2fa4b50e0b74095p-16, gamma(@as(f80, -0x7.a13d7a2945cd8p+0)));
    try std.testing.expectEqual(0xc.2fa4b50e0b75798p-16, gamma(@as(f80, -0x7.a13d7a2945cd5718p+0)));
    try std.testing.expectEqual(-0x3.ba6130492158a8f8p-64, gamma(@as(f80, -0x1.4a5caap+4)));
    try std.testing.expectEqual(0xb.8dc3f1f706c4f86p-20, gamma(@as(f80, -0x9.2d3a5p+0)));
    try std.testing.expectEqual(0x6.1254c93775c0f71p-24, gamma(@as(f80, -0xb.0f63ep+0)));
    try std.testing.expectEqual(-0x3.b6f6a22e1dcdd2dcp-13888, gamma(@as(f80, -0x5.f0e02p+8)));
    try std.testing.expectEqual(0x1.7457c3b4ad98efdep-24, gamma(@as(f80, -0xb.3123bp+0)));
    try std.testing.expectEqual(0x3.87a648c74383af54p-20, gamma(@as(f80, -0x9.6d538p+0)));
    try std.testing.expectEqual(-0x5.e4e82c4f32081cbp-32, gamma(@as(f80, -0xc.c2439p+0)));
    try std.testing.expectEqual(-0x1.a07f67df4a68ace2p-28, gamma(@as(f80, -0xc.372fp+0)));
    try std.testing.expectEqual(-0x1.a07ebff6ed1d89a8p-28, gamma(@as(f80, -0xc.372f1p+0)));
    try std.testing.expectEqual(-0x1.a07f3bcc8e5d21p-28, gamma(@as(f80, -0xc.372f043322128p+0)));
    try std.testing.expectEqual(-0x3.a90676ce3e42978p-24, gamma(@as(f80, -0xa.ccfcep+0)));
    try std.testing.expectEqual(0x7.0e2da01118b52678p-20, gamma(@as(f80, -0x9.418c8p+0)));
    try std.testing.expectEqual(-0x6.97c60a22487f2cep-12, gamma(@as(f80, -0x6.ce9158p+0)));
    try std.testing.expectEqual(0x7.25082d9261006e48p-36, gamma(@as(f80, -0xd.cbf53p+0)));
    try std.testing.expectEqual(0x7.2508e12d1cf5cc38p-36, gamma(@as(f80, -0xd.cbf54p+0)));
    try std.testing.expectEqual(0x7.2508c022ac5a1f1p-36, gamma(@as(f80, -0xd.cbf53d0e7d06p+0)));
    try std.testing.expectEqual(0x3.d05efb28d49cc49cp+0, gamma(@as(f80, -0x3.0aa534p+0)));
    try std.testing.expectEqual(-0xf.3fc2acf5d89fd7ap-72, gamma(@as(f80, -0x1.62b8c2p+4)));
    try std.testing.expectEqual(-0xf.3fb29bd00da7e58p-72, gamma(@as(f80, -0x1.62b8c4p+4)));
    try std.testing.expectEqual(-0xf.3fb73d327d6a802p-72, gamma(@as(f80, -0x1.62b8c36c7180bp+4)));
    try std.testing.expectEqual(0x3.fac96a100e60f1fcp-24, gamma(@as(f80, -0xb.1626ap+0)));
    try std.testing.expectEqual(0x3.fac600633d7414f4p-24, gamma(@as(f80, -0xb.1626bp+0)));
    try std.testing.expectEqual(0x3.fac7890382d7e694p-24, gamma(@as(f80, -0xb.1626a8cf433b8p+0)));
    try std.testing.expectEqual(0xf.f7014642d9849fcp-8, gamma(@as(f80, -0x7.00cf3p+0)));
    try std.testing.expectEqual(0xf.f6627d248f8e25ep-8, gamma(@as(f80, -0x7.00cf38p+0)));
    try std.testing.expectEqual(0xf.f6ecad999980e4ap-8, gamma(@as(f80, -0x7.00cf31099d4bcp+0)));
    try std.testing.expectEqual(0x3.e85606c693e9bf24p-24, gamma(@as(f80, -0xb.167e8p+0)));
    try std.testing.expectEqual(0x3.e852b838ddf2349p-24, gamma(@as(f80, -0xb.167e9p+0)));
    try std.testing.expectEqual(0x3.e854a96acdfa7e84p-24, gamma(@as(f80, -0xb.167e869a56f1p+0)));
    try std.testing.expectEqual(0x3.fd9063a22653e8e4p-204, gamma(@as(f80, -0x3.1029b4p+4)));
    try std.testing.expectEqual(0x3.fd2a955e20f5762cp-204, gamma(@as(f80, -0x3.1029b8p+4)));
    try std.testing.expectEqual(0x3.fd7a5e1abda5c6d8p-204, gamma(@as(f80, -0x3.1029b4dd6fb6p+4)));

    try std.testing.expectEqual(0x1.c5bf891b4ef6aa79c3b0520d5db9p+0, gamma(@as(f128, 0x8p-4)));
    try std.testing.expectEqual(-0x3.8b7f12369ded54f38760a41abb72p+0, gamma(@as(f128, -0x8p-4)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f128, 0x1p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f128, 0x2p+0)));
    try std.testing.expectEqual(0x2p+0, gamma(@as(f128, 0x3p+0)));
    try std.testing.expectEqual(0x6p+0, gamma(@as(f128, 0x4p+0)));
    try std.testing.expectEqual(0x1.8p+4, gamma(@as(f128, 0x5p+0)));
    try std.testing.expectEqual(0x7.8p+4, gamma(@as(f128, 0x6p+0)));
    try std.testing.expectEqual(0x2.dp+8, gamma(@as(f128, 0x7p+0)));
    try std.testing.expectEqual(0x1.3bp+12, gamma(@as(f128, 0x8p+0)));
    try std.testing.expectEqual(0x9.d8p+12, gamma(@as(f128, 0x9p+0)));
    try std.testing.expectEqual(0x5.898p+16, gamma(@as(f128, 0xap+0)));
    try std.testing.expectEqual(0x1.4c4d596dc959027d8ac801e30d39p+0, gamma(@as(f128, 0xb.33334p-4)));
    try std.testing.expectEqual(0x1.4c4d5b0333f50081be3f98238212p+0, gamma(@as(f128, 0xb.33333p-4)));
    // try std.testing.expectEqual(0x1.4c4d5ab21ea21ffde0a9e54de1dp+0, gamma(@as(f128, 0xb.3333333333338p-4)));
    try std.testing.expectEqual(0x1.4c4d5ab21ea22ca935974cbe424dp+0, gamma(@as(f128, 0xb.333333333333p-4)));
    try std.testing.expectEqual(0x1.4c4d5ab21ea227969c163ed3c38p+0, gamma(@as(f128, 0xb.333333333333334p-4)));
    try std.testing.expectEqual(0x1.4c4d5ab21ea227983180dc80b18cp+0, gamma(@as(f128, 0xb.333333333333333p-4)));
    // try std.testing.expectEqual(0x1.4c4d5ab21ea22797e06b89c481fp+0, gamma(@as(f128, 0xb.3333333333333333333333333338p-4)));
    try std.testing.expectEqual(0x1.4c4d5ab21ea22797e06b89c481fp+0, gamma(@as(f128, 0xb.333333333333333333333333333p-4)));
    try std.testing.expectEqual(0x1.4c4d5ab21ea22797e06b89c481dcp+0, gamma(@as(f128, 0xb.33333333333333333333333334p-4)));
    try std.testing.expectEqual(0x1.4c4d5ab21ea22797e06b89c48241p+0, gamma(@as(f128, 0xb.3333333333333333333333333p-4)));
    try std.testing.expectEqual(0xe.b0d1b1a770ff5510f297aaa46f8p-4, gamma(@as(f128, 0x1.333334p+0)));
    try std.testing.expectEqual(0xe.b0d1ba257ebddc31803d2f8a0d4p-4, gamma(@as(f128, 0x1.333332p+0)));
    try std.testing.expectEqual(0xe.b0d1b50d100e9ae44d32172949e8p-4, gamma(@as(f128, 0x1.3333333333334p+0)));
    try std.testing.expectEqual(0xe.b0d1b50d100eded4bae6ce59dp-4, gamma(@as(f128, 0x1.3333333333333p+0)));
    try std.testing.expectEqual(0xe.b0d1b50d100ed13ad8f060ad579p-4, gamma(@as(f128, 0x1.3333333333333334p+0)));
    try std.testing.expectEqual(0xe.b0d1b50d100ed14356fe17443da8p-4, gamma(@as(f128, 0x1.3333333333333332p+0)));
    try std.testing.expectEqual(0xe.b0d1b50d100ed13e3e8f76834d3p-4, gamma(@as(f128, 0x1.3333333333333333333333333334p+0)));
    try std.testing.expectEqual(0xe.b0d1b50d100ed13e3e8f76834d38p-4, gamma(@as(f128, 0x1.3333333333333333333333333333p+0)));
    try std.testing.expectEqual(0xe.b0d1b50d100ed13e3e8f76834bfp-4, gamma(@as(f128, 0x1.333333333333333333333333338p+0)));
    try std.testing.expectEqual(0xe.b0d1b50d100ed13e3e8f76834e1p-4, gamma(@as(f128, 0x1.33333333333333333333333333p+0)));
    try std.testing.expectEqual(0xe.2dfc48da77b553ce1d82906aedc8p-4, gamma(@as(f128, 0x1.8p+0)));
    try std.testing.expectEqual(0x1.544fa6d47b38ffdb52c43d8a064bp+0, gamma(@as(f128, 0x2.8p+0)));
    // try std.testing.expectEqual(0x3.52c72113340e7fa44eea99d90fbcp+0, gamma(@as(f128, 0x3.8p+0)));
    try std.testing.expectEqual(0xb.a1b8f3c33632bebf14351a77b71p+0, gamma(@as(f128, 0x4.8p+0)));
    try std.testing.expectEqual(0x3.457c048ee73e45a5bdaeef71ab7cp+4, gamma(@as(f128, 0x5.8p+0)));
    try std.testing.expectEqual(0x1.1fe2a1911f7d67f0f934224f12f3p+8, gamma(@as(f128, 0x6.8p+0)));
    try std.testing.expectEqual(0x7.4f411a2f4caf239e53d2df01fb28p+8, gamma(@as(f128, 0x7.8p+0)));
    try std.testing.expectEqual(0x3.6d2684462bf218b2374ad888edbcp+12, gamma(@as(f128, 0x8.8p+0)));
    // try std.testing.expectEqual(0x1.d1fc764547589d1ead5fc308be4cp+16, gamma(@as(f128, 0x9.8p+0)));
    try std.testing.expectEqual(0x2.5cff6179be9e38a25a406d6727a2p+0, gamma(@as(f128, -0x1.8p+0)));
    // try std.testing.expectEqual(-0xf.1ffc097190c16a7574cf88fa974p-4, gamma(@as(f128, -0x2.8p+0)));
    // try std.testing.expectEqual(0x4.524802b2bba4f9d86a84704798ecp-4, gamma(@as(f128, -0x3.8p+0)));
    try std.testing.expectEqual(-0xf.5d71d0b4624a94c8972c39e21fcp-8, gamma(@as(f128, -0x4.8p+0)));
    try std.testing.expectEqual(0x2.cb2bf7669d81ec818fd97ee34b96p-8, gamma(@as(f128, -0x5.8p+0)));
    // try std.testing.expectEqual(-0x6.e06c399a213fd003d83ec22f7efcp-12, gamma(@as(f128, -0x6.8p+0)));
    try std.testing.expectEqual(0xe.ab918bf37a21bbc3ef74d176644p-16, gamma(@as(f128, -0x7.8p+0)));
    try std.testing.expectEqual(-0x1.b9d4e349d22216170d1ccd5938f8p-16, gamma(@as(f128, -0x8.8p+0)));
    try std.testing.expectEqual(0x2.e8232df597cd9e77aa4b74cc2a0ep-20, gamma(@as(f128, -0x9.8p+0)));
    try std.testing.expectEqual(0xf.fffff6c3b9919b51461e34e873cp+20, gamma(@as(f128, 0x1p-24)));
    // try std.testing.expectEqual(-0x1.00000093c468e0b077c1ce0af6ep+24, gamma(@as(f128, -0x1p-24)));
    try std.testing.expectEqual(0x1.fffffffffffff6c3b981c824f404p+52, gamma(@as(f128, 0x8p-56)));
    try std.testing.expectEqual(-0x2.000000000000093c467e37db0cf8p+52, gamma(@as(f128, -0x8p-56)));
    try std.testing.expectEqual(0xf.fffffffffffffff6c3b981c824fp+60, gamma(@as(f128, 0x1p-64)));
    try std.testing.expectEqual(-0x1.000000000000000093c467e37db1p+64, gamma(@as(f128, -0x1p-64)));
    try std.testing.expectEqual(0x3.ffffffffffffffffffffffffff6cp+104, gamma(@as(f128, 0x4p-108)));
    try std.testing.expectEqual(-0x4.0000000000000000000000000094p+104, gamma(@as(f128, -0x4p-108)));
    // try std.testing.expectEqual(0x1.ffffffffffffffffffffffffffffp+112, gamma(@as(f128, 0x8p-116)));
    try std.testing.expectEqual(-0x2p+112, gamma(@as(f128, -0x8p-116)));
    try std.testing.expectEqual(0x8p+124, gamma(@as(f128, 0x2p-128)));
    try std.testing.expectEqual(-0x8p+124, gamma(@as(f128, -0x2p-128)));
    try std.testing.expectEqual(0x1p+128, gamma(@as(f128, 0x1p-128)));
    try std.testing.expectEqual(-0x1p+128, gamma(@as(f128, -0x1p-128)));
    try std.testing.expectEqual(0x2p+148, gamma(@as(f128, 0x8p-152)));
    try std.testing.expectEqual(-0x2p+148, gamma(@as(f128, -0x8p-152)));
    try std.testing.expectEqual(0x2p+148, gamma(@as(f128, 0x8p-152)));
    try std.testing.expectEqual(0x8p+1020, gamma(@as(f128, 0x2p-1024)));
    try std.testing.expectEqual(-0x2p+148, gamma(@as(f128, -0x8p-152)));
    try std.testing.expectEqual(-0x8p+1020, gamma(@as(f128, -0x2p-1024)));
    try std.testing.expectEqual(0x2p+148, gamma(@as(f128, 0x8p-152)));
    try std.testing.expectEqual(0x1p+1024, gamma(@as(f128, 0x1p-1024)));
    try std.testing.expectEqual(-0x2p+148, gamma(@as(f128, -0x8p-152)));
    try std.testing.expectEqual(-0x1p+1024, gamma(@as(f128, -0x1p-1024)));
    try std.testing.expectEqual(0x2p+148, gamma(@as(f128, 0x8p-152)));
    try std.testing.expectEqual(0x4p+1072, gamma(@as(f128, 0x4p-1076)));
    try std.testing.expectEqual(-0x2p+148, gamma(@as(f128, -0x8p-152)));
    try std.testing.expectEqual(-0x4p+1072, gamma(@as(f128, -0x4p-1076)));
    try std.testing.expectEqual(0x2p+148, gamma(@as(f128, 0x8p-152)));
    try std.testing.expectEqual(0x4p+1072, gamma(@as(f128, 0x4p-1076)));
    try std.testing.expectEqual(0x8p+16380, gamma(@as(f128, 0x2p-16384)));
    try std.testing.expectEqual(-0x2p+148, gamma(@as(f128, -0x8p-152)));
    try std.testing.expectEqual(-0x4p+1072, gamma(@as(f128, -0x4p-1076)));
    try std.testing.expectEqual(-0x8p+16380, gamma(@as(f128, -0x2p-16384)));
    try std.testing.expectEqual(0x2p+148, gamma(@as(f128, 0x8p-152)));
    try std.testing.expectEqual(0x4p+1072, gamma(@as(f128, 0x4p-1076)));
    try std.testing.expectEqual(std.math.inf(f128), gamma(@as(f128, 0x1p-16384)));
    try std.testing.expectEqual(-0x2p+148, gamma(@as(f128, -0x8p-152)));
    try std.testing.expectEqual(-0x4p+1072, gamma(@as(f128, -0x4p-1076)));
    try std.testing.expectEqual(-std.math.inf(f128), gamma(@as(f128, -0x1p-16384)));
    try std.testing.expectEqual(0x2p+148, gamma(@as(f128, 0x8p-152)));
    try std.testing.expectEqual(0x4p+1072, gamma(@as(f128, 0x4p-1076)));
    try std.testing.expectEqual(std.math.inf(f128), gamma(@as(f128, 0x8p-16448)));
    try std.testing.expectEqual(-0x2p+148, gamma(@as(f128, -0x8p-152)));
    try std.testing.expectEqual(-0x4p+1072, gamma(@as(f128, -0x4p-1076)));
    try std.testing.expectEqual(-std.math.inf(f128), gamma(@as(f128, -0x8p-16448)));
    try std.testing.expectEqual(0x2p+148, gamma(@as(f128, 0x8p-152)));
    try std.testing.expectEqual(0x4p+1072, gamma(@as(f128, 0x4p-1076)));
    try std.testing.expectEqual(std.math.inf(f128), gamma(@as(f128, 0x8p-16448)));
    try std.testing.expectEqual(std.math.inf(f128), gamma(@as(f128, 0x4p-16448)));
    try std.testing.expectEqual(std.math.inf(f128), gamma(@as(f128, 0x4p-16496)));
    try std.testing.expectEqual(-0x2p+148, gamma(@as(f128, -0x8p-152)));
    try std.testing.expectEqual(-0x4p+1072, gamma(@as(f128, -0x4p-1076)));
    try std.testing.expectEqual(-std.math.inf(f128), gamma(@as(f128, -0x8p-16448)));
    try std.testing.expectEqual(-std.math.inf(f128), gamma(@as(f128, -0x4p-16448)));
    try std.testing.expectEqual(-std.math.inf(f128), gamma(@as(f128, -0x4p-16496)));
    try std.testing.expectEqual(0x1.3b0027aed7d78dfe30dbe6eceb51p+12, gamma(@as(f128, 0x8.00001p+0)));
    try std.testing.expectEqual(0x1.3affec289603de8066de83f67784p+12, gamma(@as(f128, 0x7.fffff8p+0)));
    try std.testing.expectEqual(0x2.d0002a233e27fbd735efb122b116p+8, gamma(@as(f128, 0x7.000008p+0)));
    // try std.testing.expectEqual(0x2.cfffd5dcc46af8e165622f398162p+8, gamma(@as(f128, 0x6.fffff8p+0)));
    // try std.testing.expectEqual(0x7.8000665dfa8cccefd41898970cc8p+4, gamma(@as(f128, 0x6.000008p+0)));
    try std.testing.expectEqual(0x7.7fff99a20b3f6fbd62f0251d43e4p+4, gamma(@as(f128, 0x5.fffff8p+0)));
    try std.testing.expectEqual(0x1.80001212cb98d7b702abc680561dp+4, gamma(@as(f128, 0x5.000008p+0)));
    try std.testing.expectEqual(0x1.7fffeded35562b7b3742662b116bp+4, gamma(@as(f128, 0x4.fffff8p+0)));
    // try std.testing.expectEqual(0x6.00003c4b2deac880351e19971c44p+0, gamma(@as(f128, 0x4.000008p+0)));
    try std.testing.expectEqual(0x5.ffffe1da6a16afcaaed619a8646cp+0, gamma(@as(f128, 0x3.fffffcp+0)));
    try std.testing.expectEqual(0x2.00000761dcd4d597e6231257b69ap+0, gamma(@as(f128, 0x3.000004p+0)));
    try std.testing.expectEqual(0x1.fffff89e23530d72a903f6c426c3p+0, gamma(@as(f128, 0x2.fffffcp+0)));
    try std.testing.expectEqual(0x1.000001b0ee6708ef24ffaae1dbf7p+0, gamma(@as(f128, 0x2.000004p+0)));
    try std.testing.expectEqual(0xf.fffff2788d16cb4d9a1a3c3dac58p-4, gamma(@as(f128, 0x1.fffffep+0)));
    try std.testing.expectEqual(0xf.ffffed877342dcfaf7594b77b03p-4, gamma(@as(f128, 0x1.000002p+0)));
    try std.testing.expectEqual(0x1.00000093c468e0b077c1ce0af6ep+0, gamma(@as(f128, 0xf.fffffp-4)));
    // try std.testing.expectEqual(-0x1.0000006c3b9985f0ade7d3fc6f1p+24, gamma(@as(f128, -0xf.fffffp-4)));
    try std.testing.expectEqual(0x7.fffff93c46ab65a6b1fe38cc6cc8p+20, gamma(@as(f128, -0x1.000002p+0)));
    try std.testing.expectEqual(0x4.00000761dcdedcd54ba919032dacp+20, gamma(@as(f128, -0x1.fffffep+0)));
    // try std.testing.expectEqual(-0x1.fffff89e237b0d72155ebbe133aep+20, gamma(@as(f128, -0x2.000004p+0)));
    try std.testing.expectEqual(-0xa.aaaae042d3c4cc478fe77d4202p+16, gamma(@as(f128, -0x2.fffffcp+0)));
    try std.testing.expectEqual(0xa.aaaa7512849ed9af9e2c5533833p+16, gamma(@as(f128, -0x3.000004p+0)));
    try std.testing.expectEqual(0x2.aaaababb5fabee718fe850e068d2p+16, gamma(@as(f128, -0x3.fffffcp+0)));
    // try std.testing.expectEqual(-0x1.55554544a1a9a1e31119d9f774c5p+16, gamma(@as(f128, -0x4.000008p+0)));
    try std.testing.expectEqual(-0x4.44447e809018a708ffb3375149ap+12, gamma(@as(f128, -0x4.fffff8p+0)));
    try std.testing.expectEqual(0x4.44440a07fedb92d871015f2fd9ep+12, gamma(@as(f128, -0x5.000008p+0)));
    // try std.testing.expectEqual(0xb.60b6b5d7c93432799a2135a645f8p+8, gamma(@as(f128, -0x5.fffff8p+0)));
    // try std.testing.expectEqual(-0xb.60b560e9b5c84ff97799068ace48p+8, gamma(@as(f128, -0x6.000008p+0)));
    // try std.testing.expectEqual(-0x1.a01a1bd5ccde202013e050e5538p+8, gamma(@as(f128, -0x6.fffff8p+0)));
    try std.testing.expectEqual(0x1.a019e76a6a1424181ea377a7abcbp+8, gamma(@as(f128, -0x7.000008p+0)));
    try std.testing.expectEqual(0x3.40343aebcdf72c0e1eecafe993aep+4, gamma(@as(f128, -0x7.fffff8p+0)));
    // try std.testing.expectEqual(-0x1.a019c9f48981c2aec9937d57a4bp+4, gamma(@as(f128, -0x8.00001p+0)));
    try std.testing.expectEqual(0x4.9f949bd5f3629ad14cc512db9148p-4, gamma(@as(f128, -0x9.fffffp+0)));
    // try std.testing.expectEqual(-0x4.9f933fe684a2dc11289e4534c358p-4, gamma(@as(f128, -0xa.00001p+0)));
    // try std.testing.expectEqual(0x3.ca86e2f011ecb5b1fe737895e126p-44, gamma(@as(f128, -0x1.3ffffep+4)));
    // try std.testing.expectEqual(-0x3.ca8406112a1d38b1fe461e9243a6p-44, gamma(@as(f128, -0x1.400002p+4)));
    // try std.testing.expectEqual(0x9.c99a5695c5705142362f06942ce8p-92, gamma(@as(f128, -0x1.dffffep+4)));
    // try std.testing.expectEqual(-0x9.c991f9b45972555ffcb66455daa8p-92, gamma(@as(f128, -0x1.e00002p+4)));
    try std.testing.expectEqual(0x7.2a41f1f1fa7ab85f51a817a3683cp-144, gamma(@as(f128, -0x2.7ffffcp+4)));
    // try std.testing.expectEqual(-0x7.2a34af6633d2b3a72f681ba7c1ep-144, gamma(@as(f128, -0x2.800004p+4)));
    try std.testing.expectEqual(-0x2.cbced32c2df66773301b466565fcp-148, gamma(@as(f128, -0x2.8ffffcp+4)));
    try std.testing.expectEqual(0x2.cbc99dbe11b36857904d8e986874p-148, gamma(@as(f128, -0x2.900004p+4)));
    try std.testing.expectEqual(0x1.10b05211e13c736ab795b13e604ap-152, gamma(@as(f128, -0x2.9ffffcp+4)));
    try std.testing.expectEqual(-0x1.10ae52d9a7c61909524089a457bcp-152, gamma(@as(f128, -0x2.a00004p+4)));
    try std.testing.expectEqual(0x1.3b0027aed7d78dfe30dbe6eceb51p+12, gamma(@as(f128, 0x8.00001p+0)));
    try std.testing.expectEqual(0x1.3bp+12, gamma(@as(f128, 0x8p+0)));
    // try std.testing.expectEqual(0x1.3b00000000013d76aa158a2c6263p+12, gamma(@as(f128, 0x8.0000000000008p+0)));
    try std.testing.expectEqual(0x1.3bp+12, gamma(@as(f128, 0x8p+0)));
    try std.testing.expectEqual(0x1.3affec289603de8066de83f67784p+12, gamma(@as(f128, 0x7.fffff8p+0)));
    // try std.testing.expectEqual(0x1.3affffffffff6144aaf53aea4ab8p+12, gamma(@as(f128, 0x7.ffffffffffffcp+0)));
    try std.testing.expectEqual(0x2.d0002a233e27fbd735efb122b116p+8, gamma(@as(f128, 0x7.000008p+0)));
    try std.testing.expectEqual(0x2.dp+8, gamma(@as(f128, 0x7p+0)));
    try std.testing.expectEqual(0x2.d000000000015119e6f40ba005fep+8, gamma(@as(f128, 0x7.0000000000004p+0)));
    try std.testing.expectEqual(0x2.dp+8, gamma(@as(f128, 0x7p+0)));
    // try std.testing.expectEqual(0x2.cfffd5dcc46af8e165622f398162p+8, gamma(@as(f128, 0x6.fffff8p+0)));
    try std.testing.expectEqual(0x2.cffffffffffeaee6190bf4609ebep+8, gamma(@as(f128, 0x6.ffffffffffffcp+0)));
    // try std.testing.expectEqual(0x7.8000665dfa8cccefd41898970cc8p+4, gamma(@as(f128, 0x6.000008p+0)));
    try std.testing.expectEqual(0x7.8p+4, gamma(@as(f128, 0x6p+0)));
    try std.testing.expectEqual(0x7.80000000000332efbd3574554334p+4, gamma(@as(f128, 0x6.0000000000004p+0)));
    try std.testing.expectEqual(0x7.8p+4, gamma(@as(f128, 0x6p+0)));
    try std.testing.expectEqual(0x7.7fff99a20b3f6fbd62f0251d43e4p+4, gamma(@as(f128, 0x5.fffff8p+0)));
    // try std.testing.expectEqual(0x7.7ffffffffffccd1042ca8bac2fdcp+4, gamma(@as(f128, 0x5.ffffffffffffcp+0)));
    try std.testing.expectEqual(0x1.80001212cb98d7b702abc680561dp+4, gamma(@as(f128, 0x5.000008p+0)));
    try std.testing.expectEqual(0x1.8p+4, gamma(@as(f128, 0x5p+0)));
    try std.testing.expectEqual(0x1.8000000000009096590ab0ddd303p+4, gamma(@as(f128, 0x5.0000000000004p+0)));
    try std.testing.expectEqual(0x1.8p+4, gamma(@as(f128, 0x5p+0)));
    try std.testing.expectEqual(0x1.7fffeded35562b7b3742662b116bp+4, gamma(@as(f128, 0x4.fffff8p+0)));
    try std.testing.expectEqual(0x1.7fffffffffff6f69a6f54f2268bep+4, gamma(@as(f128, 0x4.ffffffffffffcp+0)));
    // try std.testing.expectEqual(0x6.00003c4b2deac880351e19971c44p+0, gamma(@as(f128, 0x4.000008p+0)));
    try std.testing.expectEqual(0x6p+0, gamma(@as(f128, 0x4p+0)));
    try std.testing.expectEqual(0x6.000000000001e259642ac3772de4p+0, gamma(@as(f128, 0x4.0000000000004p+0)));
    try std.testing.expectEqual(0x6p+0, gamma(@as(f128, 0x4p+0)));
    try std.testing.expectEqual(0x5.ffffe1da6a16afcaaed619a8646cp+0, gamma(@as(f128, 0x3.fffffcp+0)));
    // try std.testing.expectEqual(0x5.ffffffffffff0ed34dea9e44ac14p+0, gamma(@as(f128, 0x3.ffffffffffffep+0)));
    try std.testing.expectEqual(0x2.00000761dcd4d597e6231257b69ap+0, gamma(@as(f128, 0x3.000004p+0)));
    try std.testing.expectEqual(0x2p+0, gamma(@as(f128, 0x3p+0)));
    // try std.testing.expectEqual(0x2.0000000000003b0ee6072093d314p+0, gamma(@as(f128, 0x3.0000000000002p+0)));
    try std.testing.expectEqual(0x2p+0, gamma(@as(f128, 0x3p+0)));
    try std.testing.expectEqual(0x1.fffff89e23530d72a903f6c426c3p+0, gamma(@as(f128, 0x2.fffffcp+0)));
    // try std.testing.expectEqual(0x1.ffffffffffffc4f119f8df6c36e6p+0, gamma(@as(f128, 0x2.ffffffffffffep+0)));
    try std.testing.expectEqual(0x1.000001b0ee6708ef24ffaae1dbf7p+0, gamma(@as(f128, 0x2.000004p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f128, 0x2p+0)));
    try std.testing.expectEqual(0x1.0000000000000d8773039049e8b1p+0, gamma(@as(f128, 0x2.0000000000002p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f128, 0x2p+0)));
    try std.testing.expectEqual(0xf.fffff2788d16cb4d9a1a3c3dac58p-4, gamma(@as(f128, 0x1.fffffep+0)));
    // try std.testing.expectEqual(0xf.ffffffffffff93c467e37db0ce38p-4, gamma(@as(f128, 0x1.fffffffffffffp+0)));
    try std.testing.expectEqual(0xf.ffffed877342dcfaf7594b77b03p-4, gamma(@as(f128, 0x1.000002p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f128, 0x1p+0)));
    try std.testing.expectEqual(0xf.ffffffffffff6c3b981c824f483p-4, gamma(@as(f128, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f128, 0x1p+0)));
    try std.testing.expectEqual(0x1.00000093c468e0b077c1ce0af6ep+0, gamma(@as(f128, 0xf.fffffp-4)));
    try std.testing.expectEqual(0x1.000000000000049e233f1bed867cp+0, gamma(@as(f128, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(-0x1.0000006c3b9985f0ade7d3fc6f1p+24, gamma(@as(f128, -0xf.fffffp-4)));
    try std.testing.expectEqual(-0x2.00000000000006c3b981c824f43ap+52, gamma(@as(f128, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(0x7.fffff93c46ab65a6b1fe38cc6cc8p+20, gamma(@as(f128, -0x1.000002p+0)));
    // try std.testing.expectEqual(0xf.ffffffffffff93c467e37db0de38p+48, gamma(@as(f128, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(0x4.00000761dcdedcd54ba919032dacp+20, gamma(@as(f128, -0x1.fffffep+0)));
    // try std.testing.expectEqual(0x8.000000000000761dcc0e4127ab28p+48, gamma(@as(f128, -0x1.fffffffffffffp+0)));
    // try std.testing.expectEqual(-0x1.fffff89e237b0d72155ebbe133aep+20, gamma(@as(f128, -0x2.000004p+0)));
    // try std.testing.expectEqual(-0x3.ffffffffffff89e233f1bed881ccp+48, gamma(@as(f128, -0x2.0000000000002p+0)));
    try std.testing.expectEqual(-0xa.aaaae042d3c4cc478fe77d4202p+16, gamma(@as(f128, -0x2.fffffcp+0)));
    // try std.testing.expectEqual(-0x1.5555555555558aed7ce84e9b792cp+48, gamma(@as(f128, -0x2.ffffffffffffep+0)));
    try std.testing.expectEqual(0xa.aaaa7512849ed9af9e2c5533833p+16, gamma(@as(f128, -0x3.000004p+0)));
    try std.testing.expectEqual(0x1.5555555555551fbd2dc25c0f49f1p+48, gamma(@as(f128, -0x3.0000000000002p+0)));
    try std.testing.expectEqual(0x2.aaaababb5fabee718fe850e068d2p+16, gamma(@as(f128, -0x3.fffffcp+0)));
    try std.testing.expectEqual(0x5.55555555555656609e4be5189764p+44, gamma(@as(f128, -0x3.ffffffffffffep+0)));
    // try std.testing.expectEqual(-0x1.55554544a1a9a1e31119d9f774c5p+16, gamma(@as(f128, -0x4.000008p+0)));
    // try std.testing.expectEqual(-0x2.aaaaaaaaaaa9a99f61b41ae81366p+44, gamma(@as(f128, -0x4.0000000000004p+0)));
    try std.testing.expectEqual(-0x4.44447e809018a708ffb3375149ap+12, gamma(@as(f128, -0x4.fffff8p+0)));
    // try std.testing.expectEqual(-0x8.88888888888c2c4d12712834478p+40, gamma(@as(f128, -0x4.ffffffffffffcp+0)));
    try std.testing.expectEqual(0x4.44440a07fedb92d871015f2fd9ep+12, gamma(@as(f128, -0x5.000008p+0)));
    // try std.testing.expectEqual(0x8.888888888884e4c3fe9fe8dfff7p+40, gamma(@as(f128, -0x5.0000000000004p+0)));
    // try std.testing.expectEqual(0xb.60b6b5d7c93432799a2135a645f8p+8, gamma(@as(f128, -0x5.fffff8p+0)));
    // try std.testing.expectEqual(0x1.6c16c16c16c2168dcb2207a6223p+40, gamma(@as(f128, -0x5.ffffffffffffcp+0)));
    // try std.testing.expectEqual(-0xb.60b560e9b5c84ff97799068ace48p+8, gamma(@as(f128, -0x6.000008p+0)));
    // try std.testing.expectEqual(-0x1.6c16c16c16c0c19fb7b625dd4d2cp+40, gamma(@as(f128, -0x6.0000000000004p+0)));
    // try std.testing.expectEqual(-0x1.a01a1bd5ccde202013e050e5538p+8, gamma(@as(f128, -0x6.fffff8p+0)));
    // try std.testing.expectEqual(-0x3.403403403404e38f199013575646p+36, gamma(@as(f128, -0x6.ffffffffffffcp+0)));
    try std.testing.expectEqual(0x1.a019e76a6a1424181ea377a7abcbp+8, gamma(@as(f128, -0x7.000008p+0)));
    try std.testing.expectEqual(0x3.4034034034019cd8ecf054b0a1a4p+36, gamma(@as(f128, -0x7.0000000000004p+0)));
    try std.testing.expectEqual(0x3.40343aebcdf72c0e1eecafe993aep+4, gamma(@as(f128, -0x7.fffff8p+0)));
    try std.testing.expectEqual(0x6.806806806809fb21735429eefc64p+32, gamma(@as(f128, -0x7.ffffffffffffcp+0)));
    // try std.testing.expectEqual(-0x1.a019c9f48981c2aec9937d57a4bp+4, gamma(@as(f128, -0x8.00001p+0)));
    // try std.testing.expectEqual(-0x3.4034034033ffc57a966c721f7e4p+32, gamma(@as(f128, -0x8.0000000000008p+0)));
    try std.testing.expectEqual(0x4.9f949bd5f3629ad14cc512db9148p-4, gamma(@as(f128, -0x9.fffffp+0)));
    try std.testing.expectEqual(0x9.3f27dbbc4fb918f2f6b479fc37ep+24, gamma(@as(f128, -0x9.ffffffffffff8p+0)));
    // try std.testing.expectEqual(-0x4.9f933fe684a2dc11289e4534c358p-4, gamma(@as(f128, -0xa.00001p+0)));
    // try std.testing.expectEqual(-0x9.3f27dbbc4fa359fc0ab8c4be5b5p+24, gamma(@as(f128, -0xa.0000000000008p+0)));
    // try std.testing.expectEqual(0x3.ca86e2f011ecb5b1fe737895e126p-44, gamma(@as(f128, -0x1.3ffffep+4)));
    // try std.testing.expectEqual(0x7.950ae90080a028e1b12f78541148p-16, gamma(@as(f128, -0x1.3ffffffffffffp+4)));
    // try std.testing.expectEqual(-0x3.ca8406112a1d38b1fe461e9243a6p-44, gamma(@as(f128, -0x1.400002p+4)));
    // try std.testing.expectEqual(-0x7.950ae90080725af33439e7d134e4p-16, gamma(@as(f128, -0x1.4000000000001p+4)));
    // try std.testing.expectEqual(0x9.c99a5695c5705142362f06942ce8p-92, gamma(@as(f128, -0x1.dffffep+4)));
    // try std.testing.expectEqual(0x1.3932c5047d65147d63ec0e56fe6ep-60, gamma(@as(f128, -0x1.dffffffffffffp+4)));
    // try std.testing.expectEqual(-0x9.c991f9b45972555ffcb66455daa8p-92, gamma(@as(f128, -0x1.e00002p+4)));
    try std.testing.expectEqual(-0x1.3932c5047d5cb79bf7ee8a0e5bbfp-60, gamma(@as(f128, -0x1.e000000000001p+4)));
    try std.testing.expectEqual(0x7.2a41f1f1fa7ab85f51a817a3683cp-144, gamma(@as(f128, -0x2.7ffffcp+4)));
    // try std.testing.expectEqual(0xe.5476a15095db946b38b856b9b0d8p-116, gamma(@as(f128, -0x2.7fffffffffffep+4)));
    // try std.testing.expectEqual(-0x7.2a34af6633d2b3a72f681ba7c1ep-144, gamma(@as(f128, -0x2.800004p+4)));
    // try std.testing.expectEqual(-0xe.5476a15095076baece6bf7cd8fc8p-116, gamma(@as(f128, -0x2.8000000000002p+4)));
    try std.testing.expectEqual(-0x2.cbced32c2df66773301b466565fcp-148, gamma(@as(f128, -0x2.8ffffcp+4)));
    try std.testing.expectEqual(-0x5.979870e740b9dd69794cf94b4994p-120, gamma(@as(f128, -0x2.8fffffffffffep+4)));
    try std.testing.expectEqual(0x2.cbc99dbe11b36857904d8e986874p-148, gamma(@as(f128, -0x2.900004p+4)));
    try std.testing.expectEqual(0x5.979870e740668687b53195c1da2p-120, gamma(@as(f128, -0x2.9000000000002p+4)));
    try std.testing.expectEqual(0x1.10b05211e13c736ab795b13e604ap-152, gamma(@as(f128, -0x2.9ffffcp+4)));
    // try std.testing.expectEqual(0x2.215ea4ea61cd009a66d326ac89c6p-124, gamma(@as(f128, -0x2.9fffffffffffep+4)));
    try std.testing.expectEqual(-0x1.10ae52d9a7c61909524089a457bcp-152, gamma(@as(f128, -0x2.a00004p+4)));
    // try std.testing.expectEqual(-0x2.215ea4ea61ad0d16cf757159fd24p-124, gamma(@as(f128, -0x2.a000000000002p+4)));
    // try std.testing.expectEqual(0xd.d9c54ba29fa7f02edf65d0d0087p-200, gamma(@as(f128, -0x3.1ffffcp+4)));
    // try std.testing.expectEqual(0x1.bb36f6e12ce5169716d0dacfff2p-168, gamma(@as(f128, -0x3.1fffffffffffep+4)));
    // try std.testing.expectEqual(-0xd.d9aa2280533fc0fa48a205cb111p-200, gamma(@as(f128, -0x3.200004p+4)));
    try std.testing.expectEqual(-0x1.bb36f6e12cc9ed74ca6fcc3b9861p-168, gamma(@as(f128, -0x3.2000000000002p+4)));
    // try std.testing.expectEqual(0x1.2d4cd4e344c76df84d32370bce6dp-508, gamma(@as(f128, -0x6.3ffff8p+4)));
    // try std.testing.expectEqual(0x2.5a943cc0fd1b86af87ac9dc1a384p-480, gamma(@as(f128, -0x6.3fffffffffffcp+4)));
    // try std.testing.expectEqual(-0x1.2d4767e4f014d48bc8523646526cp-508, gamma(@as(f128, -0x6.400008p+4)));
    // try std.testing.expectEqual(-0x2.5a943cc0fcc4b6ca3cf37f41ebdep-480, gamma(@as(f128, -0x6.4000000000004p+4)));
    // try std.testing.expectEqual(0x8.d1a58f148fa4d61a162e789c9368p-860, gamma(@as(f128, -0x9.5ffffp+4)));
    try std.testing.expectEqual(0x1.1a2f2af6406ada84287436fa17b4p-828, gamma(@as(f128, -0x9.5fffffffffff8p+4)));
    // try std.testing.expectEqual(-0x8.d14d214a189b93b13f23357c4a6p-860, gamma(@as(f128, -0x9.60001p+4)));
    // try std.testing.expectEqual(-0x1.1a2f2af640126cb9b36ea2c15c7ap-828, gamma(@as(f128, -0x9.6000000000008p+4)));
    try std.testing.expectEqual(-0x5.fa2b7cb1342f0619b84e4c550dp-1088, gamma(@as(f128, -0xb.4ffffp+4)));
    // try std.testing.expectEqual(-0xb.f418cc537d2800d44c735966b7ep-1060, gamma(@as(f128, -0xb.4fffffffffff8p+4)));
    try std.testing.expectEqual(0x5.f9ed505798c523eb3303d849ab4p-1088, gamma(@as(f128, -0xb.50001p+4)));
    // try std.testing.expectEqual(0xb.f418cc5379453b3aadbc1413402p-1060, gamma(@as(f128, -0xb.5000000000008p+4)));
    // try std.testing.expectEqual(0x8.6853b8676d944b4af867833d1fbp-1096, gamma(@as(f128, -0xb.5ffffp+4)));
    try std.testing.expectEqual(0x1.0d04fe453ad3bd20f2f3dd6f2c2cp-1064, gamma(@as(f128, -0xb.5fffffffffff8p+4)));
    try std.testing.expectEqual(-0x8.67fc2cebc2f23e1c7cddddf5e03p-1096, gamma(@as(f128, -0xb.60001p+4)));
    // try std.testing.expectEqual(-0x1.0d04fe453a7c31a54a6d23c3f834p-1064, gamma(@as(f128, -0xb.6000000000008p+4)));
    try std.testing.expectEqual(-0xb.c2e7e440d1188c0b48acd829af98p-1104, gamma(@as(f128, -0xb.6ffffp+4)));
    // try std.testing.expectEqual(-0x1.785552e9f05ed31472126e701a41p-1072, gamma(@as(f128, -0xb.6fffffffffff8p+4)));
    // try std.testing.expectEqual(0xb.c26d4bc450a5bc9143545a8176bp-1104, gamma(@as(f128, -0xb.70001p+4)));
    // try std.testing.expectEqual(0x1.785552e9efe43a97f4940b914245p-1072, gamma(@as(f128, -0xb.7000000000008p+4)));
    try std.testing.expectEqual(0x1.05d1632f1f3e377a5ce1c82bcef7p-1108, gamma(@as(f128, -0xb.7ffffp+4)));
    try std.testing.expectEqual(0x2.0b981a509c577f3951f0a0734052p-1080, gamma(@as(f128, -0xb.7fffffffffff8p+4)));
    try std.testing.expectEqual(-0x1.05c6b740afc189e07304b954f89ep-1108, gamma(@as(f128, -0xb.80001p+4)));
    try std.testing.expectEqual(-0x2.0b981a509bacc0525e44e7ef1c3p-1080, gamma(@as(f128, -0xb.8000000000008p+4)));
    try std.testing.expectEqual(0x1.3b0027aed7d78dfe30dbe6eceb51p+12, gamma(@as(f128, 0x8.00001p+0)));
    try std.testing.expectEqual(0x1.3bp+12, gamma(@as(f128, 0x8p+0)));
    // try std.testing.expectEqual(0x1.3b00000000013d76aa158a2c6263p+12, gamma(@as(f128, 0x8.0000000000008p+0)));
    try std.testing.expectEqual(0x1.3b00000000000027aed542b14578p+12, gamma(@as(f128, 0x8.000000000000001p+0)));
    try std.testing.expectEqual(0x1.3b000000000000000000000009ecp+12, gamma(@as(f128, 0x8.00000000000000000000000004p+0)));
    try std.testing.expectEqual(0x1.3bp+12, gamma(@as(f128, 0x8p+0)));
    try std.testing.expectEqual(0x1.3affec289603de8066de83f67784p+12, gamma(@as(f128, 0x7.fffff8p+0)));
    // try std.testing.expectEqual(0x1.3affffffffff6144aaf53aea4ab8p+12, gamma(@as(f128, 0x7.ffffffffffffcp+0)));
    try std.testing.expectEqual(0x1.3affffffffffffec28955ea75d44p+12, gamma(@as(f128, 0x7.fffffffffffffff8p+0)));
    try std.testing.expectEqual(0x1.3afffffffffffffffffffffffb0ap+12, gamma(@as(f128, 0x7.fffffffffffffffffffffffffep+0)));
    try std.testing.expectEqual(0x2.d0002a233e27fbd735efb122b116p+8, gamma(@as(f128, 0x7.000008p+0)));
    try std.testing.expectEqual(0x2.dp+8, gamma(@as(f128, 0x7p+0)));
    try std.testing.expectEqual(0x2.d000000000015119e6f40ba005fep+8, gamma(@as(f128, 0x7.0000000000004p+0)));
    // try std.testing.expectEqual(0x2.d00000000000002a233cde8173f6p+8, gamma(@as(f128, 0x7.0000000000000008p+0)));
    try std.testing.expectEqual(0x2.d000000000000000000000000a88p+8, gamma(@as(f128, 0x7.00000000000000000000000002p+0)));
    try std.testing.expectEqual(0x2.dp+8, gamma(@as(f128, 0x7p+0)));
    // try std.testing.expectEqual(0x2.cfffd5dcc46af8e165622f398162p+8, gamma(@as(f128, 0x6.fffff8p+0)));
    try std.testing.expectEqual(0x2.cffffffffffeaee6190bf4609ebep+8, gamma(@as(f128, 0x6.ffffffffffffcp+0)));
    // try std.testing.expectEqual(0x2.cfffffffffffffd5dcc3217e8c0ap+8, gamma(@as(f128, 0x6.fffffffffffffff8p+0)));
    try std.testing.expectEqual(0x2.cffffffffffffffffffffffff578p+8, gamma(@as(f128, 0x6.fffffffffffffffffffffffffep+0)));
    // try std.testing.expectEqual(0x7.8000665dfa8cccefd41898970cc8p+4, gamma(@as(f128, 0x6.000008p+0)));
    try std.testing.expectEqual(0x7.8p+4, gamma(@as(f128, 0x6p+0)));
    try std.testing.expectEqual(0x7.80000000000332efbd3574554334p+4, gamma(@as(f128, 0x6.0000000000004p+0)));
    // try std.testing.expectEqual(0x7.80000000000000665df7a6ae8a9p+4, gamma(@as(f128, 0x6.0000000000000008p+0)));
    try std.testing.expectEqual(0x7.8000000000000000000000001998p+4, gamma(@as(f128, 0x6.00000000000000000000000002p+0)));
    try std.testing.expectEqual(0x7.8p+4, gamma(@as(f128, 0x6p+0)));
    try std.testing.expectEqual(0x7.7fff99a20b3f6fbd62f0251d43e4p+4, gamma(@as(f128, 0x5.fffff8p+0)));
    // try std.testing.expectEqual(0x7.7ffffffffffccd1042ca8bac2fdcp+4, gamma(@as(f128, 0x5.ffffffffffffcp+0)));
    // try std.testing.expectEqual(0x7.7fffffffffffff99a2085951757p+4, gamma(@as(f128, 0x5.fffffffffffffff8p+0)));
    // try std.testing.expectEqual(0x7.7fffffffffffffffffffffffe668p+4, gamma(@as(f128, 0x5.fffffffffffffffffffffffffep+0)));
    try std.testing.expectEqual(0x1.80001212cb98d7b702abc680561dp+4, gamma(@as(f128, 0x5.000008p+0)));
    try std.testing.expectEqual(0x1.8p+4, gamma(@as(f128, 0x5p+0)));
    try std.testing.expectEqual(0x1.8000000000009096590ab0ddd303p+4, gamma(@as(f128, 0x5.0000000000004p+0)));
    try std.testing.expectEqual(0x1.800000000000001212cb21561bb7p+4, gamma(@as(f128, 0x5.0000000000000008p+0)));
    try std.testing.expectEqual(0x1.8000000000000000000000000485p+4, gamma(@as(f128, 0x5.00000000000000000000000002p+0)));
    try std.testing.expectEqual(0x1.8p+4, gamma(@as(f128, 0x5p+0)));
    try std.testing.expectEqual(0x1.7fffeded35562b7b3742662b116bp+4, gamma(@as(f128, 0x4.fffff8p+0)));
    try std.testing.expectEqual(0x1.7fffffffffff6f69a6f54f2268bep+4, gamma(@as(f128, 0x4.ffffffffffffcp+0)));
    try std.testing.expectEqual(0x1.7fffffffffffffeded34dea9e449p+4, gamma(@as(f128, 0x4.fffffffffffffff8p+0)));
    try std.testing.expectEqual(0x1.7ffffffffffffffffffffffffb7bp+4, gamma(@as(f128, 0x4.fffffffffffffffffffffffffep+0)));
    // try std.testing.expectEqual(0x6.00003c4b2deac880351e19971c44p+0, gamma(@as(f128, 0x4.000008p+0)));
    try std.testing.expectEqual(0x6p+0, gamma(@as(f128, 0x4p+0)));
    try std.testing.expectEqual(0x6.000000000001e259642ac3772de4p+0, gamma(@as(f128, 0x4.0000000000004p+0)));
    try std.testing.expectEqual(0x6.000000000000003c4b2c85586edcp+0, gamma(@as(f128, 0x4.0000000000000008p+0)));
    try std.testing.expectEqual(0x6.0000000000000000000000000f14p+0, gamma(@as(f128, 0x4.00000000000000000000000002p+0)));
    try std.testing.expectEqual(0x6p+0, gamma(@as(f128, 0x4p+0)));
    try std.testing.expectEqual(0x5.ffffe1da6a16afcaaed619a8646cp+0, gamma(@as(f128, 0x3.fffffcp+0)));
    // try std.testing.expectEqual(0x5.ffffffffffff0ed34dea9e44ac14p+0, gamma(@as(f128, 0x3.ffffffffffffep+0)));
    // try std.testing.expectEqual(0x5.ffffffffffffffe1da69bd53c894p+0, gamma(@as(f128, 0x3.fffffffffffffffcp+0)));
    try std.testing.expectEqual(0x5.fffffffffffffffffffffffff878p+0, gamma(@as(f128, 0x3.ffffffffffffffffffffffffffp+0)));
    try std.testing.expectEqual(0x2.00000761dcd4d597e6231257b69ap+0, gamma(@as(f128, 0x3.000004p+0)));
    try std.testing.expectEqual(0x2p+0, gamma(@as(f128, 0x3p+0)));
    // try std.testing.expectEqual(0x2.0000000000003b0ee6072093d314p+0, gamma(@as(f128, 0x3.0000000000002p+0)));
    try std.testing.expectEqual(0x2.000000000000000761dcc0e4127ap+0, gamma(@as(f128, 0x3.0000000000000004p+0)));
    try std.testing.expectEqual(0x2.00000000000000000000000001d8p+0, gamma(@as(f128, 0x3.00000000000000000000000001p+0)));
    try std.testing.expectEqual(0x2p+0, gamma(@as(f128, 0x3p+0)));
    try std.testing.expectEqual(0x1.fffff89e23530d72a903f6c426c3p+0, gamma(@as(f128, 0x2.fffffcp+0)));
    // try std.testing.expectEqual(0x1.ffffffffffffc4f119f8df6c36e6p+0, gamma(@as(f128, 0x2.ffffffffffffep+0)));
    try std.testing.expectEqual(0x1.fffffffffffffff89e233f1bed86p+0, gamma(@as(f128, 0x2.fffffffffffffffcp+0)));
    // try std.testing.expectEqual(0x1.fffffffffffffffffffffffffe28p+0, gamma(@as(f128, 0x2.ffffffffffffffffffffffffffp+0)));
    try std.testing.expectEqual(0x1.000001b0ee6708ef24ffaae1dbf7p+0, gamma(@as(f128, 0x2.000004p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f128, 0x2p+0)));
    try std.testing.expectEqual(0x1.0000000000000d8773039049e8b1p+0, gamma(@as(f128, 0x2.0000000000002p+0)));
    try std.testing.expectEqual(0x1.0000000000000001b0ee6072093dp+0, gamma(@as(f128, 0x2.0000000000000004p+0)));
    try std.testing.expectEqual(0x1.000000000000000000000000006cp+0, gamma(@as(f128, 0x2.00000000000000000000000001p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f128, 0x2p+0)));
    try std.testing.expectEqual(0xf.fffff2788d16cb4d9a1a3c3dac58p-4, gamma(@as(f128, 0x1.fffffep+0)));
    // try std.testing.expectEqual(0xf.ffffffffffff93c467e37db0ce38p-4, gamma(@as(f128, 0x1.fffffffffffffp+0)));
    // try std.testing.expectEqual(0xf.fffffffffffffff2788cfc6fb618p-4, gamma(@as(f128, 0x1.fffffffffffffffep+0)));
    try std.testing.expectEqual(0xf.fffffffffffffffffffffffffcap-4, gamma(@as(f128, 0x1.ffffffffffffffffffffffffff8p+0)));
    try std.testing.expectEqual(0xf.ffffed877342dcfaf7594b77b03p-4, gamma(@as(f128, 0x1.000002p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f128, 0x1p+0)));
    try std.testing.expectEqual(0xf.ffffffffffff6c3b981c824f483p-4, gamma(@as(f128, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(0xf.ffffffffffffffed8773039049e8p-4, gamma(@as(f128, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(0xf.fffffffffffffffffffffffffb6p-4, gamma(@as(f128, 0x1.000000000000000000000000008p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f128, 0x1p+0)));
    try std.testing.expectEqual(0x1.00000093c468e0b077c1ce0af6ep+0, gamma(@as(f128, 0xf.fffffp-4)));
    try std.testing.expectEqual(0x1.000000000000049e233f1bed867cp+0, gamma(@as(f128, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(0x1.000000000000000093c467e37db1p+0, gamma(@as(f128, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(0x1.0000000000000000000000000025p+0, gamma(@as(f128, 0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(-0x1.0000006c3b9985f0ade7d3fc6f1p+24, gamma(@as(f128, -0xf.fffffp-4)));
    try std.testing.expectEqual(-0x2.00000000000006c3b981c824f43ap+52, gamma(@as(f128, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(-0x1.00000000000000006c3b981c824fp+64, gamma(@as(f128, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(-0x4.000000000000000000000000006cp+104, gamma(@as(f128, -0xf.fffffffffffffffffffffffffcp-4)));
    try std.testing.expectEqual(0x7.fffff93c46ab65a6b1fe38cc6cc8p+20, gamma(@as(f128, -0x1.000002p+0)));
    // try std.testing.expectEqual(0xf.ffffffffffff93c467e37db0de38p+48, gamma(@as(f128, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(0x7.fffffffffffffff93c467e37db0cp+60, gamma(@as(f128, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(0x1.ffffffffffffffffffffffffff94p+104, gamma(@as(f128, -0x1.000000000000000000000000008p+0)));
    try std.testing.expectEqual(0x4.00000761dcdedcd54ba919032dacp+20, gamma(@as(f128, -0x1.fffffep+0)));
    // try std.testing.expectEqual(0x8.000000000000761dcc0e4127ab28p+48, gamma(@as(f128, -0x1.fffffffffffffp+0)));
    // try std.testing.expectEqual(0x4.000000000000000761dcc0e41278p+60, gamma(@as(f128, -0x1.fffffffffffffffep+0)));
    try std.testing.expectEqual(0x1.0000000000000000000000000076p+104, gamma(@as(f128, -0x1.ffffffffffffffffffffffffff8p+0)));
    // try std.testing.expectEqual(-0x1.fffff89e237b0d72155ebbe133aep+20, gamma(@as(f128, -0x2.000004p+0)));
    // try std.testing.expectEqual(-0x3.ffffffffffff89e233f1bed881ccp+48, gamma(@as(f128, -0x2.0000000000002p+0)));
    try std.testing.expectEqual(-0x1.fffffffffffffff89e233f1bed86p+60, gamma(@as(f128, -0x2.0000000000000004p+0)));
    try std.testing.expectEqual(-0x7.fffffffffffffffffffffffff8ap+100, gamma(@as(f128, -0x2.00000000000000000000000001p+0)));
    try std.testing.expectEqual(-0xa.aaaae042d3c4cc478fe77d4202p+16, gamma(@as(f128, -0x2.fffffcp+0)));
    // try std.testing.expectEqual(-0x1.5555555555558aed7ce84e9b792cp+48, gamma(@as(f128, -0x2.ffffffffffffep+0)));
    try std.testing.expectEqual(-0xa.aaaaaaaaaaaaaae042d23da3f0cp+56, gamma(@as(f128, -0x2.fffffffffffffffcp+0)));
    // try std.testing.expectEqual(-0x2.aaaaaaaaaaaaaaaaaaaaaaaaae04p+100, gamma(@as(f128, -0x2.ffffffffffffffffffffffffffp+0)));
    try std.testing.expectEqual(0xa.aaaa7512849ed9af9e2c5533833p+16, gamma(@as(f128, -0x3.000004p+0)));
    try std.testing.expectEqual(0x1.5555555555551fbd2dc25c0f49f1p+48, gamma(@as(f128, -0x3.0000000000002p+0)));
    try std.testing.expectEqual(0xa.aaaaaaaaaaaaaa75128317b1649p+56, gamma(@as(f128, -0x3.0000000000000004p+0)));
    // try std.testing.expectEqual(0x2.aaaaaaaaaaaaaaaaaaaaaaaaa752p+100, gamma(@as(f128, -0x3.00000000000000000000000001p+0)));
    try std.testing.expectEqual(0x2.aaaababb5fabee718fe850e068d2p+16, gamma(@as(f128, -0x3.fffffcp+0)));
    try std.testing.expectEqual(0x5.55555555555656609e4be5189764p+44, gamma(@as(f128, -0x3.ffffffffffffep+0)));
    // try std.testing.expectEqual(0x2.aaaaaaaaaaaaaababb5f3a13a6dcp+56, gamma(@as(f128, -0x3.fffffffffffffffcp+0)));
    try std.testing.expectEqual(0xa.aaaaaaaaaaaaaaaaaaaaaaaabab8p+96, gamma(@as(f128, -0x3.ffffffffffffffffffffffffffp+0)));
    // try std.testing.expectEqual(-0x1.55554544a1a9a1e31119d9f774c5p+16, gamma(@as(f128, -0x4.000008p+0)));
    // try std.testing.expectEqual(-0x2.aaaaaaaaaaa9a99f61b41ae81366p+44, gamma(@as(f128, -0x4.0000000000004p+0)));
    try std.testing.expectEqual(-0x1.555555555555554544a0c5ec5925p+56, gamma(@as(f128, -0x4.0000000000000008p+0)));
    try std.testing.expectEqual(-0x5.5555555555555555555555554544p+96, gamma(@as(f128, -0x4.00000000000000000000000002p+0)));
    try std.testing.expectEqual(-0x4.44447e809018a708ffb3375149ap+12, gamma(@as(f128, -0x4.fffff8p+0)));
    // try std.testing.expectEqual(-0x8.88888888888c2c4d12712834478p+40, gamma(@as(f128, -0x4.ffffffffffffcp+0)));
    try std.testing.expectEqual(-0x4.444444444444447e808ce2ce3ee8p+52, gamma(@as(f128, -0x4.fffffffffffffff8p+0)));
    try std.testing.expectEqual(-0x1.11111111111111111111111114b5p+96, gamma(@as(f128, -0x4.fffffffffffffffffffffffffep+0)));
    try std.testing.expectEqual(0x4.44440a07fedb92d871015f2fd9ep+12, gamma(@as(f128, -0x5.000008p+0)));
    // try std.testing.expectEqual(0x8.888888888884e4c3fe9fe8dfff7p+40, gamma(@as(f128, -0x5.0000000000004p+0)));
    // try std.testing.expectEqual(0x4.444444444444440a07fba5ba49a4p+52, gamma(@as(f128, -0x5.0000000000000008p+0)));
    try std.testing.expectEqual(0x1.1111111111111111111111110d6dp+96, gamma(@as(f128, -0x5.00000000000000000000000002p+0)));
    // try std.testing.expectEqual(0xb.60b6b5d7c93432799a2135a645f8p+8, gamma(@as(f128, -0x5.fffff8p+0)));
    // try std.testing.expectEqual(0x1.6c16c16c16c2168dcb2207a6223p+40, gamma(@as(f128, -0x5.ffffffffffffcp+0)));
    // try std.testing.expectEqual(0xb.60b60b60b60b6160826a6bfc452p+48, gamma(@as(f128, -0x5.fffffffffffffff8p+0)));
    // try std.testing.expectEqual(0x2.d82d82d82d82d82d82d82d82e2d4p+92, gamma(@as(f128, -0x5.fffffffffffffffffffffffffep+0)));
    // try std.testing.expectEqual(-0xb.60b560e9b5c84ff97799068ace48p+8, gamma(@as(f128, -0x6.000008p+0)));
    // try std.testing.expectEqual(-0x1.6c16c16c16c0c19fb7b625dd4d2cp+40, gamma(@as(f128, -0x6.0000000000004p+0)));
    try std.testing.expectEqual(-0xb.60b60b60b60b600b9457001a7c48p+48, gamma(@as(f128, -0x6.0000000000000008p+0)));
    // try std.testing.expectEqual(-0x2.d82d82d82d82d82d82d82d82cd86p+92, gamma(@as(f128, -0x6.00000000000000000000000002p+0)));
    // try std.testing.expectEqual(-0x1.a01a1bd5ccde202013e050e5538p+8, gamma(@as(f128, -0x6.fffff8p+0)));
    // try std.testing.expectEqual(-0x3.403403403404e38f199013575646p+36, gamma(@as(f128, -0x6.ffffffffffffcp+0)));
    // try std.testing.expectEqual(-0x1.a01a01a01a01a03437517eff955p+48, gamma(@as(f128, -0x6.fffffffffffffff8p+0)));
    try std.testing.expectEqual(-0x6.8068068068068068068068069a9cp+88, gamma(@as(f128, -0x6.fffffffffffffffffffffffffep+0)));
    try std.testing.expectEqual(0x1.a019e76a6a1424181ea377a7abcbp+8, gamma(@as(f128, -0x7.000008p+0)));
    try std.testing.expectEqual(0x3.4034034034019cd8ecf054b0a1a4p+36, gamma(@as(f128, -0x7.0000000000004p+0)));
    // try std.testing.expectEqual(0x1.a01a01a01a019fffcbeeb503aae4p+48, gamma(@as(f128, -0x7.0000000000000008p+0)));
    try std.testing.expectEqual(0x6.8068068068068068068068066634p+88, gamma(@as(f128, -0x7.00000000000000000000000002p+0)));
    try std.testing.expectEqual(0x3.40343aebcdf72c0e1eecafe993aep+4, gamma(@as(f128, -0x7.fffff8p+0)));
    try std.testing.expectEqual(0x6.806806806809fb21735429eefc64p+32, gamma(@as(f128, -0x7.ffffffffffffcp+0)));
    // try std.testing.expectEqual(0x3.403403403403406baed7013f5ea2p+44, gamma(@as(f128, -0x7.fffffffffffffff8p+0)));
    // try std.testing.expectEqual(0xd.00d00d00d00d00d00d00d00d3878p+84, gamma(@as(f128, -0x7.fffffffffffffffffffffffffep+0)));
    // try std.testing.expectEqual(-0x1.a019c9f48981c2aec9937d57a4bp+4, gamma(@as(f128, -0x8.00001p+0)));
    // try std.testing.expectEqual(-0x3.4034034033ffc57a966c721f7e4p+32, gamma(@as(f128, -0x8.0000000000008p+0)));
    try std.testing.expectEqual(-0x1.a01a01a01a019fe256094cc581abp+44, gamma(@as(f128, -0x8.000000000000001p+0)));
    // try std.testing.expectEqual(-0x6.80680680680680680680680648bcp+84, gamma(@as(f128, -0x8.00000000000000000000000004p+0)));
    try std.testing.expectEqual(0x4.9f949bd5f3629ad14cc512db9148p-4, gamma(@as(f128, -0x9.fffffp+0)));
    try std.testing.expectEqual(0x9.3f27dbbc4fb918f2f6b479fc37ep+24, gamma(@as(f128, -0x9.ffffffffffff8p+0)));
    try std.testing.expectEqual(0x4.9f93edde27d71d69b812af8743d4p+36, gamma(@as(f128, -0x9.fffffffffffffffp+0)));
    try std.testing.expectEqual(0x1.27e4fb7789f5c72ef016d3ea7158p+80, gamma(@as(f128, -0x9.fffffffffffffffffffffffffcp+0)));
    // try std.testing.expectEqual(-0x4.9f933fe684a2dc11289e4534c358p-4, gamma(@as(f128, -0xa.00001p+0)));
    // try std.testing.expectEqual(-0x9.3f27dbbc4fa359fc0ab8c4be5b5p+24, gamma(@as(f128, -0xa.0000000000008p+0)));
    try std.testing.expectEqual(-0x4.9f93edde27d71c0dc8a3efcbeff4p+36, gamma(@as(f128, -0xa.000000000000001p+0)));
    try std.testing.expectEqual(-0x1.27e4fb7789f5c72ef016d3ea5b99p+80, gamma(@as(f128, -0xa.00000000000000000000000004p+0)));
    // try std.testing.expectEqual(0x3.ca86e2f011ecb5b1fe737895e126p-44, gamma(@as(f128, -0x1.3ffffep+4)));
    // try std.testing.expectEqual(0x7.950ae90080a028e1b12f78541148p-16, gamma(@as(f128, -0x1.3ffffffffffffp+4)));
    // try std.testing.expectEqual(0x3.ca8574804044a263a8ce3f9e658cp-4, gamma(@as(f128, -0x1.3ffffffffffffffep+4)));
    // try std.testing.expectEqual(0xf.2a15d201011283d4e5695fc8f448p+36, gamma(@as(f128, -0x1.3fffffffffffffffffffffffff8p+4)));
    // try std.testing.expectEqual(-0x3.ca8406112a1d38b1fe461e9243a6p-44, gamma(@as(f128, -0x1.400002p+4)));
    // try std.testing.expectEqual(-0x7.950ae90080725af33439e7d134e4p-16, gamma(@as(f128, -0x1.4000000000001p+4)));
    try std.testing.expectEqual(-0x3.ca85748040449f86c9e670455d5ep-4, gamma(@as(f128, -0x1.4000000000000002p+4)));
    try std.testing.expectEqual(-0xf.2a15d201011283d4e5695fc61768p+36, gamma(@as(f128, -0x1.400000000000000000000000008p+4)));
    // try std.testing.expectEqual(0x9.c99a5695c5705142362f06942ce8p-92, gamma(@as(f128, -0x1.dffffep+4)));
    // try std.testing.expectEqual(0x1.3932c5047d65147d63ec0e56fe6ep-60, gamma(@as(f128, -0x1.dffffffffffffp+4)));
    try std.testing.expectEqual(0x9.c9962823eb073493e020600e728p-52, gamma(@as(f128, -0x1.dffffffffffffffep+4)));
    // try std.testing.expectEqual(0x2.72658a08fac1cc195bda98535672p-8, gamma(@as(f128, -0x1.dfffffffffffffffffffffffff8p+4)));
    // try std.testing.expectEqual(-0x9.c991f9b45972555ffcb66455daa8p-92, gamma(@as(f128, -0x1.e00002p+4)));
    try std.testing.expectEqual(-0x1.3932c5047d5cb79bf7ee8a0e5bbfp-60, gamma(@as(f128, -0x1.e000000000001p+4)));
    // try std.testing.expectEqual(-0x9.c9962823eb072c36feb4628a29d8p-52, gamma(@as(f128, -0x1.e000000000000002p+4)));
    try std.testing.expectEqual(-0x2.72658a08fac1cc195bda9852d0a4p-8, gamma(@as(f128, -0x1.e00000000000000000000000008p+4)));
    try std.testing.expectEqual(0x7.2a41f1f1fa7ab85f51a817a3683cp-144, gamma(@as(f128, -0x2.7ffffcp+4)));
    // try std.testing.expectEqual(0xe.5476a15095db946b38b856b9b0d8p-116, gamma(@as(f128, -0x2.7fffffffffffep+4)));
    // try std.testing.expectEqual(0x7.2a3b50a84ab8c6a7c7ac6511ac1p-104, gamma(@as(f128, -0x2.7ffffffffffffffcp+4)));
    // try std.testing.expectEqual(0x1.ca8ed42a12ae3001a07244ac173fp-60, gamma(@as(f128, -0x2.7fffffffffffffffffffffffffp+4)));
    // try std.testing.expectEqual(-0x7.2a34af6633d2b3a72f681ba7c1ep-144, gamma(@as(f128, -0x2.800004p+4)));
    // try std.testing.expectEqual(-0xe.5476a15095076baece6bf7cd8fc8p-116, gamma(@as(f128, -0x2.8000000000002p+4)));
    try std.testing.expectEqual(-0x7.2a3b50a84ab8b9653be5c04bbd4cp-104, gamma(@as(f128, -0x2.8000000000000004p+4)));
    // try std.testing.expectEqual(-0x1.ca8ed42a12ae3001a07244ab4316p-60, gamma(@as(f128, -0x2.80000000000000000000000001p+4)));
    try std.testing.expectEqual(-0x2.cbced32c2df66773301b466565fcp-148, gamma(@as(f128, -0x2.8ffffcp+4)));
    try std.testing.expectEqual(-0x5.979870e740b9dd69794cf94b4994p-120, gamma(@as(f128, -0x2.8fffffffffffep+4)));
    // try std.testing.expectEqual(-0x2.cbcc3873a0481b9702adc43e8206p-108, gamma(@as(f128, -0x2.8ffffffffffffffcp+4)));
    // try std.testing.expectEqual(-0xb.2f30e1ce812063f12e7e8d9031ap-68, gamma(@as(f128, -0x2.8fffffffffffffffffffffffffp+4)));
    try std.testing.expectEqual(0x2.cbc99dbe11b36857904d8e986874p-148, gamma(@as(f128, -0x2.900004p+4)));
    try std.testing.expectEqual(0x5.979870e740668687b53195c1da2p-120, gamma(@as(f128, -0x2.9000000000002p+4)));
    try std.testing.expectEqual(0x2.cbcc3873a048166194918288497p-108, gamma(@as(f128, -0x2.9000000000000004p+4)));
    try std.testing.expectEqual(0xb.2f30e1ce812063f12e7e8d8afc3p-68, gamma(@as(f128, -0x2.90000000000000000000000001p+4)));
    try std.testing.expectEqual(0x1.10b05211e13c736ab795b13e604ap-152, gamma(@as(f128, -0x2.9ffffcp+4)));
    // try std.testing.expectEqual(0x2.215ea4ea61cd009a66d326ac89c6p-124, gamma(@as(f128, -0x2.9fffffffffffep+4)));
    // try std.testing.expectEqual(0x1.10af527530de846be9aee0ca639fp-112, gamma(@as(f128, -0x2.9ffffffffffffffcp+4)));
    // try std.testing.expectEqual(0x4.42bd49d4c37a0db136489773e3c4p-72, gamma(@as(f128, -0x2.9fffffffffffffffffffffffffp+4)));
    try std.testing.expectEqual(-0x1.10ae52d9a7c61909524089a457bcp-152, gamma(@as(f128, -0x2.a00004p+4)));
    // try std.testing.expectEqual(-0x2.215ea4ea61ad0d16cf757159fd24p-124, gamma(@as(f128, -0x2.a000000000002p+4)));
    // try std.testing.expectEqual(-0x1.10af527530de826cb1756aef0e76p-112, gamma(@as(f128, -0x2.a000000000000004p+4)));
    // try std.testing.expectEqual(-0x4.42bd49d4c37a0db136489771e48cp-72, gamma(@as(f128, -0x2.a0000000000000000000000001p+4)));
    // try std.testing.expectEqual(0xd.d9c54ba29fa7f02edf65d0d0087p-200, gamma(@as(f128, -0x3.1ffffcp+4)));
    // try std.testing.expectEqual(0x1.bb36f6e12ce5169716d0dacfff2p-168, gamma(@as(f128, -0x3.1fffffffffffep+4)));
    // try std.testing.expectEqual(0xd.d9b7b70966bc1dc41628cab0fa5p-160, gamma(@as(f128, -0x3.1ffffffffffffffcp+4)));
    try std.testing.expectEqual(0x3.766dedc259af040be140a68b454ep-116, gamma(@as(f128, -0x3.1fffffffffffffffffffffffffp+4)));
    // try std.testing.expectEqual(-0xd.d9aa2280533fc0fa48a205cb111p-200, gamma(@as(f128, -0x3.200004p+4)));
    try std.testing.expectEqual(-0x1.bb36f6e12cc9ed74ca6fcc3b9861p-168, gamma(@as(f128, -0x3.2000000000002p+4)));
    // try std.testing.expectEqual(-0xd.d9b7b70966bc029af3dc69a265e8p-160, gamma(@as(f128, -0x3.2000000000000004p+4)));
    // try std.testing.expectEqual(-0x3.766dedc259af040be140a68992bcp-116, gamma(@as(f128, -0x3.20000000000000000000000001p+4)));
    // try std.testing.expectEqual(0x1.2d4cd4e344c76df84d32370bce6dp-508, gamma(@as(f128, -0x6.3ffff8p+4)));
    // try std.testing.expectEqual(0x2.5a943cc0fd1b86af87ac9dc1a384p-480, gamma(@as(f128, -0x6.3fffffffffffcp+4)));
    // try std.testing.expectEqual(0x1.2d4a1e607e781214f0525c22da55p-468, gamma(@as(f128, -0x6.3ffffffffffffff8p+4)));
    // try std.testing.expectEqual(0x4.b5287981f9e03d79c4a0196a4fdp-428, gamma(@as(f128, -0x6.3ffffffffffffffffffffffffep+4)));
    // try std.testing.expectEqual(-0x1.2d4767e4f014d48bc8523646526cp-508, gamma(@as(f128, -0x6.400008p+4)));
    // try std.testing.expectEqual(-0x2.5a943cc0fcc4b6ca3cf37f41ebdep-480, gamma(@as(f128, -0x6.4000000000004p+4)));
    try std.testing.expectEqual(-0x1.2d4a1e607e780ca7f1fdb090f25ap-468, gamma(@as(f128, -0x6.4000000000000008p+4)));
    try std.testing.expectEqual(-0x4.b5287981f9e03d79c4a01964e2dp-428, gamma(@as(f128, -0x6.40000000000000000000000002p+4)));
    // try std.testing.expectEqual(0x8.d1a58f148fa4d61a162e789c9368p-860, gamma(@as(f128, -0x9.5ffffp+4)));
    try std.testing.expectEqual(0x1.1a2f2af6406ada84287436fa17b4p-828, gamma(@as(f128, -0x9.5fffffffffff8p+4)));
    try std.testing.expectEqual(0x8.d17957b201f5492e54c5ca6362dp-820, gamma(@as(f128, -0x9.5ffffffffffffffp+4)));
    try std.testing.expectEqual(0x2.345e55ec807d473ddbe2d1e914eap-776, gamma(@as(f128, -0x9.5ffffffffffffffffffffffffcp+4)));
    // try std.testing.expectEqual(-0x8.d14d214a189b93b13f23357c4a6p-860, gamma(@as(f128, -0x9.60001p+4)));
    // try std.testing.expectEqual(-0x1.1a2f2af640126cb9b36ea2c15c7ap-828, gamma(@as(f128, -0x9.6000000000008p+4)));
    // try std.testing.expectEqual(-0x8.d17957b201f4f0c08a50c4cf2a1p-820, gamma(@as(f128, -0x9.600000000000001p+4)));
    // try std.testing.expectEqual(-0x2.345e55ec807d473ddbe2d1e38e0ep-776, gamma(@as(f128, -0x9.60000000000000000000000004p+4)));
    try std.testing.expectEqual(-0x5.fa2b7cb1342f0619b84e4c550dp-1088, gamma(@as(f128, -0xb.4ffffp+4)));
    // try std.testing.expectEqual(-0xb.f418cc537d2800d44c735966b7ep-1060, gamma(@as(f128, -0xb.4fffffffffff8p+4)));
    // try std.testing.expectEqual(-0x5.fa0c6629bd9b6e19eb58ba6e7148p-1048, gamma(@as(f128, -0xb.4ffffffffffffffp+4)));
    // try std.testing.expectEqual(-0x1.7e83198a6f66d3c0efa2f12f02f7p-1004, gamma(@as(f128, -0xb.4ffffffffffffffffffffffffcp+4)));
    try std.testing.expectEqual(0x5.f9ed505798c523eb3303d849ab4p-1088, gamma(@as(f128, -0xb.50001p+4)));
    // try std.testing.expectEqual(0xb.f418cc5379453b3aadbc1413402p-1060, gamma(@as(f128, -0xb.5000000000008p+4)));
    // try std.testing.expectEqual(0x5.fa0c6629bd9b2fed91becefa1c1p-1048, gamma(@as(f128, -0xb.500000000000001p+4)));
    // try std.testing.expectEqual(0x1.7e83198a6f66d3c0efa2f12b2031p-1004, gamma(@as(f128, -0xb.50000000000000000000000004p+4)));
    // try std.testing.expectEqual(0x8.6853b8676d944b4af867833d1fbp-1096, gamma(@as(f128, -0xb.5ffffp+4)));
    try std.testing.expectEqual(0x1.0d04fe453ad3bd20f2f3dd6f2c2cp-1064, gamma(@as(f128, -0xb.5fffffffffff8p+4)));
    try std.testing.expectEqual(0x8.6827f229d53fe6deb3582838a6b8p-1056, gamma(@as(f128, -0xb.5ffffffffffffffp+4)));
    try std.testing.expectEqual(0x2.1a09fc8a754feec63d60f939b084p-1012, gamma(@as(f128, -0xb.5ffffffffffffffffffffffffcp+4)));
    try std.testing.expectEqual(-0x8.67fc2cebc2f23e1c7cddddf5e03p-1096, gamma(@as(f128, -0xb.60001p+4)));
    // try std.testing.expectEqual(-0x1.0d04fe453a7c31a54a6d23c3f834p-1064, gamma(@as(f128, -0xb.6000000000008p+4)));
    // try std.testing.expectEqual(-0x8.6827f229d53f8f5337afa17efb8p-1056, gamma(@as(f128, -0xb.600000000000001p+4)));
    try std.testing.expectEqual(-0x2.1a09fc8a754feec63d60f93437ccp-1012, gamma(@as(f128, -0xb.60000000000000000000000004p+4)));
    try std.testing.expectEqual(-0xb.c2e7e440d1188c0b48acd829af98p-1104, gamma(@as(f128, -0xb.6ffffp+4)));
    // try std.testing.expectEqual(-0x1.785552e9f05ed31472126e701a41p-1072, gamma(@as(f128, -0xb.6fffffffffff8p+4)));
    try std.testing.expectEqual(-0xb.c2aa974f810c73fdd8d87a72ed78p-1064, gamma(@as(f128, -0xb.6ffffffffffffffp+4)));
    try std.testing.expectEqual(-0x2.f0aaa5d3e0430dac66a66ed4341cp-1020, gamma(@as(f128, -0xb.6ffffffffffffffffffffffffcp+4)));
    // try std.testing.expectEqual(0xb.c26d4bc450a5bc9143545a8176bp-1104, gamma(@as(f128, -0xb.70001p+4)));
    // try std.testing.expectEqual(0x1.785552e9efe43a97f4940b914245p-1072, gamma(@as(f128, -0xb.7000000000008p+4)));
    // try std.testing.expectEqual(0xb.c2aa974f810bf9655c5afc100eap-1064, gamma(@as(f128, -0xb.700000000000001p+4)));
    // try std.testing.expectEqual(0x2.f0aaa5d3e0430dac66a66ecc8a94p-1020, gamma(@as(f128, -0xb.70000000000000000000000004p+4)));
    try std.testing.expectEqual(0x1.05d1632f1f3e377a5ce1c82bcef7p-1108, gamma(@as(f128, -0xb.7ffffp+4)));
    try std.testing.expectEqual(0x2.0b981a509c577f3951f0a0734052p-1080, gamma(@as(f128, -0xb.7fffffffffff8p+4)));
    // try std.testing.expectEqual(0x1.05cc0d284e011538e344fb8ffb9dp-1068, gamma(@as(f128, -0xb.7ffffffffffffffp+4)));
    // try std.testing.expectEqual(0x4.173034a138043f8bb03578ce33a8p-1028, gamma(@as(f128, -0xb.7ffffffffffffffffffffffffcp+4)));
    try std.testing.expectEqual(-0x1.05c6b740afc189e07304b954f89ep-1108, gamma(@as(f128, -0xb.80001p+4)));
    try std.testing.expectEqual(-0x2.0b981a509bacc0525e44e7ef1c3p-1080, gamma(@as(f128, -0xb.8000000000008p+4)));
    try std.testing.expectEqual(-0x1.05cc0d284e010a8cf4d5c0d4735bp-1068, gamma(@as(f128, -0xb.800000000000001p+4)));
    try std.testing.expectEqual(-0x4.173034a138043f8bb03578c387b8p-1028, gamma(@as(f128, -0xb.80000000000000000000000004p+4)));
    //  try std.testing.expectEqual(0x3.a18e29bac973932feed1b47afae6p-1140, gamma(@as(f128, -0xb.bffffp+4)));
    // try std.testing.expectEqual(0x7.42f647bca86c527d96aff32b14acp-1112, gamma(@as(f128, -0xb.bfffffffffff8p+4)));
    try std.testing.expectEqual(0x3.a17b23de539e0f1f1af66ae9e844p-1100, gamma(@as(f128, -0xb.bffffffffffffffp+4)));
    // try std.testing.expectEqual(0xe.85ec8f794e77f065d92f25a98738p-1060, gamma(@as(f128, -0xb.bffffffffffffffffffffffffcp+4)));
    // try std.testing.expectEqual(-0x3.a1681e71734405bc890265f19adap-1140, gamma(@as(f128, -0xb.c0001p+4)));
    // try std.testing.expectEqual(-0x7.42f647bca60b9de8427f6a362ab8p-1112, gamma(@as(f128, -0xb.c000000000008p+4)));
    // try std.testing.expectEqual(-0x3.a17b23de539de913d1a127e158f6p-1100, gamma(@as(f128, -0xb.c00000000000001p+4)));
    // try std.testing.expectEqual(-0xe.85ec8f794e77f065d92f25837bfp-1060, gamma(@as(f128, -0xb.c0000000000000000000000004p+4)));
    // try std.testing.expectEqual(-0x4.eb1490744e9508cbdf4b2d2d11b8p-1148, gamma(@as(f128, -0xb.cffffp+4)));
    // try std.testing.expectEqual(-0x9.d5f58b282beb2e4ada1f6e725c48p-1120, gamma(@as(f128, -0xb.cfffffffffff8p+4)));
    // try std.testing.expectEqual(-0x4.eafac59415275c4be21f68f6814p-1108, gamma(@as(f128, -0xb.cffffffffffffffp+4)));
    try std.testing.expectEqual(-0x1.3abeb1650549d0a05366de9dee11p-1064, gamma(@as(f128, -0xb.cffffffffffffffffffffffffcp+4)));
    try std.testing.expectEqual(0x4.eae0fb4b4576d3ee7cdc0f84655p-1148, gamma(@as(f128, -0xb.d0001p+4)));
    // try std.testing.expectEqual(0x9.d5f58b2828b1dbba5c4ec70798d8p-1120, gamma(@as(f128, -0xb.d000000000008p+4)));
    // try std.testing.expectEqual(0x4.eafac594152728b6b9178bec0a94p-1108, gamma(@as(f128, -0xb.d00000000000001p+4)));
    try std.testing.expectEqual(0x1.3abeb1650549d0a05366de9ab4bep-1064, gamma(@as(f128, -0xb.d0000000000000000000000004p+4)));
    // try std.testing.expectEqual(0x6.a071f95f54494e510e48132cef8cp-1156, gamma(@as(f128, -0xb.dffffp+4)));
    // try std.testing.expectEqual(0xd.409e5fdfe4f1fb07d10093ac5bc8p-1128, gamma(@as(f128, -0xb.dfffffffffff8p+4)));
    // try std.testing.expectEqual(0x6.a04f2feff162d8036197b5c29fd8p-1116, gamma(@as(f128, -0xb.dffffffffffffffp+4)));
    try std.testing.expectEqual(0x1.a813cbfbfc58ad4e96196c9ee5b3p-1072, gamma(@as(f128, -0xb.dffffffffffffffffffffffffcp+4)));
    // try std.testing.expectEqual(-0x6.a02c674cee90e10296e1141cfd9cp-1156, gamma(@as(f128, -0xb.e0001p+4)));
    // try std.testing.expectEqual(-0xd.409e5fdfe098d9e190969c4f40b8p-1128, gamma(@as(f128, -0xb.e000000000008p+4)));
    try std.testing.expectEqual(-0x6.a04f2feff16292714f33af232a04p-1116, gamma(@as(f128, -0xb.e00000000000001p+4)));
    // try std.testing.expectEqual(-0x1.a813cbfbfc58ad4e96196c9a8c92p-1072, gamma(@as(f128, -0xb.e0000000000000000000000004p+4)));
    try std.testing.expectEqual(-0x8.e1c509b9188f73d1ea32ca8230bp-1164, gamma(@as(f128, -0xb.effffp+4)));
    // try std.testing.expectEqual(-0x1.1c32cbb79d3b2fad009321b3186ep-1132, gamma(@as(f128, -0xb.efffffffffff8p+4)));
    // try std.testing.expectEqual(-0x8.e1965dbce864507ba91eede73f5p-1124, gamma(@as(f128, -0xb.effffffffffffffp+4)));
    // try std.testing.expectEqual(-0x2.3865976f3a1908740d8947de5b7cp-1080, gamma(@as(f128, -0xb.effffffffffffffffffffffffcp+4)));
    // try std.testing.expectEqual(0x8.e167b2d322aba202926ca843c65p-1164, gamma(@as(f128, -0xb.f0001p+4)));
    try std.testing.expectEqual(0x1.1c32cbb79cddd8c70cf62ebbabedp-1132, gamma(@as(f128, -0xb.f000000000008p+4)));
    // try std.testing.expectEqual(0x8.e1965dbce863f324c32b50f447ep-1124, gamma(@as(f128, -0xb.f00000000000001p+4)));
    // try std.testing.expectEqual(0x2.3865976f3a1908740d8947d8860cp-1080, gamma(@as(f128, -0xb.f0000000000000000000000004p+4)));
    try std.testing.expectEqual(0x1.3b0027aed7d78dfe30dbe6eceb51p+12, gamma(@as(f128, 0x8.00001p+0)));
    try std.testing.expectEqual(0x1.3bp+12, gamma(@as(f128, 0x8p+0)));
    // try std.testing.expectEqual(0x1.3b00000000013d76aa158a2c6263p+12, gamma(@as(f128, 0x8.0000000000008p+0)));
    try std.testing.expectEqual(0x1.3b00000000000027aed542b14578p+12, gamma(@as(f128, 0x8.000000000000001p+0)));
    try std.testing.expectEqual(0x1.3bp+12, gamma(@as(f128, 0x8p+0)));
    try std.testing.expectEqual(0x1.3affec289603de8066de83f67784p+12, gamma(@as(f128, 0x7.fffff8p+0)));
    // try std.testing.expectEqual(0x1.3affffffffff6144aaf53aea4ab8p+12, gamma(@as(f128, 0x7.ffffffffffffcp+0)));
    try std.testing.expectEqual(0x1.3affffffffffffec28955ea75d44p+12, gamma(@as(f128, 0x7.fffffffffffffff8p+0)));
    try std.testing.expectEqual(0x2.d0002a233e27fbd735efb122b116p+8, gamma(@as(f128, 0x7.000008p+0)));
    try std.testing.expectEqual(0x2.dp+8, gamma(@as(f128, 0x7p+0)));
    try std.testing.expectEqual(0x2.d000000000015119e6f40ba005fep+8, gamma(@as(f128, 0x7.0000000000004p+0)));
    // try std.testing.expectEqual(0x2.d00000000000002a233cde8173f6p+8, gamma(@as(f128, 0x7.0000000000000008p+0)));
    try std.testing.expectEqual(0x2.dp+8, gamma(@as(f128, 0x7p+0)));
    // try std.testing.expectEqual(0x2.cfffd5dcc46af8e165622f398162p+8, gamma(@as(f128, 0x6.fffff8p+0)));
    try std.testing.expectEqual(0x2.cffffffffffeaee6190bf4609ebep+8, gamma(@as(f128, 0x6.ffffffffffffcp+0)));
    // try std.testing.expectEqual(0x2.cfffffffffffffd5dcc3217e8c0ap+8, gamma(@as(f128, 0x6.fffffffffffffff8p+0)));
    // try std.testing.expectEqual(0x7.8000665dfa8cccefd41898970cc8p+4, gamma(@as(f128, 0x6.000008p+0)));
    try std.testing.expectEqual(0x7.8p+4, gamma(@as(f128, 0x6p+0)));
    try std.testing.expectEqual(0x7.80000000000332efbd3574554334p+4, gamma(@as(f128, 0x6.0000000000004p+0)));
    // try std.testing.expectEqual(0x7.80000000000000665df7a6ae8a9p+4, gamma(@as(f128, 0x6.0000000000000008p+0)));
    try std.testing.expectEqual(0x7.8p+4, gamma(@as(f128, 0x6p+0)));
    try std.testing.expectEqual(0x7.7fff99a20b3f6fbd62f0251d43e4p+4, gamma(@as(f128, 0x5.fffff8p+0)));
    // try std.testing.expectEqual(0x7.7ffffffffffccd1042ca8bac2fdcp+4, gamma(@as(f128, 0x5.ffffffffffffcp+0)));
    // try std.testing.expectEqual(0x7.7fffffffffffff99a2085951757p+4, gamma(@as(f128, 0x5.fffffffffffffff8p+0)));
    try std.testing.expectEqual(0x1.80001212cb98d7b702abc680561dp+4, gamma(@as(f128, 0x5.000008p+0)));
    try std.testing.expectEqual(0x1.8p+4, gamma(@as(f128, 0x5p+0)));
    try std.testing.expectEqual(0x1.8000000000009096590ab0ddd303p+4, gamma(@as(f128, 0x5.0000000000004p+0)));
    try std.testing.expectEqual(0x1.800000000000001212cb21561bb7p+4, gamma(@as(f128, 0x5.0000000000000008p+0)));
    try std.testing.expectEqual(0x1.8p+4, gamma(@as(f128, 0x5p+0)));
    try std.testing.expectEqual(0x1.7fffeded35562b7b3742662b116bp+4, gamma(@as(f128, 0x4.fffff8p+0)));
    try std.testing.expectEqual(0x1.7fffffffffff6f69a6f54f2268bep+4, gamma(@as(f128, 0x4.ffffffffffffcp+0)));
    try std.testing.expectEqual(0x1.7fffffffffffffeded34dea9e449p+4, gamma(@as(f128, 0x4.fffffffffffffff8p+0)));
    // try std.testing.expectEqual(0x6.00003c4b2deac880351e19971c44p+0, gamma(@as(f128, 0x4.000008p+0)));
    try std.testing.expectEqual(0x6p+0, gamma(@as(f128, 0x4p+0)));
    try std.testing.expectEqual(0x6.000000000001e259642ac3772de4p+0, gamma(@as(f128, 0x4.0000000000004p+0)));
    try std.testing.expectEqual(0x6.000000000000003c4b2c85586edcp+0, gamma(@as(f128, 0x4.0000000000000008p+0)));
    try std.testing.expectEqual(0x6p+0, gamma(@as(f128, 0x4p+0)));
    try std.testing.expectEqual(0x5.ffffe1da6a16afcaaed619a8646cp+0, gamma(@as(f128, 0x3.fffffcp+0)));
    // try std.testing.expectEqual(0x5.ffffffffffff0ed34dea9e44ac14p+0, gamma(@as(f128, 0x3.ffffffffffffep+0)));
    // try std.testing.expectEqual(0x5.ffffffffffffffe1da69bd53c894p+0, gamma(@as(f128, 0x3.fffffffffffffffcp+0)));
    try std.testing.expectEqual(0x2.00000761dcd4d597e6231257b69ap+0, gamma(@as(f128, 0x3.000004p+0)));
    try std.testing.expectEqual(0x2p+0, gamma(@as(f128, 0x3p+0)));
    // try std.testing.expectEqual(0x2.0000000000003b0ee6072093d314p+0, gamma(@as(f128, 0x3.0000000000002p+0)));
    try std.testing.expectEqual(0x2.000000000000000761dcc0e4127ap+0, gamma(@as(f128, 0x3.0000000000000004p+0)));
    try std.testing.expectEqual(0x2p+0, gamma(@as(f128, 0x3p+0)));
    try std.testing.expectEqual(0x1.fffff89e23530d72a903f6c426c3p+0, gamma(@as(f128, 0x2.fffffcp+0)));
    // try std.testing.expectEqual(0x1.ffffffffffffc4f119f8df6c36e6p+0, gamma(@as(f128, 0x2.ffffffffffffep+0)));
    try std.testing.expectEqual(0x1.fffffffffffffff89e233f1bed86p+0, gamma(@as(f128, 0x2.fffffffffffffffcp+0)));
    try std.testing.expectEqual(0x1.000001b0ee6708ef24ffaae1dbf7p+0, gamma(@as(f128, 0x2.000004p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f128, 0x2p+0)));
    try std.testing.expectEqual(0x1.0000000000000d8773039049e8b1p+0, gamma(@as(f128, 0x2.0000000000002p+0)));
    try std.testing.expectEqual(0x1.0000000000000001b0ee6072093dp+0, gamma(@as(f128, 0x2.0000000000000004p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f128, 0x2p+0)));
    try std.testing.expectEqual(0xf.fffff2788d16cb4d9a1a3c3dac58p-4, gamma(@as(f128, 0x1.fffffep+0)));
    // try std.testing.expectEqual(0xf.ffffffffffff93c467e37db0ce38p-4, gamma(@as(f128, 0x1.fffffffffffffp+0)));
    // try std.testing.expectEqual(0xf.fffffffffffffff2788cfc6fb618p-4, gamma(@as(f128, 0x1.fffffffffffffffep+0)));
    try std.testing.expectEqual(0xf.ffffed877342dcfaf7594b77b03p-4, gamma(@as(f128, 0x1.000002p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f128, 0x1p+0)));
    try std.testing.expectEqual(0xf.ffffffffffff6c3b981c824f483p-4, gamma(@as(f128, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(0xf.ffffffffffffffed8773039049e8p-4, gamma(@as(f128, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f128, 0x1p+0)));
    try std.testing.expectEqual(0x1.00000093c468e0b077c1ce0af6ep+0, gamma(@as(f128, 0xf.fffffp-4)));
    try std.testing.expectEqual(0x1.000000000000049e233f1bed867cp+0, gamma(@as(f128, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(0x1.000000000000000093c467e37db1p+0, gamma(@as(f128, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(-0x1.0000006c3b9985f0ade7d3fc6f1p+24, gamma(@as(f128, -0xf.fffffp-4)));
    try std.testing.expectEqual(-0x2.00000000000006c3b981c824f43ap+52, gamma(@as(f128, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(-0x1.00000000000000006c3b981c824fp+64, gamma(@as(f128, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(0x7.fffff93c46ab65a6b1fe38cc6cc8p+20, gamma(@as(f128, -0x1.000002p+0)));
    // try std.testing.expectEqual(0xf.ffffffffffff93c467e37db0de38p+48, gamma(@as(f128, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(0x7.fffffffffffffff93c467e37db0cp+60, gamma(@as(f128, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(0x4.00000761dcdedcd54ba919032dacp+20, gamma(@as(f128, -0x1.fffffep+0)));
    // try std.testing.expectEqual(0x8.000000000000761dcc0e4127ab28p+48, gamma(@as(f128, -0x1.fffffffffffffp+0)));
    // try std.testing.expectEqual(0x4.000000000000000761dcc0e41278p+60, gamma(@as(f128, -0x1.fffffffffffffffep+0)));
    // try std.testing.expectEqual(-0x1.fffff89e237b0d72155ebbe133aep+20, gamma(@as(f128, -0x2.000004p+0)));
    // try std.testing.expectEqual(-0x3.ffffffffffff89e233f1bed881ccp+48, gamma(@as(f128, -0x2.0000000000002p+0)));
    try std.testing.expectEqual(-0x1.fffffffffffffff89e233f1bed86p+60, gamma(@as(f128, -0x2.0000000000000004p+0)));
    try std.testing.expectEqual(-0xa.aaaae042d3c4cc478fe77d4202p+16, gamma(@as(f128, -0x2.fffffcp+0)));
    // try std.testing.expectEqual(-0x1.5555555555558aed7ce84e9b792cp+48, gamma(@as(f128, -0x2.ffffffffffffep+0)));
    try std.testing.expectEqual(-0xa.aaaaaaaaaaaaaae042d23da3f0cp+56, gamma(@as(f128, -0x2.fffffffffffffffcp+0)));
    try std.testing.expectEqual(0xa.aaaa7512849ed9af9e2c5533833p+16, gamma(@as(f128, -0x3.000004p+0)));
    try std.testing.expectEqual(0x1.5555555555551fbd2dc25c0f49f1p+48, gamma(@as(f128, -0x3.0000000000002p+0)));
    try std.testing.expectEqual(0xa.aaaaaaaaaaaaaa75128317b1649p+56, gamma(@as(f128, -0x3.0000000000000004p+0)));
    try std.testing.expectEqual(0x2.aaaababb5fabee718fe850e068d2p+16, gamma(@as(f128, -0x3.fffffcp+0)));
    try std.testing.expectEqual(0x5.55555555555656609e4be5189764p+44, gamma(@as(f128, -0x3.ffffffffffffep+0)));
    // try std.testing.expectEqual(0x2.aaaaaaaaaaaaaababb5f3a13a6dcp+56, gamma(@as(f128, -0x3.fffffffffffffffcp+0)));
    // try std.testing.expectEqual(-0x1.55554544a1a9a1e31119d9f774c5p+16, gamma(@as(f128, -0x4.000008p+0)));
    // try std.testing.expectEqual(-0x2.aaaaaaaaaaa9a99f61b41ae81366p+44, gamma(@as(f128, -0x4.0000000000004p+0)));
    try std.testing.expectEqual(-0x1.555555555555554544a0c5ec5925p+56, gamma(@as(f128, -0x4.0000000000000008p+0)));
    try std.testing.expectEqual(-0x4.44447e809018a708ffb3375149ap+12, gamma(@as(f128, -0x4.fffff8p+0)));
    // try std.testing.expectEqual(-0x8.88888888888c2c4d12712834478p+40, gamma(@as(f128, -0x4.ffffffffffffcp+0)));
    try std.testing.expectEqual(-0x4.444444444444447e808ce2ce3ee8p+52, gamma(@as(f128, -0x4.fffffffffffffff8p+0)));
    try std.testing.expectEqual(0x4.44440a07fedb92d871015f2fd9ep+12, gamma(@as(f128, -0x5.000008p+0)));
    // try std.testing.expectEqual(0x8.888888888884e4c3fe9fe8dfff7p+40, gamma(@as(f128, -0x5.0000000000004p+0)));
    // try std.testing.expectEqual(0x4.444444444444440a07fba5ba49a4p+52, gamma(@as(f128, -0x5.0000000000000008p+0)));
    // try std.testing.expectEqual(0xb.60b6b5d7c93432799a2135a645f8p+8, gamma(@as(f128, -0x5.fffff8p+0)));
    // try std.testing.expectEqual(0x1.6c16c16c16c2168dcb2207a6223p+40, gamma(@as(f128, -0x5.ffffffffffffcp+0)));
    // try std.testing.expectEqual(0xb.60b60b60b60b6160826a6bfc452p+48, gamma(@as(f128, -0x5.fffffffffffffff8p+0)));
    // try std.testing.expectEqual(-0xb.60b560e9b5c84ff97799068ace48p+8, gamma(@as(f128, -0x6.000008p+0)));
    // try std.testing.expectEqual(-0x1.6c16c16c16c0c19fb7b625dd4d2cp+40, gamma(@as(f128, -0x6.0000000000004p+0)));
    try std.testing.expectEqual(-0xb.60b60b60b60b600b9457001a7c48p+48, gamma(@as(f128, -0x6.0000000000000008p+0)));
    // try std.testing.expectEqual(-0x1.a01a1bd5ccde202013e050e5538p+8, gamma(@as(f128, -0x6.fffff8p+0)));
    // try std.testing.expectEqual(-0x3.403403403404e38f199013575646p+36, gamma(@as(f128, -0x6.ffffffffffffcp+0)));
    // try std.testing.expectEqual(-0x1.a01a01a01a01a03437517eff955p+48, gamma(@as(f128, -0x6.fffffffffffffff8p+0)));
    try std.testing.expectEqual(0x1.a019e76a6a1424181ea377a7abcbp+8, gamma(@as(f128, -0x7.000008p+0)));
    try std.testing.expectEqual(0x3.4034034034019cd8ecf054b0a1a4p+36, gamma(@as(f128, -0x7.0000000000004p+0)));
    // try std.testing.expectEqual(0x1.a01a01a01a019fffcbeeb503aae4p+48, gamma(@as(f128, -0x7.0000000000000008p+0)));
    try std.testing.expectEqual(0x3.40343aebcdf72c0e1eecafe993aep+4, gamma(@as(f128, -0x7.fffff8p+0)));
    try std.testing.expectEqual(0x6.806806806809fb21735429eefc64p+32, gamma(@as(f128, -0x7.ffffffffffffcp+0)));
    // try std.testing.expectEqual(0x3.403403403403406baed7013f5ea2p+44, gamma(@as(f128, -0x7.fffffffffffffff8p+0)));
    // try std.testing.expectEqual(-0x1.a019c9f48981c2aec9937d57a4bp+4, gamma(@as(f128, -0x8.00001p+0)));
    // try std.testing.expectEqual(-0x3.4034034033ffc57a966c721f7e4p+32, gamma(@as(f128, -0x8.0000000000008p+0)));
    try std.testing.expectEqual(-0x1.a01a01a01a019fe256094cc581abp+44, gamma(@as(f128, -0x8.000000000000001p+0)));
    try std.testing.expectEqual(0x4.9f949bd5f3629ad14cc512db9148p-4, gamma(@as(f128, -0x9.fffffp+0)));
    try std.testing.expectEqual(0x9.3f27dbbc4fb918f2f6b479fc37ep+24, gamma(@as(f128, -0x9.ffffffffffff8p+0)));
    try std.testing.expectEqual(0x4.9f93edde27d71d69b812af8743d4p+36, gamma(@as(f128, -0x9.fffffffffffffffp+0)));
    // try std.testing.expectEqual(-0x4.9f933fe684a2dc11289e4534c358p-4, gamma(@as(f128, -0xa.00001p+0)));
    // try std.testing.expectEqual(-0x9.3f27dbbc4fa359fc0ab8c4be5b5p+24, gamma(@as(f128, -0xa.0000000000008p+0)));
    try std.testing.expectEqual(-0x4.9f93edde27d71c0dc8a3efcbeff4p+36, gamma(@as(f128, -0xa.000000000000001p+0)));
    // try std.testing.expectEqual(0x3.ca86e2f011ecb5b1fe737895e126p-44, gamma(@as(f128, -0x1.3ffffep+4)));
    // try std.testing.expectEqual(0x7.950ae90080a028e1b12f78541148p-16, gamma(@as(f128, -0x1.3ffffffffffffp+4)));
    // try std.testing.expectEqual(0x3.ca8574804044a263a8ce3f9e658cp-4, gamma(@as(f128, -0x1.3ffffffffffffffep+4)));
    // try std.testing.expectEqual(-0x3.ca8406112a1d38b1fe461e9243a6p-44, gamma(@as(f128, -0x1.400002p+4)));
    // try std.testing.expectEqual(-0x7.950ae90080725af33439e7d134e4p-16, gamma(@as(f128, -0x1.4000000000001p+4)));
    try std.testing.expectEqual(-0x3.ca85748040449f86c9e670455d5ep-4, gamma(@as(f128, -0x1.4000000000000002p+4)));
    // try std.testing.expectEqual(0x9.c99a5695c5705142362f06942ce8p-92, gamma(@as(f128, -0x1.dffffep+4)));
    // try std.testing.expectEqual(0x1.3932c5047d65147d63ec0e56fe6ep-60, gamma(@as(f128, -0x1.dffffffffffffp+4)));
    try std.testing.expectEqual(0x9.c9962823eb073493e020600e728p-52, gamma(@as(f128, -0x1.dffffffffffffffep+4)));
    // try std.testing.expectEqual(-0x9.c991f9b45972555ffcb66455daa8p-92, gamma(@as(f128, -0x1.e00002p+4)));
    try std.testing.expectEqual(-0x1.3932c5047d5cb79bf7ee8a0e5bbfp-60, gamma(@as(f128, -0x1.e000000000001p+4)));
    // try std.testing.expectEqual(-0x9.c9962823eb072c36feb4628a29d8p-52, gamma(@as(f128, -0x1.e000000000000002p+4)));
    try std.testing.expectEqual(0x7.2a41f1f1fa7ab85f51a817a3683cp-144, gamma(@as(f128, -0x2.7ffffcp+4)));
    // try std.testing.expectEqual(0xe.5476a15095db946b38b856b9b0d8p-116, gamma(@as(f128, -0x2.7fffffffffffep+4)));
    // try std.testing.expectEqual(0x7.2a3b50a84ab8c6a7c7ac6511ac1p-104, gamma(@as(f128, -0x2.7ffffffffffffffcp+4)));
    // try std.testing.expectEqual(-0x7.2a34af6633d2b3a72f681ba7c1ep-144, gamma(@as(f128, -0x2.800004p+4)));
    // try std.testing.expectEqual(-0xe.5476a15095076baece6bf7cd8fc8p-116, gamma(@as(f128, -0x2.8000000000002p+4)));
    try std.testing.expectEqual(-0x7.2a3b50a84ab8b9653be5c04bbd4cp-104, gamma(@as(f128, -0x2.8000000000000004p+4)));
    try std.testing.expectEqual(-0x2.cbced32c2df66773301b466565fcp-148, gamma(@as(f128, -0x2.8ffffcp+4)));
    try std.testing.expectEqual(-0x5.979870e740b9dd69794cf94b4994p-120, gamma(@as(f128, -0x2.8fffffffffffep+4)));
    // try std.testing.expectEqual(-0x2.cbcc3873a0481b9702adc43e8206p-108, gamma(@as(f128, -0x2.8ffffffffffffffcp+4)));
    try std.testing.expectEqual(0x2.cbc99dbe11b36857904d8e986874p-148, gamma(@as(f128, -0x2.900004p+4)));
    try std.testing.expectEqual(0x5.979870e740668687b53195c1da2p-120, gamma(@as(f128, -0x2.9000000000002p+4)));
    try std.testing.expectEqual(0x2.cbcc3873a048166194918288497p-108, gamma(@as(f128, -0x2.9000000000000004p+4)));
    try std.testing.expectEqual(0x1.10b05211e13c736ab795b13e604ap-152, gamma(@as(f128, -0x2.9ffffcp+4)));
    // try std.testing.expectEqual(0x2.215ea4ea61cd009a66d326ac89c6p-124, gamma(@as(f128, -0x2.9fffffffffffep+4)));
    // try std.testing.expectEqual(0x1.10af527530de846be9aee0ca639fp-112, gamma(@as(f128, -0x2.9ffffffffffffffcp+4)));
    try std.testing.expectEqual(-0x1.10ae52d9a7c61909524089a457bcp-152, gamma(@as(f128, -0x2.a00004p+4)));
    // try std.testing.expectEqual(-0x2.215ea4ea61ad0d16cf757159fd24p-124, gamma(@as(f128, -0x2.a000000000002p+4)));
    // try std.testing.expectEqual(-0x1.10af527530de826cb1756aef0e76p-112, gamma(@as(f128, -0x2.a000000000000004p+4)));
    // try std.testing.expectEqual(0xd.d9c54ba29fa7f02edf65d0d0087p-200, gamma(@as(f128, -0x3.1ffffcp+4)));
    // try std.testing.expectEqual(0x1.bb36f6e12ce5169716d0dacfff2p-168, gamma(@as(f128, -0x3.1fffffffffffep+4)));
    // try std.testing.expectEqual(0xd.d9b7b70966bc1dc41628cab0fa5p-160, gamma(@as(f128, -0x3.1ffffffffffffffcp+4)));
    // try std.testing.expectEqual(-0xd.d9aa2280533fc0fa48a205cb111p-200, gamma(@as(f128, -0x3.200004p+4)));
    try std.testing.expectEqual(-0x1.bb36f6e12cc9ed74ca6fcc3b9861p-168, gamma(@as(f128, -0x3.2000000000002p+4)));
    // try std.testing.expectEqual(-0xd.d9b7b70966bc029af3dc69a265e8p-160, gamma(@as(f128, -0x3.2000000000000004p+4)));
    // try std.testing.expectEqual(0x1.2d4cd4e344c76df84d32370bce6dp-508, gamma(@as(f128, -0x6.3ffff8p+4)));
    // try std.testing.expectEqual(0x2.5a943cc0fd1b86af87ac9dc1a384p-480, gamma(@as(f128, -0x6.3fffffffffffcp+4)));
    // try std.testing.expectEqual(0x1.2d4a1e607e781214f0525c22da55p-468, gamma(@as(f128, -0x6.3ffffffffffffff8p+4)));
    // try std.testing.expectEqual(-0x1.2d4767e4f014d48bc8523646526cp-508, gamma(@as(f128, -0x6.400008p+4)));
    // try std.testing.expectEqual(-0x2.5a943cc0fcc4b6ca3cf37f41ebdep-480, gamma(@as(f128, -0x6.4000000000004p+4)));
    try std.testing.expectEqual(-0x1.2d4a1e607e780ca7f1fdb090f25ap-468, gamma(@as(f128, -0x6.4000000000000008p+4)));
    // try std.testing.expectEqual(0x8.d1a58f148fa4d61a162e789c9368p-860, gamma(@as(f128, -0x9.5ffffp+4)));
    try std.testing.expectEqual(0x1.1a2f2af6406ada84287436fa17b4p-828, gamma(@as(f128, -0x9.5fffffffffff8p+4)));
    try std.testing.expectEqual(0x8.d17957b201f5492e54c5ca6362dp-820, gamma(@as(f128, -0x9.5ffffffffffffffp+4)));
    // try std.testing.expectEqual(-0x8.d14d214a189b93b13f23357c4a6p-860, gamma(@as(f128, -0x9.60001p+4)));
    // try std.testing.expectEqual(-0x1.1a2f2af640126cb9b36ea2c15c7ap-828, gamma(@as(f128, -0x9.6000000000008p+4)));
    // try std.testing.expectEqual(-0x8.d17957b201f4f0c08a50c4cf2a1p-820, gamma(@as(f128, -0x9.600000000000001p+4)));
    try std.testing.expectEqual(-0x5.fa2b7cb1342f0619b84e4c550dp-1088, gamma(@as(f128, -0xb.4ffffp+4)));
    // try std.testing.expectEqual(-0xb.f418cc537d2800d44c735966b7ep-1060, gamma(@as(f128, -0xb.4fffffffffff8p+4)));
    // try std.testing.expectEqual(-0x5.fa0c6629bd9b6e19eb58ba6e7148p-1048, gamma(@as(f128, -0xb.4ffffffffffffffp+4)));
    try std.testing.expectEqual(0x5.f9ed505798c523eb3303d849ab4p-1088, gamma(@as(f128, -0xb.50001p+4)));
    // try std.testing.expectEqual(0xb.f418cc5379453b3aadbc1413402p-1060, gamma(@as(f128, -0xb.5000000000008p+4)));
    // try std.testing.expectEqual(0x5.fa0c6629bd9b2fed91becefa1c1p-1048, gamma(@as(f128, -0xb.500000000000001p+4)));
    // try std.testing.expectEqual(0x8.6853b8676d944b4af867833d1fbp-1096, gamma(@as(f128, -0xb.5ffffp+4)));
    try std.testing.expectEqual(0x1.0d04fe453ad3bd20f2f3dd6f2c2cp-1064, gamma(@as(f128, -0xb.5fffffffffff8p+4)));
    try std.testing.expectEqual(0x8.6827f229d53fe6deb3582838a6b8p-1056, gamma(@as(f128, -0xb.5ffffffffffffffp+4)));
    try std.testing.expectEqual(-0x8.67fc2cebc2f23e1c7cddddf5e03p-1096, gamma(@as(f128, -0xb.60001p+4)));
    // try std.testing.expectEqual(-0x1.0d04fe453a7c31a54a6d23c3f834p-1064, gamma(@as(f128, -0xb.6000000000008p+4)));
    // try std.testing.expectEqual(-0x8.6827f229d53f8f5337afa17efb8p-1056, gamma(@as(f128, -0xb.600000000000001p+4)));
    try std.testing.expectEqual(-0xb.c2e7e440d1188c0b48acd829af98p-1104, gamma(@as(f128, -0xb.6ffffp+4)));
    // try std.testing.expectEqual(-0x1.785552e9f05ed31472126e701a41p-1072, gamma(@as(f128, -0xb.6fffffffffff8p+4)));
    try std.testing.expectEqual(-0xb.c2aa974f810c73fdd8d87a72ed78p-1064, gamma(@as(f128, -0xb.6ffffffffffffffp+4)));
    // try std.testing.expectEqual(0xb.c26d4bc450a5bc9143545a8176bp-1104, gamma(@as(f128, -0xb.70001p+4)));
    // try std.testing.expectEqual(0x1.785552e9efe43a97f4940b914245p-1072, gamma(@as(f128, -0xb.7000000000008p+4)));
    // try std.testing.expectEqual(0xb.c2aa974f810bf9655c5afc100eap-1064, gamma(@as(f128, -0xb.700000000000001p+4)));
    try std.testing.expectEqual(0x1.05d1632f1f3e377a5ce1c82bcef7p-1108, gamma(@as(f128, -0xb.7ffffp+4)));
    try std.testing.expectEqual(0x2.0b981a509c577f3951f0a0734052p-1080, gamma(@as(f128, -0xb.7fffffffffff8p+4)));
    // try std.testing.expectEqual(0x1.05cc0d284e011538e344fb8ffb9dp-1068, gamma(@as(f128, -0xb.7ffffffffffffffp+4)));
    try std.testing.expectEqual(-0x1.05c6b740afc189e07304b954f89ep-1108, gamma(@as(f128, -0xb.80001p+4)));
    try std.testing.expectEqual(-0x2.0b981a509bacc0525e44e7ef1c3p-1080, gamma(@as(f128, -0xb.8000000000008p+4)));
    try std.testing.expectEqual(-0x1.05cc0d284e010a8cf4d5c0d4735bp-1068, gamma(@as(f128, -0xb.800000000000001p+4)));
    // try std.testing.expectEqual(0x3.a18e29bac973932feed1b47afae6p-1140, gamma(@as(f128, -0xb.bffffp+4)));
    // try std.testing.expectEqual(0x7.42f647bca86c527d96aff32b14acp-1112, gamma(@as(f128, -0xb.bfffffffffff8p+4)));
    try std.testing.expectEqual(0x3.a17b23de539e0f1f1af66ae9e844p-1100, gamma(@as(f128, -0xb.bffffffffffffffp+4)));
    // try std.testing.expectEqual(-0x3.a1681e71734405bc890265f19adap-1140, gamma(@as(f128, -0xb.c0001p+4)));
    // try std.testing.expectEqual(-0x7.42f647bca60b9de8427f6a362ab8p-1112, gamma(@as(f128, -0xb.c000000000008p+4)));
    // try std.testing.expectEqual(-0x3.a17b23de539de913d1a127e158f6p-1100, gamma(@as(f128, -0xb.c00000000000001p+4)));
    // try std.testing.expectEqual(-0x4.eb1490744e9508cbdf4b2d2d11b8p-1148, gamma(@as(f128, -0xb.cffffp+4)));
    // try std.testing.expectEqual(-0x9.d5f58b282beb2e4ada1f6e725c48p-1120, gamma(@as(f128, -0xb.cfffffffffff8p+4)));
    // try std.testing.expectEqual(-0x4.eafac59415275c4be21f68f6814p-1108, gamma(@as(f128, -0xb.cffffffffffffffp+4)));
    try std.testing.expectEqual(0x4.eae0fb4b4576d3ee7cdc0f84655p-1148, gamma(@as(f128, -0xb.d0001p+4)));
    // try std.testing.expectEqual(0x9.d5f58b2828b1dbba5c4ec70798d8p-1120, gamma(@as(f128, -0xb.d000000000008p+4)));
    // try std.testing.expectEqual(0x4.eafac594152728b6b9178bec0a94p-1108, gamma(@as(f128, -0xb.d00000000000001p+4)));
    // try std.testing.expectEqual(0x6.a071f95f54494e510e48132cef8cp-1156, gamma(@as(f128, -0xb.dffffp+4)));
    // try std.testing.expectEqual(0xd.409e5fdfe4f1fb07d10093ac5bc8p-1128, gamma(@as(f128, -0xb.dfffffffffff8p+4)));
    // try std.testing.expectEqual(0x6.a04f2feff162d8036197b5c29fd8p-1116, gamma(@as(f128, -0xb.dffffffffffffffp+4)));
    // try std.testing.expectEqual(-0x6.a02c674cee90e10296e1141cfd9cp-1156, gamma(@as(f128, -0xb.e0001p+4)));
    // try std.testing.expectEqual(-0xd.409e5fdfe098d9e190969c4f40b8p-1128, gamma(@as(f128, -0xb.e000000000008p+4)));
    try std.testing.expectEqual(-0x6.a04f2feff16292714f33af232a04p-1116, gamma(@as(f128, -0xb.e00000000000001p+4)));
    try std.testing.expectEqual(-0x8.e1c509b9188f73d1ea32ca8230bp-1164, gamma(@as(f128, -0xb.effffp+4)));
    // try std.testing.expectEqual(-0x1.1c32cbb79d3b2fad009321b3186ep-1132, gamma(@as(f128, -0xb.efffffffffff8p+4)));
    // try std.testing.expectEqual(-0x8.e1965dbce864507ba91eede73f5p-1124, gamma(@as(f128, -0xb.effffffffffffffp+4)));
    // try std.testing.expectEqual(0x8.e167b2d322aba202926ca843c65p-1164, gamma(@as(f128, -0xb.f0001p+4)));
    try std.testing.expectEqual(0x1.1c32cbb79cddd8c70cf62ebbabedp-1132, gamma(@as(f128, -0xb.f000000000008p+4)));
    // try std.testing.expectEqual(0x8.e1965dbce863f324c32b50f447ep-1124, gamma(@as(f128, -0xb.f00000000000001p+4)));
    // try std.testing.expectEqual(0xf.1f88ab042ff7085579fc982914d8p-1624, gamma(@as(f128, -0xf.9ffffp+4)));
    try std.testing.expectEqual(0x1.e3e6a471e8ca39e146ec0d2ee4b5p-1592, gamma(@as(f128, -0xf.9fffffffffff8p+4)));
    // try std.testing.expectEqual(0xf.1f35238f43b5eee5821ae29266ap-1584, gamma(@as(f128, -0xf.9ffffffffffffffp+4)));
    // try std.testing.expectEqual(-0xf.1ee19e1960e8837e1e8ee885a37p-1624, gamma(@as(f128, -0xf.a0001p+4)));
    // try std.testing.expectEqual(-0x1.e3e6a471e8232cf67c4166191d9cp-1592, gamma(@as(f128, -0xf.a000000000008p+4)));
    try std.testing.expectEqual(-0xf.1f35238f43b547d8975037eb50d8p-1584, gamma(@as(f128, -0xf.a00000000000001p+4)));
    try std.testing.expectEqual(0xc.8678d8710ada4b5eec735b54978p-3756, gamma(@as(f128, -0x1.f3fffep+8)));
    // try std.testing.expectEqual(0x1.90bba4f1c2ba52b807b31083b732p-3724, gamma(@as(f128, -0x1.f3fffffffffffp+8)));
    try std.testing.expectEqual(0xc.85dd278e10f5cb258653e3c773ap-3716, gamma(@as(f128, -0x1.f3fffffffffffffep+8)));
    try std.testing.expectEqual(-0xc.85417edf037af33cc2668f1a74bp-3756, gamma(@as(f128, -0x1.f40002p+8)));
    try std.testing.expectEqual(-0x1.90bba4f1c182f92627a62870859cp-3724, gamma(@as(f128, -0x1.f400000000001p+8)));
    try std.testing.expectEqual(-0xc.85dd278e10f493cbf473d6df607p-3716, gamma(@as(f128, -0x1.f400000000000002p+8)));
    // try std.testing.expectEqual(0x7.433bfad52f116275e8a6cb1abdbp-6076, gamma(@as(f128, -0x2.edfffcp+8)));
    // try std.testing.expectEqual(0xe.84f75c0458390c32001f453d124p-6048, gamma(@as(f128, -0x2.edffffffffffep+8)));
    try std.testing.expectEqual(0x7.427bae02261b354c69c18aff27ccp-6036, gamma(@as(f128, -0x2.edfffffffffffffcp+8)));
    // try std.testing.expectEqual(-0x7.41bb7690a9f23173319e693ba4fp-6076, gamma(@as(f128, -0x2.ee0004p+8)));
    // try std.testing.expectEqual(-0xe.84f75c044030c7f71f95864de848p-6048, gamma(@as(f128, -0x2.ee00000000002p+8)));
    // try std.testing.expectEqual(-0x7.427bae022619b4c82613826338dcp-6036, gamma(@as(f128, -0x2.ee00000000000004p+8)));
    try std.testing.expectEqual(0x1.84b976c2ef57b0dd46b01953bda8p-8516, gamma(@as(f128, -0x3.e7fffcp+8)));
    // try std.testing.expectEqual(0x3.091f067a14e8282cc35fdfe8522ap-8488, gamma(@as(f128, -0x3.e7ffffffffffep+8)));
    // try std.testing.expectEqual(0x1.848f833d0924b53479534a4f3589p-8476, gamma(@as(f128, -0x3.e7fffffffffffffcp+8)));
    // try std.testing.expectEqual(-0x1.8465948dfc562cb9461afac63bb1p-8516, gamma(@as(f128, -0x3.e80004p+8)));
    // try std.testing.expectEqual(-0x3.091f067a0faa04e0b86e569000d6p-8488, gamma(@as(f128, -0x3.e800000000002p+8)));
    // try std.testing.expectEqual(-0x1.848f833d0924615244929b36a004p-8476, gamma(@as(f128, -0x3.e800000000000004p+8)));
    try std.testing.expectEqual(0x4.ca1e38696cc9387008956e5c4484p-11052, gamma(@as(f128, -0x4.e1fff8p+8)));
    try std.testing.expectEqual(0x9.921a2cbd0d9296ec13e74625f128p-11024, gamma(@as(f128, -0x4.e1ffffffffffcp+8)));
    try std.testing.expectEqual(0x4.c90d165e7e424f4f96e17404662cp-11012, gamma(@as(f128, -0x4.e1fffffffffffff8p+8)));
    // try std.testing.expectEqual(-0x4.c7fc351a014d05e8ad7788447bp-11052, gamma(@as(f128, -0x4.e20008p+8)));
    // try std.testing.expectEqual(-0x9.921a2cbceb72624bb3b2e697d0c8p-11024, gamma(@as(f128, -0x4.e200000000004p+8)));
    try std.testing.expectEqual(-0x4.c90d165e7e402d4c4cdb70be6d4cp-11012, gamma(@as(f128, -0x4.e200000000000008p+8)));
    try std.testing.expectEqual(0x1.401ec2203b3432aa4674264a913bp-13656, gamma(@as(f128, -0x5.dbfff8p+8)));
    try std.testing.expectEqual(0x2.7fab407c88e579402f82ae0604dcp-13628, gamma(@as(f128, -0x5.dbffffffffffcp+8)));
    // try std.testing.expectEqual(0x1.3fd5a03e422a3d9eaedb9b002425p-13616, gamma(@as(f128, -0x5.dbfffffffffffff8p+8)));
    try std.testing.expectEqual(-0x1.3f8c90181e39f8de9289b7100a51p-13656, gamma(@as(f128, -0x5.dc0008p+8)));
    // try std.testing.expectEqual(-0x2.7fab407c7fc258d67ebe835f93bp-13628, gamma(@as(f128, -0x5.dc00000000004p+8)));
    try std.testing.expectEqual(-0x1.3fd5a03e4229ab6ca8408ebd79bep-13616, gamma(@as(f128, -0x5.dc00000000000008p+8)));
    // try std.testing.expectEqual(0x4.084b5636bf26a3700a13afcc4528p-16324, gamma(@as(f128, -0x6.d5fff8p+8)));
    // try std.testing.expectEqual(0x8.0eb51434948b527ba5179fb12a3p-16296, gamma(@as(f128, -0x6.d5ffffffffffcp+8)));
    // try std.testing.expectEqual(0x4.075a8a1a42c12707a975c5dc83e4p-16284, gamma(@as(f128, -0x6.d5fffffffffffff8p+8)));
    try std.testing.expectEqual(-0x4.0669f97879582146f7297f556c28p-16324, gamma(@as(f128, -0x6.d60008p+8)));
    // try std.testing.expectEqual(-0x8.0eb51434767586e98e9a6572792p-16296, gamma(@as(f128, -0x6.d600000000004p+8)));
    // try std.testing.expectEqual(-0x4.075a8a1a42bf45aaf0545e08dffcp-16284, gamma(@as(f128, -0x6.d600000000000008p+8)));
    try std.testing.expectEqual(-0x3.b233595p-16464, gamma(@as(f128, -0x6.e2fff8p+8)));
    try std.testing.expectEqual(-0x7.62acd4c5e5169cp-16436, gamma(@as(f128, -0x6.e2ffffffffffcp+8)));
    try std.testing.expectEqual(-0x3.b1566a62eba58dee84p-16424, gamma(@as(f128, -0x6.e2fffffffffffff8p+8)));
    try std.testing.expectEqual(0x3.b079b214p-16464, gamma(@as(f128, -0x6.e30008p+8)));
    try std.testing.expectEqual(0x7.62acd4c5c97c288p-16436, gamma(@as(f128, -0x6.e300000000004p+8)));
    try std.testing.expectEqual(0x3.b1566a62eba3d4474cp-16424, gamma(@as(f128, -0x6.e300000000000008p+8)));
    try std.testing.expectEqual(0x8.9512cp-16476, gamma(@as(f128, -0x6.e3fff8p+8)));
    try std.testing.expectEqual(0x1.12623994e1f8cp-16444, gamma(@as(f128, -0x6.e3ffffffffffcp+8)));
    try std.testing.expectEqual(0x8.9311cca6ffc298p-16436, gamma(@as(f128, -0x6.e3fffffffffffff8p+8)));
    try std.testing.expectEqual(-0x8.91114p-16476, gamma(@as(f128, -0x6.e40008p+8)));
    try std.testing.expectEqual(-0x1.12623994ddf74p-16444, gamma(@as(f128, -0x6.e400000000004p+8)));
    try std.testing.expectEqual(-0x8.9311cca6ffbe968p-16436, gamma(@as(f128, -0x6.e400000000000008p+8)));
    try std.testing.expectEqual(-0x1.3ecp-16484, gamma(@as(f128, -0x6.e4fff8p+8)));
    try std.testing.expectEqual(-0x2.7cc1b7f548p-16456, gamma(@as(f128, -0x6.e4ffffffffffcp+8)));
    try std.testing.expectEqual(-0x1.3e60dbfaa21f8p-16444, gamma(@as(f128, -0x6.e4fffffffffffff8p+8)));
    try std.testing.expectEqual(0x1.3ep-16484, gamma(@as(f128, -0x6.e50008p+8)));
    try std.testing.expectEqual(0x2.7cc1b7f54p-16456, gamma(@as(f128, -0x6.e500000000004p+8)));
    try std.testing.expectEqual(0x1.3e60dbfaa21ecp-16444, gamma(@as(f128, -0x6.e500000000000008p+8)));
    try std.testing.expectEqual(0x4p-16496, gamma(@as(f128, -0x6.e5fff8p+8)));
    try std.testing.expectEqual(0x5.c4df2a8p-16468, gamma(@as(f128, -0x6.e5ffffffffffcp+8)));
    try std.testing.expectEqual(0x2.e26f9542b4p-16456, gamma(@as(f128, -0x6.e5fffffffffffff8p+8)));
    try std.testing.expectEqual(-0x4p-16496, gamma(@as(f128, -0x6.e60008p+8)));
    try std.testing.expectEqual(-0x5.c4df2a8p-16468, gamma(@as(f128, -0x6.e600000000004p+8)));
    try std.testing.expectEqual(-0x2.e26f9542b4p-16456, gamma(@as(f128, -0x6.e600000000000008p+8)));
    try std.testing.expectEqual(0x1.3b0027aed7d78dfe30dbe6eceb51p+12, gamma(@as(f128, 0x8.00001p+0)));
    try std.testing.expectEqual(0x1.3bp+12, gamma(@as(f128, 0x8p+0)));
    // try std.testing.expectEqual(0x1.3b00000000013d76aa158a2c6263p+12, gamma(@as(f128, 0x8.0000000000008p+0)));
    try std.testing.expectEqual(0x1.3b00000000000027aed542b14578p+12, gamma(@as(f128, 0x8.000000000000001p+0)));
    // try std.testing.expectEqual(0x1.3b00000000000000000000000014p+12, gamma(@as(f128, 0x8.0000000000000000000000000008p+0)));
    try std.testing.expectEqual(0x1.3b000000000000000000000009ecp+12, gamma(@as(f128, 0x8.00000000000000000000000004p+0)));
    try std.testing.expectEqual(0x1.3bp+12, gamma(@as(f128, 0x8p+0)));
    try std.testing.expectEqual(0x1.3affec289603de8066de83f67784p+12, gamma(@as(f128, 0x7.fffff8p+0)));
    // try std.testing.expectEqual(0x1.3affffffffff6144aaf53aea4ab8p+12, gamma(@as(f128, 0x7.ffffffffffffcp+0)));
    try std.testing.expectEqual(0x1.3affffffffffffec28955ea75d44p+12, gamma(@as(f128, 0x7.fffffffffffffff8p+0)));
    // try std.testing.expectEqual(0x1.3afffffffffffffffffffffffff6p+12, gamma(@as(f128, 0x7.fffffffffffffffffffffffffffcp+0)));
    try std.testing.expectEqual(0x1.3afffffffffffffffffffffffb0ap+12, gamma(@as(f128, 0x7.fffffffffffffffffffffffffep+0)));
    try std.testing.expectEqual(0x2.d0002a233e27fbd735efb122b116p+8, gamma(@as(f128, 0x7.000008p+0)));
    try std.testing.expectEqual(0x2.dp+8, gamma(@as(f128, 0x7p+0)));
    try std.testing.expectEqual(0x2.d000000000015119e6f40ba005fep+8, gamma(@as(f128, 0x7.0000000000004p+0)));
    // try std.testing.expectEqual(0x2.d00000000000002a233cde8173f6p+8, gamma(@as(f128, 0x7.0000000000000008p+0)));
    // try std.testing.expectEqual(0x2.d000000000000000000000000016p+8, gamma(@as(f128, 0x7.0000000000000000000000000004p+0)));
    try std.testing.expectEqual(0x2.d000000000000000000000000a88p+8, gamma(@as(f128, 0x7.00000000000000000000000002p+0)));
    try std.testing.expectEqual(0x2.dp+8, gamma(@as(f128, 0x7p+0)));
    // try std.testing.expectEqual(0x2.cfffd5dcc46af8e165622f398162p+8, gamma(@as(f128, 0x6.fffff8p+0)));
    try std.testing.expectEqual(0x2.cffffffffffeaee6190bf4609ebep+8, gamma(@as(f128, 0x6.ffffffffffffcp+0)));
    // try std.testing.expectEqual(0x2.cfffffffffffffd5dcc3217e8c0ap+8, gamma(@as(f128, 0x6.fffffffffffffff8p+0)));
    try std.testing.expectEqual(0x2.cfffffffffffffffffffffffffeap+8, gamma(@as(f128, 0x6.fffffffffffffffffffffffffffcp+0)));
    try std.testing.expectEqual(0x2.cffffffffffffffffffffffff578p+8, gamma(@as(f128, 0x6.fffffffffffffffffffffffffep+0)));
    // try std.testing.expectEqual(0x7.8000665dfa8cccefd41898970cc8p+4, gamma(@as(f128, 0x6.000008p+0)));
    try std.testing.expectEqual(0x7.8p+4, gamma(@as(f128, 0x6p+0)));
    try std.testing.expectEqual(0x7.80000000000332efbd3574554334p+4, gamma(@as(f128, 0x6.0000000000004p+0)));
    // try std.testing.expectEqual(0x7.80000000000000665df7a6ae8a9p+4, gamma(@as(f128, 0x6.0000000000000008p+0)));
    // try std.testing.expectEqual(0x7.8000000000000000000000000034p+4, gamma(@as(f128, 0x6.0000000000000000000000000004p+0)));
    try std.testing.expectEqual(0x7.8000000000000000000000001998p+4, gamma(@as(f128, 0x6.00000000000000000000000002p+0)));
    try std.testing.expectEqual(0x7.8p+4, gamma(@as(f128, 0x6p+0)));
    try std.testing.expectEqual(0x7.7fff99a20b3f6fbd62f0251d43e4p+4, gamma(@as(f128, 0x5.fffff8p+0)));
    // try std.testing.expectEqual(0x7.7ffffffffffccd1042ca8bac2fdcp+4, gamma(@as(f128, 0x5.ffffffffffffcp+0)));
    // try std.testing.expectEqual(0x7.7fffffffffffff99a2085951757p+4, gamma(@as(f128, 0x5.fffffffffffffff8p+0)));
    // try std.testing.expectEqual(0x7.7fffffffffffffffffffffffffccp+4, gamma(@as(f128, 0x5.fffffffffffffffffffffffffffcp+0)));
    // try std.testing.expectEqual(0x7.7fffffffffffffffffffffffe668p+4, gamma(@as(f128, 0x5.fffffffffffffffffffffffffep+0)));
    try std.testing.expectEqual(0x1.80001212cb98d7b702abc680561dp+4, gamma(@as(f128, 0x5.000008p+0)));
    try std.testing.expectEqual(0x1.8p+4, gamma(@as(f128, 0x5p+0)));
    try std.testing.expectEqual(0x1.8000000000009096590ab0ddd303p+4, gamma(@as(f128, 0x5.0000000000004p+0)));
    try std.testing.expectEqual(0x1.800000000000001212cb21561bb7p+4, gamma(@as(f128, 0x5.0000000000000008p+0)));
    // try std.testing.expectEqual(0x1.8000000000000000000000000009p+4, gamma(@as(f128, 0x5.0000000000000000000000000004p+0)));
    try std.testing.expectEqual(0x1.8000000000000000000000000485p+4, gamma(@as(f128, 0x5.00000000000000000000000002p+0)));
    try std.testing.expectEqual(0x1.8p+4, gamma(@as(f128, 0x5p+0)));
    try std.testing.expectEqual(0x1.7fffeded35562b7b3742662b116bp+4, gamma(@as(f128, 0x4.fffff8p+0)));
    try std.testing.expectEqual(0x1.7fffffffffff6f69a6f54f2268bep+4, gamma(@as(f128, 0x4.ffffffffffffcp+0)));
    try std.testing.expectEqual(0x1.7fffffffffffffeded34dea9e449p+4, gamma(@as(f128, 0x4.fffffffffffffff8p+0)));
    // try std.testing.expectEqual(0x1.7ffffffffffffffffffffffffff7p+4, gamma(@as(f128, 0x4.fffffffffffffffffffffffffffcp+0)));
    try std.testing.expectEqual(0x1.7ffffffffffffffffffffffffb7bp+4, gamma(@as(f128, 0x4.fffffffffffffffffffffffffep+0)));
    // try std.testing.expectEqual(0x6.00003c4b2deac880351e19971c44p+0, gamma(@as(f128, 0x4.000008p+0)));
    try std.testing.expectEqual(0x6p+0, gamma(@as(f128, 0x4p+0)));
    try std.testing.expectEqual(0x6.000000000001e259642ac3772de4p+0, gamma(@as(f128, 0x4.0000000000004p+0)));
    try std.testing.expectEqual(0x6.000000000000003c4b2c85586edcp+0, gamma(@as(f128, 0x4.0000000000000008p+0)));
    // try std.testing.expectEqual(0x6.000000000000000000000000002p+0, gamma(@as(f128, 0x4.0000000000000000000000000004p+0)));
    try std.testing.expectEqual(0x6.0000000000000000000000000f14p+0, gamma(@as(f128, 0x4.00000000000000000000000002p+0)));
    try std.testing.expectEqual(0x6p+0, gamma(@as(f128, 0x4p+0)));
    try std.testing.expectEqual(0x5.ffffe1da6a16afcaaed619a8646cp+0, gamma(@as(f128, 0x3.fffffcp+0)));
    // try std.testing.expectEqual(0x5.ffffffffffff0ed34dea9e44ac14p+0, gamma(@as(f128, 0x3.ffffffffffffep+0)));
    // try std.testing.expectEqual(0x5.ffffffffffffffe1da69bd53c894p+0, gamma(@as(f128, 0x3.fffffffffffffffcp+0)));
    // try std.testing.expectEqual(0x5.fffffffffffffffffffffffffffp+0, gamma(@as(f128, 0x3.fffffffffffffffffffffffffffep+0)));
    try std.testing.expectEqual(0x5.fffffffffffffffffffffffff878p+0, gamma(@as(f128, 0x3.ffffffffffffffffffffffffffp+0)));
    try std.testing.expectEqual(0x2.00000761dcd4d597e6231257b69ap+0, gamma(@as(f128, 0x3.000004p+0)));
    try std.testing.expectEqual(0x2p+0, gamma(@as(f128, 0x3p+0)));
    // try std.testing.expectEqual(0x2.0000000000003b0ee6072093d314p+0, gamma(@as(f128, 0x3.0000000000002p+0)));
    try std.testing.expectEqual(0x2.000000000000000761dcc0e4127ap+0, gamma(@as(f128, 0x3.0000000000000004p+0)));
    try std.testing.expectEqual(0x2.0000000000000000000000000004p+0, gamma(@as(f128, 0x3.0000000000000000000000000002p+0)));
    try std.testing.expectEqual(0x2.00000000000000000000000001d8p+0, gamma(@as(f128, 0x3.00000000000000000000000001p+0)));
    try std.testing.expectEqual(0x2p+0, gamma(@as(f128, 0x3p+0)));
    try std.testing.expectEqual(0x1.fffff89e23530d72a903f6c426c3p+0, gamma(@as(f128, 0x2.fffffcp+0)));
    // try std.testing.expectEqual(0x1.ffffffffffffc4f119f8df6c36e6p+0, gamma(@as(f128, 0x2.ffffffffffffep+0)));
    try std.testing.expectEqual(0x1.fffffffffffffff89e233f1bed86p+0, gamma(@as(f128, 0x2.fffffffffffffffcp+0)));
    // try std.testing.expectEqual(0x1.fffffffffffffffffffffffffffcp+0, gamma(@as(f128, 0x2.fffffffffffffffffffffffffffep+0)));
    // try std.testing.expectEqual(0x1.fffffffffffffffffffffffffe28p+0, gamma(@as(f128, 0x2.ffffffffffffffffffffffffffp+0)));
    try std.testing.expectEqual(0x1.000001b0ee6708ef24ffaae1dbf7p+0, gamma(@as(f128, 0x2.000004p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f128, 0x2p+0)));
    try std.testing.expectEqual(0x1.0000000000000d8773039049e8b1p+0, gamma(@as(f128, 0x2.0000000000002p+0)));
    try std.testing.expectEqual(0x1.0000000000000001b0ee6072093dp+0, gamma(@as(f128, 0x2.0000000000000004p+0)));
    try std.testing.expectEqual(0x1.0000000000000000000000000001p+0, gamma(@as(f128, 0x2.0000000000000000000000000002p+0)));
    try std.testing.expectEqual(0x1.000000000000000000000000006cp+0, gamma(@as(f128, 0x2.00000000000000000000000001p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f128, 0x2p+0)));
    try std.testing.expectEqual(0xf.fffff2788d16cb4d9a1a3c3dac58p-4, gamma(@as(f128, 0x1.fffffep+0)));
    // try std.testing.expectEqual(0xf.ffffffffffff93c467e37db0ce38p-4, gamma(@as(f128, 0x1.fffffffffffffp+0)));
    // try std.testing.expectEqual(0xf.fffffffffffffff2788cfc6fb618p-4, gamma(@as(f128, 0x1.fffffffffffffffep+0)));
    // try std.testing.expectEqual(0xf.fffffffffffffffffffffffffff8p-4, gamma(@as(f128, 0x1.ffffffffffffffffffffffffffffp+0)));
    try std.testing.expectEqual(0xf.fffffffffffffffffffffffffcap-4, gamma(@as(f128, 0x1.ffffffffffffffffffffffffff8p+0)));
    try std.testing.expectEqual(0xf.ffffed877342dcfaf7594b77b03p-4, gamma(@as(f128, 0x1.000002p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f128, 0x1p+0)));
    try std.testing.expectEqual(0xf.ffffffffffff6c3b981c824f483p-4, gamma(@as(f128, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(0xf.ffffffffffffffed8773039049e8p-4, gamma(@as(f128, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(0xf.fffffffffffffffffffffffffff8p-4, gamma(@as(f128, 0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(0xf.fffffffffffffffffffffffffb6p-4, gamma(@as(f128, 0x1.000000000000000000000000008p+0)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f128, 0x1p+0)));
    try std.testing.expectEqual(0x1.00000093c468e0b077c1ce0af6ep+0, gamma(@as(f128, 0xf.fffffp-4)));
    try std.testing.expectEqual(0x1.000000000000049e233f1bed867cp+0, gamma(@as(f128, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(0x1.000000000000000093c467e37db1p+0, gamma(@as(f128, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(0x1p+0, gamma(@as(f128, 0xf.fffffffffffffffffffffffffff8p-4)));
    try std.testing.expectEqual(0x1.0000000000000000000000000025p+0, gamma(@as(f128, 0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(-0x1.0000006c3b9985f0ade7d3fc6f1p+24, gamma(@as(f128, -0xf.fffffp-4)));
    try std.testing.expectEqual(-0x2.00000000000006c3b981c824f43ap+52, gamma(@as(f128, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(-0x1.00000000000000006c3b981c824fp+64, gamma(@as(f128, -0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(-0x2p+112, gamma(@as(f128, -0xf.fffffffffffffffffffffffffff8p-4)));
    try std.testing.expectEqual(-0x4.000000000000000000000000006cp+104, gamma(@as(f128, -0xf.fffffffffffffffffffffffffcp-4)));
    try std.testing.expectEqual(0x7.fffff93c46ab65a6b1fe38cc6cc8p+20, gamma(@as(f128, -0x1.000002p+0)));
    // try std.testing.expectEqual(0xf.ffffffffffff93c467e37db0de38p+48, gamma(@as(f128, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(0x7.fffffffffffffff93c467e37db0cp+60, gamma(@as(f128, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(0xf.fffffffffffffffffffffffffff8p+108, gamma(@as(f128, -0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(0x1.ffffffffffffffffffffffffff94p+104, gamma(@as(f128, -0x1.000000000000000000000000008p+0)));
    try std.testing.expectEqual(0x4.00000761dcdedcd54ba919032dacp+20, gamma(@as(f128, -0x1.fffffep+0)));
    // try std.testing.expectEqual(0x8.000000000000761dcc0e4127ab28p+48, gamma(@as(f128, -0x1.fffffffffffffp+0)));
    // try std.testing.expectEqual(0x4.000000000000000761dcc0e41278p+60, gamma(@as(f128, -0x1.fffffffffffffffep+0)));
    try std.testing.expectEqual(0x8.0000000000000000000000000008p+108, gamma(@as(f128, -0x1.ffffffffffffffffffffffffffffp+0)));
    try std.testing.expectEqual(0x1.0000000000000000000000000076p+104, gamma(@as(f128, -0x1.ffffffffffffffffffffffffff8p+0)));
    // try std.testing.expectEqual(-0x1.fffff89e237b0d72155ebbe133aep+20, gamma(@as(f128, -0x2.000004p+0)));
    // try std.testing.expectEqual(-0x3.ffffffffffff89e233f1bed881ccp+48, gamma(@as(f128, -0x2.0000000000002p+0)));
    try std.testing.expectEqual(-0x1.fffffffffffffff89e233f1bed86p+60, gamma(@as(f128, -0x2.0000000000000004p+0)));
    // try std.testing.expectEqual(-0x3.fffffffffffffffffffffffffff8p+108, gamma(@as(f128, -0x2.0000000000000000000000000002p+0)));
    try std.testing.expectEqual(-0x7.fffffffffffffffffffffffff8ap+100, gamma(@as(f128, -0x2.00000000000000000000000001p+0)));
    try std.testing.expectEqual(-0xa.aaaae042d3c4cc478fe77d4202p+16, gamma(@as(f128, -0x2.fffffcp+0)));
    // try std.testing.expectEqual(-0x1.5555555555558aed7ce84e9b792cp+48, gamma(@as(f128, -0x2.ffffffffffffep+0)));
    try std.testing.expectEqual(-0xa.aaaaaaaaaaaaaae042d23da3f0cp+56, gamma(@as(f128, -0x2.fffffffffffffffcp+0)));
    try std.testing.expectEqual(-0x1.5555555555555555555555555559p+108, gamma(@as(f128, -0x2.fffffffffffffffffffffffffffep+0)));
    // try std.testing.expectEqual(-0x2.aaaaaaaaaaaaaaaaaaaaaaaaae04p+100, gamma(@as(f128, -0x2.ffffffffffffffffffffffffffp+0)));
    try std.testing.expectEqual(0xa.aaaa7512849ed9af9e2c5533833p+16, gamma(@as(f128, -0x3.000004p+0)));
    try std.testing.expectEqual(0x1.5555555555551fbd2dc25c0f49f1p+48, gamma(@as(f128, -0x3.0000000000002p+0)));
    try std.testing.expectEqual(0xa.aaaaaaaaaaaaaa75128317b1649p+56, gamma(@as(f128, -0x3.0000000000000004p+0)));
    try std.testing.expectEqual(0x1.5555555555555555555555555552p+108, gamma(@as(f128, -0x3.0000000000000000000000000002p+0)));
    // try std.testing.expectEqual(0x2.aaaaaaaaaaaaaaaaaaaaaaaaa752p+100, gamma(@as(f128, -0x3.00000000000000000000000001p+0)));
    try std.testing.expectEqual(0x2.aaaababb5fabee718fe850e068d2p+16, gamma(@as(f128, -0x3.fffffcp+0)));
    try std.testing.expectEqual(0x5.55555555555656609e4be5189764p+44, gamma(@as(f128, -0x3.ffffffffffffep+0)));
    // try std.testing.expectEqual(0x2.aaaaaaaaaaaaaababb5f3a13a6dcp+56, gamma(@as(f128, -0x3.fffffffffffffffcp+0)));
    // try std.testing.expectEqual(0x5.5555555555555555555555555564p+104, gamma(@as(f128, -0x3.fffffffffffffffffffffffffffep+0)));
    try std.testing.expectEqual(0xa.aaaaaaaaaaaaaaaaaaaaaaaabab8p+96, gamma(@as(f128, -0x3.ffffffffffffffffffffffffffp+0)));
    // try std.testing.expectEqual(-0x1.55554544a1a9a1e31119d9f774c5p+16, gamma(@as(f128, -0x4.000008p+0)));
    // try std.testing.expectEqual(-0x2.aaaaaaaaaaa9a99f61b41ae81366p+44, gamma(@as(f128, -0x4.0000000000004p+0)));
    try std.testing.expectEqual(-0x1.555555555555554544a0c5ec5925p+56, gamma(@as(f128, -0x4.0000000000000008p+0)));
    try std.testing.expectEqual(-0x2.aaaaaaaaaaaaaaaaaaaaaaaaaa9ap+104, gamma(@as(f128, -0x4.0000000000000000000000000004p+0)));
    try std.testing.expectEqual(-0x5.5555555555555555555555554544p+96, gamma(@as(f128, -0x4.00000000000000000000000002p+0)));
    try std.testing.expectEqual(-0x4.44447e809018a708ffb3375149ap+12, gamma(@as(f128, -0x4.fffff8p+0)));
    // try std.testing.expectEqual(-0x8.88888888888c2c4d12712834478p+40, gamma(@as(f128, -0x4.ffffffffffffcp+0)));
    try std.testing.expectEqual(-0x4.444444444444447e808ce2ce3ee8p+52, gamma(@as(f128, -0x4.fffffffffffffff8p+0)));
    // try std.testing.expectEqual(-0x8.88888888888888888888888888cp+100, gamma(@as(f128, -0x4.fffffffffffffffffffffffffffcp+0)));
    try std.testing.expectEqual(-0x1.11111111111111111111111114b5p+96, gamma(@as(f128, -0x4.fffffffffffffffffffffffffep+0)));
    try std.testing.expectEqual(0x4.44440a07fedb92d871015f2fd9ep+12, gamma(@as(f128, -0x5.000008p+0)));
    // try std.testing.expectEqual(0x8.888888888884e4c3fe9fe8dfff7p+40, gamma(@as(f128, -0x5.0000000000004p+0)));
    // try std.testing.expectEqual(0x4.444444444444440a07fba5ba49a4p+52, gamma(@as(f128, -0x5.0000000000000008p+0)));
    try std.testing.expectEqual(0x8.888888888888888888888888885p+100, gamma(@as(f128, -0x5.0000000000000000000000000004p+0)));
    try std.testing.expectEqual(0x1.1111111111111111111111110d6dp+96, gamma(@as(f128, -0x5.00000000000000000000000002p+0)));
    // try std.testing.expectEqual(0xb.60b6b5d7c93432799a2135a645f8p+8, gamma(@as(f128, -0x5.fffff8p+0)));
    // try std.testing.expectEqual(0x1.6c16c16c16c2168dcb2207a6223p+40, gamma(@as(f128, -0x5.ffffffffffffcp+0)));
    // try std.testing.expectEqual(0xb.60b60b60b60b6160826a6bfc452p+48, gamma(@as(f128, -0x5.fffffffffffffff8p+0)));
    // try std.testing.expectEqual(0x1.6c16c16c16c16c16c16c16c16c21p+100, gamma(@as(f128, -0x5.fffffffffffffffffffffffffffcp+0)));
    // try std.testing.expectEqual(0x2.d82d82d82d82d82d82d82d82e2d4p+92, gamma(@as(f128, -0x5.fffffffffffffffffffffffffep+0)));
    // try std.testing.expectEqual(-0xb.60b560e9b5c84ff97799068ace48p+8, gamma(@as(f128, -0x6.000008p+0)));
    // try std.testing.expectEqual(-0x1.6c16c16c16c0c19fb7b625dd4d2cp+40, gamma(@as(f128, -0x6.0000000000004p+0)));
    try std.testing.expectEqual(-0xb.60b60b60b60b600b9457001a7c48p+48, gamma(@as(f128, -0x6.0000000000000008p+0)));
    // try std.testing.expectEqual(-0x1.6c16c16c16c16c16c16c16c16c0cp+100, gamma(@as(f128, -0x6.0000000000000000000000000004p+0)));
    // try std.testing.expectEqual(-0x2.d82d82d82d82d82d82d82d82cd86p+92, gamma(@as(f128, -0x6.00000000000000000000000002p+0)));
    // try std.testing.expectEqual(-0x1.a01a1bd5ccde202013e050e5538p+8, gamma(@as(f128, -0x6.fffff8p+0)));
    // try std.testing.expectEqual(-0x3.403403403404e38f199013575646p+36, gamma(@as(f128, -0x6.ffffffffffffcp+0)));
    // try std.testing.expectEqual(-0x1.a01a01a01a01a03437517eff955p+48, gamma(@as(f128, -0x6.fffffffffffffff8p+0)));
    // try std.testing.expectEqual(-0x3.403403403403403403403403404ep+96, gamma(@as(f128, -0x6.fffffffffffffffffffffffffffcp+0)));
    try std.testing.expectEqual(-0x6.8068068068068068068068069a9cp+88, gamma(@as(f128, -0x6.fffffffffffffffffffffffffep+0)));
    try std.testing.expectEqual(0x1.a019e76a6a1424181ea377a7abcbp+8, gamma(@as(f128, -0x7.000008p+0)));
    try std.testing.expectEqual(0x3.4034034034019cd8ecf054b0a1a4p+36, gamma(@as(f128, -0x7.0000000000004p+0)));
    // try std.testing.expectEqual(0x1.a01a01a01a019fffcbeeb503aae4p+48, gamma(@as(f128, -0x7.0000000000000008p+0)));
    try std.testing.expectEqual(0x3.403403403403403403403403401ap+96, gamma(@as(f128, -0x7.0000000000000000000000000004p+0)));
    try std.testing.expectEqual(0x6.8068068068068068068068066634p+88, gamma(@as(f128, -0x7.00000000000000000000000002p+0)));
    try std.testing.expectEqual(0x3.40343aebcdf72c0e1eecafe993aep+4, gamma(@as(f128, -0x7.fffff8p+0)));
    try std.testing.expectEqual(0x6.806806806809fb21735429eefc64p+32, gamma(@as(f128, -0x7.ffffffffffffcp+0)));
    // try std.testing.expectEqual(0x3.403403403403406baed7013f5ea2p+44, gamma(@as(f128, -0x7.fffffffffffffff8p+0)));
    // try std.testing.expectEqual(0x6.80680680680680680680680680ap+92, gamma(@as(f128, -0x7.fffffffffffffffffffffffffffcp+0)));
    // try std.testing.expectEqual(0xd.00d00d00d00d00d00d00d00d3878p+84, gamma(@as(f128, -0x7.fffffffffffffffffffffffffep+0)));
    // try std.testing.expectEqual(-0x1.a019c9f48981c2aec9937d57a4bp+4, gamma(@as(f128, -0x8.00001p+0)));
    // try std.testing.expectEqual(-0x3.4034034033ffc57a966c721f7e4p+32, gamma(@as(f128, -0x8.0000000000008p+0)));
    try std.testing.expectEqual(-0x1.a01a01a01a019fe256094cc581abp+44, gamma(@as(f128, -0x8.000000000000001p+0)));
    // try std.testing.expectEqual(-0x3.4034034034034034034034033ffcp+92, gamma(@as(f128, -0x8.0000000000000000000000000008p+0)));
    // try std.testing.expectEqual(-0x6.80680680680680680680680648bcp+84, gamma(@as(f128, -0x8.00000000000000000000000004p+0)));
    try std.testing.expectEqual(0x4.9f949bd5f3629ad14cc512db9148p-4, gamma(@as(f128, -0x9.fffffp+0)));
    try std.testing.expectEqual(0x9.3f27dbbc4fb918f2f6b479fc37ep+24, gamma(@as(f128, -0x9.ffffffffffff8p+0)));
    try std.testing.expectEqual(0x4.9f93edde27d71d69b812af8743d4p+36, gamma(@as(f128, -0x9.fffffffffffffffp+0)));
    // try std.testing.expectEqual(0x9.3f27dbbc4fae397780b69f533478p+84, gamma(@as(f128, -0x9.fffffffffffffffffffffffffff8p+0)));
    try std.testing.expectEqual(0x1.27e4fb7789f5c72ef016d3ea7158p+80, gamma(@as(f128, -0x9.fffffffffffffffffffffffffcp+0)));
    // try std.testing.expectEqual(-0x4.9f933fe684a2dc11289e4534c358p-4, gamma(@as(f128, -0xa.00001p+0)));
    // try std.testing.expectEqual(-0x9.3f27dbbc4fa359fc0ab8c4be5b5p+24, gamma(@as(f128, -0xa.0000000000008p+0)));
    try std.testing.expectEqual(-0x4.9f93edde27d71c0dc8a3efcbeff4p+36, gamma(@as(f128, -0xa.000000000000001p+0)));
    try std.testing.expectEqual(-0x9.3f27dbbc4fae397780b69f533318p+84, gamma(@as(f128, -0xa.0000000000000000000000000008p+0)));
    try std.testing.expectEqual(-0x1.27e4fb7789f5c72ef016d3ea5b99p+80, gamma(@as(f128, -0xa.00000000000000000000000004p+0)));
    // try std.testing.expectEqual(0x3.ca86e2f011ecb5b1fe737895e126p-44, gamma(@as(f128, -0x1.3ffffep+4)));
    // try std.testing.expectEqual(0x7.950ae90080a028e1b12f78541148p-16, gamma(@as(f128, -0x1.3ffffffffffffp+4)));
    // try std.testing.expectEqual(0x3.ca8574804044a263a8ce3f9e658cp-4, gamma(@as(f128, -0x1.3ffffffffffffffep+4)));
    try std.testing.expectEqual(0x7.950ae900808941ea72b4afe3c458p+44, gamma(@as(f128, -0x1.3fffffffffffffffffffffffffffp+4)));
    // try std.testing.expectEqual(0xf.2a15d201011283d4e5695fc8f448p+36, gamma(@as(f128, -0x1.3fffffffffffffffffffffffff8p+4)));
    // try std.testing.expectEqual(-0x3.ca8406112a1d38b1fe461e9243a6p-44, gamma(@as(f128, -0x1.400002p+4)));
    // try std.testing.expectEqual(-0x7.950ae90080725af33439e7d134e4p-16, gamma(@as(f128, -0x1.4000000000001p+4)));
    try std.testing.expectEqual(-0x3.ca85748040449f86c9e670455d5ep-4, gamma(@as(f128, -0x1.4000000000000002p+4)));
    // try std.testing.expectEqual(-0x7.950ae900808941ea72b4afe3c17cp+44, gamma(@as(f128, -0x1.4000000000000000000000000001p+4)));
    try std.testing.expectEqual(-0xf.2a15d201011283d4e5695fc61768p+36, gamma(@as(f128, -0x1.400000000000000000000000008p+4)));
    // try std.testing.expectEqual(0x9.c99a5695c5705142362f06942ce8p-92, gamma(@as(f128, -0x1.dffffep+4)));
    // try std.testing.expectEqual(0x1.3932c5047d65147d63ec0e56fe6ep-60, gamma(@as(f128, -0x1.dffffffffffffp+4)));
    try std.testing.expectEqual(0x9.c9962823eb073493e020600e728p-52, gamma(@as(f128, -0x1.dffffffffffffffep+4)));
    try std.testing.expectEqual(0x1.3932c5047d60e60caded4c298a08p+0, gamma(@as(f128, -0x1.dfffffffffffffffffffffffffffp+4)));
    // try std.testing.expectEqual(0x2.72658a08fac1cc195bda98535672p-8, gamma(@as(f128, -0x1.dfffffffffffffffffffffffff8p+4)));
    // try std.testing.expectEqual(-0x9.c991f9b45972555ffcb66455daa8p-92, gamma(@as(f128, -0x1.e00002p+4)));
    try std.testing.expectEqual(-0x1.3932c5047d5cb79bf7ee8a0e5bbfp-60, gamma(@as(f128, -0x1.e000000000001p+4)));
    // try std.testing.expectEqual(-0x9.c9962823eb072c36feb4628a29d8p-52, gamma(@as(f128, -0x1.e000000000000002p+4)));
    // try std.testing.expectEqual(-0x1.3932c5047d60e60caded4c298983p+0, gamma(@as(f128, -0x1.e000000000000000000000000001p+4)));
    try std.testing.expectEqual(-0x2.72658a08fac1cc195bda9852d0a4p-8, gamma(@as(f128, -0x1.e00000000000000000000000008p+4)));
    try std.testing.expectEqual(0x7.2a41f1f1fa7ab85f51a817a3683cp-144, gamma(@as(f128, -0x2.7ffffcp+4)));
    // try std.testing.expectEqual(0xe.5476a15095db946b38b856b9b0d8p-116, gamma(@as(f128, -0x2.7fffffffffffep+4)));
    // try std.testing.expectEqual(0x7.2a3b50a84ab8c6a7c7ac6511ac1p-104, gamma(@as(f128, -0x2.7ffffffffffffffcp+4)));
    // try std.testing.expectEqual(0xe.5476a1509571800d0392255d6ff8p-56, gamma(@as(f128, -0x2.7ffffffffffffffffffffffffffep+4)));
    // try std.testing.expectEqual(0x1.ca8ed42a12ae3001a07244ac173fp-60, gamma(@as(f128, -0x2.7fffffffffffffffffffffffffp+4)));
    // try std.testing.expectEqual(-0x7.2a34af6633d2b3a72f681ba7c1ep-144, gamma(@as(f128, -0x2.800004p+4)));
    // try std.testing.expectEqual(-0xe.5476a15095076baece6bf7cd8fc8p-116, gamma(@as(f128, -0x2.8000000000002p+4)));
    try std.testing.expectEqual(-0x7.2a3b50a84ab8b9653be5c04bbd4cp-104, gamma(@as(f128, -0x2.8000000000000004p+4)));
    try std.testing.expectEqual(-0xe.5476a1509571800d0392255d62b8p-56, gamma(@as(f128, -0x2.8000000000000000000000000002p+4)));
    // try std.testing.expectEqual(-0x1.ca8ed42a12ae3001a07244ab4316p-60, gamma(@as(f128, -0x2.80000000000000000000000001p+4)));
    try std.testing.expectEqual(-0x2.cbced32c2df66773301b466565fcp-148, gamma(@as(f128, -0x2.8ffffcp+4)));
    try std.testing.expectEqual(-0x5.979870e740b9dd69794cf94b4994p-120, gamma(@as(f128, -0x2.8fffffffffffep+4)));
    // try std.testing.expectEqual(-0x2.cbcc3873a0481b9702adc43e8206p-108, gamma(@as(f128, -0x2.8ffffffffffffffcp+4)));
    // try std.testing.expectEqual(-0x5.979870e7409031f8973f46c6ce0cp-60, gamma(@as(f128, -0x2.8ffffffffffffffffffffffffffep+4)));
    // try std.testing.expectEqual(-0xb.2f30e1ce812063f12e7e8d9031ap-68, gamma(@as(f128, -0x2.8fffffffffffffffffffffffffp+4)));
    try std.testing.expectEqual(0x2.cbc99dbe11b36857904d8e986874p-148, gamma(@as(f128, -0x2.900004p+4)));
    try std.testing.expectEqual(0x5.979870e740668687b53195c1da2p-120, gamma(@as(f128, -0x2.9000000000002p+4)));
    try std.testing.expectEqual(0x2.cbcc3873a048166194918288497p-108, gamma(@as(f128, -0x2.9000000000000004p+4)));
    try std.testing.expectEqual(0x5.979870e7409031f8973f46c6c8d8p-60, gamma(@as(f128, -0x2.9000000000000000000000000002p+4)));
    try std.testing.expectEqual(0xb.2f30e1ce812063f12e7e8d8afc3p-68, gamma(@as(f128, -0x2.90000000000000000000000001p+4)));
    try std.testing.expectEqual(0x1.10b05211e13c736ab795b13e604ap-152, gamma(@as(f128, -0x2.9ffffcp+4)));
    // try std.testing.expectEqual(0x2.215ea4ea61cd009a66d326ac89c6p-124, gamma(@as(f128, -0x2.9fffffffffffep+4)));
    // try std.testing.expectEqual(0x1.10af527530de846be9aee0ca639fp-112, gamma(@as(f128, -0x2.9ffffffffffffffcp+4)));
    try std.testing.expectEqual(0x2.215ea4ea61bd06d89b244bb97312p-64, gamma(@as(f128, -0x2.9ffffffffffffffffffffffffffep+4)));
    // try std.testing.expectEqual(0x4.42bd49d4c37a0db136489773e3c4p-72, gamma(@as(f128, -0x2.9fffffffffffffffffffffffffp+4)));
    try std.testing.expectEqual(-0x1.10ae52d9a7c61909524089a457bcp-152, gamma(@as(f128, -0x2.a00004p+4)));
    // try std.testing.expectEqual(-0x2.215ea4ea61ad0d16cf757159fd24p-124, gamma(@as(f128, -0x2.a000000000002p+4)));
    // try std.testing.expectEqual(-0x1.10af527530de826cb1756aef0e76p-112, gamma(@as(f128, -0x2.a000000000000004p+4)));
    // try std.testing.expectEqual(-0x2.215ea4ea61bd06d89b244bb97114p-64, gamma(@as(f128, -0x2.a000000000000000000000000002p+4)));
    // try std.testing.expectEqual(-0x4.42bd49d4c37a0db136489771e48cp-72, gamma(@as(f128, -0x2.a0000000000000000000000001p+4)));
    // try std.testing.expectEqual(0xd.d9c54ba29fa7f02edf65d0d0087p-200, gamma(@as(f128, -0x3.1ffffcp+4)));
    // try std.testing.expectEqual(0x1.bb36f6e12ce5169716d0dacfff2p-168, gamma(@as(f128, -0x3.1fffffffffffep+4)));
    // try std.testing.expectEqual(0xd.d9b7b70966bc1dc41628cab0fa5p-160, gamma(@as(f128, -0x3.1ffffffffffffffcp+4)));
    // try std.testing.expectEqual(0x1.bb36f6e12cd78205f0a0534536dcp-108, gamma(@as(f128, -0x3.1ffffffffffffffffffffffffffep+4)));
    try std.testing.expectEqual(0x3.766dedc259af040be140a68b454ep-116, gamma(@as(f128, -0x3.1fffffffffffffffffffffffffp+4)));
    // try std.testing.expectEqual(-0xd.d9aa2280533fc0fa48a205cb111p-200, gamma(@as(f128, -0x3.200004p+4)));
    try std.testing.expectEqual(-0x1.bb36f6e12cc9ed74ca6fcc3b9861p-168, gamma(@as(f128, -0x3.2000000000002p+4)));
    // try std.testing.expectEqual(-0xd.d9b7b70966bc029af3dc69a265e8p-160, gamma(@as(f128, -0x3.2000000000000004p+4)));
    // try std.testing.expectEqual(-0x1.bb36f6e12cd78205f0a053453529p-108, gamma(@as(f128, -0x3.2000000000000000000000000002p+4)));
    // try std.testing.expectEqual(-0x3.766dedc259af040be140a68992bcp-116, gamma(@as(f128, -0x3.20000000000000000000000001p+4)));
    // try std.testing.expectEqual(0x1.2d4cd4e344c76df84d32370bce6dp-508, gamma(@as(f128, -0x6.3ffff8p+4)));
    // try std.testing.expectEqual(0x2.5a943cc0fd1b86af87ac9dc1a384p-480, gamma(@as(f128, -0x6.3fffffffffffcp+4)));
    // try std.testing.expectEqual(0x1.2d4a1e607e781214f0525c22da55p-468, gamma(@as(f128, -0x6.3ffffffffffffff8p+4)));
    try std.testing.expectEqual(0x2.5a943cc0fcf01ebce2500cb3cf5ep-420, gamma(@as(f128, -0x6.3ffffffffffffffffffffffffffcp+4)));
    // try std.testing.expectEqual(0x4.b5287981f9e03d79c4a0196a4fdp-428, gamma(@as(f128, -0x6.3ffffffffffffffffffffffffep+4)));
    // try std.testing.expectEqual(-0x1.2d4767e4f014d48bc8523646526cp-508, gamma(@as(f128, -0x6.400008p+4)));
    // try std.testing.expectEqual(-0x2.5a943cc0fcc4b6ca3cf37f41ebdep-480, gamma(@as(f128, -0x6.4000000000004p+4)));
    try std.testing.expectEqual(-0x1.2d4a1e607e780ca7f1fdb090f25ap-468, gamma(@as(f128, -0x6.4000000000000008p+4)));
    // try std.testing.expectEqual(-0x2.5a943cc0fcf01ebce2500cb3c9f2p-420, gamma(@as(f128, -0x6.4000000000000000000000000004p+4)));
    try std.testing.expectEqual(-0x4.b5287981f9e03d79c4a01964e2dp-428, gamma(@as(f128, -0x6.40000000000000000000000002p+4)));
    // try std.testing.expectEqual(0x8.d1a58f148fa4d61a162e789c9368p-860, gamma(@as(f128, -0x9.5ffffp+4)));
    try std.testing.expectEqual(0x1.1a2f2af6406ada84287436fa17b4p-828, gamma(@as(f128, -0x9.5fffffffffff8p+4)));
    try std.testing.expectEqual(0x8.d17957b201f5492e54c5ca6362dp-820, gamma(@as(f128, -0x9.5ffffffffffffffp+4)));
    try std.testing.expectEqual(0x1.1a2f2af6403ea39eedf168f32b82p-768, gamma(@as(f128, -0x9.5ffffffffffffffffffffffffff8p+4)));
    try std.testing.expectEqual(0x2.345e55ec807d473ddbe2d1e914eap-776, gamma(@as(f128, -0x9.5ffffffffffffffffffffffffcp+4)));
    // try std.testing.expectEqual(-0x8.d14d214a189b93b13f23357c4a6p-860, gamma(@as(f128, -0x9.60001p+4)));
    // try std.testing.expectEqual(-0x1.1a2f2af640126cb9b36ea2c15c7ap-828, gamma(@as(f128, -0x9.6000000000008p+4)));
    // try std.testing.expectEqual(-0x8.d17957b201f4f0c08a50c4cf2a1p-820, gamma(@as(f128, -0x9.600000000000001p+4)));
    try std.testing.expectEqual(-0x1.1a2f2af6403ea39eedf168f325fbp-768, gamma(@as(f128, -0x9.6000000000000000000000000008p+4)));
    // try std.testing.expectEqual(-0x2.345e55ec807d473ddbe2d1e38e0ep-776, gamma(@as(f128, -0x9.60000000000000000000000004p+4)));
    try std.testing.expectEqual(-0x5.fa2b7cb1342f0619b84e4c550dp-1088, gamma(@as(f128, -0xb.4ffffp+4)));
    // try std.testing.expectEqual(-0xb.f418cc537d2800d44c735966b7ep-1060, gamma(@as(f128, -0xb.4fffffffffff8p+4)));
    // try std.testing.expectEqual(-0x5.fa0c6629bd9b6e19eb58ba6e7148p-1048, gamma(@as(f128, -0xb.4ffffffffffffffp+4)));
    try std.testing.expectEqual(-0xb.f418cc537b369e077d178968abb8p-1000, gamma(@as(f128, -0xb.4ffffffffffffffffffffffffff8p+4)));
    // try std.testing.expectEqual(-0x1.7e83198a6f66d3c0efa2f12f02f7p-1004, gamma(@as(f128, -0xb.4ffffffffffffffffffffffffcp+4)));
    try std.testing.expectEqual(0x5.f9ed505798c523eb3303d849ab4p-1088, gamma(@as(f128, -0xb.50001p+4)));
    // try std.testing.expectEqual(0xb.f418cc5379453b3aadbc1413402p-1060, gamma(@as(f128, -0xb.5000000000008p+4)));
    // try std.testing.expectEqual(0x5.fa0c6629bd9b2fed91becefa1c1p-1048, gamma(@as(f128, -0xb.500000000000001p+4)));
    try std.testing.expectEqual(0xb.f418cc537b369e077d1789686d88p-1000, gamma(@as(f128, -0xb.5000000000000000000000000008p+4)));
    // try std.testing.expectEqual(0x1.7e83198a6f66d3c0efa2f12b2031p-1004, gamma(@as(f128, -0xb.50000000000000000000000004p+4)));
    // try std.testing.expectEqual(0x8.6853b8676d944b4af867833d1fbp-1096, gamma(@as(f128, -0xb.5ffffp+4)));
    try std.testing.expectEqual(0x1.0d04fe453ad3bd20f2f3dd6f2c2cp-1064, gamma(@as(f128, -0xb.5fffffffffff8p+4)));
    try std.testing.expectEqual(0x8.6827f229d53fe6deb3582838a6b8p-1056, gamma(@as(f128, -0xb.5ffffffffffffffp+4)));
    // try std.testing.expectEqual(0x1.0d04fe453aa7f7631eb07c9b7cdp-1004, gamma(@as(f128, -0xb.5ffffffffffffffffffffffffff8p+4)));
    try std.testing.expectEqual(0x2.1a09fc8a754feec63d60f939b084p-1012, gamma(@as(f128, -0xb.5ffffffffffffffffffffffffcp+4)));
    try std.testing.expectEqual(-0x8.67fc2cebc2f23e1c7cddddf5e03p-1096, gamma(@as(f128, -0xb.60001p+4)));
    // try std.testing.expectEqual(-0x1.0d04fe453a7c31a54a6d23c3f834p-1064, gamma(@as(f128, -0xb.6000000000008p+4)));
    // try std.testing.expectEqual(-0x8.6827f229d53f8f5337afa17efb8p-1056, gamma(@as(f128, -0xb.600000000000001p+4)));
    try std.testing.expectEqual(-0x1.0d04fe453aa7f7631eb07c9b7757p-1004, gamma(@as(f128, -0xb.6000000000000000000000000008p+4)));
    try std.testing.expectEqual(-0x2.1a09fc8a754feec63d60f93437ccp-1012, gamma(@as(f128, -0xb.60000000000000000000000004p+4)));
    try std.testing.expectEqual(-0xb.c2e7e440d1188c0b48acd829af98p-1104, gamma(@as(f128, -0xb.6ffffp+4)));
    // try std.testing.expectEqual(-0x1.785552e9f05ed31472126e701a41p-1072, gamma(@as(f128, -0xb.6fffffffffff8p+4)));
    try std.testing.expectEqual(-0xb.c2aa974f810c73fdd8d87a72ed78p-1064, gamma(@as(f128, -0xb.6ffffffffffffffp+4)));
    // try std.testing.expectEqual(-0x1.785552e9f02186d633533768338p-1012, gamma(@as(f128, -0xb.6ffffffffffffffffffffffffff8p+4)));
    try std.testing.expectEqual(-0x2.f0aaa5d3e0430dac66a66ed4341cp-1020, gamma(@as(f128, -0xb.6ffffffffffffffffffffffffcp+4)));
    // try std.testing.expectEqual(0xb.c26d4bc450a5bc9143545a8176bp-1104, gamma(@as(f128, -0xb.70001p+4)));
    // try std.testing.expectEqual(0x1.785552e9efe43a97f4940b914245p-1072, gamma(@as(f128, -0xb.7000000000008p+4)));
    // try std.testing.expectEqual(0xb.c2aa974f810bf9655c5afc100eap-1064, gamma(@as(f128, -0xb.700000000000001p+4)));
    // try std.testing.expectEqual(0x1.785552e9f02186d6335337682bd7p-1012, gamma(@as(f128, -0xb.7000000000000000000000000008p+4)));
    // try std.testing.expectEqual(0x2.f0aaa5d3e0430dac66a66ecc8a94p-1020, gamma(@as(f128, -0xb.70000000000000000000000004p+4)));
    try std.testing.expectEqual(0x1.05d1632f1f3e377a5ce1c82bcef7p-1108, gamma(@as(f128, -0xb.7ffffp+4)));
    try std.testing.expectEqual(0x2.0b981a509c577f3951f0a0734052p-1080, gamma(@as(f128, -0xb.7fffffffffff8p+4)));
    // try std.testing.expectEqual(0x1.05cc0d284e011538e344fb8ffb9dp-1068, gamma(@as(f128, -0xb.7ffffffffffffffp+4)));
    // try std.testing.expectEqual(0x2.0b981a509c021fc5d81abc64742ep-1020, gamma(@as(f128, -0xb.7ffffffffffffffffffffffffff8p+4)));
    // try std.testing.expectEqual(0x4.173034a138043f8bb03578ce33a8p-1028, gamma(@as(f128, -0xb.7ffffffffffffffffffffffffcp+4)));
    try std.testing.expectEqual(-0x1.05c6b740afc189e07304b954f89ep-1108, gamma(@as(f128, -0xb.80001p+4)));
    try std.testing.expectEqual(-0x2.0b981a509bacc0525e44e7ef1c3p-1080, gamma(@as(f128, -0xb.8000000000008p+4)));
    try std.testing.expectEqual(-0x1.05cc0d284e010a8cf4d5c0d4735bp-1068, gamma(@as(f128, -0xb.800000000000001p+4)));
    try std.testing.expectEqual(-0x2.0b981a509c021fc5d81abc646982p-1020, gamma(@as(f128, -0xb.8000000000000000000000000008p+4)));
    try std.testing.expectEqual(-0x4.173034a138043f8bb03578c387b8p-1028, gamma(@as(f128, -0xb.80000000000000000000000004p+4)));
    // try std.testing.expectEqual(0x3.a18e29bac973932feed1b47afae6p-1140, gamma(@as(f128, -0xb.bffffp+4)));
    // try std.testing.expectEqual(0x7.42f647bca86c527d96aff32b14acp-1112, gamma(@as(f128, -0xb.bfffffffffff8p+4)));
    try std.testing.expectEqual(0x3.a17b23de539e0f1f1af66ae9e844p-1100, gamma(@as(f128, -0xb.bffffffffffffffp+4)));
    // try std.testing.expectEqual(0x7.42f647bca73bf832ec9792cb53dp-1052, gamma(@as(f128, -0xb.bffffffffffffffffffffffffff8p+4)));
    // try std.testing.expectEqual(0xe.85ec8f794e77f065d92f25a98738p-1060, gamma(@as(f128, -0xb.bffffffffffffffffffffffffcp+4)));
    // try std.testing.expectEqual(-0x3.a1681e71734405bc890265f19adap-1140, gamma(@as(f128, -0xb.c0001p+4)));
    // try std.testing.expectEqual(-0x7.42f647bca60b9de8427f6a362ab8p-1112, gamma(@as(f128, -0xb.c000000000008p+4)));
    // try std.testing.expectEqual(-0x3.a17b23de539de913d1a127e158f6p-1100, gamma(@as(f128, -0xb.c00000000000001p+4)));
    // try std.testing.expectEqual(-0x7.42f647bca73bf832ec9792cb2dc4p-1052, gamma(@as(f128, -0xb.c000000000000000000000000008p+4)));
    // try std.testing.expectEqual(-0xe.85ec8f794e77f065d92f25837bfp-1060, gamma(@as(f128, -0xb.c0000000000000000000000004p+4)));
    // try std.testing.expectEqual(-0x4.eb1490744e9508cbdf4b2d2d11b8p-1148, gamma(@as(f128, -0xb.cffffp+4)));
    // try std.testing.expectEqual(-0x9.d5f58b282beb2e4ada1f6e725c48p-1120, gamma(@as(f128, -0xb.cfffffffffff8p+4)));
    // try std.testing.expectEqual(-0x4.eafac59415275c4be21f68f6814p-1108, gamma(@as(f128, -0xb.cffffffffffffffp+4)));
    try std.testing.expectEqual(-0x9.d5f58b282a4e85029b36f4e2a508p-1060, gamma(@as(f128, -0xb.cffffffffffffffffffffffffff8p+4)));
    try std.testing.expectEqual(-0x1.3abeb1650549d0a05366de9dee11p-1064, gamma(@as(f128, -0xb.cffffffffffffffffffffffffcp+4)));
    try std.testing.expectEqual(0x4.eae0fb4b4576d3ee7cdc0f84655p-1148, gamma(@as(f128, -0xb.d0001p+4)));
    // try std.testing.expectEqual(0x9.d5f58b2828b1dbba5c4ec70798d8p-1120, gamma(@as(f128, -0xb.d000000000008p+4)));
    // try std.testing.expectEqual(0x4.eafac594152728b6b9178bec0a94p-1108, gamma(@as(f128, -0xb.d00000000000001p+4)));
    // try std.testing.expectEqual(0x9.d5f58b282a4e85029b36f4e2717p-1060, gamma(@as(f128, -0xb.d000000000000000000000000008p+4)));
    try std.testing.expectEqual(0x1.3abeb1650549d0a05366de9ab4bep-1064, gamma(@as(f128, -0xb.d0000000000000000000000004p+4)));
    // try std.testing.expectEqual(0x6.a071f95f54494e510e48132cef8cp-1156, gamma(@as(f128, -0xb.dffffp+4)));
    // try std.testing.expectEqual(0xd.409e5fdfe4f1fb07d10093ac5bc8p-1128, gamma(@as(f128, -0xb.dfffffffffff8p+4)));
    // try std.testing.expectEqual(0x6.a04f2feff162d8036197b5c29fd8p-1116, gamma(@as(f128, -0xb.dffffffffffffffp+4)));
    try std.testing.expectEqual(0xd.409e5fdfe2c56a74b0cb64e5ebd8p-1068, gamma(@as(f128, -0xb.dffffffffffffffffffffffffff8p+4)));
    try std.testing.expectEqual(0x1.a813cbfbfc58ad4e96196c9ee5b3p-1072, gamma(@as(f128, -0xb.dffffffffffffffffffffffffcp+4)));
    // try std.testing.expectEqual(-0x6.a02c674cee90e10296e1141cfd9cp-1156, gamma(@as(f128, -0xb.e0001p+4)));
    // try std.testing.expectEqual(-0xd.409e5fdfe098d9e190969c4f40b8p-1128, gamma(@as(f128, -0xb.e000000000008p+4)));
    try std.testing.expectEqual(-0x6.a04f2feff16292714f33af232a04p-1116, gamma(@as(f128, -0xb.e00000000000001p+4)));
    try std.testing.expectEqual(-0xd.409e5fdfe2c56a74b0cb64e5a648p-1068, gamma(@as(f128, -0xb.e000000000000000000000000008p+4)));
    // try std.testing.expectEqual(-0x1.a813cbfbfc58ad4e96196c9a8c92p-1072, gamma(@as(f128, -0xb.e0000000000000000000000004p+4)));
    try std.testing.expectEqual(-0x8.e1c509b9188f73d1ea32ca8230bp-1164, gamma(@as(f128, -0xb.effffp+4)));
    // try std.testing.expectEqual(-0x1.1c32cbb79d3b2fad009321b3186ep-1132, gamma(@as(f128, -0xb.efffffffffff8p+4)));
    // try std.testing.expectEqual(-0x8.e1965dbce864507ba91eede73f5p-1124, gamma(@as(f128, -0xb.effffffffffffffp+4)));
    try std.testing.expectEqual(-0x1.1c32cbb79d0c843a06c4a3edbb4dp-1072, gamma(@as(f128, -0xb.effffffffffffffffffffffffff8p+4)));
    // try std.testing.expectEqual(-0x2.3865976f3a1908740d8947de5b7cp-1080, gamma(@as(f128, -0xb.effffffffffffffffffffffffcp+4)));
    // try std.testing.expectEqual(0x8.e167b2d322aba202926ca843c65p-1164, gamma(@as(f128, -0xb.f0001p+4)));
    try std.testing.expectEqual(0x1.1c32cbb79cddd8c70cf62ebbabedp-1132, gamma(@as(f128, -0xb.f000000000008p+4)));
    // try std.testing.expectEqual(0x8.e1965dbce863f324c32b50f447ep-1124, gamma(@as(f128, -0xb.f00000000000001p+4)));
    // try std.testing.expectEqual(0x1.1c32cbb79d0c843a06c4a3edb577p-1072, gamma(@as(f128, -0xb.f000000000000000000000000008p+4)));
    // try std.testing.expectEqual(0x2.3865976f3a1908740d8947d8860cp-1080, gamma(@as(f128, -0xb.f0000000000000000000000004p+4)));
    // try std.testing.expectEqual(0xf.1f88ab042ff7085579fc982914d8p-1624, gamma(@as(f128, -0xf.9ffffp+4)));
    try std.testing.expectEqual(0x1.e3e6a471e8ca39e146ec0d2ee4b5p-1592, gamma(@as(f128, -0xf.9fffffffffff8p+4)));
    // try std.testing.expectEqual(0xf.1f35238f43b5eee5821ae29266ap-1584, gamma(@as(f128, -0xf.9ffffffffffffffp+4)));
    try std.testing.expectEqual(0x1.e3e6a471e876b36be196b1a7e09p-1532, gamma(@as(f128, -0xf.9ffffffffffffffffffffffffff8p+4)));
    try std.testing.expectEqual(0x3.c7cd48e3d0ed66d7c32d6354ef16p-1540, gamma(@as(f128, -0xf.9ffffffffffffffffffffffffcp+4)));
    // try std.testing.expectEqual(-0xf.1ee19e1960e8837e1e8ee885a37p-1624, gamma(@as(f128, -0xf.a0001p+4)));
    // try std.testing.expectEqual(-0x1.e3e6a471e8232cf67c4166191d9cp-1592, gamma(@as(f128, -0xf.a000000000008p+4)));
    try std.testing.expectEqual(-0xf.1f35238f43b547d8975037eb50d8p-1584, gamma(@as(f128, -0xf.a00000000000001p+4)));
    // try std.testing.expectEqual(-0x1.e3e6a471e876b36be196b1a7d61fp-1532, gamma(@as(f128, -0xf.a000000000000000000000000008p+4)));
    // try std.testing.expectEqual(-0x3.c7cd48e3d0ed66d7c32d634a7e48p-1540, gamma(@as(f128, -0xf.a0000000000000000000000004p+4)));
    try std.testing.expectEqual(0xc.8678d8710ada4b5eec735b54978p-3756, gamma(@as(f128, -0x1.f3fffep+8)));
    // try std.testing.expectEqual(0x1.90bba4f1c2ba52b807b31083b732p-3724, gamma(@as(f128, -0x1.f3fffffffffffp+8)));
    try std.testing.expectEqual(0xc.85dd278e10f5cb258653e3c773ap-3716, gamma(@as(f128, -0x1.f3fffffffffffffep+8)));
    // try std.testing.expectEqual(0x1.90bba4f1c21ea5ef17ac7baa7679p-3664, gamma(@as(f128, -0x1.f3ffffffffffffffffffffffffffp+8)));
    // try std.testing.expectEqual(0x3.217749e3843d4bde2f58f75e9448p-3672, gamma(@as(f128, -0x1.f3ffffffffffffffffffffffff8p+8)));
    try std.testing.expectEqual(-0xc.85417edf037af33cc2668f1a74bp-3756, gamma(@as(f128, -0x1.f40002p+8)));
    try std.testing.expectEqual(-0x1.90bba4f1c182f92627a62870859cp-3724, gamma(@as(f128, -0x1.f400000000001p+8)));
    try std.testing.expectEqual(-0xc.85dd278e10f493cbf473d6df607p-3716, gamma(@as(f128, -0x1.f400000000000002p+8)));
    try std.testing.expectEqual(-0x1.90bba4f1c21ea5ef17ac7baa6303p-3664, gamma(@as(f128, -0x1.f400000000000000000000000001p+8)));
    try std.testing.expectEqual(-0x3.217749e3843d4bde2f58f74b1ebp-3672, gamma(@as(f128, -0x1.f40000000000000000000000008p+8)));
    // try std.testing.expectEqual(0x7.433bfad52f116275e8a6cb1abdbp-6076, gamma(@as(f128, -0x2.edfffcp+8)));
    // try std.testing.expectEqual(0xe.84f75c0458390c32001f453d124p-6048, gamma(@as(f128, -0x2.edffffffffffep+8)));
    try std.testing.expectEqual(0x7.427bae02261b354c69c18aff27ccp-6036, gamma(@as(f128, -0x2.edfffffffffffffcp+8)));
    // try std.testing.expectEqual(0xe.84f75c044c34ea148fd50d630b88p-5988, gamma(@as(f128, -0x2.edfffffffffffffffffffffffffep+8)));
    try std.testing.expectEqual(0x1.d09eeb8089869d4291faa1b84d8bp-5992, gamma(@as(f128, -0x2.edffffffffffffffffffffffffp+8)));
    // try std.testing.expectEqual(-0x7.41bb7690a9f23173319e693ba4fp-6076, gamma(@as(f128, -0x2.ee0004p+8)));
    // try std.testing.expectEqual(-0xe.84f75c044030c7f71f95864de848p-6048, gamma(@as(f128, -0x2.ee00000000002p+8)));
    // try std.testing.expectEqual(-0x7.427bae022619b4c82613826338dcp-6036, gamma(@as(f128, -0x2.ee00000000000004p+8)));
    // try std.testing.expectEqual(-0xe.84f75c044c34ea148fd50d618b08p-5988, gamma(@as(f128, -0x2.ee00000000000000000000000002p+8)));
    // try std.testing.expectEqual(-0x1.d09eeb8089869d4291faa1a04547p-5992, gamma(@as(f128, -0x2.ee000000000000000000000001p+8)));
    try std.testing.expectEqual(0x1.84b976c2ef57b0dd46b01953bda8p-8516, gamma(@as(f128, -0x3.e7fffcp+8)));
    // try std.testing.expectEqual(0x3.091f067a14e8282cc35fdfe8522ap-8488, gamma(@as(f128, -0x3.e7ffffffffffep+8)));
    // try std.testing.expectEqual(0x1.848f833d0924b53479534a4f3589p-8476, gamma(@as(f128, -0x3.e7fffffffffffffcp+8)));
    // try std.testing.expectEqual(0x3.091f067a12491686bde5e585faa6p-8428, gamma(@as(f128, -0x3.e7fffffffffffffffffffffffffep+8)));
    // try std.testing.expectEqual(0x6.123e0cf424922d0d7bcbcb359284p-8436, gamma(@as(f128, -0x3.e7ffffffffffffffffffffffffp+8)));
    // try std.testing.expectEqual(-0x1.8465948dfc562cb9461afac63bb1p-8516, gamma(@as(f128, -0x3.e80004p+8)));
    // try std.testing.expectEqual(-0x3.091f067a0faa04e0b86e569000d6p-8488, gamma(@as(f128, -0x3.e800000000002p+8)));
    // try std.testing.expectEqual(-0x1.848f833d0924615244929b36a004p-8476, gamma(@as(f128, -0x3.e800000000000004p+8)));
    // try std.testing.expectEqual(-0x3.091f067a12491686bde5e585a6c4p-8428, gamma(@as(f128, -0x3.e800000000000000000000000002p+8)));
    // try std.testing.expectEqual(-0x6.123e0cf424922d0d7bcbcae1b05p-8436, gamma(@as(f128, -0x3.e8000000000000000000000001p+8)));
    try std.testing.expectEqual(0x4.ca1e38696cc9387008956e5c4484p-11052, gamma(@as(f128, -0x4.e1fff8p+8)));
    try std.testing.expectEqual(0x9.921a2cbd0d9296ec13e74625f128p-11024, gamma(@as(f128, -0x4.e1ffffffffffcp+8)));
    try std.testing.expectEqual(0x4.c90d165e7e424f4f96e17404662cp-11012, gamma(@as(f128, -0x4.e1fffffffffffff8p+8)));
    try std.testing.expectEqual(0x9.921a2cbcfc827c9be3bce4c3a3bp-10964, gamma(@as(f128, -0x4.e1fffffffffffffffffffffffffcp+8)));
    // try std.testing.expectEqual(0x1.324345979f904f937c779ca9627p-10968, gamma(@as(f128, -0x4.e1fffffffffffffffffffffffep+8)));
    // try std.testing.expectEqual(-0x4.c7fc351a014d05e8ad7788447bp-11052, gamma(@as(f128, -0x4.e20008p+8)));
    // try std.testing.expectEqual(-0x9.921a2cbceb72624bb3b2e697d0c8p-11024, gamma(@as(f128, -0x4.e200000000004p+8)));
    try std.testing.expectEqual(-0x4.c90d165e7e402d4c4cdb70be6d4cp-11012, gamma(@as(f128, -0x4.e200000000000008p+8)));
    try std.testing.expectEqual(-0x9.921a2cbcfc827c9be3bce4c181bp-10964, gamma(@as(f128, -0x4.e200000000000000000000000004p+8)));
    // try std.testing.expectEqual(-0x1.324345979f904f937c779c87423cp-10968, gamma(@as(f128, -0x4.e2000000000000000000000002p+8)));
    try std.testing.expectEqual(0x1.401ec2203b3432aa4674264a913bp-13656, gamma(@as(f128, -0x5.dbfff8p+8)));
    try std.testing.expectEqual(0x2.7fab407c88e579402f82ae0604dcp-13628, gamma(@as(f128, -0x5.dbffffffffffcp+8)));
    // try std.testing.expectEqual(0x1.3fd5a03e422a3d9eaedb9b002425p-13616, gamma(@as(f128, -0x5.dbfffffffffffff8p+8)));
    // try std.testing.expectEqual(0x2.7fab407c8453e90b571c29bdd54p-13568, gamma(@as(f128, -0x5.dbfffffffffffffffffffffffffcp+8)));
    // try std.testing.expectEqual(0x4.ff5680f908a7d216ae3853c43154p-13576, gamma(@as(f128, -0x5.dbfffffffffffffffffffffffep+8)));
    try std.testing.expectEqual(-0x1.3f8c90181e39f8de9289b7100a51p-13656, gamma(@as(f128, -0x5.dc0008p+8)));
    // try std.testing.expectEqual(-0x2.7fab407c7fc258d67ebe835f93bp-13628, gamma(@as(f128, -0x5.dc00000000004p+8)));
    try std.testing.expectEqual(-0x1.3fd5a03e4229ab6ca8408ebd79bep-13616, gamma(@as(f128, -0x5.dc00000000000008p+8)));
    // try std.testing.expectEqual(-0x2.7fab407c8453e90b571c29bd430ep-13568, gamma(@as(f128, -0x5.dc00000000000000000000000004p+8)));
    try std.testing.expectEqual(-0x4.ff5680f908a7d216ae385331ff4cp-13576, gamma(@as(f128, -0x5.dc000000000000000000000002p+8)));
    // try std.testing.expectEqual(0x4.084b5636bf26a3700a13afcc4528p-16324, gamma(@as(f128, -0x6.d5fff8p+8)));
    // try std.testing.expectEqual(0x8.0eb51434948b527ba5179fb12a3p-16296, gamma(@as(f128, -0x6.d5ffffffffffcp+8)));
    // try std.testing.expectEqual(0x4.075a8a1a42c12707a975c5dc83e4p-16284, gamma(@as(f128, -0x6.d5fffffffffffff8p+8)));
    try std.testing.expectEqual(0x8.0eb5143485806cb299ca23e61918p-16236, gamma(@as(f128, -0x6.d5fffffffffffffffffffffffffcp+8)));
    // try std.testing.expectEqual(0x1.01d6a28690b00d965339448baff3p-16240, gamma(@as(f128, -0x6.d5fffffffffffffffffffffffep+8)));
    try std.testing.expectEqual(-0x4.0669f97879582146f7297f556c28p-16324, gamma(@as(f128, -0x6.d60008p+8)));
    // try std.testing.expectEqual(-0x8.0eb51434767586e98e9a6572792p-16296, gamma(@as(f128, -0x6.d600000000004p+8)));
    // try std.testing.expectEqual(-0x4.075a8a1a42bf45aaf0545e08dffcp-16284, gamma(@as(f128, -0x6.d600000000000008p+8)));
    // try std.testing.expectEqual(-0x8.0eb5143485806cb299ca23e437b8p-16236, gamma(@as(f128, -0x6.d600000000000000000000000004p+8)));
    // try std.testing.expectEqual(-0x1.01d6a28690b00d965339446d9a27p-16240, gamma(@as(f128, -0x6.d6000000000000000000000002p+8)));
    try std.testing.expectEqual(-0x3.b233595p-16464, gamma(@as(f128, -0x6.e2fff8p+8)));
    try std.testing.expectEqual(-0x7.62acd4c5e5169cp-16436, gamma(@as(f128, -0x6.e2ffffffffffcp+8)));
    try std.testing.expectEqual(-0x3.b1566a62eba58dee84p-16424, gamma(@as(f128, -0x6.e2fffffffffffff8p+8)));
    try std.testing.expectEqual(-0x7.62acd4c5d7496235ce8ca060a7bp-16376, gamma(@as(f128, -0x6.e2fffffffffffffffffffffffffcp+8)));
    // try std.testing.expectEqual(-0xe.c559a98bae92c46b9d19419c6958p-16384, gamma(@as(f128, -0x6.e2fffffffffffffffffffffffep+8)));
    try std.testing.expectEqual(0x3.b079b214p-16464, gamma(@as(f128, -0x6.e30008p+8)));
    try std.testing.expectEqual(0x7.62acd4c5c97c288p-16436, gamma(@as(f128, -0x6.e300000000004p+8)));
    try std.testing.expectEqual(0x3.b1566a62eba3d4474cp-16424, gamma(@as(f128, -0x6.e300000000000008p+8)));
    // try std.testing.expectEqual(0x7.62acd4c5d7496235ce8ca05eee08p-16376, gamma(@as(f128, -0x6.e300000000000000000000000004p+8)));
    // try std.testing.expectEqual(0xe.c559a98bae92c46b9d193fe2c22p-16384, gamma(@as(f128, -0x6.e3000000000000000000000002p+8)));
    try std.testing.expectEqual(0x8.9512cp-16476, gamma(@as(f128, -0x6.e3fff8p+8)));
    try std.testing.expectEqual(0x1.12623994e1f8cp-16444, gamma(@as(f128, -0x6.e3ffffffffffcp+8)));
    try std.testing.expectEqual(0x8.9311cca6ffc298p-16436, gamma(@as(f128, -0x6.e3fffffffffffff8p+8)));
    try std.testing.expectEqual(0x1.12623994dff812e58f2c3575efb4p-16384, gamma(@as(f128, -0x6.e3fffffffffffffffffffffffffcp+8)));
    try std.testing.expectEqual(0x2.24c47329bff025cb1e586b0bacp-16392, gamma(@as(f128, -0x6.e3fffffffffffffffffffffffep+8)));
    try std.testing.expectEqual(-0x8.91114p-16476, gamma(@as(f128, -0x6.e40008p+8)));
    try std.testing.expectEqual(-0x1.12623994ddf74p-16444, gamma(@as(f128, -0x6.e400000000004p+8)));
    try std.testing.expectEqual(-0x8.9311cca6ffbe968p-16436, gamma(@as(f128, -0x6.e400000000000008p+8)));
    try std.testing.expectEqual(-0x1.12623994dff812e58f2c3575af9cp-16384, gamma(@as(f128, -0x6.e400000000000000000000000004p+8)));
    try std.testing.expectEqual(-0x2.24c47329bff025cb1e586acb94p-16392, gamma(@as(f128, -0x6.e4000000000000000000000002p+8)));
    try std.testing.expectEqual(-0x1.3ecp-16484, gamma(@as(f128, -0x6.e4fff8p+8)));
    try std.testing.expectEqual(-0x2.7cc1b7f548p-16456, gamma(@as(f128, -0x6.e4ffffffffffcp+8)));
    try std.testing.expectEqual(-0x1.3e60dbfaa21f8p-16444, gamma(@as(f128, -0x6.e4fffffffffffff8p+8)));
    try std.testing.expectEqual(-0x2.7cc1b7f5443e3fde7cd8e355cp-16396, gamma(@as(f128, -0x6.e4fffffffffffffffffffffffffcp+8)));
    try std.testing.expectEqual(-0x4.f9836fea887c7fbcf9b1c7p-16404, gamma(@as(f128, -0x6.e4fffffffffffffffffffffffep+8)));
    try std.testing.expectEqual(0x1.3ep-16484, gamma(@as(f128, -0x6.e50008p+8)));
    try std.testing.expectEqual(0x2.7cc1b7f54p-16456, gamma(@as(f128, -0x6.e500000000004p+8)));
    try std.testing.expectEqual(0x1.3e60dbfaa21ecp-16444, gamma(@as(f128, -0x6.e500000000000008p+8)));
    try std.testing.expectEqual(0x2.7cc1b7f5443e3fde7cd8e3554p-16396, gamma(@as(f128, -0x6.e500000000000000000000000004p+8)));
    try std.testing.expectEqual(0x4.f9836fea887c7fbcf9b1c68p-16404, gamma(@as(f128, -0x6.e5000000000000000000000002p+8)));
    try std.testing.expectEqual(0x4p-16496, gamma(@as(f128, -0x6.e5fff8p+8)));
    try std.testing.expectEqual(0x5.c4df2a8p-16468, gamma(@as(f128, -0x6.e5ffffffffffcp+8)));
    try std.testing.expectEqual(0x2.e26f9542b4p-16456, gamma(@as(f128, -0x6.e5fffffffffffff8p+8)));
    try std.testing.expectEqual(0x5.c4df2a8566e7ef75f81b94p-16408, gamma(@as(f128, -0x6.e5fffffffffffffffffffffffffcp+8)));
    try std.testing.expectEqual(0xb.89be550acdcfdeebf038p-16416, gamma(@as(f128, -0x6.e5fffffffffffffffffffffffep+8)));
    try std.testing.expectEqual(-0x4p-16496, gamma(@as(f128, -0x6.e60008p+8)));
    try std.testing.expectEqual(-0x5.c4df2a8p-16468, gamma(@as(f128, -0x6.e600000000004p+8)));
    try std.testing.expectEqual(-0x2.e26f9542b4p-16456, gamma(@as(f128, -0x6.e600000000000008p+8)));
    try std.testing.expectEqual(-0x5.c4df2a8566e7ef75f81b94p-16408, gamma(@as(f128, -0x6.e600000000000000000000000004p+8)));
    try std.testing.expectEqual(-0xb.89be550acdcfdeebf038p-16416, gamma(@as(f128, -0x6.e6000000000000000000000002p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f128, -0x6.ebfff8p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f128, -0x6.ebffffffffffcp+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f128, -0x6.ebfffffffffffff8p+8)));
    try std.testing.expectEqual(0x3.777bccp-16472, gamma(@as(f128, -0x6.ebfffffffffffffffffffffffffcp+8)));
    try std.testing.expectEqual(0x6.eef8p-16480, gamma(@as(f128, -0x6.ebfffffffffffffffffffffffep+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f128, -0x6.ec0008p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f128, -0x6.ec00000000004p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f128, -0x6.ec00000000000008p+8)));
    try std.testing.expectEqual(-0x3.777bccp-16472, gamma(@as(f128, -0x6.ec00000000000000000000000004p+8)));
    try std.testing.expectEqual(-0x6.eef8p-16480, gamma(@as(f128, -0x6.ec000000000000000000000002p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f128, -0x6.ecfff8p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f128, -0x6.ecffffffffffcp+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f128, -0x6.ecfffffffffffff8p+8)));
    try std.testing.expectEqual(-0x8.024p-16484, gamma(@as(f128, -0x6.ecfffffffffffffffffffffffffcp+8)));
    try std.testing.expectEqual(-0x1p-16488, gamma(@as(f128, -0x6.ecfffffffffffffffffffffffep+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f128, -0x6.ed0008p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f128, -0x6.ed00000000004p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f128, -0x6.ed00000000000008p+8)));
    try std.testing.expectEqual(0x8.024p-16484, gamma(@as(f128, -0x6.ed00000000000000000000000004p+8)));
    try std.testing.expectEqual(0x1p-16488, gamma(@as(f128, -0x6.ed000000000000000000000002p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f128, -0x6.edfff8p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f128, -0x6.edffffffffffcp+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f128, -0x6.edfffffffffffff8p+8)));
    try std.testing.expectEqual(0x1.4p-16492, gamma(@as(f128, -0x6.edfffffffffffffffffffffffffcp+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f128, -0x6.edfffffffffffffffffffffffep+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f128, -0x6.ee0008p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f128, -0x6.ee00000000004p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f128, -0x6.ee00000000000008p+8)));
    try std.testing.expectEqual(-0x1.4p-16492, gamma(@as(f128, -0x6.ee00000000000000000000000004p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f128, -0x6.ee000000000000000000000002p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f128, -0x6.eefff8p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f128, -0x6.eeffffffffffcp+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f128, -0x6.eefffffffffffff8p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f128, -0x6.eefffffffffffffffffffffffffcp+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f128, -0x6.eefffffffffffffffffffffffep+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f128, -0x6.ef0008p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f128, -0x6.ef00000000004p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f128, -0x6.ef00000000000008p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f128, -0x6.ef00000000000000000000000004p+8)));
    try std.testing.expectEqual(0x0p+0, gamma(@as(f128, -0x6.ef000000000000000000000002p+8)));
    // try std.testing.expectEqual(0x3.dad55d40f5984dd04dd66948eda4p-124, gamma(@as(f128, -0x2.146544p+4)));
    try std.testing.expectEqual(-0x3.73075511ee22b4fe33881f27afd4p-1020, gamma(@as(f128, -0xa.c0001p+4)));
    // try std.testing.expectEqual(-0xd.cc629963ba2d24f78944d83c12dp-1012, gamma(@as(f128, -0xa.c000000400008p+4)));
    // try std.testing.expectEqual(0x5.52facf180f081e240615cf937cacp+48, gamma(@as(f128, 0x1.28p+4)));
    // try std.testing.expectEqual(0x6.27f1ff73d16162d9a70938028824p+52, gamma(@as(f128, 0x1.38p+4)));
    // try std.testing.expectEqual(0x1.22a3089777c436c4737f96330b4p+72, gamma(@as(f128, 0x1.78p+4)));
    try std.testing.expectEqual(0x1.4a25d38b82b7dc7daa7b3b78ed28p+100, gamma(@as(f128, 0x1.d8p+4)));
    try std.testing.expectEqual(0x2.60b5be093902fe87b25335a6f542p+104, gamma(@as(f128, 0x1.e8p+4)));
    try std.testing.expectEqual(0x4.885a724194adb532abee9e464384p+108, gamma(@as(f128, 0x1.f8p+4)));
    // try std.testing.expectEqual(0x8.ec7210f11cb5fcbbc27dc79a54fp+112, gamma(@as(f128, 0x2.08p+4)));
    // try std.testing.expectEqual(0x1.22047b269c251a95d630f7d717c8p+120, gamma(@as(f128, 0x2.18p+4)));
    try std.testing.expectEqual(0x2.5f3961d8d6edafa9b87686ea59cap+124, gamma(@as(f128, 0x2.28p+4)));
    // try std.testing.expectEqual(0xf.fff81014863292c45a7f575432ep+124, gamma(@as(f128, 0x2.30a43cp+4)));
    try std.testing.expectEqual(0x1.000063b3eab1992caf0e008639d9p+128, gamma(@as(f128, 0x2.30a44p+4)));
    try std.testing.expectEqual(0x1.0004470cc9ee80b29452daeb9ddap+1024, gamma(@as(f128, 0xa.b9fd8p+4)));
    try std.testing.expectEqual(0xf.fff229034ceb4a56a2b2a2fc7368p+1020, gamma(@as(f128, 0xa.b9fd7p+4)));
    // try std.testing.expectEqual(0xf.ffffffffff2875258051338ef4f8p+1020, gamma(@as(f128, 0xa.b9fd72b0fb238p+4)));
    try std.testing.expectEqual(0x1.0004470cc9ee80b29452daeb9ddap+1024, gamma(@as(f128, 0xa.b9fd8p+4)));
    try std.testing.expectEqual(0xf.fff229034ceb4a56a2b2a2fc7368p+1020, gamma(@as(f128, 0xa.b9fd7p+4)));
    try std.testing.expectEqual(0x1.00000000001baaf0cb8c8fd675e6p+1024, gamma(@as(f128, 0xa.b9fd72b0fb24p+4)));
    try std.testing.expectEqual(0x1.0004470cc9ee80b29452daeb9ddap+1024, gamma(@as(f128, 0xa.b9fd8p+4)));
    try std.testing.expectEqual(0xf.fff229034ceb4a56a2b2a2fc7368p+1020, gamma(@as(f128, 0xa.b9fd7p+4)));
    try std.testing.expectEqual(0x1.00000000001baaf0cb8c8fd675e6p+1024, gamma(@as(f128, 0xa.b9fd72b0fb24p+4)));
    // try std.testing.expectEqual(0xf.ffffffffff2875258051338ef4f8p+1020, gamma(@as(f128, 0xa.b9fd72b0fb238p+4)));
    // try std.testing.expectEqual(0xf.ffffffffffffcb96e50a5832843p+1020, gamma(@as(f128, 0xa.b9fd72b0fb23a9ep+4)));
    // try std.testing.expectEqual(0xf.ffffffffffff794fa823493b933p+1020, gamma(@as(f128, 0xa.b9fd72b0fb23a9dp+4)));
    try std.testing.expectEqual(0xf.ffffffffffffbffffffffff04d4p+1020, gamma(@as(f128, 0xa.b9fd72b0fb23a9ddbf0d3804f4p+4)));
    try std.testing.expectEqual(0x1.0004470cc9ee80b29452daeb9ddap+1024, gamma(@as(f128, 0xa.b9fd8p+4)));
    try std.testing.expectEqual(0xf.fff229034ceb4a56a2b2a2fc7368p+1020, gamma(@as(f128, 0xa.b9fd7p+4)));
    try std.testing.expectEqual(0x1.00000000001baaf0cb8c8fd675e6p+1024, gamma(@as(f128, 0xa.b9fd72b0fb24p+4)));
    // try std.testing.expectEqual(0xf.ffffffffff2875258051338ef4f8p+1020, gamma(@as(f128, 0xa.b9fd72b0fb238p+4)));
    // try std.testing.expectEqual(0xf.ffffffffffffcb96e50a5832843p+1020, gamma(@as(f128, 0xa.b9fd72b0fb23a9ep+4)));
    // try std.testing.expectEqual(0xf.ffffffffffff794fa823493b933p+1020, gamma(@as(f128, 0xa.b9fd72b0fb23a9dp+4)));
    // try std.testing.expectEqual(0xf.ffffffffffffc00000000004df08p+1020, gamma(@as(f128, 0xa.b9fd72b0fb23a9ddbf0d3804f8p+4)));
    try std.testing.expectEqual(std.math.inf(f128), gamma(@as(f128, 0x6.db8c68p+8)));
    try std.testing.expectEqual(0xf.ffe8067b83ee06239e5dad457df8p+16380, gamma(@as(f128, 0x6.db8c6p+8)));
    try std.testing.expectEqual(std.math.inf(f128), gamma(@as(f128, 0x6.db8c603359a98p+8)));
    // try std.testing.expectEqual(0xf.ffffffffe91b89726af9670e2efp+16380, gamma(@as(f128, 0x6.db8c603359a94p+8)));
    try std.testing.expectEqual(0xf.fffffffffffff3090b27045ab8ap+16380, gamma(@as(f128, 0x6.db8c603359a97108p+8)));
    try std.testing.expectEqual(std.math.inf(f128), gamma(@as(f128, 0x6.db8c68p+8)));
    try std.testing.expectEqual(0xf.ffe8067b83ee06239e5dad457df8p+16380, gamma(@as(f128, 0x6.db8c6p+8)));
    try std.testing.expectEqual(std.math.inf(f128), gamma(@as(f128, 0x6.db8c603359a98p+8)));
    // try std.testing.expectEqual(0xf.ffffffffe91b89726af9670e2efp+16380, gamma(@as(f128, 0x6.db8c603359a94p+8)));
    try std.testing.expectEqual(std.math.inf(f128), gamma(@as(f128, 0x6.db8c603359a9711p+8)));
    try std.testing.expectEqual(std.math.inf(f128), gamma(@as(f128, 0x6.db8c68p+8)));
    try std.testing.expectEqual(0xf.ffe8067b83ee06239e5dad457df8p+16380, gamma(@as(f128, 0x6.db8c6p+8)));
    try std.testing.expectEqual(std.math.inf(f128), gamma(@as(f128, 0x6.db8c603359a98p+8)));
    // try std.testing.expectEqual(0xf.ffffffffe91b89726af9670e2efp+16380, gamma(@as(f128, 0x6.db8c603359a94p+8)));
    try std.testing.expectEqual(std.math.inf(f128), gamma(@as(f128, 0x6.db8c603359a9711p+8)));
    try std.testing.expectEqual(0xf.fffffffffffff3090b27045ab8ap+16380, gamma(@as(f128, 0x6.db8c603359a97108p+8)));
    try std.testing.expectEqual(0xf.fffffffffffffffffffffffe801p+16380, gamma(@as(f128, 0x6.db8c603359a971081bc4a2e9dfdp+8)));
    try std.testing.expectEqual(std.math.inf(f128), gamma(@as(f128, 0x6.db8c603359a971081bc4a2e9ep+8)));
    try std.testing.expectEqual(0xf.ffffffffffffffffffffff25dce8p+16380, gamma(@as(f128, 0x6.db8c603359a971081bc4a2e9dep+8)));
    try std.testing.expectEqual(std.math.inf(f128), gamma(@as(f128, 0x6.db8c68p+8)));
    try std.testing.expectEqual(0xf.ffe8067b83ee06239e5dad457df8p+16380, gamma(@as(f128, 0x6.db8c6p+8)));
    try std.testing.expectEqual(std.math.inf(f128), gamma(@as(f128, 0x6.db8c603359a98p+8)));
    // try std.testing.expectEqual(0xf.ffffffffe91b89726af9670e2efp+16380, gamma(@as(f128, 0x6.db8c603359a94p+8)));
    try std.testing.expectEqual(std.math.inf(f128), gamma(@as(f128, 0x6.db8c603359a9711p+8)));
    try std.testing.expectEqual(0xf.fffffffffffff3090b27045ab8ap+16380, gamma(@as(f128, 0x6.db8c603359a97108p+8)));
    try std.testing.expectEqual(std.math.inf(f128), gamma(@as(f128, 0x6.db8c603359a971081bc4a2e9dfd4p+8)));
    try std.testing.expectEqual(std.math.inf(f128), gamma(@as(f128, 0x6.db8c603359a971081bc4a2e9ep+8)));
    try std.testing.expectEqual(0xf.ffffffffffffffffffffff25dce8p+16380, gamma(@as(f128, 0x6.db8c603359a971081bc4a2e9dep+8)));
    // try std.testing.expectEqual(0xa.cb6219668cf4989703cf89dfbdd8p+8516, gamma(@as(f128, 0x3.e8p+8)));
    try std.testing.expectEqual(-0x0p+0, gamma(@as(f128, -0x1.86a08p+16)));
    try std.testing.expectEqual(std.math.inf(f128), gamma(@as(f128, 0xf.fffffp+124)));
    try std.testing.expectEqual(std.math.inf(f128), gamma(@as(f128, 0xf.ffffffffffff8p+1020)));
    try std.testing.expectEqual(std.math.inf(f128), gamma(@as(f128, 0xf.fffffffffffffffp+16380)));
    try std.testing.expectEqual(std.math.inf(f128), gamma(@as(f128, 0xf.fffffffffffffffffffffffffff8p+16380)));
    try std.testing.expectEqual(std.math.inf(f128), gamma(@as(f128, 0xf.ffffffffffffbffffffffffffcp+1020)));
    // try std.testing.expectEqual(-0x3.5a8a6f18f81e652563ccf2a52d4ep-128, gamma(@as(f128, -0x2.23p+4)));
    // try std.testing.expectEqual(-0x3.3f852f434e4198b801e0a49b09f8p-128, gamma(@as(f128, -0x2.231p+4)));
    // try std.testing.expectEqual(-0x3.25ba99c456cd0b757e96245d011cp-128, gamma(@as(f128, -0x2.232p+4)));
    // try std.testing.expectEqual(-0x3.0d178ada332940b440cfcdaa239ep-128, gamma(@as(f128, -0x2.233p+4)));
    // try std.testing.expectEqual(-0x2.f58a5ad6817b88af7ce46bf913a8p-128, gamma(@as(f128, -0x2.234p+4)));
    // try std.testing.expectEqual(-0x2.df02ba328f3c7b58a51d1c89cad8p-128, gamma(@as(f128, -0x2.235p+4)));
    // try std.testing.expectEqual(-0x2.c97191a1b362fd0228a3e95087c2p-128, gamma(@as(f128, -0x2.236p+4)));
    // try std.testing.expectEqual(-0x2.b4c8e59fb606bb2990a814e3919cp-128, gamma(@as(f128, -0x2.237p+4)));
    // try std.testing.expectEqual(0x6.db2af70b7fccf47ab9e59061f8c8p-972, gamma(@as(f128, -0xa.37p+4)));
    // try std.testing.expectEqual(0x6.b47d85f25e08b8f947c626e16404p-972, gamma(@as(f128, -0xa.371p+4)));
    // try std.testing.expectEqual(0x6.8eed33948a45aeff3b5ef0d9bc7cp-972, gamma(@as(f128, -0xa.372p+4)));
    try std.testing.expectEqual(0x6.6a708251e7f023e1e2834b31892cp-972, gamma(@as(f128, -0xa.373p+4)));
    // try std.testing.expectEqual(0x6.46fe544d4abcf292df5b16d60eccp-972, gamma(@as(f128, -0xa.374p+4)));
    // try std.testing.expectEqual(0x6.248de7164ec1f48f2d4f3c957de4p-972, gamma(@as(f128, -0xa.375p+4)));
    try std.testing.expectEqual(0x6.0316cf8d71613db2f44853b42ac4p-972, gamma(@as(f128, -0xa.376p+4)));
    try std.testing.expectEqual(0x5.e290f5fef5a4b89f315fa7e32d0cp-972, gamma(@as(f128, -0xa.377p+4)));
    // try std.testing.expectEqual(0x2.34bfd99e74439227ecdcd2a375e8p-1024, gamma(@as(f128, -0xa.b0dp+4)));
    try std.testing.expectEqual(0x2.315d5e8fc2c79ea919e359149952p-1024, gamma(@as(f128, -0xa.b0d1p+4)));
    try std.testing.expectEqual(0x2.2e036152e0295edf73b1878a66dep-1024, gamma(@as(f128, -0xa.b0d2p+4)));
    // try std.testing.expectEqual(0x2.2ab1c2e8316e31fff8f5431d2aa6p-1024, gamma(@as(f128, -0xa.b0d3p+4)));
    try std.testing.expectEqual(0x2.276864e5dfa92d0473afdd51e96p-1024, gamma(@as(f128, -0xa.b0d4p+4)));
    // try std.testing.expectEqual(0x2.2427297453f68e9120dc44f71692p-1024, gamma(@as(f128, -0xa.b0d5p+4)));
    // try std.testing.expectEqual(0x2.20edf34accb325a3f0fd06edc4fap-1024, gamma(@as(f128, -0xa.b0d6p+4)));
    // try std.testing.expectEqual(0x2.1dbca5ac0b1d5821306bfa108454p-1024, gamma(@as(f128, -0xa.b0d7p+4)));
    // try std.testing.expectEqual(0x2.ada76d6717d20c26b53d45df359p-16384, gamma(@as(f128, -0x6.db03p+8)));
    try std.testing.expectEqual(0x2.9e718cc02784aa75ca6ea9d259e4p-16384, gamma(@as(f128, -0x6.db031p+8)));
    try std.testing.expectEqual(0x2.8fd80394334120561c3973d0a14p-16384, gamma(@as(f128, -0x6.db032p+8)));
    // try std.testing.expectEqual(0x2.81d19f44bc6c07e324a20df7ee04p-16384, gamma(@as(f128, -0x6.db033p+8)));
    try std.testing.expectEqual(0x2.7455e2534efabe6492e9e31a4918p-16384, gamma(@as(f128, -0x6.db034p+8)));
    // try std.testing.expectEqual(0x2.675cf34b296c78fbb1c45669bbfcp-16384, gamma(@as(f128, -0x6.db035p+8)));
    // try std.testing.expectEqual(0x2.5adf8d90ee8b476f0cc87b2efa1cp-16384, gamma(@as(f128, -0x6.db036p+8)));
    // try std.testing.expectEqual(0x2.4ed6f3da84f2d8c78a713ffd2f18p-16384, gamma(@as(f128, -0x6.db037p+8)));
    try std.testing.expectEqual(0x1.8439ab543adb63a3e200cf800648p-16384, gamma(@as(f128, -0x6.db05p+8)));
    // try std.testing.expectEqual(0x1.7ebd5e525657d1b6b8720b85279cp-16384, gamma(@as(f128, -0x6.db051p+8)));
    try std.testing.expectEqual(0x1.7963a77beed5c94b5becab9e3004p-16384, gamma(@as(f128, -0x6.db052p+8)));
    try std.testing.expectEqual(0x1.742b469da476f63d6ec00429b7a8p-16384, gamma(@as(f128, -0x6.db053p+8)));
    try std.testing.expectEqual(0x1.6f130ac394a6d3bb224e67f975acp-16384, gamma(@as(f128, -0x6.db054p+8)));
    try std.testing.expectEqual(0x1.6a19d153bc18812d0bf8878b7a4cp-16384, gamma(@as(f128, -0x6.db055p+8)));
    try std.testing.expectEqual(0x1.653e85385dd6a199b7ac74a104d8p-16384, gamma(@as(f128, -0x6.db056p+8)));
    try std.testing.expectEqual(0x1.60801e19256ca5c2fb6e7b27f38p-16384, gamma(@as(f128, -0x6.db057p+8)));
    // try std.testing.expectEqual(0x6.79a69724dabd5bb9060933f3879cp+0, gamma(@as(f128, -0x3.06644cp+0)));
    try std.testing.expectEqual(-0x7.a358e3487d1917861572978145f8p-8, gamma(@as(f128, -0x6.fe463p+0)));
    // try std.testing.expectEqual(-0x7.a37bcf5d9826857da64dff936df8p-8, gamma(@as(f128, -0x6.fe4638p+0)));
    // try std.testing.expectEqual(-0x7.a376e9732b0c247adf787b0fbe3cp-8, gamma(@as(f128, -0x6.fe4636e0c5064p+0)));
    // try std.testing.expectEqual(0xc.2fa4c8813bd49bf3030484389ac8p-16, gamma(@as(f128, -0x7.a13d78p+0)));
    // try std.testing.expectEqual(0xc.2fa480824477724eff0deaa17e18p-16, gamma(@as(f128, -0x7.a13d8p+0)));
    try std.testing.expectEqual(0xc.2fa4b50e0b76494ea604fd52a4ep-16, gamma(@as(f128, -0x7.a13d7a2945cd4p+0)));
    try std.testing.expectEqual(0xc.2fa4b50e0b740956a720831ccdf8p-16, gamma(@as(f128, -0x7.a13d7a2945cd8p+0)));
    try std.testing.expectEqual(0xc.2fa4b50e0b757979896b4bb86698p-16, gamma(@as(f128, -0x7.a13d7a2945cd5718p+0)));
    // try std.testing.expectEqual(-0x3.ba6130492158a8f70489141a266ep-64, gamma(@as(f128, -0x1.4a5caap+4)));
    try std.testing.expectEqual(0xb.8dc3f1f706c4f86703dd9f9e9d3p-20, gamma(@as(f128, -0x9.2d3a5p+0)));
    // try std.testing.expectEqual(0x6.1254c93775c0f7110208a7057844p-24, gamma(@as(f128, -0xb.0f63ep+0)));
    // try std.testing.expectEqual(-0x3.b6f6a22e1dcdd2dcee18cccd843cp-13888, gamma(@as(f128, -0x5.f0e02p+8)));
    try std.testing.expectEqual(0x1.7457c3b4ad98efde20da0f4ce493p-24, gamma(@as(f128, -0xb.3123bp+0)));
    // try std.testing.expectEqual(0x3.87a648c74383af53349fc0cb0098p-20, gamma(@as(f128, -0x9.6d538p+0)));
    try std.testing.expectEqual(-0x5.e4e82c4f32081cb334c8415c97p-32, gamma(@as(f128, -0xc.c2439p+0)));
    try std.testing.expectEqual(-0x1.a07f67df4a68ace268536cf8aa44p-28, gamma(@as(f128, -0xc.372fp+0)));
    try std.testing.expectEqual(-0x1.a07ebff6ed1d89a8c38abc6815e3p-28, gamma(@as(f128, -0xc.372f1p+0)));
    // try std.testing.expectEqual(-0x1.a07f3bcc8e5d20ff6630404ac98cp-28, gamma(@as(f128, -0xc.372f043322128p+0)));
    try std.testing.expectEqual(-0x3.a90676ce3e42977fd5f43449ec86p-24, gamma(@as(f128, -0xa.ccfcep+0)));
    // try std.testing.expectEqual(0x7.0e2da01118b52676a3ab4824587p-20, gamma(@as(f128, -0x9.418c8p+0)));
    try std.testing.expectEqual(-0x6.97c60a22487f2ce27930a893473cp-12, gamma(@as(f128, -0x6.ce9158p+0)));
    // try std.testing.expectEqual(0x7.25082d9261006e485f7777504304p-36, gamma(@as(f128, -0xd.cbf53p+0)));
    // try std.testing.expectEqual(0x7.2508e12d1cf5cc3b2b09fb501178p-36, gamma(@as(f128, -0xd.cbf54p+0)));
    try std.testing.expectEqual(0x7.2508c022ac5a1f121d3ba32c5948p-36, gamma(@as(f128, -0xd.cbf53d0e7d06p+0)));
    try std.testing.expectEqual(0x3.d05efb28d49cc49b798cfd0f0a28p+0, gamma(@as(f128, -0x3.0aa534p+0)));
    // try std.testing.expectEqual(-0xf.3fc2acf5d89fd798f96647a0a238p-72, gamma(@as(f128, -0x1.62b8c2p+4)));
    try std.testing.expectEqual(-0xf.3fb29bd00da7e586371692562ebp-72, gamma(@as(f128, -0x1.62b8c4p+4)));
    // try std.testing.expectEqual(-0xf.3fb73d327d6a801abb3039b10308p-72, gamma(@as(f128, -0x1.62b8c36c7180bp+4)));
    // try std.testing.expectEqual(0x3.fac96a100e60f1fa454b8cdcdfb8p-24, gamma(@as(f128, -0xb.1626ap+0)));
    // try std.testing.expectEqual(0x3.fac600633d7414f378d97364607cp-24, gamma(@as(f128, -0xb.1626bp+0)));
    // try std.testing.expectEqual(0x3.fac7890382d7e693c33b139429ecp-24, gamma(@as(f128, -0xb.1626a8cf433b8p+0)));
    try std.testing.expectEqual(0xf.f7014642d9849fc3f8a3bdea2afp-8, gamma(@as(f128, -0x7.00cf3p+0)));
    try std.testing.expectEqual(0xf.f6627d248f8e25ddceb81585fcb8p-8, gamma(@as(f128, -0x7.00cf38p+0)));
    try std.testing.expectEqual(0xf.f6ecad999980e4a4868608814ecp-8, gamma(@as(f128, -0x7.00cf31099d4bcp+0)));
    // try std.testing.expectEqual(0x3.e85606c693e9bf25ff07132c8c3cp-24, gamma(@as(f128, -0xb.167e8p+0)));
    // try std.testing.expectEqual(0x3.e852b838ddf2348f185dd745531ep-24, gamma(@as(f128, -0xb.167e9p+0)));
    // try std.testing.expectEqual(0x3.e854a96acdfa7e84ba5e7829836ap-24, gamma(@as(f128, -0xb.167e869a56f1p+0)));
    // try std.testing.expectEqual(0x3.fd9063a22653e8e5a73bb2d5a5bcp-204, gamma(@as(f128, -0x3.1029b4p+4)));
    // try std.testing.expectEqual(0x3.fd2a955e20f5762a464af7f01718p-204, gamma(@as(f128, -0x3.1029b8p+4)));
    // try std.testing.expectEqual(0x3.fd7a5e1abda5c6d62103dbf6d82ep-204, gamma(@as(f128, -0x3.1029b4dd6fb6p+4)));
}
