const std = @import("std");
const zml = @import("zml");
const cf32 = zml.cf32;
const cf64 = zml.cf64;
const cf80 = zml.cf80;
const cf128 = zml.cf128;
const cos = zml.cfloat.cos;

test cos {
    try std.testing.expectEqual(cf32.init(0x1p+0, -0x0p+0), cos(cf32.init(0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1p+0, 0x0p+0), cos(cf32.init(-0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1p+0, 0x0p+0), cos(cf32.init(0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1p+0, -0x0p+0), cos(cf32.init(-0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.61b9a2p+0, -0x1.1788bcp+0), cos(cf32.init(0xcp-4, 0x1.4p+0)));
    // try std.testing.expectEqual(cf32.init(-0x4.308b5p+0, -0x9.1bf66p+0), cos(cf32.init(-0x2p+0, -0x3p+0)));
    // try std.testing.expectEqual(cf32.init(0xc.bbaa7p+124, -0xb.dcb17p+124), cos(cf32.init(0xcp-4, 0x5.98p+4)));
    // try std.testing.expectEqual(cf32.init(0xc.bbaa7p+124, 0xb.dcb17p+124), cos(cf32.init(0xcp-4, -0x5.98p+4)));
    // try std.testing.expectEqual(cf32.init(0xc.bbaa7p+124, 0xb.dcb17p+124), cos(cf32.init(-0xcp-4, 0x5.98p+4)));
    // try std.testing.expectEqual(cf32.init(0xc.bbaa7p+124, -0xb.dcb17p+124), cos(cf32.init(-0xcp-4, -0x5.98p+4)));
    try std.testing.expectEqual(cf32.init(std.math.inf(f32), -std.math.inf(f32)), cos(cf32.init(0xcp-4, 0x2.c68p+8)));
    try std.testing.expectEqual(cf32.init(std.math.inf(f32), std.math.inf(f32)), cos(cf32.init(0xcp-4, -0x2.c68p+8)));
    try std.testing.expectEqual(cf32.init(std.math.inf(f32), std.math.inf(f32)), cos(cf32.init(-0xcp-4, 0x2.c68p+8)));
    try std.testing.expectEqual(cf32.init(std.math.inf(f32), -std.math.inf(f32)), cos(cf32.init(-0xcp-4, -0x2.c68p+8)));
    try std.testing.expectEqual(cf32.init(std.math.inf(f32), -std.math.inf(f32)), cos(cf32.init(0xcp-4, 0x2.c5d4p+12)));
    try std.testing.expectEqual(cf32.init(std.math.inf(f32), std.math.inf(f32)), cos(cf32.init(0xcp-4, -0x2.c5d4p+12)));
    try std.testing.expectEqual(cf32.init(std.math.inf(f32), std.math.inf(f32)), cos(cf32.init(-0xcp-4, 0x2.c5d4p+12)));
    try std.testing.expectEqual(cf32.init(std.math.inf(f32), -std.math.inf(f32)), cos(cf32.init(-0xcp-4, -0x2.c5d4p+12)));
    // try std.testing.expectEqual(cf32.init(std.math.inf(f32), -0x3.373464p+108), cos(cf32.init(0x8p-152, 0xb.4p+4)));
    try std.testing.expectEqual(cf32.init(std.math.inf(f32), -std.math.inf(f32)), cos(cf32.init(0x8p-152, 0x5.ap+8)));
    try std.testing.expectEqual(cf32.init(std.math.inf(f32), -0x0p+0), cos(cf32.init(0x0p+0, 0x5.ap+8)));
    try std.testing.expectEqual(cf32.init(std.math.inf(f32), -std.math.inf(f32)), cos(cf32.init(0x8p-152, 0x5.8cap+12)));
    try std.testing.expectEqual(cf32.init(std.math.inf(f32), -0x0p+0), cos(cf32.init(0x0p+0, 0x5.8cap+12)));
    try std.testing.expectEqual(cf32.init(0x1p+0, -0x8p-152), cos(cf32.init(0x8p-32, 0x1p-120)));
    try std.testing.expectEqual(cf32.init(0x1p+0, -0x8p-152), cos(cf32.init(0x1p-120, 0x8p-32)));
    try std.testing.expectEqual(cf32.init(0x1.8b0756p+0, -0x4.b367fp-128), cos(cf32.init(0x4p-128, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.8b0756p+0, 0x4.b367fp-128), cos(cf32.init(-0x4p-128, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x5.55de7p+112, -0x2.aaef38p-36), cos(cf32.init(0x8p-152, 0x5p+4)));
    try std.testing.expectEqual(cf32.init(0x5.55de7p+112, 0x2.aaef38p-36), cos(cf32.init(-0x8p-152, 0x5p+4)));

    try std.testing.expectEqual(cf64.init(0x1p+0, -0x0p+0), cos(cf64.init(0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1p+0, 0x0p+0), cos(cf64.init(-0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1p+0, 0x0p+0), cos(cf64.init(0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1p+0, -0x0p+0), cos(cf64.init(-0x0p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.61b9a123b0d16p+0, -0x1.1788bbbdb89e7p+0), cos(cf64.init(0xcp-4, 0x1.4p+0)));
    try std.testing.expectEqual(cf64.init(-0x4.308b4f2d3143p+0, -0x9.1bf65bf77d798p+0), cos(cf64.init(-0x2p+0, -0x3p+0)));
    try std.testing.expectEqual(cf64.init(0xc.bbaa76be57908p+124, -0xb.dcb174d885198p+124), cos(cf64.init(0xcp-4, 0x5.98p+4)));
    try std.testing.expectEqual(cf64.init(0xc.bbaa76be57908p+124, 0xb.dcb174d885198p+124), cos(cf64.init(0xcp-4, -0x5.98p+4)));
    try std.testing.expectEqual(cf64.init(0xc.bbaa76be57908p+124, 0xb.dcb174d885198p+124), cos(cf64.init(-0xcp-4, 0x5.98p+4)));
    try std.testing.expectEqual(cf64.init(0xc.bbaa76be57908p+124, -0xb.dcb174d885198p+124), cos(cf64.init(-0xcp-4, -0x5.98p+4)));
    // try std.testing.expectEqual(cf64.init(0xb.fe39a718cb528p+1020, -0xb.2c35ffb60337p+1020), cos(cf64.init(0xcp-4, 0x2.c68p+8)));
    // try std.testing.expectEqual(cf64.init(0xb.fe39a718cb528p+1020, 0xb.2c35ffb60337p+1020), cos(cf64.init(0xcp-4, -0x2.c68p+8)));
    // try std.testing.expectEqual(cf64.init(0xb.fe39a718cb528p+1020, 0xb.2c35ffb60337p+1020), cos(cf64.init(-0xcp-4, 0x2.c68p+8)));
    // try std.testing.expectEqual(cf64.init(0xb.fe39a718cb528p+1020, -0xb.2c35ffb60337p+1020), cos(cf64.init(-0xcp-4, -0x2.c68p+8)));
    try std.testing.expectEqual(cf64.init(std.math.inf(f64), -std.math.inf(f64)), cos(cf64.init(0xcp-4, 0x2.c5d4p+12)));
    try std.testing.expectEqual(cf64.init(std.math.inf(f64), std.math.inf(f64)), cos(cf64.init(0xcp-4, -0x2.c5d4p+12)));
    try std.testing.expectEqual(cf64.init(std.math.inf(f64), std.math.inf(f64)), cos(cf64.init(-0xcp-4, 0x2.c5d4p+12)));
    try std.testing.expectEqual(cf64.init(std.math.inf(f64), -std.math.inf(f64)), cos(cf64.init(-0xcp-4, -0x2.c5d4p+12)));
    try std.testing.expectEqual(cf64.init(0x6.6e68cac762214p+256, -0x3.37346563b110ap+108), cos(cf64.init(0x8p-152, 0xb.4p+4)));
    try std.testing.expectEqual(cf64.init(std.math.inf(f64), -std.math.inf(f64)), cos(cf64.init(0x8p-152, 0x5.ap+8)));
    try std.testing.expectEqual(cf64.init(std.math.inf(f64), -0x0p+0), cos(cf64.init(0x0p+0, 0x5.ap+8)));
    try std.testing.expectEqual(cf64.init(std.math.inf(f64), -0x5.95116a53e849cp+1000), cos(cf64.init(0x4p-1076, 0x5.ap+8)));
    try std.testing.expectEqual(cf64.init(std.math.inf(f64), -std.math.inf(f64)), cos(cf64.init(0x8p-152, 0x5.8cap+12)));
    try std.testing.expectEqual(cf64.init(std.math.inf(f64), -0x0p+0), cos(cf64.init(0x0p+0, 0x5.8cap+12)));
    try std.testing.expectEqual(cf64.init(std.math.inf(f64), -std.math.inf(f64)), cos(cf64.init(0x4p-1076, 0x5.8cap+12)));
    try std.testing.expectEqual(cf64.init(0x1p+0, -0x8p-152), cos(cf64.init(0x8p-32, 0x1p-120)));
    try std.testing.expectEqual(cf64.init(0x1p+0, -0x4p-1076), cos(cf64.init(0x4p-956, 0x1p-120)));
    try std.testing.expectEqual(cf64.init(0x1p+0, -0x8p-152), cos(cf64.init(0x1p-120, 0x8p-32)));
    try std.testing.expectEqual(cf64.init(0x1p+0, -0x4p-1076), cos(cf64.init(0x1p-120, 0x4p-956)));
    try std.testing.expectEqual(cf64.init(0x1.8b07551d9f55p+0, -0x4.b367f113ae608p-128), cos(cf64.init(0x4p-128, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.8b07551d9f55p+0, -0x4.b367f113ae608p-1024), cos(cf64.init(0x4p-1024, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.8b07551d9f55p+0, -0x9.66cfe2275cc1p-972), cos(cf64.init(0x8p-972, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.8b07551d9f55p+0, 0x4.b367f113ae608p-128), cos(cf64.init(-0x4p-128, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.8b07551d9f55p+0, 0x4.b367f113ae608p-1024), cos(cf64.init(-0x4p-1024, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.8b07551d9f55p+0, 0x9.66cfe2275cc1p-972), cos(cf64.init(-0x8p-972, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x5.55de6e613cfacp+112, -0x2.aaef37309e7d6p-36), cos(cf64.init(0x8p-152, 0x5p+4)));
    try std.testing.expectEqual(cf64.init(0x5.55de6e613cfacp+112, -0x1.55779b984f3ebp-960), cos(cf64.init(0x4p-1076, 0x5p+4)));
    try std.testing.expectEqual(cf64.init(0x5.55de6e613cfacp+112, 0x2.aaef37309e7d6p-36), cos(cf64.init(-0x8p-152, 0x5p+4)));
    try std.testing.expectEqual(cf64.init(0x5.55de6e613cfacp+112, 0x1.55779b984f3ebp-960), cos(cf64.init(-0x4p-1076, 0x5p+4)));

    try std.testing.expectEqual(cf80.init(0x1p+0, -0x0p+0), cos(cf80.init(0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1p+0, 0x0p+0), cos(cf80.init(-0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1p+0, 0x0p+0), cos(cf80.init(0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1p+0, -0x0p+0), cos(cf80.init(-0x0p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.61b9a123b0d16764p+0, -0x1.1788bbbdb89e778ep+0), cos(cf80.init(0xcp-4, 0x1.4p+0)));
    try std.testing.expectEqual(cf80.init(-0x4.308b4f2d3143112p+0, -0x9.1bf65bf77d79608p+0), cos(cf80.init(-0x2p+0, -0x3p+0)));
    try std.testing.expectEqual(cf80.init(0xc.bbaa76be57905b4p+124, -0xb.dcb174d885199a5p+124), cos(cf80.init(0xcp-4, 0x5.98p+4)));
    try std.testing.expectEqual(cf80.init(0xc.bbaa76be57905b4p+124, 0xb.dcb174d885199a5p+124), cos(cf80.init(0xcp-4, -0x5.98p+4)));
    try std.testing.expectEqual(cf80.init(0xc.bbaa76be57905b4p+124, 0xb.dcb174d885199a5p+124), cos(cf80.init(-0xcp-4, 0x5.98p+4)));
    try std.testing.expectEqual(cf80.init(0xc.bbaa76be57905b4p+124, -0xb.dcb174d885199a5p+124), cos(cf80.init(-0xcp-4, -0x5.98p+4)));
    try std.testing.expectEqual(cf80.init(0xb.fe39a718cb52b27p+1020, -0xb.2c35ffb60337071p+1020), cos(cf80.init(0xcp-4, 0x2.c68p+8)));
    try std.testing.expectEqual(cf80.init(0xb.fe39a718cb52b27p+1020, 0xb.2c35ffb60337071p+1020), cos(cf80.init(0xcp-4, -0x2.c68p+8)));
    try std.testing.expectEqual(cf80.init(0xb.fe39a718cb52b27p+1020, 0xb.2c35ffb60337071p+1020), cos(cf80.init(-0xcp-4, 0x2.c68p+8)));
    try std.testing.expectEqual(cf80.init(0xb.fe39a718cb52b27p+1020, -0xb.2c35ffb60337071p+1020), cos(cf80.init(-0xcp-4, -0x2.c68p+8)));
    try std.testing.expectEqual(cf80.init(0xc.1aee93505374b41p+16380, -0xb.46f43ab104a6259p+16380), cos(cf80.init(0xcp-4, 0x2.c5d4p+12)));
    try std.testing.expectEqual(cf80.init(0xc.1aee93505374b41p+16380, 0xb.46f43ab104a6259p+16380), cos(cf80.init(0xcp-4, -0x2.c5d4p+12)));
    try std.testing.expectEqual(cf80.init(0xc.1aee93505374b41p+16380, 0xb.46f43ab104a6259p+16380), cos(cf80.init(-0xcp-4, 0x2.c5d4p+12)));
    try std.testing.expectEqual(cf80.init(0xc.1aee93505374b41p+16380, -0xb.46f43ab104a6259p+16380), cos(cf80.init(-0xcp-4, -0x2.c5d4p+12)));
    try std.testing.expectEqual(cf80.init(0x6.6e68cac76221537p+256, -0x3.37346563b110a9b8p+108), cos(cf80.init(0x8p-152, 0xb.4p+4)));
    try std.testing.expectEqual(cf80.init(0x1.65445a94fa1268c4p+2076, -0xb.2a22d4a7d093462p+1924), cos(cf80.init(0x8p-152, 0x5.ap+8)));
    try std.testing.expectEqual(cf80.init(0x1.65445a94fa1268c4p+2076, -0x0p+0), cos(cf80.init(0x0p+0, 0x5.ap+8)));
    try std.testing.expectEqual(cf80.init(0x1.65445a94fa1268c4p+2076, -0x5.95116a53e849a31p+1000), cos(cf80.init(0x4p-1076, 0x5.ap+8)));
    try std.testing.expectEqual(cf80.init(std.math.inf(f80), -std.math.inf(f80)), cos(cf80.init(0x8p-152, 0x5.8cap+12)));
    try std.testing.expectEqual(cf80.init(std.math.inf(f80), -0x0p+0), cos(cf80.init(0x0p+0, 0x5.8cap+12)));
    try std.testing.expectEqual(cf80.init(std.math.inf(f80), -std.math.inf(f80)), cos(cf80.init(0x4p-1076, 0x5.8cap+12)));
    try std.testing.expectEqual(cf80.init(std.math.inf(f80), -0x2.bf701efd42c88e8p+16356), cos(cf80.init(0x4p-16436, 0x5.8cap+12)));
    try std.testing.expectEqual(cf80.init(0xf.fffffffffffffep-4, -0x7.ffffffffffffffa8p-152), cos(cf80.init(0x8p-32, 0x1p-120)));
    try std.testing.expectEqual(cf80.init(0x1p+0, -0x4p-1076), cos(cf80.init(0x4p-956, 0x1p-120)));
    try std.testing.expectEqual(cf80.init(0x1p+0, -0x8p-16448), cos(cf80.init(0x8p-16328, 0x1p-120)));
    // try std.testing.expectEqual(cf80.init(0x1p+0, -0x8p-16448), cos(cf80.init(0x4p-16328, 0x1p-120)));
    try std.testing.expectEqual(cf80.init(0x1p+0, -0x0p+0), cos(cf80.init(0x4p-16376, 0x1p-120)));
    try std.testing.expectEqual(cf80.init(0x1.000000000000002p+0, -0x8.000000000000005p-152), cos(cf80.init(0x1p-120, 0x8p-32)));
    try std.testing.expectEqual(cf80.init(0x1p+0, -0x4p-1076), cos(cf80.init(0x1p-120, 0x4p-956)));
    try std.testing.expectEqual(cf80.init(0x1p+0, -0x8p-16448), cos(cf80.init(0x1p-120, 0x8p-16328)));
    try std.testing.expectEqual(cf80.init(0x1p+0, -0x0p+0), cos(cf80.init(0x1p-120, 0x4p-16328)));
    try std.testing.expectEqual(cf80.init(0x1p+0, -0x0p+0), cos(cf80.init(0x1p-120, 0x4p-16376)));
    try std.testing.expectEqual(cf80.init(0x1.8b07551d9f5504c2p+0, -0x4.b367f113ae6096ap-128), cos(cf80.init(0x4p-128, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.8b07551d9f5504c2p+0, -0x4.b367f113ae6096ap-1024), cos(cf80.init(0x4p-1024, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.8b07551d9f5504c2p+0, -0x4.b367f113ae6096ap-16384), cos(cf80.init(0x4p-16384, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.8b07551d9f5504c2p+0, -0x2.59b3f889d7304b5p-16384), cos(cf80.init(0x2p-16384, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.8b07551d9f5504c2p+0, -0x9.66cfe2275cc12d4p-972), cos(cf80.init(0x8p-972, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.8b07551d9f5504c2p+0, 0x4.b367f113ae6096ap-128), cos(cf80.init(-0x4p-128, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.8b07551d9f5504c2p+0, 0x4.b367f113ae6096ap-1024), cos(cf80.init(-0x4p-1024, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.8b07551d9f5504c2p+0, 0x4.b367f113ae6096ap-16384), cos(cf80.init(-0x4p-16384, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.8b07551d9f5504c2p+0, 0x2.59b3f889d7304b5p-16384), cos(cf80.init(-0x2p-16384, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.8b07551d9f5504c2p+0, 0x9.66cfe2275cc12d4p-972), cos(cf80.init(-0x8p-972, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x5.55de6e613cfacf2p+112, -0x2.aaef37309e7d679p-36), cos(cf80.init(0x8p-152, 0x5p+4)));
    try std.testing.expectEqual(cf80.init(0x5.55de6e613cfacf2p+112, -0x1.55779b984f3eb3c8p-960), cos(cf80.init(0x4p-1076, 0x5p+4)));
    try std.testing.expectEqual(cf80.init(0x5.55de6e613cfacf2p+112, -0x2.aaef37309e7d679p-16332), cos(cf80.init(0x8p-16448, 0x5p+4)));
    try std.testing.expectEqual(cf80.init(0x5.55de6e613cfacf2p+112, 0x2.aaef37309e7d679p-36), cos(cf80.init(-0x8p-152, 0x5p+4)));
    try std.testing.expectEqual(cf80.init(0x5.55de6e613cfacf2p+112, 0x1.55779b984f3eb3c8p-960), cos(cf80.init(-0x4p-1076, 0x5p+4)));
    try std.testing.expectEqual(cf80.init(0x5.55de6e613cfacf2p+112, 0x2.aaef37309e7d679p-16332), cos(cf80.init(-0x8p-16448, 0x5p+4)));

    try std.testing.expectEqual(cf128.init(0x1p+0, -0x0p+0), cos(cf128.init(0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1p+0, 0x0p+0), cos(cf128.init(-0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1p+0, 0x0p+0), cos(cf128.init(0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1p+0, -0x0p+0), cos(cf128.init(-0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.61b9a123b0d167648057acedbf1ap+0, -0x1.1788bbbdb89e778eb7bb390cace5p+0), cos(cf128.init(0xcp-4, 0x1.4p+0)));
    // try std.testing.expectEqual(cf128.init(-0x4.308b4f2d3143111fca0eea4bcabp+0, -0x9.1bf65bf77d7960796b4b344b6e58p+0), cos(cf128.init(-0x2p+0, -0x3p+0)));
    // try std.testing.expectEqual(cf128.init(0xc.bbaa76be57905b422fc94309d298p+124, -0xb.dcb174d885199a507e02ee9c08c8p+124), cos(cf128.init(0xcp-4, 0x5.98p+4)));
    // try std.testing.expectEqual(cf128.init(0xc.bbaa76be57905b422fc94309d298p+124, 0xb.dcb174d885199a507e02ee9c08c8p+124), cos(cf128.init(0xcp-4, -0x5.98p+4)));
    // try std.testing.expectEqual(cf128.init(0xc.bbaa76be57905b422fc94309d298p+124, 0xb.dcb174d885199a507e02ee9c08c8p+124), cos(cf128.init(-0xcp-4, 0x5.98p+4)));
    // try std.testing.expectEqual(cf128.init(0xc.bbaa76be57905b422fc94309d298p+124, -0xb.dcb174d885199a507e02ee9c08c8p+124), cos(cf128.init(-0xcp-4, -0x5.98p+4)));
    // try std.testing.expectEqual(cf128.init(0xb.fe39a718cb52b2731922dd2e0be8p+1020, -0xb.2c35ffb60337070b74839cd40a3p+1020), cos(cf128.init(0xcp-4, 0x2.c68p+8)));
    // try std.testing.expectEqual(cf128.init(0xb.fe39a718cb52b2731922dd2e0be8p+1020, 0xb.2c35ffb60337070b74839cd40a3p+1020), cos(cf128.init(0xcp-4, -0x2.c68p+8)));
    // try std.testing.expectEqual(cf128.init(0xb.fe39a718cb52b2731922dd2e0be8p+1020, 0xb.2c35ffb60337070b74839cd40a3p+1020), cos(cf128.init(-0xcp-4, 0x2.c68p+8)));
    // try std.testing.expectEqual(cf128.init(0xb.fe39a718cb52b2731922dd2e0be8p+1020, -0xb.2c35ffb60337070b74839cd40a3p+1020), cos(cf128.init(-0xcp-4, -0x2.c68p+8)));
    // try std.testing.expectEqual(cf128.init(0xc.1aee93505374b41257ed141f4e1p+16380, -0xb.46f43ab104a625930c1b0cbd6238p+16380), cos(cf128.init(0xcp-4, 0x2.c5d4p+12)));
    // try std.testing.expectEqual(cf128.init(0xc.1aee93505374b41257ed141f4e1p+16380, 0xb.46f43ab104a625930c1b0cbd6238p+16380), cos(cf128.init(0xcp-4, -0x2.c5d4p+12)));
    // try std.testing.expectEqual(cf128.init(0xc.1aee93505374b41257ed141f4e1p+16380, 0xb.46f43ab104a625930c1b0cbd6238p+16380), cos(cf128.init(-0xcp-4, 0x2.c5d4p+12)));
    // try std.testing.expectEqual(cf128.init(0xc.1aee93505374b41257ed141f4e1p+16380, -0xb.46f43ab104a625930c1b0cbd6238p+16380), cos(cf128.init(-0xcp-4, -0x2.c5d4p+12)));
    try std.testing.expectEqual(cf128.init(0x6.6e68cac762215372ccfb2fd63cf4p+256, -0x3.37346563b110a9b9667d97eb1e7ap+108), cos(cf128.init(0x8p-152, 0xb.4p+4)));
    try std.testing.expectEqual(cf128.init(0x1.65445a94fa1268c47ee67b88bb6ep+2076, -0xb.2a22d4a7d0934623f733dc45db7p+1924), cos(cf128.init(0x8p-152, 0x5.ap+8)));
    try std.testing.expectEqual(cf128.init(0x1.65445a94fa1268c47ee67b88bb6ep+2076, -0x0p+0), cos(cf128.init(0x0p+0, 0x5.ap+8)));
    try std.testing.expectEqual(cf128.init(0x1.65445a94fa1268c47ee67b88bb6ep+2076, -0x5.95116a53e849a311fb99ee22edb8p+1000), cos(cf128.init(0x4p-1076, 0x5.ap+8)));
    try std.testing.expectEqual(cf128.init(std.math.inf(f128), -std.math.inf(f128)), cos(cf128.init(0x8p-152, 0x5.8cap+12)));
    try std.testing.expectEqual(cf128.init(std.math.inf(f128), -0x0p+0), cos(cf128.init(0x0p+0, 0x5.8cap+12)));
    try std.testing.expectEqual(cf128.init(std.math.inf(f128), -std.math.inf(f128)), cos(cf128.init(0x4p-1076, 0x5.8cap+12)));
    // try std.testing.expectEqual(cf128.init(std.math.inf(f128), -0x2.bf701efd42c88e7efc2fdf7765fcp+16356), cos(cf128.init(0x4p-16436, 0x5.8cap+12)));
    try std.testing.expectEqual(cf128.init(0xf.fffffffffffffep-4, -0x7.ffffffffffffffaaaaaaaaaaaaacp-152), cos(cf128.init(0x8p-32, 0x1p-120)));
    try std.testing.expectEqual(cf128.init(0x1p+0, -0x4p-1076), cos(cf128.init(0x4p-956, 0x1p-120)));
    try std.testing.expectEqual(cf128.init(0x1p+0, -0x8p-16448), cos(cf128.init(0x8p-16328, 0x1p-120)));
    try std.testing.expectEqual(cf128.init(0x1p+0, -0x4p-16448), cos(cf128.init(0x4p-16328, 0x1p-120)));
    try std.testing.expectEqual(cf128.init(0x1p+0, -0x4p-16496), cos(cf128.init(0x4p-16376, 0x1p-120)));
    try std.testing.expectEqual(cf128.init(0x1.000000000000002p+0, -0x8.0000000000000055555555555558p-152), cos(cf128.init(0x1p-120, 0x8p-32)));
    try std.testing.expectEqual(cf128.init(0x1p+0, -0x4p-1076), cos(cf128.init(0x1p-120, 0x4p-956)));
    try std.testing.expectEqual(cf128.init(0x1p+0, -0x8p-16448), cos(cf128.init(0x1p-120, 0x8p-16328)));
    try std.testing.expectEqual(cf128.init(0x1p+0, -0x4p-16448), cos(cf128.init(0x1p-120, 0x4p-16328)));
    try std.testing.expectEqual(cf128.init(0x1p+0, -0x4p-16496), cos(cf128.init(0x1p-120, 0x4p-16376)));
    // try std.testing.expectEqual(cf128.init(0x1.8b07551d9f5504c2bd28100196a5p+0, -0x4.b367f113ae6096a0092521fc194p-128), cos(cf128.init(0x4p-128, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.8b07551d9f5504c2bd28100196a5p+0, -0x4.b367f113ae6096a0092521fc194p-1024), cos(cf128.init(0x4p-1024, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.8b07551d9f5504c2bd28100196a5p+0, -0x4.b367f113ae6096a0092521fc194p-16384), cos(cf128.init(0x4p-16384, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.8b07551d9f5504c2bd28100196a5p+0, -0x2.59b3f889d7304b50049290fe0cap-16384), cos(cf128.init(0x2p-16384, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.8b07551d9f5504c2bd28100196a5p+0, -0x9.66cfe2275cc12d40124a43f8328p-972), cos(cf128.init(0x8p-972, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.8b07551d9f5504c2bd28100196a5p+0, 0x4.b367f113ae6096a0092521fc194p-128), cos(cf128.init(-0x4p-128, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.8b07551d9f5504c2bd28100196a5p+0, 0x4.b367f113ae6096a0092521fc194p-1024), cos(cf128.init(-0x4p-1024, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.8b07551d9f5504c2bd28100196a5p+0, 0x4.b367f113ae6096a0092521fc194p-16384), cos(cf128.init(-0x4p-16384, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.8b07551d9f5504c2bd28100196a5p+0, 0x2.59b3f889d7304b50049290fe0cap-16384), cos(cf128.init(-0x2p-16384, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.8b07551d9f5504c2bd28100196a5p+0, 0x9.66cfe2275cc12d40124a43f8328p-972), cos(cf128.init(-0x8p-972, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x5.55de6e613cfacf22940ed2a38924p+112, -0x2.aaef37309e7d67914a076951c492p-36), cos(cf128.init(0x8p-152, 0x5p+4)));
    try std.testing.expectEqual(cf128.init(0x5.55de6e613cfacf22940ed2a38924p+112, -0x1.55779b984f3eb3c8a503b4a8e249p-960), cos(cf128.init(0x4p-1076, 0x5p+4)));
    try std.testing.expectEqual(cf128.init(0x5.55de6e613cfacf22940ed2a38924p+112, -0x2.aaef37309e7d67914a076951c492p-16332), cos(cf128.init(0x8p-16448, 0x5p+4)));
    try std.testing.expectEqual(cf128.init(0x5.55de6e613cfacf22940ed2a38924p+112, -0x1.55779b984f3eb3c8a503b4a8e249p-16332), cos(cf128.init(0x4p-16448, 0x5p+4)));
    try std.testing.expectEqual(cf128.init(0x5.55de6e613cfacf22940ed2a38924p+112, -0x1.55779b984f3eb3c8a503b4a8e249p-16380), cos(cf128.init(0x4p-16496, 0x5p+4)));
    try std.testing.expectEqual(cf128.init(0x5.55de6e613cfacf22940ed2a38924p+112, 0x2.aaef37309e7d67914a076951c492p-36), cos(cf128.init(-0x8p-152, 0x5p+4)));
    try std.testing.expectEqual(cf128.init(0x5.55de6e613cfacf22940ed2a38924p+112, 0x1.55779b984f3eb3c8a503b4a8e249p-960), cos(cf128.init(-0x4p-1076, 0x5p+4)));
    try std.testing.expectEqual(cf128.init(0x5.55de6e613cfacf22940ed2a38924p+112, 0x2.aaef37309e7d67914a076951c492p-16332), cos(cf128.init(-0x8p-16448, 0x5p+4)));
    try std.testing.expectEqual(cf128.init(0x5.55de6e613cfacf22940ed2a38924p+112, 0x1.55779b984f3eb3c8a503b4a8e249p-16332), cos(cf128.init(-0x4p-16448, 0x5p+4)));
    try std.testing.expectEqual(cf128.init(0x5.55de6e613cfacf22940ed2a38924p+112, 0x1.55779b984f3eb3c8a503b4a8e249p-16380), cos(cf128.init(-0x4p-16496, 0x5p+4)));
}
