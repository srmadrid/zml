const std = @import("std");
const zml = @import("zml");
const cf32 = zml.cf32;
const cf64 = zml.cf64;
const cf80 = zml.cf80;
const cf128 = zml.cf128;
const sinh = zml.cfloat.sinh;

test sinh {
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x0p+0), sinh(cf32.init(0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, 0x0p+0), sinh(cf32.init(-0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0x0p+0), sinh(cf32.init(0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, -0x0p+0), sinh(cf32.init(-0x0p+0, -0x0p+0)));
// try std.testing.expectEqual(cf32.init(0x4.26126p-4, 0x1.3a87cap+0), sinh(cf32.init(0xcp-4, 0x1.4p+0)));
// try std.testing.expectEqual(cf32.init(0x3.972f3cp+0, -0x8.7ea72p-4), sinh(cf32.init(-0x2p+0, -0x3p+0)));
// try std.testing.expectEqual(cf32.init(0xc.bbaa7p+124, 0xb.dcb17p+124), sinh(cf32.init(0x5.98p+4, 0xcp-4)));
// try std.testing.expectEqual(cf32.init(-0xc.bbaa7p+124, 0xb.dcb17p+124), sinh(cf32.init(-0x5.98p+4, 0xcp-4)));
// try std.testing.expectEqual(cf32.init(0xc.bbaa7p+124, -0xb.dcb17p+124), sinh(cf32.init(0x5.98p+4, -0xcp-4)));
// try std.testing.expectEqual(cf32.init(-0xc.bbaa7p+124, -0xb.dcb17p+124), sinh(cf32.init(-0x5.98p+4, -0xcp-4)));
    try std.testing.expectEqual(cf32.init(std.math.inf(f32), std.math.inf(f32)), sinh(cf32.init(0x2.c68p+8, 0xcp-4)));
    try std.testing.expectEqual(cf32.init(-std.math.inf(f32), std.math.inf(f32)), sinh(cf32.init(-0x2.c68p+8, 0xcp-4)));
    try std.testing.expectEqual(cf32.init(std.math.inf(f32), -std.math.inf(f32)), sinh(cf32.init(0x2.c68p+8, -0xcp-4)));
    try std.testing.expectEqual(cf32.init(-std.math.inf(f32), -std.math.inf(f32)), sinh(cf32.init(-0x2.c68p+8, -0xcp-4)));
    try std.testing.expectEqual(cf32.init(std.math.inf(f32), std.math.inf(f32)), sinh(cf32.init(0x2.c5d4p+12, 0xcp-4)));
    try std.testing.expectEqual(cf32.init(-std.math.inf(f32), std.math.inf(f32)), sinh(cf32.init(-0x2.c5d4p+12, 0xcp-4)));
    try std.testing.expectEqual(cf32.init(std.math.inf(f32), -std.math.inf(f32)), sinh(cf32.init(0x2.c5d4p+12, -0xcp-4)));
    try std.testing.expectEqual(cf32.init(-std.math.inf(f32), -std.math.inf(f32)), sinh(cf32.init(-0x2.c5d4p+12, -0xcp-4)));
    try std.testing.expectEqual(cf32.init(std.math.inf(f32), std.math.inf(f32)), sinh(cf32.init(0xf.424p+16, 0xcp-4)));
    try std.testing.expectEqual(cf32.init(-std.math.inf(f32), std.math.inf(f32)), sinh(cf32.init(-0xf.424p+16, 0xcp-4)));
    try std.testing.expectEqual(cf32.init(std.math.inf(f32), -std.math.inf(f32)), sinh(cf32.init(0xf.424p+16, -0xcp-4)));
    try std.testing.expectEqual(cf32.init(-std.math.inf(f32), -std.math.inf(f32)), sinh(cf32.init(-0xf.424p+16, -0xcp-4)));
// try std.testing.expectEqual(cf32.init(std.math.inf(f32), 0x3.373464p+108), sinh(cf32.init(0xb.4p+4, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(std.math.inf(f32), std.math.inf(f32)), sinh(cf32.init(0x5.ap+8, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(std.math.inf(f32), 0x0p+0), sinh(cf32.init(0x5.ap+8, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(std.math.inf(f32), std.math.inf(f32)), sinh(cf32.init(0x5.8cap+12, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(std.math.inf(f32), 0x0p+0), sinh(cf32.init(0x5.8cap+12, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.2cd9fcp+0, 0x6.2c1d58p-128), sinh(cf32.init(0x1p+0, 0x4p-128)));
    try std.testing.expectEqual(cf32.init(0x1.2cd9fcp+0, -0x6.2c1d58p-128), sinh(cf32.init(0x1p+0, -0x4p-128)));
    try std.testing.expectEqual(cf32.init(0x5.55de7p+112, 0x2.aaef38p-36), sinh(cf32.init(0x5p+4, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x5.55de7p+112, -0x2.aaef38p-36), sinh(cf32.init(0x5p+4, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x8p-152, 0x4p-128), sinh(cf32.init(0x8p-152, 0x4p-128)));
    try std.testing.expectEqual(cf32.init(0x4p-128, 0x8p-152), sinh(cf32.init(0x4p-128, 0x8p-152)));

    try std.testing.expectEqual(cf64.init(0x0p+0, 0x0p+0), sinh(cf64.init(0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0x0p+0), sinh(cf64.init(-0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x0p+0), sinh(cf64.init(0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0x0p+0), sinh(cf64.init(-0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x4.26125c8517d7cp-4, 0x1.3a87cacbb996fp+0), sinh(cf64.init(0xcp-4, 0x1.4p+0)));
// try std.testing.expectEqual(cf64.init(0x3.972f3db02a218p+0, -0x8.7ea71be31b65p-4), sinh(cf64.init(-0x2p+0, -0x3p+0)));
    try std.testing.expectEqual(cf64.init(0xc.bbaa76be57908p+124, 0xb.dcb174d885198p+124), sinh(cf64.init(0x5.98p+4, 0xcp-4)));
    try std.testing.expectEqual(cf64.init(-0xc.bbaa76be57908p+124, 0xb.dcb174d885198p+124), sinh(cf64.init(-0x5.98p+4, 0xcp-4)));
    try std.testing.expectEqual(cf64.init(0xc.bbaa76be57908p+124, -0xb.dcb174d885198p+124), sinh(cf64.init(0x5.98p+4, -0xcp-4)));
    try std.testing.expectEqual(cf64.init(-0xc.bbaa76be57908p+124, -0xb.dcb174d885198p+124), sinh(cf64.init(-0x5.98p+4, -0xcp-4)));
// try std.testing.expectEqual(cf64.init(0xb.fe39a718cb528p+1020, 0xb.2c35ffb60337p+1020), sinh(cf64.init(0x2.c68p+8, 0xcp-4)));
// try std.testing.expectEqual(cf64.init(-0xb.fe39a718cb528p+1020, 0xb.2c35ffb60337p+1020), sinh(cf64.init(-0x2.c68p+8, 0xcp-4)));
// try std.testing.expectEqual(cf64.init(0xb.fe39a718cb528p+1020, -0xb.2c35ffb60337p+1020), sinh(cf64.init(0x2.c68p+8, -0xcp-4)));
// try std.testing.expectEqual(cf64.init(-0xb.fe39a718cb528p+1020, -0xb.2c35ffb60337p+1020), sinh(cf64.init(-0x2.c68p+8, -0xcp-4)));
    try std.testing.expectEqual(cf64.init(std.math.inf(f64), std.math.inf(f64)), sinh(cf64.init(0x2.c5d4p+12, 0xcp-4)));
    try std.testing.expectEqual(cf64.init(-std.math.inf(f64), std.math.inf(f64)), sinh(cf64.init(-0x2.c5d4p+12, 0xcp-4)));
    try std.testing.expectEqual(cf64.init(std.math.inf(f64), -std.math.inf(f64)), sinh(cf64.init(0x2.c5d4p+12, -0xcp-4)));
    try std.testing.expectEqual(cf64.init(-std.math.inf(f64), -std.math.inf(f64)), sinh(cf64.init(-0x2.c5d4p+12, -0xcp-4)));
    try std.testing.expectEqual(cf64.init(std.math.inf(f64), std.math.inf(f64)), sinh(cf64.init(0xf.424p+16, 0xcp-4)));
    try std.testing.expectEqual(cf64.init(-std.math.inf(f64), std.math.inf(f64)), sinh(cf64.init(-0xf.424p+16, 0xcp-4)));
    try std.testing.expectEqual(cf64.init(std.math.inf(f64), -std.math.inf(f64)), sinh(cf64.init(0xf.424p+16, -0xcp-4)));
    try std.testing.expectEqual(cf64.init(-std.math.inf(f64), -std.math.inf(f64)), sinh(cf64.init(-0xf.424p+16, -0xcp-4)));
    try std.testing.expectEqual(cf64.init(0x6.6e68cac762214p+256, 0x3.37346563b110ap+108), sinh(cf64.init(0xb.4p+4, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(std.math.inf(f64), std.math.inf(f64)), sinh(cf64.init(0x5.ap+8, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(std.math.inf(f64), 0x0p+0), sinh(cf64.init(0x5.ap+8, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(std.math.inf(f64), 0x5.95116a53e849cp+1000), sinh(cf64.init(0x5.ap+8, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(std.math.inf(f64), std.math.inf(f64)), sinh(cf64.init(0x5.8cap+12, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(std.math.inf(f64), 0x0p+0), sinh(cf64.init(0x5.8cap+12, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(std.math.inf(f64), std.math.inf(f64)), sinh(cf64.init(0x5.8cap+12, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.2cd9fc44eb982p+0, 0x6.2c1d54767d54p-128), sinh(cf64.init(0x1p+0, 0x4p-128)));
    try std.testing.expectEqual(cf64.init(0x1.2cd9fc44eb982p+0, 0x6.2c1d54767d54p-1024), sinh(cf64.init(0x1p+0, 0x4p-1024)));
    try std.testing.expectEqual(cf64.init(0x1.2cd9fc44eb982p+0, 0xc.583aa8ecfaa8p-972), sinh(cf64.init(0x1p+0, 0x8p-972)));
    try std.testing.expectEqual(cf64.init(0x1.2cd9fc44eb982p+0, -0x6.2c1d54767d54p-128), sinh(cf64.init(0x1p+0, -0x4p-128)));
    try std.testing.expectEqual(cf64.init(0x1.2cd9fc44eb982p+0, -0x6.2c1d54767d54p-1024), sinh(cf64.init(0x1p+0, -0x4p-1024)));
    try std.testing.expectEqual(cf64.init(0x1.2cd9fc44eb982p+0, -0xc.583aa8ecfaa8p-972), sinh(cf64.init(0x1p+0, -0x8p-972)));
    try std.testing.expectEqual(cf64.init(0x5.55de6e613cfacp+112, 0x2.aaef37309e7d6p-36), sinh(cf64.init(0x5p+4, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x5.55de6e613cfacp+112, 0x1.55779b984f3ebp-960), sinh(cf64.init(0x5p+4, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x5.55de6e613cfacp+112, -0x2.aaef37309e7d6p-36), sinh(cf64.init(0x5p+4, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x5.55de6e613cfacp+112, -0x1.55779b984f3ebp-960), sinh(cf64.init(0x5p+4, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x8p-152, 0x4p-128), sinh(cf64.init(0x8p-152, 0x4p-128)));
    try std.testing.expectEqual(cf64.init(0x8p-152, 0x4p-1024), sinh(cf64.init(0x8p-152, 0x4p-1024)));
    try std.testing.expectEqual(cf64.init(0x8p-152, 0x8p-972), sinh(cf64.init(0x8p-152, 0x8p-972)));
    try std.testing.expectEqual(cf64.init(0x4p-1076, 0x4p-128), sinh(cf64.init(0x4p-1076, 0x4p-128)));
    try std.testing.expectEqual(cf64.init(0x4p-1076, 0x4p-1024), sinh(cf64.init(0x4p-1076, 0x4p-1024)));
    try std.testing.expectEqual(cf64.init(0x4p-1076, 0x8p-972), sinh(cf64.init(0x4p-1076, 0x8p-972)));
    try std.testing.expectEqual(cf64.init(0x4p-128, 0x8p-152), sinh(cf64.init(0x4p-128, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x4p-128, 0x4p-1076), sinh(cf64.init(0x4p-128, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x4p-1024, 0x8p-152), sinh(cf64.init(0x4p-1024, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x4p-1024, 0x4p-1076), sinh(cf64.init(0x4p-1024, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x8p-972, 0x8p-152), sinh(cf64.init(0x8p-972, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x8p-972, 0x4p-1076), sinh(cf64.init(0x8p-972, 0x4p-1076)));

    try std.testing.expectEqual(cf80.init(0x0p+0, 0x0p+0), sinh(cf80.init(0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0x0p+0), sinh(cf80.init(-0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x0p+0), sinh(cf80.init(0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0x0p+0), sinh(cf80.init(-0x0p+0, -0x0p+0)));
// try std.testing.expectEqual(cf80.init(0x4.26125c8517d7a6a8p-4, 0x1.3a87cacbb996ee2p+0), sinh(cf80.init(0xcp-4, 0x1.4p+0)));
    try std.testing.expectEqual(cf80.init(0x3.972f3db02a218588p+0, -0x8.7ea71be31b64c36p-4), sinh(cf80.init(-0x2p+0, -0x3p+0)));
    try std.testing.expectEqual(cf80.init(0xc.bbaa76be57905b4p+124, 0xb.dcb174d885199a5p+124), sinh(cf80.init(0x5.98p+4, 0xcp-4)));
    try std.testing.expectEqual(cf80.init(-0xc.bbaa76be57905b4p+124, 0xb.dcb174d885199a5p+124), sinh(cf80.init(-0x5.98p+4, 0xcp-4)));
    try std.testing.expectEqual(cf80.init(0xc.bbaa76be57905b4p+124, -0xb.dcb174d885199a5p+124), sinh(cf80.init(0x5.98p+4, -0xcp-4)));
    try std.testing.expectEqual(cf80.init(-0xc.bbaa76be57905b4p+124, -0xb.dcb174d885199a5p+124), sinh(cf80.init(-0x5.98p+4, -0xcp-4)));
    try std.testing.expectEqual(cf80.init(0xb.fe39a718cb52b27p+1020, 0xb.2c35ffb60337071p+1020), sinh(cf80.init(0x2.c68p+8, 0xcp-4)));
    try std.testing.expectEqual(cf80.init(-0xb.fe39a718cb52b27p+1020, 0xb.2c35ffb60337071p+1020), sinh(cf80.init(-0x2.c68p+8, 0xcp-4)));
    try std.testing.expectEqual(cf80.init(0xb.fe39a718cb52b27p+1020, -0xb.2c35ffb60337071p+1020), sinh(cf80.init(0x2.c68p+8, -0xcp-4)));
    try std.testing.expectEqual(cf80.init(-0xb.fe39a718cb52b27p+1020, -0xb.2c35ffb60337071p+1020), sinh(cf80.init(-0x2.c68p+8, -0xcp-4)));
    try std.testing.expectEqual(cf80.init(0xc.1aee93505374b41p+16380, 0xb.46f43ab104a6259p+16380), sinh(cf80.init(0x2.c5d4p+12, 0xcp-4)));
    try std.testing.expectEqual(cf80.init(-0xc.1aee93505374b41p+16380, 0xb.46f43ab104a6259p+16380), sinh(cf80.init(-0x2.c5d4p+12, 0xcp-4)));
    try std.testing.expectEqual(cf80.init(0xc.1aee93505374b41p+16380, -0xb.46f43ab104a6259p+16380), sinh(cf80.init(0x2.c5d4p+12, -0xcp-4)));
    try std.testing.expectEqual(cf80.init(-0xc.1aee93505374b41p+16380, -0xb.46f43ab104a6259p+16380), sinh(cf80.init(-0x2.c5d4p+12, -0xcp-4)));
    try std.testing.expectEqual(cf80.init(std.math.inf(f80), std.math.inf(f80)), sinh(cf80.init(0xf.424p+16, 0xcp-4)));
    try std.testing.expectEqual(cf80.init(-std.math.inf(f80), std.math.inf(f80)), sinh(cf80.init(-0xf.424p+16, 0xcp-4)));
    try std.testing.expectEqual(cf80.init(std.math.inf(f80), -std.math.inf(f80)), sinh(cf80.init(0xf.424p+16, -0xcp-4)));
    try std.testing.expectEqual(cf80.init(-std.math.inf(f80), -std.math.inf(f80)), sinh(cf80.init(-0xf.424p+16, -0xcp-4)));
    try std.testing.expectEqual(cf80.init(0x6.6e68cac76221537p+256, 0x3.37346563b110a9b8p+108), sinh(cf80.init(0xb.4p+4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.65445a94fa1268c4p+2076, 0xb.2a22d4a7d093462p+1924), sinh(cf80.init(0x5.ap+8, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.65445a94fa1268c4p+2076, 0x0p+0), sinh(cf80.init(0x5.ap+8, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.65445a94fa1268c4p+2076, 0x5.95116a53e849a31p+1000), sinh(cf80.init(0x5.ap+8, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(std.math.inf(f80), std.math.inf(f80)), sinh(cf80.init(0x5.8cap+12, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(std.math.inf(f80), 0x0p+0), sinh(cf80.init(0x5.8cap+12, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(std.math.inf(f80), std.math.inf(f80)), sinh(cf80.init(0x5.8cap+12, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(std.math.inf(f80), 0x2.bf701efd42c88e8p+16356), sinh(cf80.init(0x5.8cap+12, 0x4p-16436)));
    try std.testing.expectEqual(cf80.init(0x1.2cd9fc44eb9825a8p+0, 0x6.2c1d54767d541308p-128), sinh(cf80.init(0x1p+0, 0x4p-128)));
    try std.testing.expectEqual(cf80.init(0x1.2cd9fc44eb9825a8p+0, 0x6.2c1d54767d541308p-1024), sinh(cf80.init(0x1p+0, 0x4p-1024)));
    try std.testing.expectEqual(cf80.init(0x1.2cd9fc44eb9825a8p+0, 0x6.2c1d54767d541308p-16384), sinh(cf80.init(0x1p+0, 0x4p-16384)));
// try std.testing.expectEqual(cf80.init(0x1.2cd9fc44eb9825a8p+0, 0x3.160eaa3b3eaa0988p-16384), sinh(cf80.init(0x1p+0, 0x2p-16384)));
    try std.testing.expectEqual(cf80.init(0x1.2cd9fc44eb9825a8p+0, 0xc.583aa8ecfaa8261p-972), sinh(cf80.init(0x1p+0, 0x8p-972)));
    try std.testing.expectEqual(cf80.init(0x1.2cd9fc44eb9825a8p+0, -0x6.2c1d54767d541308p-128), sinh(cf80.init(0x1p+0, -0x4p-128)));
    try std.testing.expectEqual(cf80.init(0x1.2cd9fc44eb9825a8p+0, -0x6.2c1d54767d541308p-1024), sinh(cf80.init(0x1p+0, -0x4p-1024)));
    try std.testing.expectEqual(cf80.init(0x1.2cd9fc44eb9825a8p+0, -0x6.2c1d54767d541308p-16384), sinh(cf80.init(0x1p+0, -0x4p-16384)));
// try std.testing.expectEqual(cf80.init(0x1.2cd9fc44eb9825a8p+0, -0x3.160eaa3b3eaa0988p-16384), sinh(cf80.init(0x1p+0, -0x2p-16384)));
    try std.testing.expectEqual(cf80.init(0x1.2cd9fc44eb9825a8p+0, -0xc.583aa8ecfaa8261p-972), sinh(cf80.init(0x1p+0, -0x8p-972)));
    try std.testing.expectEqual(cf80.init(0x5.55de6e613cfacf2p+112, 0x2.aaef37309e7d679p-36), sinh(cf80.init(0x5p+4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x5.55de6e613cfacf2p+112, 0x1.55779b984f3eb3c8p-960), sinh(cf80.init(0x5p+4, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x5.55de6e613cfacf2p+112, 0x2.aaef37309e7d679p-16332), sinh(cf80.init(0x5p+4, 0x8p-16448)));
    try std.testing.expectEqual(cf80.init(0x5.55de6e613cfacf2p+112, -0x2.aaef37309e7d679p-36), sinh(cf80.init(0x5p+4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x5.55de6e613cfacf2p+112, -0x1.55779b984f3eb3c8p-960), sinh(cf80.init(0x5p+4, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x5.55de6e613cfacf2p+112, -0x2.aaef37309e7d679p-16332), sinh(cf80.init(0x5p+4, -0x8p-16448)));
    try std.testing.expectEqual(cf80.init(0x8p-152, 0x4p-128), sinh(cf80.init(0x8p-152, 0x4p-128)));
    try std.testing.expectEqual(cf80.init(0x8p-152, 0x4p-1024), sinh(cf80.init(0x8p-152, 0x4p-1024)));
    try std.testing.expectEqual(cf80.init(0x8p-152, 0x4p-16384), sinh(cf80.init(0x8p-152, 0x4p-16384)));
    try std.testing.expectEqual(cf80.init(0x8p-152, 0x2p-16384), sinh(cf80.init(0x8p-152, 0x2p-16384)));
    try std.testing.expectEqual(cf80.init(0x8p-152, 0x8p-972), sinh(cf80.init(0x8p-152, 0x8p-972)));
    try std.testing.expectEqual(cf80.init(0x4p-1076, 0x4p-128), sinh(cf80.init(0x4p-1076, 0x4p-128)));
    try std.testing.expectEqual(cf80.init(0x4p-1076, 0x4p-1024), sinh(cf80.init(0x4p-1076, 0x4p-1024)));
    try std.testing.expectEqual(cf80.init(0x4p-1076, 0x4p-16384), sinh(cf80.init(0x4p-1076, 0x4p-16384)));
    try std.testing.expectEqual(cf80.init(0x4p-1076, 0x2p-16384), sinh(cf80.init(0x4p-1076, 0x2p-16384)));
    try std.testing.expectEqual(cf80.init(0x4p-1076, 0x8p-972), sinh(cf80.init(0x4p-1076, 0x8p-972)));
    try std.testing.expectEqual(cf80.init(0x8p-16448, 0x4p-128), sinh(cf80.init(0x8p-16448, 0x4p-128)));
    try std.testing.expectEqual(cf80.init(0x8p-16448, 0x4p-1024), sinh(cf80.init(0x8p-16448, 0x4p-1024)));
    try std.testing.expectEqual(cf80.init(0x8p-16448, 0x4p-16384), sinh(cf80.init(0x8p-16448, 0x4p-16384)));
    try std.testing.expectEqual(cf80.init(0x8p-16448, 0x2p-16384), sinh(cf80.init(0x8p-16448, 0x2p-16384)));
    try std.testing.expectEqual(cf80.init(0x8p-16448, 0x8p-972), sinh(cf80.init(0x8p-16448, 0x8p-972)));
    try std.testing.expectEqual(cf80.init(0x4p-128, 0x8p-152), sinh(cf80.init(0x4p-128, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x4p-128, 0x4p-1076), sinh(cf80.init(0x4p-128, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x4p-128, 0x8p-16448), sinh(cf80.init(0x4p-128, 0x8p-16448)));
    try std.testing.expectEqual(cf80.init(0x4p-1024, 0x8p-152), sinh(cf80.init(0x4p-1024, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x4p-1024, 0x4p-1076), sinh(cf80.init(0x4p-1024, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x4p-1024, 0x8p-16448), sinh(cf80.init(0x4p-1024, 0x8p-16448)));
    try std.testing.expectEqual(cf80.init(0x4p-16384, 0x8p-152), sinh(cf80.init(0x4p-16384, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x4p-16384, 0x4p-1076), sinh(cf80.init(0x4p-16384, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x4p-16384, 0x8p-16448), sinh(cf80.init(0x4p-16384, 0x8p-16448)));
    try std.testing.expectEqual(cf80.init(0x2p-16384, 0x8p-152), sinh(cf80.init(0x2p-16384, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x2p-16384, 0x4p-1076), sinh(cf80.init(0x2p-16384, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x2p-16384, 0x8p-16448), sinh(cf80.init(0x2p-16384, 0x8p-16448)));
    try std.testing.expectEqual(cf80.init(0x8p-972, 0x8p-152), sinh(cf80.init(0x8p-972, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x8p-972, 0x4p-1076), sinh(cf80.init(0x8p-972, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x8p-972, 0x8p-16448), sinh(cf80.init(0x8p-972, 0x8p-16448)));

    try std.testing.expectEqual(cf128.init(0x0p+0, 0x0p+0), sinh(cf128.init(0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0x0p+0), sinh(cf128.init(-0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x0p+0), sinh(cf128.init(0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0x0p+0), sinh(cf128.init(-0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x4.26125c8517d7a6aac2ab187615e8p-4, 0x1.3a87cacbb996ee206970baa863d6p+0), sinh(cf128.init(0xcp-4, 0x1.4p+0)));
// try std.testing.expectEqual(cf128.init(0x3.972f3db02a2185873f2e869bd814p+0, -0x8.7ea71be31b64c358c8b2bc302448p-4), sinh(cf128.init(-0x2p+0, -0x3p+0)));
// try std.testing.expectEqual(cf128.init(0xc.bbaa76be57905b422fc94309d298p+124, 0xb.dcb174d885199a507e02ee9c08c8p+124), sinh(cf128.init(0x5.98p+4, 0xcp-4)));
// try std.testing.expectEqual(cf128.init(-0xc.bbaa76be57905b422fc94309d298p+124, 0xb.dcb174d885199a507e02ee9c08c8p+124), sinh(cf128.init(-0x5.98p+4, 0xcp-4)));
// try std.testing.expectEqual(cf128.init(0xc.bbaa76be57905b422fc94309d298p+124, -0xb.dcb174d885199a507e02ee9c08c8p+124), sinh(cf128.init(0x5.98p+4, -0xcp-4)));
// try std.testing.expectEqual(cf128.init(-0xc.bbaa76be57905b422fc94309d298p+124, -0xb.dcb174d885199a507e02ee9c08c8p+124), sinh(cf128.init(-0x5.98p+4, -0xcp-4)));
// try std.testing.expectEqual(cf128.init(0xb.fe39a718cb52b2731922dd2e0be8p+1020, 0xb.2c35ffb60337070b74839cd40a3p+1020), sinh(cf128.init(0x2.c68p+8, 0xcp-4)));
// try std.testing.expectEqual(cf128.init(-0xb.fe39a718cb52b2731922dd2e0be8p+1020, 0xb.2c35ffb60337070b74839cd40a3p+1020), sinh(cf128.init(-0x2.c68p+8, 0xcp-4)));
// try std.testing.expectEqual(cf128.init(0xb.fe39a718cb52b2731922dd2e0be8p+1020, -0xb.2c35ffb60337070b74839cd40a3p+1020), sinh(cf128.init(0x2.c68p+8, -0xcp-4)));
// try std.testing.expectEqual(cf128.init(-0xb.fe39a718cb52b2731922dd2e0be8p+1020, -0xb.2c35ffb60337070b74839cd40a3p+1020), sinh(cf128.init(-0x2.c68p+8, -0xcp-4)));
// try std.testing.expectEqual(cf128.init(0xc.1aee93505374b41257ed141f4e1p+16380, 0xb.46f43ab104a625930c1b0cbd6238p+16380), sinh(cf128.init(0x2.c5d4p+12, 0xcp-4)));
// try std.testing.expectEqual(cf128.init(-0xc.1aee93505374b41257ed141f4e1p+16380, 0xb.46f43ab104a625930c1b0cbd6238p+16380), sinh(cf128.init(-0x2.c5d4p+12, 0xcp-4)));
// try std.testing.expectEqual(cf128.init(0xc.1aee93505374b41257ed141f4e1p+16380, -0xb.46f43ab104a625930c1b0cbd6238p+16380), sinh(cf128.init(0x2.c5d4p+12, -0xcp-4)));
// try std.testing.expectEqual(cf128.init(-0xc.1aee93505374b41257ed141f4e1p+16380, -0xb.46f43ab104a625930c1b0cbd6238p+16380), sinh(cf128.init(-0x2.c5d4p+12, -0xcp-4)));
    try std.testing.expectEqual(cf128.init(std.math.inf(f128), std.math.inf(f128)), sinh(cf128.init(0xf.424p+16, 0xcp-4)));
    try std.testing.expectEqual(cf128.init(-std.math.inf(f128), std.math.inf(f128)), sinh(cf128.init(-0xf.424p+16, 0xcp-4)));
    try std.testing.expectEqual(cf128.init(std.math.inf(f128), -std.math.inf(f128)), sinh(cf128.init(0xf.424p+16, -0xcp-4)));
    try std.testing.expectEqual(cf128.init(-std.math.inf(f128), -std.math.inf(f128)), sinh(cf128.init(-0xf.424p+16, -0xcp-4)));
    try std.testing.expectEqual(cf128.init(0x6.6e68cac762215372ccfb2fd63cf4p+256, 0x3.37346563b110a9b9667d97eb1e7ap+108), sinh(cf128.init(0xb.4p+4, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.65445a94fa1268c47ee67b88bb6ep+2076, 0xb.2a22d4a7d0934623f733dc45db7p+1924), sinh(cf128.init(0x5.ap+8, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.65445a94fa1268c47ee67b88bb6ep+2076, 0x0p+0), sinh(cf128.init(0x5.ap+8, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.65445a94fa1268c47ee67b88bb6ep+2076, 0x5.95116a53e849a311fb99ee22edb8p+1000), sinh(cf128.init(0x5.ap+8, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(std.math.inf(f128), std.math.inf(f128)), sinh(cf128.init(0x5.8cap+12, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(std.math.inf(f128), 0x0p+0), sinh(cf128.init(0x5.8cap+12, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(std.math.inf(f128), std.math.inf(f128)), sinh(cf128.init(0x5.8cap+12, 0x4p-1076)));
// try std.testing.expectEqual(cf128.init(std.math.inf(f128), 0x2.bf701efd42c88e7efc2fdf7765fcp+16356), sinh(cf128.init(0x5.8cap+12, 0x4p-16436)));
// try std.testing.expectEqual(cf128.init(0x1.2cd9fc44eb9825a80249487f065p+0, 0x6.2c1d54767d54130af4a040065a94p-128), sinh(cf128.init(0x1p+0, 0x4p-128)));
// try std.testing.expectEqual(cf128.init(0x1.2cd9fc44eb9825a80249487f065p+0, 0x6.2c1d54767d54130af4a040065a94p-1024), sinh(cf128.init(0x1p+0, 0x4p-1024)));
// try std.testing.expectEqual(cf128.init(0x1.2cd9fc44eb9825a80249487f065p+0, 0x6.2c1d54767d54130af4a040065a94p-16384), sinh(cf128.init(0x1p+0, 0x4p-16384)));
    try std.testing.expectEqual(cf128.init(0x1.2cd9fc44eb9825a80249487f065p+0, 0x3.160eaa3b3eaa09857a5020032d48p-16384), sinh(cf128.init(0x1p+0, 0x2p-16384)));
// try std.testing.expectEqual(cf128.init(0x1.2cd9fc44eb9825a80249487f065p+0, 0xc.583aa8ecfaa82615e940800cb528p-972), sinh(cf128.init(0x1p+0, 0x8p-972)));
// try std.testing.expectEqual(cf128.init(0x1.2cd9fc44eb9825a80249487f065p+0, -0x6.2c1d54767d54130af4a040065a94p-128), sinh(cf128.init(0x1p+0, -0x4p-128)));
// try std.testing.expectEqual(cf128.init(0x1.2cd9fc44eb9825a80249487f065p+0, -0x6.2c1d54767d54130af4a040065a94p-1024), sinh(cf128.init(0x1p+0, -0x4p-1024)));
// try std.testing.expectEqual(cf128.init(0x1.2cd9fc44eb9825a80249487f065p+0, -0x6.2c1d54767d54130af4a040065a94p-16384), sinh(cf128.init(0x1p+0, -0x4p-16384)));
    try std.testing.expectEqual(cf128.init(0x1.2cd9fc44eb9825a80249487f065p+0, -0x3.160eaa3b3eaa09857a5020032d48p-16384), sinh(cf128.init(0x1p+0, -0x2p-16384)));
// try std.testing.expectEqual(cf128.init(0x1.2cd9fc44eb9825a80249487f065p+0, -0xc.583aa8ecfaa82615e940800cb528p-972), sinh(cf128.init(0x1p+0, -0x8p-972)));
    try std.testing.expectEqual(cf128.init(0x5.55de6e613cfacf22940ed2a38924p+112, 0x2.aaef37309e7d67914a076951c492p-36), sinh(cf128.init(0x5p+4, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x5.55de6e613cfacf22940ed2a38924p+112, 0x1.55779b984f3eb3c8a503b4a8e249p-960), sinh(cf128.init(0x5p+4, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x5.55de6e613cfacf22940ed2a38924p+112, 0x2.aaef37309e7d67914a076951c492p-16332), sinh(cf128.init(0x5p+4, 0x8p-16448)));
    try std.testing.expectEqual(cf128.init(0x5.55de6e613cfacf22940ed2a38924p+112, 0x1.55779b984f3eb3c8a503b4a8e249p-16332), sinh(cf128.init(0x5p+4, 0x4p-16448)));
    try std.testing.expectEqual(cf128.init(0x5.55de6e613cfacf22940ed2a38924p+112, 0x1.55779b984f3eb3c8a503b4a8e249p-16380), sinh(cf128.init(0x5p+4, 0x4p-16496)));
    try std.testing.expectEqual(cf128.init(0x5.55de6e613cfacf22940ed2a38924p+112, -0x2.aaef37309e7d67914a076951c492p-36), sinh(cf128.init(0x5p+4, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x5.55de6e613cfacf22940ed2a38924p+112, -0x1.55779b984f3eb3c8a503b4a8e249p-960), sinh(cf128.init(0x5p+4, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x5.55de6e613cfacf22940ed2a38924p+112, -0x2.aaef37309e7d67914a076951c492p-16332), sinh(cf128.init(0x5p+4, -0x8p-16448)));
    try std.testing.expectEqual(cf128.init(0x5.55de6e613cfacf22940ed2a38924p+112, -0x1.55779b984f3eb3c8a503b4a8e249p-16332), sinh(cf128.init(0x5p+4, -0x4p-16448)));
    try std.testing.expectEqual(cf128.init(0x5.55de6e613cfacf22940ed2a38924p+112, -0x1.55779b984f3eb3c8a503b4a8e249p-16380), sinh(cf128.init(0x5p+4, -0x4p-16496)));
    try std.testing.expectEqual(cf128.init(0x8p-152, 0x4p-128), sinh(cf128.init(0x8p-152, 0x4p-128)));
    try std.testing.expectEqual(cf128.init(0x8p-152, 0x4p-1024), sinh(cf128.init(0x8p-152, 0x4p-1024)));
    try std.testing.expectEqual(cf128.init(0x8p-152, 0x4p-16384), sinh(cf128.init(0x8p-152, 0x4p-16384)));
    try std.testing.expectEqual(cf128.init(0x8p-152, 0x2p-16384), sinh(cf128.init(0x8p-152, 0x2p-16384)));
    try std.testing.expectEqual(cf128.init(0x8p-152, 0x8p-972), sinh(cf128.init(0x8p-152, 0x8p-972)));
    try std.testing.expectEqual(cf128.init(0x4p-1076, 0x4p-128), sinh(cf128.init(0x4p-1076, 0x4p-128)));
    try std.testing.expectEqual(cf128.init(0x4p-1076, 0x4p-1024), sinh(cf128.init(0x4p-1076, 0x4p-1024)));
    try std.testing.expectEqual(cf128.init(0x4p-1076, 0x4p-16384), sinh(cf128.init(0x4p-1076, 0x4p-16384)));
    try std.testing.expectEqual(cf128.init(0x4p-1076, 0x2p-16384), sinh(cf128.init(0x4p-1076, 0x2p-16384)));
    try std.testing.expectEqual(cf128.init(0x4p-1076, 0x8p-972), sinh(cf128.init(0x4p-1076, 0x8p-972)));
    try std.testing.expectEqual(cf128.init(0x8p-16448, 0x4p-128), sinh(cf128.init(0x8p-16448, 0x4p-128)));
    try std.testing.expectEqual(cf128.init(0x8p-16448, 0x4p-1024), sinh(cf128.init(0x8p-16448, 0x4p-1024)));
    try std.testing.expectEqual(cf128.init(0x8p-16448, 0x4p-16384), sinh(cf128.init(0x8p-16448, 0x4p-16384)));
    try std.testing.expectEqual(cf128.init(0x8p-16448, 0x2p-16384), sinh(cf128.init(0x8p-16448, 0x2p-16384)));
    try std.testing.expectEqual(cf128.init(0x8p-16448, 0x8p-972), sinh(cf128.init(0x8p-16448, 0x8p-972)));
    try std.testing.expectEqual(cf128.init(0x4p-16448, 0x4p-128), sinh(cf128.init(0x4p-16448, 0x4p-128)));
    try std.testing.expectEqual(cf128.init(0x4p-16448, 0x4p-1024), sinh(cf128.init(0x4p-16448, 0x4p-1024)));
    try std.testing.expectEqual(cf128.init(0x4p-16448, 0x4p-16384), sinh(cf128.init(0x4p-16448, 0x4p-16384)));
    try std.testing.expectEqual(cf128.init(0x4p-16448, 0x2p-16384), sinh(cf128.init(0x4p-16448, 0x2p-16384)));
    try std.testing.expectEqual(cf128.init(0x4p-16448, 0x8p-972), sinh(cf128.init(0x4p-16448, 0x8p-972)));
    try std.testing.expectEqual(cf128.init(0x4p-16496, 0x4p-128), sinh(cf128.init(0x4p-16496, 0x4p-128)));
    try std.testing.expectEqual(cf128.init(0x4p-16496, 0x4p-1024), sinh(cf128.init(0x4p-16496, 0x4p-1024)));
    try std.testing.expectEqual(cf128.init(0x4p-16496, 0x4p-16384), sinh(cf128.init(0x4p-16496, 0x4p-16384)));
    try std.testing.expectEqual(cf128.init(0x4p-16496, 0x2p-16384), sinh(cf128.init(0x4p-16496, 0x2p-16384)));
    try std.testing.expectEqual(cf128.init(0x4p-16496, 0x8p-972), sinh(cf128.init(0x4p-16496, 0x8p-972)));
    try std.testing.expectEqual(cf128.init(0x4p-128, 0x8p-152), sinh(cf128.init(0x4p-128, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x4p-128, 0x4p-1076), sinh(cf128.init(0x4p-128, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x4p-128, 0x8p-16448), sinh(cf128.init(0x4p-128, 0x8p-16448)));
    try std.testing.expectEqual(cf128.init(0x4p-128, 0x4p-16448), sinh(cf128.init(0x4p-128, 0x4p-16448)));
    try std.testing.expectEqual(cf128.init(0x4p-128, 0x4p-16496), sinh(cf128.init(0x4p-128, 0x4p-16496)));
    try std.testing.expectEqual(cf128.init(0x4p-1024, 0x8p-152), sinh(cf128.init(0x4p-1024, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x4p-1024, 0x4p-1076), sinh(cf128.init(0x4p-1024, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x4p-1024, 0x8p-16448), sinh(cf128.init(0x4p-1024, 0x8p-16448)));
    try std.testing.expectEqual(cf128.init(0x4p-1024, 0x4p-16448), sinh(cf128.init(0x4p-1024, 0x4p-16448)));
    try std.testing.expectEqual(cf128.init(0x4p-1024, 0x4p-16496), sinh(cf128.init(0x4p-1024, 0x4p-16496)));
    try std.testing.expectEqual(cf128.init(0x4p-16384, 0x8p-152), sinh(cf128.init(0x4p-16384, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x4p-16384, 0x4p-1076), sinh(cf128.init(0x4p-16384, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x4p-16384, 0x8p-16448), sinh(cf128.init(0x4p-16384, 0x8p-16448)));
    try std.testing.expectEqual(cf128.init(0x4p-16384, 0x4p-16448), sinh(cf128.init(0x4p-16384, 0x4p-16448)));
    try std.testing.expectEqual(cf128.init(0x4p-16384, 0x4p-16496), sinh(cf128.init(0x4p-16384, 0x4p-16496)));
    try std.testing.expectEqual(cf128.init(0x2p-16384, 0x8p-152), sinh(cf128.init(0x2p-16384, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x2p-16384, 0x4p-1076), sinh(cf128.init(0x2p-16384, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x2p-16384, 0x8p-16448), sinh(cf128.init(0x2p-16384, 0x8p-16448)));
    try std.testing.expectEqual(cf128.init(0x2p-16384, 0x4p-16448), sinh(cf128.init(0x2p-16384, 0x4p-16448)));
    try std.testing.expectEqual(cf128.init(0x2p-16384, 0x4p-16496), sinh(cf128.init(0x2p-16384, 0x4p-16496)));
    try std.testing.expectEqual(cf128.init(0x8p-972, 0x8p-152), sinh(cf128.init(0x8p-972, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x8p-972, 0x4p-1076), sinh(cf128.init(0x8p-972, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x8p-972, 0x8p-16448), sinh(cf128.init(0x8p-972, 0x8p-16448)));
    try std.testing.expectEqual(cf128.init(0x8p-972, 0x4p-16448), sinh(cf128.init(0x8p-972, 0x4p-16448)));
    try std.testing.expectEqual(cf128.init(0x8p-972, 0x4p-16496), sinh(cf128.init(0x8p-972, 0x4p-16496)));
}
