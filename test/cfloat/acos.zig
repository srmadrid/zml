const std = @import("std");
const zml = @import("zml");
const cf32 = zml.cf32;
const cf64 = zml.cf64;
const cf80 = zml.cf80;
const cf128 = zml.cf128;
const acos = zml.cfloat.acos;

test acos {
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), acos(cf32.init(0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), acos(cf32.init(-0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), acos(cf32.init(-0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), acos(cf32.init(0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x1.31dcp+0), acos(cf32.init(0x0p+0, -0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x1.31dcp+0), acos(cf32.init(-0x0p+0, -0x1.8p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x7.b30b28p-4), acos(cf32.init(0x0p+0, -0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x7.b30b28p-4), acos(cf32.init(-0x0p+0, -0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x7.b30b28p-4), acos(cf32.init(0x0p+0, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x7.b30b28p-4), acos(cf32.init(-0x0p+0, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x1.31dcp+0), acos(cf32.init(0x0p+0, 0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x1.31dcp+0), acos(cf32.init(-0x0p+0, 0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0xf.66165p-4), acos(cf32.init(-0x1.8p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0xf.66165p-4), acos(cf32.init(-0x1.8p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x0p+0), acos(cf32.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x0p+0), acos(cf32.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x2.182a48p+0, -0x0p+0), acos(cf32.init(-0x8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x2.182a48p+0, 0x0p+0), acos(cf32.init(-0x8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.0c1524p+0, -0x0p+0), acos(cf32.init(0x8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.0c1524p+0, 0x0p+0), acos(cf32.init(0x8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0x0p+0), acos(cf32.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x0p+0), acos(cf32.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0xf.66165p-4), acos(cf32.init(0x1.8p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0xf.66165p-4), acos(cf32.init(0x1.8p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x4p-52, -0x2.359bacp+4), acos(cf32.init(0x4p+48, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x4p-52, 0x2.359bacp+4), acos(cf32.init(0x4p+48, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x2.359bacp+4), acos(cf32.init(-0x4p+48, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x2.359bacp+4), acos(cf32.init(-0x4p+48, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2.359bacp+4), acos(cf32.init(0x1p+0, 0x4p+48)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2.359bacp+4), acos(cf32.init(-0x1p+0, 0x4p+48)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2.359bacp+4), acos(cf32.init(0x1p+0, -0x4p+48)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2.359bacp+4), acos(cf32.init(-0x1p+0, -0x4p+48)));
    try std.testing.expectEqual(cf32.init(0x1p-128, -0x5.96a7ep+4), acos(cf32.init(0xf.fffffp+124, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1p-128, 0x5.96a7ep+4), acos(cf32.init(0xf.fffffp+124, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x5.96a7ep+4), acos(cf32.init(-0xf.fffffp+124, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x5.96a7ep+4), acos(cf32.init(-0xf.fffffp+124, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x5.96a7ep+4), acos(cf32.init(0x1p+0, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x5.96a7ep+4), acos(cf32.init(-0x1p+0, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x5.96a7ep+4), acos(cf32.init(0x1p+0, -0xf.fffffp+124)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x5.96a7ep+4), acos(cf32.init(-0x1p+0, -0xf.fffffp+124)));
    try std.testing.expectEqual(cf32.init(0x1p-128, -0x5.96a7ep+4), acos(cf32.init(0xf.fffffp+124, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1p-128, 0x5.96a7ep+4), acos(cf32.init(0xf.fffffp+124, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x5.96a7ep+4), acos(cf32.init(-0xf.fffffp+124, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x5.96a7ep+4), acos(cf32.init(-0xf.fffffp+124, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x5.96a7ep+4), acos(cf32.init(0x1p+0, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x5.96a7ep+4), acos(cf32.init(-0x1p+0, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x5.96a7ep+4), acos(cf32.init(0x1p+0, -0xf.fffffp+124)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x5.96a7ep+4), acos(cf32.init(-0x1p+0, -0xf.fffffp+124)));
    try std.testing.expectEqual(cf32.init(0xc.90fdbp-4, -0x5.9bb168p+4), acos(cf32.init(0xf.8p+124, 0xf.8p+124)));
    try std.testing.expectEqual(cf32.init(0xc.90fdbp-4, -0x5.9c337p+4), acos(cf32.init(0xf.fffffp+124, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf32.init(0xc.90fdbp-4, -0x5.9c337p+4), acos(cf32.init(0xf.fffffp+124, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x1.31dcp+0), acos(cf32.init(0xf.8p-132, 0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x1.31dcp+0), acos(cf32.init(0xf.8p-132, -0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x1.31dcp+0), acos(cf32.init(-0xf.8p-132, 0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x1.31dcp+0), acos(cf32.init(-0xf.8p-132, -0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(0xd.dd168p-132, -0xf.66165p-4), acos(cf32.init(0x1.8p+0, 0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0xf.66165p-4), acos(cf32.init(-0x1.8p+0, 0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(0xd.dd168p-132, 0xf.66165p-4), acos(cf32.init(0x1.8p+0, -0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0xf.66165p-4), acos(cf32.init(-0x1.8p+0, -0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x1.31dcp+0), acos(cf32.init(0x8p-152, 0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x1.31dcp+0), acos(cf32.init(0x0p+0, 0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x1.31dcp+0), acos(cf32.init(0x8p-152, -0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x1.31dcp+0), acos(cf32.init(0x0p+0, -0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x1.31dcp+0), acos(cf32.init(-0x0p+0, 0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x1.31dcp+0), acos(cf32.init(-0x8p-152, 0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x1.31dcp+0), acos(cf32.init(-0x0p+0, -0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x1.31dcp+0), acos(cf32.init(-0x8p-152, -0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(0x8p-152, -0xf.66165p-4), acos(cf32.init(0x1.8p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0xf.66165p-4), acos(cf32.init(0x1.8p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0xf.66165p-4), acos(cf32.init(-0x1.8p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0xf.66165p-4), acos(cf32.init(-0x1.8p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0xf.66165p-4), acos(cf32.init(0x1.8p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x8p-152, 0xf.66165p-4), acos(cf32.init(0x1.8p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0xf.66165p-4), acos(cf32.init(-0x1.8p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0xf.66165p-4), acos(cf32.init(-0x1.8p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x1.31dcp+0), acos(cf32.init(0x8p-152, 0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x1.31dcp+0), acos(cf32.init(0x0p+0, 0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x1.31dcp+0), acos(cf32.init(0x8p-152, -0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x1.31dcp+0), acos(cf32.init(0x0p+0, -0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x1.31dcp+0), acos(cf32.init(-0x0p+0, 0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x1.31dcp+0), acos(cf32.init(-0x8p-152, 0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x1.31dcp+0), acos(cf32.init(-0x0p+0, -0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x1.31dcp+0), acos(cf32.init(-0x8p-152, -0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(0x8p-152, -0xf.66165p-4), acos(cf32.init(0x1.8p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0xf.66165p-4), acos(cf32.init(0x1.8p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0xf.66165p-4), acos(cf32.init(-0x1.8p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0xf.66165p-4), acos(cf32.init(-0x1.8p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0xf.66165p-4), acos(cf32.init(0x1.8p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x8p-152, 0xf.66165p-4), acos(cf32.init(0x1.8p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0xf.66165p-4), acos(cf32.init(-0x1.8p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0xf.66165p-4), acos(cf32.init(-0x1.8p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf32.init(0x1.38aadep+0, -0xe.d170ep-4), acos(cf32.init(0x8p-4, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.38aadep+0, 0xe.d170ep-4), acos(cf32.init(0x8p-4, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.eb948cp+0, -0xe.d170ep-4), acos(cf32.init(-0x8p-4, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.eb948cp+0, 0xe.d170ep-4), acos(cf32.init(-0x8p-4, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0xa.cc584p-4, -0xb.b9c9p-4), acos(cf32.init(0x1p+0, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x2.7779e8p+0, -0xb.b9c9p-4), acos(cf32.init(-0x1p+0, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0xa.cc584p-4, 0xb.b9c9p-4), acos(cf32.init(0x1p+0, -0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x2.7779e8p+0, 0xb.b9c9p-4), acos(cf32.init(-0x1p+0, -0x8p-4)));
    try std.testing.expectEqual(cf32.init(0x1.64fd8ep+0, -0xe.4787bp-4), acos(cf32.init(0x4p-4, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.64fd8ep+0, 0xe.4787bp-4), acos(cf32.init(0x4p-4, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.bf41dep+0, -0xe.4787bp-4), acos(cf32.init(-0x4p-4, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.bf41dep+0, 0xe.4787bp-4), acos(cf32.init(-0x4p-4, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x7.d32028p-4, -0x8.281acp-4), acos(cf32.init(0x1p+0, 0x4p-4)));
    try std.testing.expectEqual(cf32.init(0x2.a70d68p+0, -0x8.281acp-4), acos(cf32.init(-0x1p+0, 0x4p-4)));
    try std.testing.expectEqual(cf32.init(0x7.d32028p-4, 0x8.281acp-4), acos(cf32.init(0x1p+0, -0x4p-4)));
    try std.testing.expectEqual(cf32.init(0x2.a70d68p+0, 0x8.281acp-4), acos(cf32.init(-0x1p+0, -0x4p-4)));
    try std.testing.expectEqual(cf32.init(0x1.91c806p+0, -0xe.1a1bep-4), acos(cf32.init(0x7.cp-12, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.91c806p+0, 0xe.1a1bep-4), acos(cf32.init(0x7.cp-12, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.927764p+0, -0xe.1a1bep-4), acos(cf32.init(-0x7.cp-12, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.927764p+0, 0xe.1a1bep-4), acos(cf32.init(-0x7.cp-12, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0xb.223eep-8, -0xb.2325p-8), acos(cf32.init(0x1p+0, 0x7.cp-12)));
    // try std.testing.expectEqual(cf32.init(0x3.191d2cp+0, -0xb.2325p-8), acos(cf32.init(-0x1p+0, 0x7.cp-12)));
    // try std.testing.expectEqual(cf32.init(0xb.223eep-8, 0xb.2325p-8), acos(cf32.init(0x1p+0, -0x7.cp-12)));
    // try std.testing.expectEqual(cf32.init(0x3.191d2cp+0, 0xb.2325p-8), acos(cf32.init(-0x1p+0, -0x7.cp-12)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0x7.cp-32, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0x7.cp-32, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0x7.cp-32, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0x7.cp-32, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x2.c8ac8p-16, -0x2.c8ac8p-16), acos(cf32.init(0x1p+0, 0x7.cp-32)));
    try std.testing.expectEqual(cf32.init(0x3.243cap+0, -0x2.c8ac8p-16), acos(cf32.init(-0x1p+0, 0x7.cp-32)));
    try std.testing.expectEqual(cf32.init(0x2.c8ac8p-16, 0x2.c8ac8p-16), acos(cf32.init(0x1p+0, -0x7.cp-32)));
    try std.testing.expectEqual(cf32.init(0x3.243cap+0, 0x2.c8ac8p-16), acos(cf32.init(-0x1p+0, -0x7.cp-32)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0x1.fp-100, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0x1.fp-100, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0x1.fp-100, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0x1.fp-100, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x5.9159p-52, -0x5.9159p-52), acos(cf32.init(0x1p+0, 0x1.fp-100)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x5.9159p-52), acos(cf32.init(-0x1p+0, 0x1.fp-100)));
    try std.testing.expectEqual(cf32.init(0x5.9159p-52, 0x5.9159p-52), acos(cf32.init(0x1p+0, -0x1.fp-100)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x5.9159p-52), acos(cf32.init(-0x1p+0, -0x1.fp-100)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0xf.8p-132, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0xf.8p-132, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0xf.8p-132, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0xf.8p-132, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0xf.bf7dfp-68, -0xf.bf7dfp-68), acos(cf32.init(0x1p+0, 0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0xf.bf7dfp-68), acos(cf32.init(-0x1p+0, 0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(0xf.bf7dfp-68, 0xf.bf7dfp-68), acos(cf32.init(0x1p+0, -0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0xf.bf7dfp-68), acos(cf32.init(-0x1p+0, -0xf.8p-132)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x2.d413ccp-76, -0x2.d413ccp-76), acos(cf32.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0x0p+0), acos(cf32.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x2.d413ccp-76), acos(cf32.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x0p+0), acos(cf32.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x0p+0), acos(cf32.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x2.d413ccp-76, 0x2.d413ccp-76), acos(cf32.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x0p+0), acos(cf32.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x2.d413ccp-76), acos(cf32.init(-0x1p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x2.d413ccp-76, -0x2.d413ccp-76), acos(cf32.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0x0p+0), acos(cf32.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x2.d413ccp-76), acos(cf32.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x0p+0), acos(cf32.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x0p+0), acos(cf32.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x2.d413ccp-76, 0x2.d413ccp-76), acos(cf32.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x0p+0), acos(cf32.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x2.d413ccp-76), acos(cf32.init(-0x1p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x2.d413ccp-76, -0x2.d413ccp-76), acos(cf32.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0x0p+0), acos(cf32.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x2.d413ccp-76), acos(cf32.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x0p+0), acos(cf32.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x0p+0), acos(cf32.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x2.d413ccp-76, 0x2.d413ccp-76), acos(cf32.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x0p+0), acos(cf32.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x2.d413ccp-76), acos(cf32.init(-0x1p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x2.d413ccp-76, -0x2.d413ccp-76), acos(cf32.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0x0p+0), acos(cf32.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x2.d413ccp-76), acos(cf32.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x0p+0), acos(cf32.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x0p+0), acos(cf32.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x2.d413ccp-76, 0x2.d413ccp-76), acos(cf32.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x0p+0), acos(cf32.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x2.d413ccp-76), acos(cf32.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb4p+0, -0xe.1a1b4p-4), acos(cf32.init(0x2p-24, 0x1.000002p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb4p+0, 0xe.1a1b4p-4), acos(cf32.init(0x2p-24, -0x1.000002p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b4p-4), acos(cf32.init(-0x2p-24, 0x1.000002p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b4p-4), acos(cf32.init(-0x2p-24, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0xe.90189p-16, -0x2.3286b8p-12), acos(cf32.init(0x1.000002p+0, 0x2p-24)));
    // try std.testing.expectEqual(cf32.init(0x3.2430dcp+0, -0x2.3286b8p-12), acos(cf32.init(-0x1.000002p+0, 0x2p-24)));
    // try std.testing.expectEqual(cf32.init(0xe.90189p-16, 0x2.3286b8p-12), acos(cf32.init(0x1.000002p+0, -0x2p-24)));
    // try std.testing.expectEqual(cf32.init(0x3.2430dcp+0, 0x2.3286b8p-12), acos(cf32.init(-0x1.000002p+0, -0x2p-24)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b4p-4), acos(cf32.init(0xf.8p-132, 0x1.000002p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b4p-4), acos(cf32.init(0xf.8p-132, -0x1.000002p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b4p-4), acos(cf32.init(-0xf.8p-132, 0x1.000002p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b4p-4), acos(cf32.init(-0xf.8p-132, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x7.cp-120, -0x2p-12), acos(cf32.init(0x1.000002p+0, 0xf.8p-132)));
    // try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x2p-12), acos(cf32.init(-0x1.000002p+0, 0xf.8p-132)));
    // try std.testing.expectEqual(cf32.init(0x7.cp-120, 0x2p-12), acos(cf32.init(0x1.000002p+0, -0xf.8p-132)));
    // try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x2p-12), acos(cf32.init(-0x1.000002p+0, -0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b4p-4), acos(cf32.init(0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b4p-4), acos(cf32.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b4p-4), acos(cf32.init(-0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b4p-4), acos(cf32.init(-0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, -0x2p-12), acos(cf32.init(0x1.000002p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x2p-12), acos(cf32.init(-0x1.000002p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, 0x2p-12), acos(cf32.init(0x1.000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x2p-12), acos(cf32.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b4p-4), acos(cf32.init(0x1p-52, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0x1p-52, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0x1p-52, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b4p-4), acos(cf32.init(0x1p-52, -0x1.000002p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b4p-4), acos(cf32.init(-0x1p-52, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0x1p-52, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0x1p-52, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b4p-4), acos(cf32.init(-0x1p-52, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x8p-44, -0x2p-12), acos(cf32.init(0x1.000002p+0, 0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x4p-28, -0x4p-28), acos(cf32.init(0x1p+0, 0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x4p-28), acos(cf32.init(-0x1p+0, 0x1p-52)));
    // try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x2p-12), acos(cf32.init(-0x1.000002p+0, 0x1p-52)));
    // try std.testing.expectEqual(cf32.init(0x8p-44, 0x2p-12), acos(cf32.init(0x1.000002p+0, -0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x4p-28, 0x4p-28), acos(cf32.init(0x1p+0, -0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x4p-28), acos(cf32.init(-0x1p+0, -0x1p-52)));
    // try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x2p-12), acos(cf32.init(-0x1.000002p+0, -0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b4p-4), acos(cf32.init(0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b4p-4), acos(cf32.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b4p-4), acos(cf32.init(0x8p-152, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b4p-4), acos(cf32.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b4p-4), acos(cf32.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b4p-4), acos(cf32.init(-0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b4p-4), acos(cf32.init(-0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b4p-4), acos(cf32.init(-0x8p-152, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x4p-140, -0x2p-12), acos(cf32.init(0x1.000002p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, -0x2p-12), acos(cf32.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x2.d413ccp-76, -0x2.d413ccp-76), acos(cf32.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0x0p+0), acos(cf32.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x2.d413ccp-76), acos(cf32.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x0p+0), acos(cf32.init(-0x1p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x2p-12), acos(cf32.init(-0x1.000002p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x2p-12), acos(cf32.init(-0x1.000002p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, 0x2p-12), acos(cf32.init(0x1.000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x4p-140, 0x2p-12), acos(cf32.init(0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x0p+0), acos(cf32.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x2.d413ccp-76, 0x2.d413ccp-76), acos(cf32.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x0p+0), acos(cf32.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x2.d413ccp-76), acos(cf32.init(-0x1p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x2p-12), acos(cf32.init(-0x1.000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x2p-12), acos(cf32.init(-0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b4p-4), acos(cf32.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b4p-4), acos(cf32.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b4p-4), acos(cf32.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b4p-4), acos(cf32.init(-0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, -0x2p-12), acos(cf32.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0x0p+0), acos(cf32.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x0p+0), acos(cf32.init(-0x1p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x2p-12), acos(cf32.init(-0x1.000002p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, 0x2p-12), acos(cf32.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x0p+0), acos(cf32.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x0p+0), acos(cf32.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x2p-12), acos(cf32.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b4p-4), acos(cf32.init(0x2p-64, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0x2p-64, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0x2p-64, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b4p-4), acos(cf32.init(0x2p-64, -0x1.000002p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b4p-4), acos(cf32.init(-0x2p-64, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0x2p-64, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0x2p-64, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b4p-4), acos(cf32.init(-0x2p-64, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1p-52, -0x2p-12), acos(cf32.init(0x1.000002p+0, 0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e6p-32, -0x1.6a09e6p-32), acos(cf32.init(0x1p+0, 0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x1.6a09e6p-32), acos(cf32.init(-0x1p+0, 0x2p-64)));
    // try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x2p-12), acos(cf32.init(-0x1.000002p+0, 0x2p-64)));
    // try std.testing.expectEqual(cf32.init(0x1p-52, 0x2p-12), acos(cf32.init(0x1.000002p+0, -0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e6p-32, 0x1.6a09e6p-32), acos(cf32.init(0x1p+0, -0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x1.6a09e6p-32), acos(cf32.init(-0x1p+0, -0x2p-64)));
    // try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x2p-12), acos(cf32.init(-0x1.000002p+0, -0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b4p-4), acos(cf32.init(0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b4p-4), acos(cf32.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b4p-4), acos(cf32.init(0x8p-152, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b4p-4), acos(cf32.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b4p-4), acos(cf32.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b4p-4), acos(cf32.init(-0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b4p-4), acos(cf32.init(-0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b4p-4), acos(cf32.init(-0x8p-152, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x4p-140, -0x2p-12), acos(cf32.init(0x1.000002p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, -0x2p-12), acos(cf32.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x2.d413ccp-76, -0x2.d413ccp-76), acos(cf32.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0x0p+0), acos(cf32.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x2.d413ccp-76), acos(cf32.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x0p+0), acos(cf32.init(-0x1p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x2p-12), acos(cf32.init(-0x1.000002p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x2p-12), acos(cf32.init(-0x1.000002p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, 0x2p-12), acos(cf32.init(0x1.000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x4p-140, 0x2p-12), acos(cf32.init(0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x0p+0), acos(cf32.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x2.d413ccp-76, 0x2.d413ccp-76), acos(cf32.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x0p+0), acos(cf32.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x2.d413ccp-76), acos(cf32.init(-0x1p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x2p-12), acos(cf32.init(-0x1.000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x2p-12), acos(cf32.init(-0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b4p-4), acos(cf32.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b4p-4), acos(cf32.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b4p-4), acos(cf32.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b4p-4), acos(cf32.init(-0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, -0x2p-12), acos(cf32.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0x0p+0), acos(cf32.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x0p+0), acos(cf32.init(-0x1p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x2p-12), acos(cf32.init(-0x1.000002p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, 0x2p-12), acos(cf32.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x0p+0), acos(cf32.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x0p+0), acos(cf32.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x2p-12), acos(cf32.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b4p-4), acos(cf32.init(0x4p-108, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0x4p-108, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0x4p-108, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b4p-4), acos(cf32.init(0x4p-108, -0x1.000002p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b4p-4), acos(cf32.init(-0x4p-108, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0x4p-108, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0x4p-108, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b4p-4), acos(cf32.init(-0x4p-108, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x2p-96, -0x2p-12), acos(cf32.init(0x1.000002p+0, 0x4p-108)));
    try std.testing.expectEqual(cf32.init(0x8p-56, -0x8p-56), acos(cf32.init(0x1p+0, 0x4p-108)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x8p-56), acos(cf32.init(-0x1p+0, 0x4p-108)));
    // try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x2p-12), acos(cf32.init(-0x1.000002p+0, 0x4p-108)));
    // try std.testing.expectEqual(cf32.init(0x2p-96, 0x2p-12), acos(cf32.init(0x1.000002p+0, -0x4p-108)));
    try std.testing.expectEqual(cf32.init(0x8p-56, 0x8p-56), acos(cf32.init(0x1p+0, -0x4p-108)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x8p-56), acos(cf32.init(-0x1p+0, -0x4p-108)));
    // try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x2p-12), acos(cf32.init(-0x1.000002p+0, -0x4p-108)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b4p-4), acos(cf32.init(0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b4p-4), acos(cf32.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b4p-4), acos(cf32.init(0x8p-152, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b4p-4), acos(cf32.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b4p-4), acos(cf32.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b4p-4), acos(cf32.init(-0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b4p-4), acos(cf32.init(-0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b4p-4), acos(cf32.init(-0x8p-152, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x4p-140, -0x2p-12), acos(cf32.init(0x1.000002p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, -0x2p-12), acos(cf32.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x2.d413ccp-76, -0x2.d413ccp-76), acos(cf32.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0x0p+0), acos(cf32.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x2.d413ccp-76), acos(cf32.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x0p+0), acos(cf32.init(-0x1p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x2p-12), acos(cf32.init(-0x1.000002p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x2p-12), acos(cf32.init(-0x1.000002p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, 0x2p-12), acos(cf32.init(0x1.000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x4p-140, 0x2p-12), acos(cf32.init(0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x0p+0), acos(cf32.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x2.d413ccp-76, 0x2.d413ccp-76), acos(cf32.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x0p+0), acos(cf32.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x2.d413ccp-76), acos(cf32.init(-0x1p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x2p-12), acos(cf32.init(-0x1.000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x2p-12), acos(cf32.init(-0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b4p-4), acos(cf32.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b4p-4), acos(cf32.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b4p-4), acos(cf32.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b4p-4), acos(cf32.init(-0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, -0x2p-12), acos(cf32.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0x0p+0), acos(cf32.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x0p+0), acos(cf32.init(-0x1p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x2p-12), acos(cf32.init(-0x1.000002p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, 0x2p-12), acos(cf32.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x0p+0), acos(cf32.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x0p+0), acos(cf32.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x2p-12), acos(cf32.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b4p-4), acos(cf32.init(0x8p-116, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0x8p-116, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0x8p-116, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b4p-4), acos(cf32.init(0x8p-116, -0x1.000002p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b4p-4), acos(cf32.init(-0x8p-116, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0x8p-116, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0x8p-116, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b4p-4), acos(cf32.init(-0x8p-116, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x4p-104, -0x2p-12), acos(cf32.init(0x1.000002p+0, 0x8p-116)));
    try std.testing.expectEqual(cf32.init(0xb.504f3p-60, -0xb.504f3p-60), acos(cf32.init(0x1p+0, 0x8p-116)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0xb.504f3p-60), acos(cf32.init(-0x1p+0, 0x8p-116)));
    // try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x2p-12), acos(cf32.init(-0x1.000002p+0, 0x8p-116)));
    // try std.testing.expectEqual(cf32.init(0x4p-104, 0x2p-12), acos(cf32.init(0x1.000002p+0, -0x8p-116)));
    try std.testing.expectEqual(cf32.init(0xb.504f3p-60, 0xb.504f3p-60), acos(cf32.init(0x1p+0, -0x8p-116)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0xb.504f3p-60), acos(cf32.init(-0x1p+0, -0x8p-116)));
    // try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x2p-12), acos(cf32.init(-0x1.000002p+0, -0x8p-116)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b4p-4), acos(cf32.init(0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b4p-4), acos(cf32.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b4p-4), acos(cf32.init(0x8p-152, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b4p-4), acos(cf32.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b4p-4), acos(cf32.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b4p-4), acos(cf32.init(-0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b4p-4), acos(cf32.init(-0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b4p-4), acos(cf32.init(-0x8p-152, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x4p-140, -0x2p-12), acos(cf32.init(0x1.000002p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, -0x2p-12), acos(cf32.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x2.d413ccp-76, -0x2.d413ccp-76), acos(cf32.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0x0p+0), acos(cf32.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x2.d413ccp-76), acos(cf32.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x0p+0), acos(cf32.init(-0x1p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x2p-12), acos(cf32.init(-0x1.000002p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x2p-12), acos(cf32.init(-0x1.000002p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, 0x2p-12), acos(cf32.init(0x1.000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x4p-140, 0x2p-12), acos(cf32.init(0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x0p+0), acos(cf32.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x2.d413ccp-76, 0x2.d413ccp-76), acos(cf32.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x0p+0), acos(cf32.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x2.d413ccp-76), acos(cf32.init(-0x1p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x2p-12), acos(cf32.init(-0x1.000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x2p-12), acos(cf32.init(-0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b4p-4), acos(cf32.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b4p-4), acos(cf32.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b4p-4), acos(cf32.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b4p-4), acos(cf32.init(-0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, -0x2p-12), acos(cf32.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0x0p+0), acos(cf32.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x0p+0), acos(cf32.init(-0x1p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x2p-12), acos(cf32.init(-0x1.000002p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, 0x2p-12), acos(cf32.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x0p+0), acos(cf32.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x0p+0), acos(cf32.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x2p-12), acos(cf32.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb4p+0, -0xe.1a1b2p-4), acos(cf32.init(0x2p-24, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x1.921fb4p+0, 0xe.1a1b2p-4), acos(cf32.init(0x2p-24, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b2p-4), acos(cf32.init(-0x2p-24, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b2p-4), acos(cf32.init(-0x2p-24, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.cc8532p-12, -0x1.1c9e02p-12), acos(cf32.init(0xf.fffffp-4, 0x2p-24)));
    // try std.testing.expectEqual(cf32.init(0x3.2422a4p+0, -0x1.1c9e02p-12), acos(cf32.init(-0xf.fffffp-4, 0x2p-24)));
    // try std.testing.expectEqual(cf32.init(0x1.cc8532p-12, 0x1.1c9e02p-12), acos(cf32.init(0xf.fffffp-4, -0x2p-24)));
    // try std.testing.expectEqual(cf32.init(0x3.2422a4p+0, 0x1.1c9e02p-12), acos(cf32.init(-0xf.fffffp-4, -0x2p-24)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b2p-4), acos(cf32.init(0xf.8p-132, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b2p-4), acos(cf32.init(0xf.8p-132, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b2p-4), acos(cf32.init(-0xf.8p-132, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b2p-4), acos(cf32.init(-0xf.8p-132, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e6p-12, -0xa.f5cccp-120), acos(cf32.init(0xf.fffffp-4, 0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(0x3.2428c8p+0, -0xa.f5cccp-120), acos(cf32.init(-0xf.fffffp-4, 0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e6p-12, 0xa.f5cccp-120), acos(cf32.init(0xf.fffffp-4, -0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(0x3.2428c8p+0, 0xa.f5cccp-120), acos(cf32.init(-0xf.fffffp-4, -0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b2p-4), acos(cf32.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b2p-4), acos(cf32.init(0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b2p-4), acos(cf32.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b2p-4), acos(cf32.init(-0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e6p-12, -0x0p+0), acos(cf32.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.2428c8p+0, -0x0p+0), acos(cf32.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e6p-12, 0x0p+0), acos(cf32.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.2428c8p+0, 0x0p+0), acos(cf32.init(-0xf.fffffp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb4p+0, -0x7.b30b28p-4), acos(cf32.init(0x2p-24, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb4p+0, 0x7.b30b28p-4), acos(cf32.init(0x2p-24, -0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb8p+0, -0x7.b30b28p-4), acos(cf32.init(-0x2p-24, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb8p+0, 0x7.b30b28p-4), acos(cf32.init(-0x2p-24, -0x8p-4)));
    try std.testing.expectEqual(cf32.init(0x1.0c1524p+0, -0x2.4f34e8p-24), acos(cf32.init(0x8p-4, 0x2p-24)));
    try std.testing.expectEqual(cf32.init(0x2.182a48p+0, -0x2.4f34e8p-24), acos(cf32.init(-0x8p-4, 0x2p-24)));
    try std.testing.expectEqual(cf32.init(0x1.0c1524p+0, 0x2.4f34e8p-24), acos(cf32.init(0x8p-4, -0x2p-24)));
    try std.testing.expectEqual(cf32.init(0x2.182a48p+0, 0x2.4f34e8p-24), acos(cf32.init(-0x8p-4, -0x2p-24)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x7.b30b28p-4), acos(cf32.init(0xf.8p-132, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x7.b30b28p-4), acos(cf32.init(0xf.8p-132, -0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x7.b30b28p-4), acos(cf32.init(-0xf.8p-132, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x7.b30b28p-4), acos(cf32.init(-0xf.8p-132, -0x8p-4)));
    try std.testing.expectEqual(cf32.init(0x1.0c1524p+0, -0x1.1e5dap-128), acos(cf32.init(0x8p-4, 0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(0x2.182a48p+0, -0x1.1e5dap-128), acos(cf32.init(-0x8p-4, 0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(0x1.0c1524p+0, 0x1.1e5dap-128), acos(cf32.init(0x8p-4, -0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(0x2.182a48p+0, 0x1.1e5dap-128), acos(cf32.init(-0x8p-4, -0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(0x1.921fb4p+0, -0x2p-24), acos(cf32.init(0x2p-24, 0x2p-24)));
    try std.testing.expectEqual(cf32.init(0x1.921fb4p+0, 0x2p-24), acos(cf32.init(0x2p-24, -0x2p-24)));
    try std.testing.expectEqual(cf32.init(0x1.921fb8p+0, -0x2p-24), acos(cf32.init(-0x2p-24, 0x2p-24)));
    try std.testing.expectEqual(cf32.init(0x1.921fb8p+0, 0x2p-24), acos(cf32.init(-0x2p-24, -0x2p-24)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2p-24), acos(cf32.init(0xf.8p-132, 0x2p-24)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2p-24), acos(cf32.init(0xf.8p-132, -0x2p-24)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2p-24), acos(cf32.init(-0xf.8p-132, 0x2p-24)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2p-24), acos(cf32.init(-0xf.8p-132, -0x2p-24)));
    try std.testing.expectEqual(cf32.init(0x1.921fb4p+0, -0xf.8p-132), acos(cf32.init(0x2p-24, 0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(0x1.921fb8p+0, -0xf.8p-132), acos(cf32.init(-0x2p-24, 0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(0x1.921fb4p+0, 0xf.8p-132), acos(cf32.init(0x2p-24, -0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(0x1.921fb8p+0, 0xf.8p-132), acos(cf32.init(-0x2p-24, -0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2p-24), acos(cf32.init(0x0p+0, 0x2p-24)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2p-24), acos(cf32.init(0x0p+0, -0x2p-24)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2p-24), acos(cf32.init(-0x0p+0, 0x2p-24)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2p-24), acos(cf32.init(-0x0p+0, -0x2p-24)));
    try std.testing.expectEqual(cf32.init(0x1.921fb4p+0, -0x0p+0), acos(cf32.init(0x2p-24, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb8p+0, -0x0p+0), acos(cf32.init(-0x2p-24, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb4p+0, 0x0p+0), acos(cf32.init(0x2p-24, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb8p+0, 0x0p+0), acos(cf32.init(-0x2p-24, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xf.8p-132), acos(cf32.init(0xf.8p-132, 0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xf.8p-132), acos(cf32.init(0xf.8p-132, -0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xf.8p-132), acos(cf32.init(-0xf.8p-132, 0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xf.8p-132), acos(cf32.init(-0xf.8p-132, -0xf.8p-132)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0x1p-52, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b2p-4), acos(cf32.init(0x1p-52, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b2p-4), acos(cf32.init(0x1p-52, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0x1p-52, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0x1p-52, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b2p-4), acos(cf32.init(-0x1p-52, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b2p-4), acos(cf32.init(-0x1p-52, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0x1p-52, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x4p-28, -0x4p-28), acos(cf32.init(0x1p+0, 0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e6p-12, -0xb.504f3p-44), acos(cf32.init(0xf.fffffp-4, 0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x3.2428c8p+0, -0xb.504f3p-44), acos(cf32.init(-0xf.fffffp-4, 0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x4p-28), acos(cf32.init(-0x1p+0, 0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x4p-28, 0x4p-28), acos(cf32.init(0x1p+0, -0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e6p-12, 0xb.504f3p-44), acos(cf32.init(0xf.fffffp-4, -0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x3.2428c8p+0, 0xb.504f3p-44), acos(cf32.init(-0xf.fffffp-4, -0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x4p-28), acos(cf32.init(-0x1p+0, -0x1p-52)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b2p-4), acos(cf32.init(0x8p-152, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b2p-4), acos(cf32.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b2p-4), acos(cf32.init(0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b2p-4), acos(cf32.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b2p-4), acos(cf32.init(-0x0p+0, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b2p-4), acos(cf32.init(-0x8p-152, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b2p-4), acos(cf32.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b2p-4), acos(cf32.init(-0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x2.d413ccp-76, -0x2.d413ccp-76), acos(cf32.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0x0p+0), acos(cf32.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e6p-12, -0x5.a8p-140), acos(cf32.init(0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e6p-12, -0x0p+0), acos(cf32.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.2428c8p+0, -0x5.a8p-140), acos(cf32.init(-0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x3.2428c8p+0, -0x0p+0), acos(cf32.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x2.d413ccp-76), acos(cf32.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x0p+0), acos(cf32.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x0p+0), acos(cf32.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x2.d413ccp-76, 0x2.d413ccp-76), acos(cf32.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e6p-12, 0x0p+0), acos(cf32.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e6p-12, 0x5.a8p-140), acos(cf32.init(0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x3.2428c8p+0, 0x0p+0), acos(cf32.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.2428c8p+0, 0x5.a8p-140), acos(cf32.init(-0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x0p+0), acos(cf32.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x2.d413ccp-76), acos(cf32.init(-0x1p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b2p-4), acos(cf32.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b2p-4), acos(cf32.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b2p-4), acos(cf32.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b2p-4), acos(cf32.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0x0p+0), acos(cf32.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e6p-12, -0x0p+0), acos(cf32.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.2428c8p+0, -0x0p+0), acos(cf32.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x0p+0), acos(cf32.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x0p+0), acos(cf32.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e6p-12, 0x0p+0), acos(cf32.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.2428c8p+0, 0x0p+0), acos(cf32.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x0p+0), acos(cf32.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x7.b30b28p-4), acos(cf32.init(0x1p-52, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x7.b30b28p-4), acos(cf32.init(0x1p-52, -0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x7.b30b28p-4), acos(cf32.init(-0x1p-52, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x7.b30b28p-4), acos(cf32.init(-0x1p-52, -0x8p-4)));
    try std.testing.expectEqual(cf32.init(0x1.0c1524p+0, -0x1.279a74p-52), acos(cf32.init(0x8p-4, 0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x2.182a48p+0, -0x1.279a74p-52), acos(cf32.init(-0x8p-4, 0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x1.0c1524p+0, 0x1.279a74p-52), acos(cf32.init(0x8p-4, -0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x2.182a48p+0, 0x1.279a74p-52), acos(cf32.init(-0x8p-4, -0x1p-52)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x7.b30b28p-4), acos(cf32.init(0x8p-152, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x7.b30b28p-4), acos(cf32.init(0x0p+0, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x7.b30b28p-4), acos(cf32.init(0x8p-152, -0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x7.b30b28p-4), acos(cf32.init(0x0p+0, -0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x7.b30b28p-4), acos(cf32.init(-0x0p+0, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x7.b30b28p-4), acos(cf32.init(-0x8p-152, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x7.b30b28p-4), acos(cf32.init(-0x0p+0, -0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x7.b30b28p-4), acos(cf32.init(-0x8p-152, -0x8p-4)));
    try std.testing.expectEqual(cf32.init(0x1.0c1524p+0, -0x8p-152), acos(cf32.init(0x8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.0c1524p+0, -0x0p+0), acos(cf32.init(0x8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x2.182a48p+0, -0x8p-152), acos(cf32.init(-0x8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x2.182a48p+0, -0x0p+0), acos(cf32.init(-0x8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.0c1524p+0, 0x0p+0), acos(cf32.init(0x8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.0c1524p+0, 0x8p-152), acos(cf32.init(0x8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x2.182a48p+0, 0x0p+0), acos(cf32.init(-0x8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x2.182a48p+0, 0x8p-152), acos(cf32.init(-0x8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x1p-52), acos(cf32.init(0x1p-52, 0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x1p-52), acos(cf32.init(0x1p-52, -0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x1p-52), acos(cf32.init(-0x1p-52, 0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x1p-52), acos(cf32.init(-0x1p-52, -0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x1p-52), acos(cf32.init(0x8p-152, 0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x1p-52), acos(cf32.init(0x0p+0, 0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x1p-52), acos(cf32.init(0x8p-152, -0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x1p-52), acos(cf32.init(0x0p+0, -0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x1p-52), acos(cf32.init(-0x0p+0, 0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x1p-52), acos(cf32.init(-0x8p-152, 0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x1p-52), acos(cf32.init(-0x0p+0, -0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x1p-52), acos(cf32.init(-0x8p-152, -0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x8p-152), acos(cf32.init(0x1p-52, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), acos(cf32.init(0x1p-52, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x8p-152), acos(cf32.init(-0x1p-52, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), acos(cf32.init(-0x1p-52, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), acos(cf32.init(0x1p-52, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x8p-152), acos(cf32.init(0x1p-52, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), acos(cf32.init(-0x1p-52, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x8p-152), acos(cf32.init(-0x1p-52, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x1p-52), acos(cf32.init(0x0p+0, 0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x1p-52), acos(cf32.init(0x0p+0, -0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x1p-52), acos(cf32.init(-0x0p+0, 0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x1p-52), acos(cf32.init(-0x0p+0, -0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), acos(cf32.init(0x1p-52, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), acos(cf32.init(-0x1p-52, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), acos(cf32.init(0x1p-52, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), acos(cf32.init(-0x1p-52, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x8p-152), acos(cf32.init(0x8p-152, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), acos(cf32.init(0x8p-152, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x8p-152), acos(cf32.init(0x0p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), acos(cf32.init(0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), acos(cf32.init(0x8p-152, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x8p-152), acos(cf32.init(0x8p-152, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), acos(cf32.init(0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x8p-152), acos(cf32.init(0x0p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x8p-152), acos(cf32.init(-0x0p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), acos(cf32.init(-0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x8p-152), acos(cf32.init(-0x8p-152, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), acos(cf32.init(-0x8p-152, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), acos(cf32.init(-0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x8p-152), acos(cf32.init(-0x0p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), acos(cf32.init(-0x8p-152, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x8p-152), acos(cf32.init(-0x8p-152, -0x8p-152)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0x2p-64, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b2p-4), acos(cf32.init(0x2p-64, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b2p-4), acos(cf32.init(0x2p-64, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0x2p-64, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0x2p-64, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b2p-4), acos(cf32.init(-0x2p-64, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b2p-4), acos(cf32.init(-0x2p-64, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0x2p-64, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e6p-32, -0x1.6a09e6p-32), acos(cf32.init(0x1p+0, 0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e6p-12, -0x1.6a09e6p-52), acos(cf32.init(0xf.fffffp-4, 0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x3.2428c8p+0, -0x1.6a09e6p-52), acos(cf32.init(-0xf.fffffp-4, 0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x1.6a09e6p-32), acos(cf32.init(-0x1p+0, 0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e6p-32, 0x1.6a09e6p-32), acos(cf32.init(0x1p+0, -0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e6p-12, 0x1.6a09e6p-52), acos(cf32.init(0xf.fffffp-4, -0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x3.2428c8p+0, 0x1.6a09e6p-52), acos(cf32.init(-0xf.fffffp-4, -0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x1.6a09e6p-32), acos(cf32.init(-0x1p+0, -0x2p-64)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b2p-4), acos(cf32.init(0x8p-152, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b2p-4), acos(cf32.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b2p-4), acos(cf32.init(0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b2p-4), acos(cf32.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b2p-4), acos(cf32.init(-0x0p+0, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b2p-4), acos(cf32.init(-0x8p-152, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b2p-4), acos(cf32.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b2p-4), acos(cf32.init(-0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x2.d413ccp-76, -0x2.d413ccp-76), acos(cf32.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0x0p+0), acos(cf32.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e6p-12, -0x5.a8p-140), acos(cf32.init(0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e6p-12, -0x0p+0), acos(cf32.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.2428c8p+0, -0x5.a8p-140), acos(cf32.init(-0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x3.2428c8p+0, -0x0p+0), acos(cf32.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x2.d413ccp-76), acos(cf32.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x0p+0), acos(cf32.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x0p+0), acos(cf32.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x2.d413ccp-76, 0x2.d413ccp-76), acos(cf32.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e6p-12, 0x0p+0), acos(cf32.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e6p-12, 0x5.a8p-140), acos(cf32.init(0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x3.2428c8p+0, 0x0p+0), acos(cf32.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.2428c8p+0, 0x5.a8p-140), acos(cf32.init(-0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x0p+0), acos(cf32.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x2.d413ccp-76), acos(cf32.init(-0x1p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b2p-4), acos(cf32.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b2p-4), acos(cf32.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b2p-4), acos(cf32.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b2p-4), acos(cf32.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0x0p+0), acos(cf32.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e6p-12, -0x0p+0), acos(cf32.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.2428c8p+0, -0x0p+0), acos(cf32.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x0p+0), acos(cf32.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x0p+0), acos(cf32.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e6p-12, 0x0p+0), acos(cf32.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.2428c8p+0, 0x0p+0), acos(cf32.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x0p+0), acos(cf32.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x7.b30b28p-4), acos(cf32.init(0x2p-64, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x7.b30b28p-4), acos(cf32.init(0x2p-64, -0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x7.b30b28p-4), acos(cf32.init(-0x2p-64, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x7.b30b28p-4), acos(cf32.init(-0x2p-64, -0x8p-4)));
    try std.testing.expectEqual(cf32.init(0x1.0c1524p+0, -0x2.4f34e8p-64), acos(cf32.init(0x8p-4, 0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x2.182a48p+0, -0x2.4f34e8p-64), acos(cf32.init(-0x8p-4, 0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x1.0c1524p+0, 0x2.4f34e8p-64), acos(cf32.init(0x8p-4, -0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x2.182a48p+0, 0x2.4f34e8p-64), acos(cf32.init(-0x8p-4, -0x2p-64)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x7.b30b28p-4), acos(cf32.init(0x8p-152, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x7.b30b28p-4), acos(cf32.init(0x0p+0, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x7.b30b28p-4), acos(cf32.init(0x8p-152, -0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x7.b30b28p-4), acos(cf32.init(0x0p+0, -0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x7.b30b28p-4), acos(cf32.init(-0x0p+0, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x7.b30b28p-4), acos(cf32.init(-0x8p-152, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x7.b30b28p-4), acos(cf32.init(-0x0p+0, -0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x7.b30b28p-4), acos(cf32.init(-0x8p-152, -0x8p-4)));
    try std.testing.expectEqual(cf32.init(0x1.0c1524p+0, -0x8p-152), acos(cf32.init(0x8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.0c1524p+0, -0x0p+0), acos(cf32.init(0x8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x2.182a48p+0, -0x8p-152), acos(cf32.init(-0x8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x2.182a48p+0, -0x0p+0), acos(cf32.init(-0x8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.0c1524p+0, 0x0p+0), acos(cf32.init(0x8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.0c1524p+0, 0x8p-152), acos(cf32.init(0x8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x2.182a48p+0, 0x0p+0), acos(cf32.init(-0x8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x2.182a48p+0, 0x8p-152), acos(cf32.init(-0x8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2p-64), acos(cf32.init(0x2p-64, 0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2p-64), acos(cf32.init(0x2p-64, -0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2p-64), acos(cf32.init(-0x2p-64, 0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2p-64), acos(cf32.init(-0x2p-64, -0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2p-64), acos(cf32.init(0x8p-152, 0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2p-64), acos(cf32.init(0x0p+0, 0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2p-64), acos(cf32.init(0x8p-152, -0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2p-64), acos(cf32.init(0x0p+0, -0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2p-64), acos(cf32.init(-0x0p+0, 0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2p-64), acos(cf32.init(-0x8p-152, 0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2p-64), acos(cf32.init(-0x0p+0, -0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2p-64), acos(cf32.init(-0x8p-152, -0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x8p-152), acos(cf32.init(0x2p-64, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), acos(cf32.init(0x2p-64, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x8p-152), acos(cf32.init(-0x2p-64, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), acos(cf32.init(-0x2p-64, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), acos(cf32.init(0x2p-64, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x8p-152), acos(cf32.init(0x2p-64, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), acos(cf32.init(-0x2p-64, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x8p-152), acos(cf32.init(-0x2p-64, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2p-64), acos(cf32.init(0x0p+0, 0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2p-64), acos(cf32.init(0x0p+0, -0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2p-64), acos(cf32.init(-0x0p+0, 0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2p-64), acos(cf32.init(-0x0p+0, -0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), acos(cf32.init(0x2p-64, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), acos(cf32.init(-0x2p-64, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), acos(cf32.init(0x2p-64, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), acos(cf32.init(-0x2p-64, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x8p-152), acos(cf32.init(0x8p-152, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), acos(cf32.init(0x8p-152, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x8p-152), acos(cf32.init(0x0p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), acos(cf32.init(0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), acos(cf32.init(0x8p-152, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x8p-152), acos(cf32.init(0x8p-152, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), acos(cf32.init(0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x8p-152), acos(cf32.init(0x0p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x8p-152), acos(cf32.init(-0x0p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), acos(cf32.init(-0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x8p-152), acos(cf32.init(-0x8p-152, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), acos(cf32.init(-0x8p-152, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), acos(cf32.init(-0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x8p-152), acos(cf32.init(-0x0p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), acos(cf32.init(-0x8p-152, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x8p-152), acos(cf32.init(-0x8p-152, -0x8p-152)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0x8p-108, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b2p-4), acos(cf32.init(0x8p-108, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b2p-4), acos(cf32.init(0x8p-108, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0x8p-108, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0x8p-108, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b2p-4), acos(cf32.init(-0x8p-108, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b2p-4), acos(cf32.init(-0x8p-108, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0x8p-108, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0xb.504f3p-56, -0xb.504f3p-56), acos(cf32.init(0x1p+0, 0x8p-108)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e6p-12, -0x5.a82798p-96), acos(cf32.init(0xf.fffffp-4, 0x8p-108)));
    try std.testing.expectEqual(cf32.init(0x3.2428c8p+0, -0x5.a82798p-96), acos(cf32.init(-0xf.fffffp-4, 0x8p-108)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0xb.504f3p-56), acos(cf32.init(-0x1p+0, 0x8p-108)));
    try std.testing.expectEqual(cf32.init(0xb.504f3p-56, 0xb.504f3p-56), acos(cf32.init(0x1p+0, -0x8p-108)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e6p-12, 0x5.a82798p-96), acos(cf32.init(0xf.fffffp-4, -0x8p-108)));
    try std.testing.expectEqual(cf32.init(0x3.2428c8p+0, 0x5.a82798p-96), acos(cf32.init(-0xf.fffffp-4, -0x8p-108)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0xb.504f3p-56), acos(cf32.init(-0x1p+0, -0x8p-108)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b2p-4), acos(cf32.init(0x8p-152, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b2p-4), acos(cf32.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b2p-4), acos(cf32.init(0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b2p-4), acos(cf32.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b2p-4), acos(cf32.init(-0x0p+0, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b2p-4), acos(cf32.init(-0x8p-152, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b2p-4), acos(cf32.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b2p-4), acos(cf32.init(-0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x2.d413ccp-76, -0x2.d413ccp-76), acos(cf32.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0x0p+0), acos(cf32.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e6p-12, -0x5.a8p-140), acos(cf32.init(0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e6p-12, -0x0p+0), acos(cf32.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.2428c8p+0, -0x5.a8p-140), acos(cf32.init(-0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x3.2428c8p+0, -0x0p+0), acos(cf32.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x2.d413ccp-76), acos(cf32.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x0p+0), acos(cf32.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x0p+0), acos(cf32.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x2.d413ccp-76, 0x2.d413ccp-76), acos(cf32.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e6p-12, 0x0p+0), acos(cf32.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e6p-12, 0x5.a8p-140), acos(cf32.init(0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x3.2428c8p+0, 0x0p+0), acos(cf32.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.2428c8p+0, 0x5.a8p-140), acos(cf32.init(-0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x0p+0), acos(cf32.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x2.d413ccp-76), acos(cf32.init(-0x1p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b2p-4), acos(cf32.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b2p-4), acos(cf32.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b2p-4), acos(cf32.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b2p-4), acos(cf32.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0x0p+0), acos(cf32.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e6p-12, -0x0p+0), acos(cf32.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.2428c8p+0, -0x0p+0), acos(cf32.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x0p+0), acos(cf32.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x0p+0), acos(cf32.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e6p-12, 0x0p+0), acos(cf32.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.2428c8p+0, 0x0p+0), acos(cf32.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x0p+0), acos(cf32.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x7.b30b28p-4), acos(cf32.init(0x8p-108, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x7.b30b28p-4), acos(cf32.init(0x8p-108, -0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x7.b30b28p-4), acos(cf32.init(-0x8p-108, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x7.b30b28p-4), acos(cf32.init(-0x8p-108, -0x8p-4)));
    try std.testing.expectEqual(cf32.init(0x1.0c1524p+0, -0x9.3cd3ap-108), acos(cf32.init(0x8p-4, 0x8p-108)));
    try std.testing.expectEqual(cf32.init(0x2.182a48p+0, -0x9.3cd3ap-108), acos(cf32.init(-0x8p-4, 0x8p-108)));
    try std.testing.expectEqual(cf32.init(0x1.0c1524p+0, 0x9.3cd3ap-108), acos(cf32.init(0x8p-4, -0x8p-108)));
    try std.testing.expectEqual(cf32.init(0x2.182a48p+0, 0x9.3cd3ap-108), acos(cf32.init(-0x8p-4, -0x8p-108)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x8p-108), acos(cf32.init(0x8p-108, 0x8p-108)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x8p-108), acos(cf32.init(0x8p-108, -0x8p-108)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x8p-108), acos(cf32.init(-0x8p-108, 0x8p-108)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x8p-108), acos(cf32.init(-0x8p-108, -0x8p-108)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x8p-108), acos(cf32.init(0x8p-152, 0x8p-108)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x8p-108), acos(cf32.init(0x0p+0, 0x8p-108)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x8p-108), acos(cf32.init(0x8p-152, -0x8p-108)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x8p-108), acos(cf32.init(0x0p+0, -0x8p-108)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x8p-108), acos(cf32.init(-0x0p+0, 0x8p-108)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x8p-108), acos(cf32.init(-0x8p-152, 0x8p-108)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x8p-108), acos(cf32.init(-0x0p+0, -0x8p-108)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x8p-108), acos(cf32.init(-0x8p-152, -0x8p-108)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x8p-152), acos(cf32.init(0x8p-108, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), acos(cf32.init(0x8p-108, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x8p-152), acos(cf32.init(-0x8p-108, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), acos(cf32.init(-0x8p-108, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), acos(cf32.init(0x8p-108, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x8p-152), acos(cf32.init(0x8p-108, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), acos(cf32.init(-0x8p-108, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x8p-152), acos(cf32.init(-0x8p-108, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x8p-108), acos(cf32.init(0x0p+0, 0x8p-108)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x8p-108), acos(cf32.init(0x0p+0, -0x8p-108)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x8p-108), acos(cf32.init(-0x0p+0, 0x8p-108)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x8p-108), acos(cf32.init(-0x0p+0, -0x8p-108)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), acos(cf32.init(0x8p-108, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), acos(cf32.init(-0x8p-108, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), acos(cf32.init(0x8p-108, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), acos(cf32.init(-0x8p-108, -0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0x1p-112, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b2p-4), acos(cf32.init(0x1p-112, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b2p-4), acos(cf32.init(0x1p-112, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0x1p-112, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0x1p-112, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b2p-4), acos(cf32.init(-0x1p-112, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b2p-4), acos(cf32.init(-0x1p-112, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0x1p-112, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1p-56, -0x1p-56), acos(cf32.init(0x1p+0, 0x1p-112)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e6p-12, -0xb.504f3p-104), acos(cf32.init(0xf.fffffp-4, 0x1p-112)));
    try std.testing.expectEqual(cf32.init(0x3.2428c8p+0, -0xb.504f3p-104), acos(cf32.init(-0xf.fffffp-4, 0x1p-112)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x1p-56), acos(cf32.init(-0x1p+0, 0x1p-112)));
    try std.testing.expectEqual(cf32.init(0x1p-56, 0x1p-56), acos(cf32.init(0x1p+0, -0x1p-112)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e6p-12, 0xb.504f3p-104), acos(cf32.init(0xf.fffffp-4, -0x1p-112)));
    try std.testing.expectEqual(cf32.init(0x3.2428c8p+0, 0xb.504f3p-104), acos(cf32.init(-0xf.fffffp-4, -0x1p-112)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x1p-56), acos(cf32.init(-0x1p+0, -0x1p-112)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b2p-4), acos(cf32.init(0x8p-152, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b2p-4), acos(cf32.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b2p-4), acos(cf32.init(0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b2p-4), acos(cf32.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b2p-4), acos(cf32.init(-0x0p+0, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b2p-4), acos(cf32.init(-0x8p-152, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b2p-4), acos(cf32.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b2p-4), acos(cf32.init(-0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x2.d413ccp-76, -0x2.d413ccp-76), acos(cf32.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0x0p+0), acos(cf32.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e6p-12, -0x5.a8p-140), acos(cf32.init(0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e6p-12, -0x0p+0), acos(cf32.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.2428c8p+0, -0x5.a8p-140), acos(cf32.init(-0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x3.2428c8p+0, -0x0p+0), acos(cf32.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x2.d413ccp-76), acos(cf32.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x0p+0), acos(cf32.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x0p+0), acos(cf32.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x2.d413ccp-76, 0x2.d413ccp-76), acos(cf32.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e6p-12, 0x0p+0), acos(cf32.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e6p-12, 0x5.a8p-140), acos(cf32.init(0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x3.2428c8p+0, 0x0p+0), acos(cf32.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.2428c8p+0, 0x5.a8p-140), acos(cf32.init(-0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x0p+0), acos(cf32.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x2.d413ccp-76), acos(cf32.init(-0x1p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b2p-4), acos(cf32.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b2p-4), acos(cf32.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b3p-4), acos(cf32.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xe.1a1b2p-4), acos(cf32.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b2p-4), acos(cf32.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xe.1a1b3p-4), acos(cf32.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0x0p+0), acos(cf32.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e6p-12, -0x0p+0), acos(cf32.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.2428c8p+0, -0x0p+0), acos(cf32.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, -0x0p+0), acos(cf32.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x0p+0), acos(cf32.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e6p-12, 0x0p+0), acos(cf32.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.2428c8p+0, 0x0p+0), acos(cf32.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x3.243f6cp+0, 0x0p+0), acos(cf32.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x7.b30b28p-4), acos(cf32.init(0x1p-112, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x7.b30b28p-4), acos(cf32.init(0x1p-112, -0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x7.b30b28p-4), acos(cf32.init(-0x1p-112, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x7.b30b28p-4), acos(cf32.init(-0x1p-112, -0x8p-4)));
    try std.testing.expectEqual(cf32.init(0x1.0c1524p+0, -0x1.279a74p-112), acos(cf32.init(0x8p-4, 0x1p-112)));
    try std.testing.expectEqual(cf32.init(0x2.182a48p+0, -0x1.279a74p-112), acos(cf32.init(-0x8p-4, 0x1p-112)));
    try std.testing.expectEqual(cf32.init(0x1.0c1524p+0, 0x1.279a74p-112), acos(cf32.init(0x8p-4, -0x1p-112)));
    try std.testing.expectEqual(cf32.init(0x2.182a48p+0, 0x1.279a74p-112), acos(cf32.init(-0x8p-4, -0x1p-112)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x1p-112), acos(cf32.init(0x1p-112, 0x1p-112)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x1p-112), acos(cf32.init(0x1p-112, -0x1p-112)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x1p-112), acos(cf32.init(-0x1p-112, 0x1p-112)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x1p-112), acos(cf32.init(-0x1p-112, -0x1p-112)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x1p-112), acos(cf32.init(0x8p-152, 0x1p-112)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x1p-112), acos(cf32.init(0x0p+0, 0x1p-112)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x1p-112), acos(cf32.init(0x8p-152, -0x1p-112)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x1p-112), acos(cf32.init(0x0p+0, -0x1p-112)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x1p-112), acos(cf32.init(-0x0p+0, 0x1p-112)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x1p-112), acos(cf32.init(-0x8p-152, 0x1p-112)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x1p-112), acos(cf32.init(-0x0p+0, -0x1p-112)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x1p-112), acos(cf32.init(-0x8p-152, -0x1p-112)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x8p-152), acos(cf32.init(0x1p-112, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), acos(cf32.init(0x1p-112, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x8p-152), acos(cf32.init(-0x1p-112, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), acos(cf32.init(-0x1p-112, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), acos(cf32.init(0x1p-112, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x8p-152), acos(cf32.init(0x1p-112, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), acos(cf32.init(-0x1p-112, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x8p-152), acos(cf32.init(-0x1p-112, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x1p-112), acos(cf32.init(0x0p+0, 0x1p-112)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x1p-112), acos(cf32.init(0x0p+0, -0x1p-112)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x1p-112), acos(cf32.init(-0x0p+0, 0x1p-112)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x1p-112), acos(cf32.init(-0x0p+0, -0x1p-112)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), acos(cf32.init(0x1p-112, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), acos(cf32.init(-0x1p-112, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), acos(cf32.init(0x1p-112, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), acos(cf32.init(-0x1p-112, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.1e15ccp+0, -0x1.21e48cp+0), acos(cf32.init(0xcp-4, 0x1.4p+0)));
    try std.testing.expectEqual(cf32.init(0x2.243604p+0, 0x1.fbbf4p+0), acos(cf32.init(-0x2p+0, -0x3p+0)));

    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), acos(cf64.init(0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), acos(cf64.init(-0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), acos(cf64.init(-0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), acos(cf64.init(0x0p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.31dc0090b63d8p+0), acos(cf64.init(0x0p+0, -0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.31dc0090b63d8p+0), acos(cf64.init(-0x0p+0, -0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x7.b30b2bb145828p-4), acos(cf64.init(0x0p+0, -0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x7.b30b2bb145828p-4), acos(cf64.init(-0x0p+0, -0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x7.b30b2bb145828p-4), acos(cf64.init(0x0p+0, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x7.b30b2bb145828p-4), acos(cf64.init(-0x0p+0, 0x8p-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.31dc0090b63d8p+0), acos(cf64.init(0x0p+0, 0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.31dc0090b63d8p+0), acos(cf64.init(-0x0p+0, 0x1.8p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0xf.661657628b05p-4), acos(cf64.init(-0x1.8p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0xf.661657628b05p-4), acos(cf64.init(-0x1.8p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x0p+0), acos(cf64.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x0p+0), acos(cf64.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x2.182a4705ae6ccp+0, -0x0p+0), acos(cf64.init(-0x8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x2.182a4705ae6ccp+0, 0x0p+0), acos(cf64.init(-0x8p-4, -0x0p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.0c152382d7366p+0, -0x0p+0), acos(cf64.init(0x8p-4, 0x0p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.0c152382d7366p+0, 0x0p+0), acos(cf64.init(0x8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x0p+0), acos(cf64.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x0p+0), acos(cf64.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0xf.661657628b05p-4), acos(cf64.init(0x1.8p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0xf.661657628b05p-4), acos(cf64.init(0x1.8p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x4p-52, -0x2.359bac65ecc56p+4), acos(cf64.init(0x4p+48, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x4p-52, 0x2.359bac65ecc56p+4), acos(cf64.init(0x4p+48, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a2cp+0, -0x2.359bac65ecc56p+4), acos(cf64.init(-0x4p+48, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a2cp+0, 0x2.359bac65ecc56p+4), acos(cf64.init(-0x4p+48, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d14p+0, -0x2.359bac65ecc56p+4), acos(cf64.init(0x1p+0, 0x4p+48)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d1cp+0, -0x2.359bac65ecc56p+4), acos(cf64.init(-0x1p+0, 0x4p+48)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d14p+0, 0x2.359bac65ecc56p+4), acos(cf64.init(0x1p+0, -0x4p+48)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d1cp+0, 0x2.359bac65ecc56p+4), acos(cf64.init(-0x1p+0, -0x4p+48)));
    try std.testing.expectEqual(cf64.init(0x1.000001000001p-128, -0x5.96a7e12e0b98cp+4), acos(cf64.init(0xf.fffffp+124, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1p-500, -0x1.5b4448e7fd9b1p+8), acos(cf64.init(0x1p+500, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.000001000001p-128, 0x5.96a7e12e0b98cp+4), acos(cf64.init(0xf.fffffp+124, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1p-500, 0x1.5b4448e7fd9b1p+8), acos(cf64.init(0x1p+500, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x5.96a7e12e0b98cp+4), acos(cf64.init(-0xf.fffffp+124, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x1.5b4448e7fd9b1p+8), acos(cf64.init(-0x1p+500, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x5.96a7e12e0b98cp+4), acos(cf64.init(-0xf.fffffp+124, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x1.5b4448e7fd9b1p+8), acos(cf64.init(-0x1p+500, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x5.96a7e12e0b98cp+4), acos(cf64.init(0x1p+0, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.5b4448e7fd9b1p+8), acos(cf64.init(0x1p+0, 0x1p+500)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x5.96a7e12e0b98cp+4), acos(cf64.init(-0x1p+0, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.5b4448e7fd9b1p+8), acos(cf64.init(-0x1p+0, 0x1p+500)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x5.96a7e12e0b98cp+4), acos(cf64.init(0x1p+0, -0xf.fffffp+124)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.5b4448e7fd9b1p+8), acos(cf64.init(0x1p+0, -0x1p+500)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x5.96a7e12e0b98cp+4), acos(cf64.init(-0x1p+0, -0xf.fffffp+124)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.5b4448e7fd9b1p+8), acos(cf64.init(-0x1p+0, -0x1p+500)));
    try std.testing.expectEqual(cf64.init(0x1.000001000001p-128, -0x5.96a7e12e0b98cp+4), acos(cf64.init(0xf.fffffp+124, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1p-1024, -0x2.c679d1f73f0fcp+8), acos(cf64.init(0xf.ffffffffffff8p+1020, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.000001000001p-128, 0x5.96a7e12e0b98cp+4), acos(cf64.init(0xf.fffffp+124, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1p-1024, 0x2.c679d1f73f0fcp+8), acos(cf64.init(0xf.ffffffffffff8p+1020, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x5.96a7e12e0b98cp+4), acos(cf64.init(-0xf.fffffp+124, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x2.c679d1f73f0fcp+8), acos(cf64.init(-0xf.ffffffffffff8p+1020, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x5.96a7e12e0b98cp+4), acos(cf64.init(-0xf.fffffp+124, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x2.c679d1f73f0fcp+8), acos(cf64.init(-0xf.ffffffffffff8p+1020, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x5.96a7e12e0b98cp+4), acos(cf64.init(0x1p+0, 0xf.fffffp+124)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x2.c679d1f73f0fcp+8), acos(cf64.init(0x1p+0, 0xf.ffffffffffff8p+1020)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x5.96a7e12e0b98cp+4), acos(cf64.init(-0x1p+0, 0xf.fffffp+124)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x2.c679d1f73f0fcp+8), acos(cf64.init(-0x1p+0, 0xf.ffffffffffff8p+1020)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x5.96a7e12e0b98cp+4), acos(cf64.init(0x1p+0, -0xf.fffffp+124)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x2.c679d1f73f0fcp+8), acos(cf64.init(0x1p+0, -0xf.ffffffffffff8p+1020)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x5.96a7e12e0b98cp+4), acos(cf64.init(-0x1p+0, -0xf.fffffp+124)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x2.c679d1f73f0fcp+8), acos(cf64.init(-0x1p+0, -0xf.ffffffffffff8p+1020)));
    // try std.testing.expectEqual(cf64.init(0xc.90fdaa22168cp-4, -0x5.9bb167117aedp+4), acos(cf64.init(0xf.8p+124, 0xf.8p+124)));
    try std.testing.expectEqual(cf64.init(0xc.90fdaa22168cp-4, -0x5.9c3371edca274p+4), acos(cf64.init(0xf.fffffp+124, 0xf.fffffp+124)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x2.c671b1487a1c2p+8), acos(cf64.init(0xf.fffffp+124, 0xf.8p+1020)));
    // try std.testing.expectEqual(cf64.init(0x1.08420f7bdef7cp-896, -0x2.c671b1487a1c2p+8), acos(cf64.init(0xf.8p+1020, 0xf.fffffp+124)));
    // try std.testing.expectEqual(cf64.init(0xc.90fdaa22168cp-4, -0x2.c6ca6a547605p+8), acos(cf64.init(0xf.8p+1020, 0xf.8p+1020)));
    try std.testing.expectEqual(cf64.init(0xc.90fdaa22168cp-4, -0x5.9c3371edca274p+4), acos(cf64.init(0xf.fffffp+124, 0xf.fffffp+124)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x2.c679d1f73f0fcp+8), acos(cf64.init(0xf.fffffp+124, 0xf.ffffffffffff8p+1020)));
    // try std.testing.expectEqual(cf64.init(0xf.fffff00000008p-900, -0x2.c679d1f73f0fcp+8), acos(cf64.init(0xf.ffffffffffff8p+1020, 0xf.fffffp+124)));
    // try std.testing.expectEqual(cf64.init(0xc.90fdaa22168cp-4, -0x2.c6d28b033af8ap+8), acos(cf64.init(0xf.ffffffffffff8p+1020, 0xf.ffffffffffff8p+1020)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.31dc0090b63d8p+0), acos(cf64.init(0xf.8p-132, 0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.31dc0090b63d8p+0), acos(cf64.init(0xf.8p-132, -0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.31dc0090b63d8p+0), acos(cf64.init(-0xf.8p-132, 0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.31dc0090b63d8p+0), acos(cf64.init(-0xf.8p-132, -0x1.8p+0)));
    try std.testing.expectEqual(cf64.init(0xd.dd164bc8f735p-132, -0xf.661657628b05p-4), acos(cf64.init(0x1.8p+0, 0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0xf.661657628b05p-4), acos(cf64.init(-0x1.8p+0, 0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(0xd.dd164bc8f735p-132, 0xf.661657628b05p-4), acos(cf64.init(0x1.8p+0, -0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0xf.661657628b05p-4), acos(cf64.init(-0x1.8p+0, -0xf.8p-132)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.31dc0090b63d8p+0), acos(cf64.init(0x8p-152, 0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.31dc0090b63d8p+0), acos(cf64.init(0x0p+0, 0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.31dc0090b63d8p+0), acos(cf64.init(0xf.8p-1028, 0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.31dc0090b63d8p+0), acos(cf64.init(0x8p-152, -0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.31dc0090b63d8p+0), acos(cf64.init(0x0p+0, -0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.31dc0090b63d8p+0), acos(cf64.init(0xf.8p-1028, -0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.31dc0090b63d8p+0), acos(cf64.init(-0x0p+0, 0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.31dc0090b63d8p+0), acos(cf64.init(-0x8p-152, 0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.31dc0090b63d8p+0), acos(cf64.init(-0xf.8p-1028, 0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.31dc0090b63d8p+0), acos(cf64.init(-0x0p+0, -0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.31dc0090b63d8p+0), acos(cf64.init(-0x8p-152, -0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.31dc0090b63d8p+0), acos(cf64.init(-0xf.8p-1028, -0x1.8p+0)));
    try std.testing.expectEqual(cf64.init(0x7.27c9716ffb764p-152, -0xf.661657628b05p-4), acos(cf64.init(0x1.8p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0xf.661657628b05p-4), acos(cf64.init(0x1.8p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0xd.dd164bc8f734p-1028, -0xf.661657628b05p-4), acos(cf64.init(0x1.8p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0xf.661657628b05p-4), acos(cf64.init(-0x1.8p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0xf.661657628b05p-4), acos(cf64.init(-0x1.8p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0xf.661657628b05p-4), acos(cf64.init(-0x1.8p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0xf.661657628b05p-4), acos(cf64.init(0x1.8p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x7.27c9716ffb764p-152, 0xf.661657628b05p-4), acos(cf64.init(0x1.8p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0xd.dd164bc8f734p-1028, 0xf.661657628b05p-4), acos(cf64.init(0x1.8p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0xf.661657628b05p-4), acos(cf64.init(-0x1.8p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0xf.661657628b05p-4), acos(cf64.init(-0x1.8p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0xf.661657628b05p-4), acos(cf64.init(-0x1.8p+0, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.31dc0090b63d8p+0), acos(cf64.init(0x8p-152, 0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.31dc0090b63d8p+0), acos(cf64.init(0x0p+0, 0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.31dc0090b63d8p+0), acos(cf64.init(0x4p-1076, 0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.31dc0090b63d8p+0), acos(cf64.init(0x8p-152, -0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.31dc0090b63d8p+0), acos(cf64.init(0x0p+0, -0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.31dc0090b63d8p+0), acos(cf64.init(0x4p-1076, -0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.31dc0090b63d8p+0), acos(cf64.init(-0x0p+0, 0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.31dc0090b63d8p+0), acos(cf64.init(-0x8p-152, 0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.31dc0090b63d8p+0), acos(cf64.init(-0x4p-1076, 0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.31dc0090b63d8p+0), acos(cf64.init(-0x0p+0, -0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.31dc0090b63d8p+0), acos(cf64.init(-0x8p-152, -0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.31dc0090b63d8p+0), acos(cf64.init(-0x4p-1076, -0x1.8p+0)));
    try std.testing.expectEqual(cf64.init(0x7.27c9716ffb764p-152, -0xf.661657628b05p-4), acos(cf64.init(0x1.8p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0xf.661657628b05p-4), acos(cf64.init(0x1.8p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x4p-1076, -0xf.661657628b05p-4), acos(cf64.init(0x1.8p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0xf.661657628b05p-4), acos(cf64.init(-0x1.8p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0xf.661657628b05p-4), acos(cf64.init(-0x1.8p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0xf.661657628b05p-4), acos(cf64.init(-0x1.8p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0xf.661657628b05p-4), acos(cf64.init(0x1.8p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x7.27c9716ffb764p-152, 0xf.661657628b05p-4), acos(cf64.init(0x1.8p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x4p-1076, 0xf.661657628b05p-4), acos(cf64.init(0x1.8p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0xf.661657628b05p-4), acos(cf64.init(-0x1.8p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0xf.661657628b05p-4), acos(cf64.init(-0x1.8p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0xf.661657628b05p-4), acos(cf64.init(-0x1.8p+0, -0x4p-1076)));
    // try std.testing.expectEqual(cf64.init(0x1.38aadea15829fp+0, -0xe.d170de964f5d8p-4), acos(cf64.init(0x8p-4, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.38aadea15829fp+0, 0xe.d170de964f5d8p-4), acos(cf64.init(0x8p-4, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.eb948be72d791p+0, -0xe.d170de964f5d8p-4), acos(cf64.init(-0x8p-4, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.eb948be72d791p+0, 0xe.d170de964f5d8p-4), acos(cf64.init(-0x8p-4, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0xa.cc583f03a22a8p-4, -0xb.b9c8f86edeb48p-4), acos(cf64.init(0x1p+0, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x2.7779e6984b806p+0, -0xb.b9c8f86edeb48p-4), acos(cf64.init(-0x1p+0, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(0xa.cc583f03a22a8p-4, 0xb.b9c8f86edeb48p-4), acos(cf64.init(0x1p+0, -0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x2.7779e6984b806p+0, 0xb.b9c8f86edeb48p-4), acos(cf64.init(-0x1p+0, -0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.64fd8d454758cp+0, -0xe.4787aa0d7d0a8p-4), acos(cf64.init(0x4p-4, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.64fd8d454758cp+0, 0xe.4787aa0d7d0a8p-4), acos(cf64.init(0x4p-4, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.bf41dd433e4a4p+0, -0xe.4787aa0d7d0a8p-4), acos(cf64.init(-0x4p-4, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.bf41dd433e4a4p+0, 0xe.4787aa0d7d0a8p-4), acos(cf64.init(-0x4p-4, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x7.d32025ccefabp-4, -0x8.281ac2ec921bp-4), acos(cf64.init(0x1p+0, 0x4p-4)));
    try std.testing.expectEqual(cf64.init(0x2.a70d682bb6a86p+0, -0x8.281ac2ec921bp-4), acos(cf64.init(-0x1p+0, 0x4p-4)));
    // try std.testing.expectEqual(cf64.init(0x7.d32025ccefabp-4, 0x8.281ac2ec921bp-4), acos(cf64.init(0x1p+0, -0x4p-4)));
    try std.testing.expectEqual(cf64.init(0x2.a70d682bb6a86p+0, 0x8.281ac2ec921bp-4), acos(cf64.init(-0x1p+0, -0x4p-4)));
    // try std.testing.expectEqual(cf64.init(0x1.91c806df51131p+0, -0xe.1a1bda9ed1ce8p-4), acos(cf64.init(0x7.cp-12, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.91c806df51131p+0, 0xe.1a1bda9ed1ce8p-4), acos(cf64.init(0x7.cp-12, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.927763a9349p+0, -0xe.1a1bda9ed1ce8p-4), acos(cf64.init(-0x7.cp-12, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.927763a9349p+0, 0xe.1a1bda9ed1ce8p-4), acos(cf64.init(-0x7.cp-12, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0xb.223ee4fc5f3b8p-8, -0xb.23250757a42f8p-8), acos(cf64.init(0x1p+0, 0x7.cp-12)));
    try std.testing.expectEqual(cf64.init(0x3.191d2ba38943cp+0, -0xb.23250757a42f8p-8), acos(cf64.init(-0x1p+0, 0x7.cp-12)));
    try std.testing.expectEqual(cf64.init(0xb.223ee4fc5f3b8p-8, 0xb.23250757a42f8p-8), acos(cf64.init(0x1p+0, -0x7.cp-12)));
    try std.testing.expectEqual(cf64.init(0x3.191d2ba38943cp+0, 0xb.23250757a42f8p-8), acos(cf64.init(-0x1p+0, -0x7.cp-12)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb53ec7eb2p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x7.cp-32, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb53ec7eb2p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x7.cp-32, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb549bdb7ep+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x7.cp-32, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb549bdb7ep+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x7.cp-32, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x2.c8ac80ab4bf3cp-16, -0x2.c8ac80aee47d2p-16), acos(cf64.init(0x1p+0, 0x7.cp-32)));
    try std.testing.expectEqual(cf64.init(0x3.243ca1dc04f7cp+0, -0x2.c8ac80aee47d2p-16), acos(cf64.init(-0x1p+0, 0x7.cp-32)));
    try std.testing.expectEqual(cf64.init(0x2.c8ac80ab4bf3cp-16, 0x2.c8ac80aee47d2p-16), acos(cf64.init(0x1p+0, -0x7.cp-32)));
    try std.testing.expectEqual(cf64.init(0x3.243ca1dc04f7cp+0, 0x2.c8ac80aee47d2p-16), acos(cf64.init(-0x1p+0, -0x7.cp-32)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x1.fp-100, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x1.fp-100, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x1.fp-100, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x1.fp-100, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x5.9159015a3070cp-52, -0x5.9159015a3070cp-52), acos(cf64.init(0x1p+0, 0x1.fp-100)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a2ap+0, -0x5.9159015a3070cp-52), acos(cf64.init(-0x1p+0, 0x1.fp-100)));
    try std.testing.expectEqual(cf64.init(0x5.9159015a3070cp-52, 0x5.9159015a3070cp-52), acos(cf64.init(0x1p+0, -0x1.fp-100)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a2ap+0, 0x5.9159015a3070cp-52), acos(cf64.init(-0x1p+0, -0x1.fp-100)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0xf.8p-132, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0xf.8p-132, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0xf.8p-132, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0xf.8p-132, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0xf.bf7df5c6a789p-68, -0xf.bf7df5c6a789p-68), acos(cf64.init(0x1p+0, 0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0xf.bf7df5c6a789p-68), acos(cf64.init(-0x1p+0, 0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(0xf.bf7df5c6a789p-68, 0xf.bf7df5c6a789p-68), acos(cf64.init(0x1p+0, -0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0xf.bf7df5c6a789p-68), acos(cf64.init(-0x1p+0, -0xf.8p-132)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x1.fp-1000, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x1.fp-1000, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x1.fp-1000, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x1.fp-1000, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x2.d413cccfe779ap-76, -0x2.d413cccfe779ap-76), acos(cf64.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x0p+0), acos(cf64.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.645640568c1c3p-500, -0x1.645640568c1c3p-500), acos(cf64.init(0x1p+0, 0x1.fp-1000)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x2.d413cccfe779ap-76), acos(cf64.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x0p+0), acos(cf64.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x1.645640568c1c3p-500), acos(cf64.init(-0x1p+0, 0x1.fp-1000)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x0p+0), acos(cf64.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x2.d413cccfe779ap-76, 0x2.d413cccfe779ap-76), acos(cf64.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.645640568c1c3p-500, 0x1.645640568c1c3p-500), acos(cf64.init(0x1p+0, -0x1.fp-1000)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x0p+0), acos(cf64.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x2.d413cccfe779ap-76), acos(cf64.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x1.645640568c1c3p-500), acos(cf64.init(-0x1p+0, -0x1.fp-1000)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0xf.8p-1028, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0xf.8p-1028, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0xf.8p-1028, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0xf.8p-1028, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x2.d413cccfe779ap-76, -0x2.d413cccfe779ap-76), acos(cf64.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x0p+0), acos(cf64.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0xf.bf7df5c6a789p-516, -0xf.bf7df5c6a789p-516), acos(cf64.init(0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x2.d413cccfe779ap-76), acos(cf64.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x0p+0), acos(cf64.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0xf.bf7df5c6a789p-516), acos(cf64.init(-0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x0p+0), acos(cf64.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x2.d413cccfe779ap-76, 0x2.d413cccfe779ap-76), acos(cf64.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0xf.bf7df5c6a789p-516, 0xf.bf7df5c6a789p-516), acos(cf64.init(0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x0p+0), acos(cf64.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x2.d413cccfe779ap-76), acos(cf64.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0xf.bf7df5c6a789p-516), acos(cf64.init(-0x1p+0, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x4p-1076, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x4p-1076, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x4p-1076, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x4p-1076, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x2.d413cccfe779ap-76, -0x2.d413cccfe779ap-76), acos(cf64.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x0p+0), acos(cf64.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x8p-540, -0x8p-540), acos(cf64.init(0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x2.d413cccfe779ap-76), acos(cf64.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x0p+0), acos(cf64.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x8p-540), acos(cf64.init(-0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x0p+0), acos(cf64.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x2.d413cccfe779ap-76, 0x2.d413cccfe779ap-76), acos(cf64.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x8p-540, 0x8p-540), acos(cf64.init(0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x0p+0), acos(cf64.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x2.d413cccfe779ap-76), acos(cf64.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x8p-540), acos(cf64.init(-0x1p+0, -0x4p-1076)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x4p-1076, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x4p-1076, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x4p-1076, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x4p-1076, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x2.d413cccfe779ap-76, -0x2.d413cccfe779ap-76), acos(cf64.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x0p+0), acos(cf64.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x8p-540, -0x8p-540), acos(cf64.init(0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x2.d413cccfe779ap-76), acos(cf64.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x0p+0), acos(cf64.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x8p-540), acos(cf64.init(-0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x0p+0), acos(cf64.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x2.d413cccfe779ap-76, 0x2.d413cccfe779ap-76), acos(cf64.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x8p-540, 0x8p-540), acos(cf64.init(0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x0p+0), acos(cf64.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x2.d413cccfe779ap-76), acos(cf64.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x8p-540), acos(cf64.init(-0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.921fb3da38ec8p+0, -0xe.1a1b475d887ap-4), acos(cf64.init(0x2p-24, 0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb3da38ec8p+0, 0xe.1a1b475d887ap-4), acos(cf64.init(0x2p-24, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb6ae4cb68p+0, -0xe.1a1b475d887ap-4), acos(cf64.init(-0x2p-24, 0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb6ae4cb68p+0, 0xe.1a1b475d887ap-4), acos(cf64.init(-0x2p-24, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0xe.90189431f8bb8p-16, -0x2.3286b92909b7p-12), acos(cf64.init(0x1.000002p+0, 0x2p-24)));
    try std.testing.expectEqual(cf64.init(0x3.2430da6ff1712p+0, -0x2.3286b92909b7p-12), acos(cf64.init(-0x1.000002p+0, 0x2p-24)));
    try std.testing.expectEqual(cf64.init(0xe.90189431f8bb8p-16, 0x2.3286b92909b7p-12), acos(cf64.init(0x1.000002p+0, -0x2p-24)));
    try std.testing.expectEqual(cf64.init(0x3.2430da6ff1712p+0, 0x2.3286b92909b7p-12), acos(cf64.init(-0x1.000002p+0, -0x2p-24)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(0xf.8p-132, 0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(0xf.8p-132, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(-0xf.8p-132, 0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(-0xf.8p-132, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x7.bffffc200003p-120, -0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, 0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, 0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(0x7.bffffc200003p-120, 0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, -0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, -0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(-0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(-0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(0x1p-52, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x1p-52, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea14p-4), acos(cf64.init(0x1p-52, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x1p-52, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(0x1p-52, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea14p-4), acos(cf64.init(0x1p-52, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d19p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(-0x1p-52, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d19p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x1p-52, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d19p+0, -0xe.1a1b30bcea14p-4), acos(cf64.init(-0x1p-52, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d19p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x1p-52, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d19p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(-0x1p-52, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d19p+0, 0xe.1a1b30bcea14p-4), acos(cf64.init(-0x1p-52, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x7.fffffc000003p-44, -0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, 0x1p-52)));
    // try std.testing.expectEqual(cf64.init(0x4p-28, -0x4p-28), acos(cf64.init(0x1p+0, 0x1p-52)));
    // try std.testing.expectEqual(cf64.init(0x2.930a5f307dfbap-28, -0x6.3710864f5700cp-28), acos(cf64.init(0x1.0000000000001p+0, 0x1p-52)));
    // try std.testing.expectEqual(cf64.init(0x3.243f6a4885a3p+0, -0x4p-28), acos(cf64.init(-0x1p+0, 0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a888523p+0, -0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, 0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a5f54fd2p+0, -0x6.3710864f5700cp-28), acos(cf64.init(-0x1.0000000000001p+0, 0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x7.fffffc000003p-44, 0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, -0x1p-52)));
    // try std.testing.expectEqual(cf64.init(0x4p-28, 0x4p-28), acos(cf64.init(0x1p+0, -0x1p-52)));
    // try std.testing.expectEqual(cf64.init(0x2.930a5f307dfbap-28, 0x6.3710864f5700cp-28), acos(cf64.init(0x1.0000000000001p+0, -0x1p-52)));
    // try std.testing.expectEqual(cf64.init(0x3.243f6a4885a3p+0, 0x4p-28), acos(cf64.init(-0x1p+0, -0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a888523p+0, 0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, -0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a5f54fd2p+0, 0x6.3710864f5700cp-28), acos(cf64.init(-0x1.0000000000001p+0, -0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea14p-4), acos(cf64.init(0x8p-152, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea14p-4), acos(cf64.init(0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(0xf.8p-1028, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0xf.8p-1028, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea14p-4), acos(cf64.init(0xf.8p-1028, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(0x8p-152, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea14p-4), acos(cf64.init(0x8p-152, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea14p-4), acos(cf64.init(0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0xf.8p-1028, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(0xf.8p-1028, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea14p-4), acos(cf64.init(0xf.8p-1028, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea14p-4), acos(cf64.init(-0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(-0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea14p-4), acos(cf64.init(-0x8p-152, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(-0xf.8p-1028, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0xf.8p-1028, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea14p-4), acos(cf64.init(-0xf.8p-1028, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(-0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea14p-4), acos(cf64.init(-0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(-0x8p-152, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea14p-4), acos(cf64.init(-0x8p-152, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0xf.8p-1028, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(-0xf.8p-1028, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea14p-4), acos(cf64.init(-0xf.8p-1028, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x3.fffffe0000018p-140, -0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x7.bffffc200003p-1016, -0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x2.d413cccfe779ap-76, -0x2.d413cccfe779ap-76), acos(cf64.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x0p+0), acos(cf64.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0xf.bf7df5c6a789p-516, -0xf.bf7df5c6a789p-516), acos(cf64.init(0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e667f3bccp-124, -0x5.a827999fcef3p-28), acos(cf64.init(0x1.0000000000001p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x5.a827999fcef3p-28), acos(cf64.init(0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x2.bd732e69683dcp-1000, -0x5.a827999fcef3p-28), acos(cf64.init(0x1.0000000000001p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x2.d413cccfe779ap-76), acos(cf64.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x0p+0), acos(cf64.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0xf.bf7df5c6a789p-516), acos(cf64.init(-0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x5.a827999fcef3p-28), acos(cf64.init(-0x1.0000000000001p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x5.a827999fcef3p-28), acos(cf64.init(-0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x5.a827999fcef3p-28), acos(cf64.init(-0x1.0000000000001p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.fffffe0000018p-140, 0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x7.bffffc200003p-1016, 0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x0p+0), acos(cf64.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x2.d413cccfe779ap-76, 0x2.d413cccfe779ap-76), acos(cf64.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0xf.bf7df5c6a789p-516, 0xf.bf7df5c6a789p-516), acos(cf64.init(0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x5.a827999fcef3p-28), acos(cf64.init(0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e667f3bccp-124, 0x5.a827999fcef3p-28), acos(cf64.init(0x1.0000000000001p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x2.bd732e69683dcp-1000, 0x5.a827999fcef3p-28), acos(cf64.init(0x1.0000000000001p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x0p+0), acos(cf64.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x2.d413cccfe779ap-76), acos(cf64.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0xf.bf7df5c6a789p-516), acos(cf64.init(-0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x5.a827999fcef3p-28), acos(cf64.init(-0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x5.a827999fcef3p-28), acos(cf64.init(-0x1.0000000000001p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x5.a827999fcef3p-28), acos(cf64.init(-0x1.0000000000001p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea14p-4), acos(cf64.init(0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea14p-4), acos(cf64.init(0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea14p-4), acos(cf64.init(-0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(-0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea14p-4), acos(cf64.init(-0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x0p+0), acos(cf64.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x5.a827999fcef3p-28), acos(cf64.init(0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x0p+0), acos(cf64.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x5.a827999fcef3p-28), acos(cf64.init(-0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x0p+0), acos(cf64.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x5.a827999fcef3p-28), acos(cf64.init(0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x0p+0), acos(cf64.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x5.a827999fcef3p-28), acos(cf64.init(-0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(0x2p-64, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x2p-64, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea14p-4), acos(cf64.init(0x2p-64, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x2p-64, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(0x2p-64, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea14p-4), acos(cf64.init(0x2p-64, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(-0x2p-64, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x2p-64, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea14p-4), acos(cf64.init(-0x2p-64, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x2p-64, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(-0x2p-64, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea14p-4), acos(cf64.init(-0x2p-64, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0xf.fffff8000006p-56, -0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, 0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e667f3bcdp-32, -0x1.6a09e667f3bcdp-32), acos(cf64.init(0x1p+0, 0x2p-64)));
    // try std.testing.expectEqual(cf64.init(0x5.a82796cbbb2b4p-40, -0x5.a8279c73e2bc8p-28), acos(cf64.init(0x1.0000000000001p+0, 0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a871b992p+0, -0x1.6a09e667f3bcdp-32), acos(cf64.init(-0x1p+0, 0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, 0x2p-64)));
    // try std.testing.expectEqual(cf64.init(0x3.243f6a887ffaep+0, -0x5.a8279c73e2bc8p-28), acos(cf64.init(-0x1.0000000000001p+0, 0x2p-64)));
    try std.testing.expectEqual(cf64.init(0xf.fffff8000006p-56, 0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, -0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e667f3bcdp-32, 0x1.6a09e667f3bcdp-32), acos(cf64.init(0x1p+0, -0x2p-64)));
    // try std.testing.expectEqual(cf64.init(0x5.a82796cbbb2b4p-40, 0x5.a8279c73e2bc8p-28), acos(cf64.init(0x1.0000000000001p+0, -0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a871b992p+0, 0x1.6a09e667f3bcdp-32), acos(cf64.init(-0x1p+0, -0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, -0x2p-64)));
    // try std.testing.expectEqual(cf64.init(0x3.243f6a887ffaep+0, 0x5.a8279c73e2bc8p-28), acos(cf64.init(-0x1.0000000000001p+0, -0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea14p-4), acos(cf64.init(0x8p-152, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea14p-4), acos(cf64.init(0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(0x4p-1076, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea14p-4), acos(cf64.init(0x4p-1076, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(0x8p-152, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea14p-4), acos(cf64.init(0x8p-152, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea14p-4), acos(cf64.init(0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x4p-1076, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(0x4p-1076, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea14p-4), acos(cf64.init(0x4p-1076, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea14p-4), acos(cf64.init(-0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(-0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea14p-4), acos(cf64.init(-0x8p-152, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(-0x4p-1076, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea14p-4), acos(cf64.init(-0x4p-1076, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(-0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea14p-4), acos(cf64.init(-0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(-0x8p-152, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea14p-4), acos(cf64.init(-0x8p-152, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x4p-1076, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(-0x4p-1076, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea14p-4), acos(cf64.init(-0x4p-1076, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x3.fffffe0000018p-140, -0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x2p-1064, -0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x2.d413cccfe779ap-76, -0x2.d413cccfe779ap-76), acos(cf64.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x0p+0), acos(cf64.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x8p-540, -0x8p-540), acos(cf64.init(0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e667f3bccp-124, -0x5.a827999fcef3p-28), acos(cf64.init(0x1.0000000000001p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x5.a827999fcef3p-28), acos(cf64.init(0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0xb.504f34p-1052, -0x5.a827999fcef3p-28), acos(cf64.init(0x1.0000000000001p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x2.d413cccfe779ap-76), acos(cf64.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x0p+0), acos(cf64.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x8p-540), acos(cf64.init(-0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x5.a827999fcef3p-28), acos(cf64.init(-0x1.0000000000001p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x5.a827999fcef3p-28), acos(cf64.init(-0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x5.a827999fcef3p-28), acos(cf64.init(-0x1.0000000000001p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.fffffe0000018p-140, 0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x2p-1064, 0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x0p+0), acos(cf64.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x2.d413cccfe779ap-76, 0x2.d413cccfe779ap-76), acos(cf64.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x8p-540, 0x8p-540), acos(cf64.init(0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x5.a827999fcef3p-28), acos(cf64.init(0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e667f3bccp-124, 0x5.a827999fcef3p-28), acos(cf64.init(0x1.0000000000001p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0xb.504f34p-1052, 0x5.a827999fcef3p-28), acos(cf64.init(0x1.0000000000001p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x0p+0), acos(cf64.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x2.d413cccfe779ap-76), acos(cf64.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x8p-540), acos(cf64.init(-0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x5.a827999fcef3p-28), acos(cf64.init(-0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x5.a827999fcef3p-28), acos(cf64.init(-0x1.0000000000001p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x5.a827999fcef3p-28), acos(cf64.init(-0x1.0000000000001p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea14p-4), acos(cf64.init(0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea14p-4), acos(cf64.init(0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea14p-4), acos(cf64.init(-0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(-0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea14p-4), acos(cf64.init(-0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x0p+0), acos(cf64.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x5.a827999fcef3p-28), acos(cf64.init(0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x0p+0), acos(cf64.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x5.a827999fcef3p-28), acos(cf64.init(-0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x0p+0), acos(cf64.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x5.a827999fcef3p-28), acos(cf64.init(0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x0p+0), acos(cf64.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x5.a827999fcef3p-28), acos(cf64.init(-0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(0x4p-108, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x4p-108, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea14p-4), acos(cf64.init(0x4p-108, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x4p-108, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(0x4p-108, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea14p-4), acos(cf64.init(0x4p-108, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(-0x4p-108, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x4p-108, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea14p-4), acos(cf64.init(-0x4p-108, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x4p-108, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(-0x4p-108, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea14p-4), acos(cf64.init(-0x4p-108, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x1.ffffff000000cp-96, -0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, 0x4p-108)));
    // try std.testing.expectEqual(cf64.init(0x8p-56, -0x8p-56), acos(cf64.init(0x1p+0, 0x4p-108)));
    try std.testing.expectEqual(cf64.init(0xb.504f333f9de6p-84, -0x5.a827999fcef3p-28), acos(cf64.init(0x1.0000000000001p+0, 0x4p-108)));
    // try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x8p-56), acos(cf64.init(-0x1p+0, 0x4p-108)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, 0x4p-108)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x5.a827999fcef3p-28), acos(cf64.init(-0x1.0000000000001p+0, 0x4p-108)));
    try std.testing.expectEqual(cf64.init(0x1.ffffff000000cp-96, 0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, -0x4p-108)));
    // try std.testing.expectEqual(cf64.init(0x8p-56, 0x8p-56), acos(cf64.init(0x1p+0, -0x4p-108)));
    try std.testing.expectEqual(cf64.init(0xb.504f333f9de6p-84, 0x5.a827999fcef3p-28), acos(cf64.init(0x1.0000000000001p+0, -0x4p-108)));
    // try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x8p-56), acos(cf64.init(-0x1p+0, -0x4p-108)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, -0x4p-108)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x5.a827999fcef3p-28), acos(cf64.init(-0x1.0000000000001p+0, -0x4p-108)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea14p-4), acos(cf64.init(0x8p-152, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea14p-4), acos(cf64.init(0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(0xf.8p-1028, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0xf.8p-1028, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea14p-4), acos(cf64.init(0xf.8p-1028, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(0x8p-152, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea14p-4), acos(cf64.init(0x8p-152, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea14p-4), acos(cf64.init(0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0xf.8p-1028, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(0xf.8p-1028, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea14p-4), acos(cf64.init(0xf.8p-1028, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea14p-4), acos(cf64.init(-0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(-0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea14p-4), acos(cf64.init(-0x8p-152, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(-0xf.8p-1028, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0xf.8p-1028, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea14p-4), acos(cf64.init(-0xf.8p-1028, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(-0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea14p-4), acos(cf64.init(-0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(-0x8p-152, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea14p-4), acos(cf64.init(-0x8p-152, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0xf.8p-1028, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(-0xf.8p-1028, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea14p-4), acos(cf64.init(-0xf.8p-1028, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x3.fffffe0000018p-140, -0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x7.bffffc200003p-1016, -0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x2.d413cccfe779ap-76, -0x2.d413cccfe779ap-76), acos(cf64.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x0p+0), acos(cf64.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0xf.bf7df5c6a789p-516, -0xf.bf7df5c6a789p-516), acos(cf64.init(0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e667f3bccp-124, -0x5.a827999fcef3p-28), acos(cf64.init(0x1.0000000000001p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x5.a827999fcef3p-28), acos(cf64.init(0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x2.bd732e69683dcp-1000, -0x5.a827999fcef3p-28), acos(cf64.init(0x1.0000000000001p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x2.d413cccfe779ap-76), acos(cf64.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x0p+0), acos(cf64.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0xf.bf7df5c6a789p-516), acos(cf64.init(-0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x5.a827999fcef3p-28), acos(cf64.init(-0x1.0000000000001p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x5.a827999fcef3p-28), acos(cf64.init(-0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x5.a827999fcef3p-28), acos(cf64.init(-0x1.0000000000001p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.fffffe0000018p-140, 0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x7.bffffc200003p-1016, 0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x0p+0), acos(cf64.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x2.d413cccfe779ap-76, 0x2.d413cccfe779ap-76), acos(cf64.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0xf.bf7df5c6a789p-516, 0xf.bf7df5c6a789p-516), acos(cf64.init(0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x5.a827999fcef3p-28), acos(cf64.init(0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e667f3bccp-124, 0x5.a827999fcef3p-28), acos(cf64.init(0x1.0000000000001p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x2.bd732e69683dcp-1000, 0x5.a827999fcef3p-28), acos(cf64.init(0x1.0000000000001p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x0p+0), acos(cf64.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x2.d413cccfe779ap-76), acos(cf64.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0xf.bf7df5c6a789p-516), acos(cf64.init(-0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x5.a827999fcef3p-28), acos(cf64.init(-0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x5.a827999fcef3p-28), acos(cf64.init(-0x1.0000000000001p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x5.a827999fcef3p-28), acos(cf64.init(-0x1.0000000000001p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea14p-4), acos(cf64.init(0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea14p-4), acos(cf64.init(0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea14p-4), acos(cf64.init(-0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(-0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea14p-4), acos(cf64.init(-0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x0p+0), acos(cf64.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x5.a827999fcef3p-28), acos(cf64.init(0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x0p+0), acos(cf64.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x5.a827999fcef3p-28), acos(cf64.init(-0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x0p+0), acos(cf64.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x5.a827999fcef3p-28), acos(cf64.init(0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x0p+0), acos(cf64.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x5.a827999fcef3p-28), acos(cf64.init(-0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(0x8p-116, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x8p-116, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea14p-4), acos(cf64.init(0x8p-116, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x8p-116, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(0x8p-116, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea14p-4), acos(cf64.init(0x8p-116, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(-0x8p-116, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x8p-116, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea14p-4), acos(cf64.init(-0x8p-116, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x8p-116, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(-0x8p-116, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea14p-4), acos(cf64.init(-0x8p-116, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x3.fffffe0000018p-104, -0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, 0x8p-116)));
    try std.testing.expectEqual(cf64.init(0xb.504f333f9de68p-60, -0xb.504f333f9de68p-60), acos(cf64.init(0x1p+0, 0x8p-116)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e667f3bccp-88, -0x5.a827999fcef3p-28), acos(cf64.init(0x1.0000000000001p+0, 0x8p-116)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0xb.504f333f9de68p-60), acos(cf64.init(-0x1p+0, 0x8p-116)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, 0x8p-116)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x5.a827999fcef3p-28), acos(cf64.init(-0x1.0000000000001p+0, 0x8p-116)));
    try std.testing.expectEqual(cf64.init(0x3.fffffe0000018p-104, 0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, -0x8p-116)));
    try std.testing.expectEqual(cf64.init(0xb.504f333f9de68p-60, 0xb.504f333f9de68p-60), acos(cf64.init(0x1p+0, -0x8p-116)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e667f3bccp-88, 0x5.a827999fcef3p-28), acos(cf64.init(0x1.0000000000001p+0, -0x8p-116)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0xb.504f333f9de68p-60), acos(cf64.init(-0x1p+0, -0x8p-116)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, -0x8p-116)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x5.a827999fcef3p-28), acos(cf64.init(-0x1.0000000000001p+0, -0x8p-116)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea14p-4), acos(cf64.init(0x8p-152, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea14p-4), acos(cf64.init(0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(0x4p-1076, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea14p-4), acos(cf64.init(0x4p-1076, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(0x8p-152, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea14p-4), acos(cf64.init(0x8p-152, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea14p-4), acos(cf64.init(0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x4p-1076, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(0x4p-1076, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea14p-4), acos(cf64.init(0x4p-1076, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea14p-4), acos(cf64.init(-0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(-0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea14p-4), acos(cf64.init(-0x8p-152, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(-0x4p-1076, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea14p-4), acos(cf64.init(-0x4p-1076, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(-0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea14p-4), acos(cf64.init(-0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(-0x8p-152, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea14p-4), acos(cf64.init(-0x8p-152, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x4p-1076, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(-0x4p-1076, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea14p-4), acos(cf64.init(-0x4p-1076, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x3.fffffe0000018p-140, -0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x2p-1064, -0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x2.d413cccfe779ap-76, -0x2.d413cccfe779ap-76), acos(cf64.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x0p+0), acos(cf64.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x8p-540, -0x8p-540), acos(cf64.init(0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e667f3bccp-124, -0x5.a827999fcef3p-28), acos(cf64.init(0x1.0000000000001p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x5.a827999fcef3p-28), acos(cf64.init(0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0xb.504f34p-1052, -0x5.a827999fcef3p-28), acos(cf64.init(0x1.0000000000001p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x2.d413cccfe779ap-76), acos(cf64.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x0p+0), acos(cf64.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x8p-540), acos(cf64.init(-0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x5.a827999fcef3p-28), acos(cf64.init(-0x1.0000000000001p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x5.a827999fcef3p-28), acos(cf64.init(-0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x5.a827999fcef3p-28), acos(cf64.init(-0x1.0000000000001p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.fffffe0000018p-140, 0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x2p-1064, 0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x0p+0), acos(cf64.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x2.d413cccfe779ap-76, 0x2.d413cccfe779ap-76), acos(cf64.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x8p-540, 0x8p-540), acos(cf64.init(0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x5.a827999fcef3p-28), acos(cf64.init(0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e667f3bccp-124, 0x5.a827999fcef3p-28), acos(cf64.init(0x1.0000000000001p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0xb.504f34p-1052, 0x5.a827999fcef3p-28), acos(cf64.init(0x1.0000000000001p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x0p+0), acos(cf64.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x2.d413cccfe779ap-76), acos(cf64.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x8p-540), acos(cf64.init(-0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x5.a827999fcef3p-28), acos(cf64.init(-0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x5.a827999fcef3p-28), acos(cf64.init(-0x1.0000000000001p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x5.a827999fcef3p-28), acos(cf64.init(-0x1.0000000000001p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea14p-4), acos(cf64.init(0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea14p-4), acos(cf64.init(0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b475d886e8p-4), acos(cf64.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea14p-4), acos(cf64.init(-0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b475d886e8p-4), acos(cf64.init(-0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea14p-4), acos(cf64.init(-0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x0p+0), acos(cf64.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x5.a827999fcef3p-28), acos(cf64.init(0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x0p+0), acos(cf64.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x5.a827999fcef3p-28), acos(cf64.init(-0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x1.ffffffaaaaaadp-12), acos(cf64.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x0p+0), acos(cf64.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x5.a827999fcef3p-28), acos(cf64.init(0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x0p+0), acos(cf64.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x1.ffffffaaaaaadp-12), acos(cf64.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x5.a827999fcef3p-28), acos(cf64.init(-0x1.0000000000001p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb3da38ea6p+0, -0xe.1a1b256c9ae88p-4), acos(cf64.init(0x2p-24, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb3da38ea6p+0, 0xe.1a1b256c9ae88p-4), acos(cf64.init(0x2p-24, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb6ae4cb8ap+0, -0xe.1a1b256c9ae88p-4), acos(cf64.init(-0x2p-24, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb6ae4cb8ap+0, 0xe.1a1b256c9ae88p-4), acos(cf64.init(-0x2p-24, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.cc8532a60c33ap-12, -0x1.1c9e014315739p-12), acos(cf64.init(0xf.fffffp-4, 0x2p-24)));
    try std.testing.expectEqual(cf64.init(0x3.2422a2355b424p+0, -0x1.1c9e014315739p-12), acos(cf64.init(-0xf.fffffp-4, 0x2p-24)));
    try std.testing.expectEqual(cf64.init(0x1.cc8532a60c33ap-12, 0x1.1c9e014315739p-12), acos(cf64.init(0xf.fffffp-4, -0x2p-24)));
    try std.testing.expectEqual(cf64.init(0x3.2422a2355b424p+0, 0x1.1c9e014315739p-12), acos(cf64.init(-0xf.fffffp-4, -0x2p-24)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(0xf.8p-132, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(0xf.8p-132, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(-0xf.8p-132, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(-0xf.8p-132, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, -0xa.f5ccbc6314268p-120), acos(cf64.init(0xf.fffffp-4, 0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, -0xa.f5ccbc6314268p-120), acos(cf64.init(-0xf.fffffp-4, 0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, 0xa.f5ccbc6314268p-120), acos(cf64.init(0xf.fffffp-4, -0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, 0xa.f5ccbc6314268p-120), acos(cf64.init(-0xf.fffffp-4, -0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(-0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, -0x0p+0), acos(cf64.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, -0x0p+0), acos(cf64.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, 0x0p+0), acos(cf64.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, 0x0p+0), acos(cf64.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb37a50753p+0, -0x7.b30b2bb1458dcp-4), acos(cf64.init(0x2p-24, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb37a50753p+0, 0x7.b30b2bb1458dcp-4), acos(cf64.init(0x2p-24, -0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb70e352dep+0, -0x7.b30b2bb1458dcp-4), acos(cf64.init(-0x2p-24, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb70e352dep+0, 0x7.b30b2bb1458dcp-4), acos(cf64.init(-0x2p-24, -0x8p-4)));
    // try std.testing.expectEqual(cf64.init(0x1.0c152382d737ep+0, -0x2.4f34e8b2065f6p-24), acos(cf64.init(0x8p-4, 0x2p-24)));
    // try std.testing.expectEqual(cf64.init(0x2.182a4705ae6b2p+0, -0x2.4f34e8b2065f6p-24), acos(cf64.init(-0x8p-4, 0x2p-24)));
    // try std.testing.expectEqual(cf64.init(0x1.0c152382d737ep+0, 0x2.4f34e8b2065f6p-24), acos(cf64.init(0x8p-4, -0x2p-24)));
    // try std.testing.expectEqual(cf64.init(0x2.182a4705ae6b2p+0, 0x2.4f34e8b2065f6p-24), acos(cf64.init(-0x8p-4, -0x2p-24)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x7.b30b2bb145828p-4), acos(cf64.init(0xf.8p-132, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x7.b30b2bb145828p-4), acos(cf64.init(0xf.8p-132, -0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x7.b30b2bb145828p-4), acos(cf64.init(-0xf.8p-132, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x7.b30b2bb145828p-4), acos(cf64.init(-0xf.8p-132, -0x8p-4)));
    // try std.testing.expectEqual(cf64.init(0x1.0c152382d7366p+0, -0x1.1e5da0b63b183p-128), acos(cf64.init(0x8p-4, 0xf.8p-132)));
    // try std.testing.expectEqual(cf64.init(0x2.182a4705ae6ccp+0, -0x1.1e5da0b63b183p-128), acos(cf64.init(-0x8p-4, 0xf.8p-132)));
    // try std.testing.expectEqual(cf64.init(0x1.0c152382d7366p+0, 0x1.1e5da0b63b183p-128), acos(cf64.init(0x8p-4, -0xf.8p-132)));
    // try std.testing.expectEqual(cf64.init(0x2.182a4705ae6ccp+0, 0x1.1e5da0b63b183p-128), acos(cf64.init(-0x8p-4, -0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(0x1.921fb34442d18p+0, -0x2.000000000002ap-24), acos(cf64.init(0x2p-24, 0x2p-24)));
    try std.testing.expectEqual(cf64.init(0x1.921fb34442d18p+0, 0x2.000000000002ap-24), acos(cf64.init(0x2p-24, -0x2p-24)));
    try std.testing.expectEqual(cf64.init(0x1.921fb74442d18p+0, -0x2.000000000002ap-24), acos(cf64.init(-0x2p-24, 0x2p-24)));
    try std.testing.expectEqual(cf64.init(0x1.921fb74442d18p+0, 0x2.000000000002ap-24), acos(cf64.init(-0x2p-24, -0x2p-24)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.fffffffffffebp-24), acos(cf64.init(0xf.8p-132, 0x2p-24)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.fffffffffffebp-24), acos(cf64.init(0xf.8p-132, -0x2p-24)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.fffffffffffebp-24), acos(cf64.init(-0xf.8p-132, 0x2p-24)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.fffffffffffebp-24), acos(cf64.init(-0xf.8p-132, -0x2p-24)));
    try std.testing.expectEqual(cf64.init(0x1.921fb34442d18p+0, -0xf.80000000001fp-132), acos(cf64.init(0x2p-24, 0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(0x1.921fb74442d18p+0, -0xf.80000000001fp-132), acos(cf64.init(-0x2p-24, 0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(0x1.921fb34442d18p+0, 0xf.80000000001fp-132), acos(cf64.init(0x2p-24, -0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(0x1.921fb74442d18p+0, 0xf.80000000001fp-132), acos(cf64.init(-0x2p-24, -0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.fffffffffffebp-24), acos(cf64.init(0x0p+0, 0x2p-24)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.fffffffffffebp-24), acos(cf64.init(0x0p+0, -0x2p-24)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.fffffffffffebp-24), acos(cf64.init(-0x0p+0, 0x2p-24)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.fffffffffffebp-24), acos(cf64.init(-0x0p+0, -0x2p-24)));
    try std.testing.expectEqual(cf64.init(0x1.921fb34442d18p+0, -0x0p+0), acos(cf64.init(0x2p-24, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb74442d18p+0, -0x0p+0), acos(cf64.init(-0x2p-24, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb34442d18p+0, 0x0p+0), acos(cf64.init(0x2p-24, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb74442d18p+0, 0x0p+0), acos(cf64.init(-0x2p-24, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xf.8p-132), acos(cf64.init(0xf.8p-132, 0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xf.8p-132), acos(cf64.init(0xf.8p-132, -0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xf.8p-132), acos(cf64.init(-0xf.8p-132, 0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xf.8p-132), acos(cf64.init(-0xf.8p-132, -0xf.8p-132)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x1p-52, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(0x1p-52, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea13p-4), acos(cf64.init(0x1p-52, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(0x1p-52, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x1p-52, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea13p-4), acos(cf64.init(0x1p-52, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d19p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x1p-52, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d19p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(-0x1p-52, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d19p+0, -0xe.1a1b30bcea13p-4), acos(cf64.init(-0x1p-52, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d19p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(-0x1p-52, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d19p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x1p-52, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d19p+0, 0xe.1a1b30bcea13p-4), acos(cf64.init(-0x1p-52, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(0x4p-28, -0x4p-28), acos(cf64.init(0x1p+0, 0x1p-52)));
    // try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, -0xb.504f3613b1b4p-44), acos(cf64.init(0xf.fffffp-4, 0x1p-52)));
    // try std.testing.expectEqual(cf64.init(0x5.168c51aa21158p-28, -0x3.2504dde4b1a36p-28), acos(cf64.init(0xf.ffffffffffff8p-4, 0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, -0xb.504f3613b1b4p-44), acos(cf64.init(-0xf.fffffp-4, 0x1p-52)));
    // try std.testing.expectEqual(cf64.init(0x3.243f6a4885a3p+0, -0x4p-28), acos(cf64.init(-0x1p+0, 0x1p-52)));
    // try std.testing.expectEqual(cf64.init(0x3.243f6a371cddep+0, -0x3.2504dde4b1a36p-28), acos(cf64.init(-0xf.ffffffffffff8p-4, 0x1p-52)));
    // try std.testing.expectEqual(cf64.init(0x4p-28, 0x4p-28), acos(cf64.init(0x1p+0, -0x1p-52)));
    // try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, 0xb.504f3613b1b4p-44), acos(cf64.init(0xf.fffffp-4, -0x1p-52)));
    // try std.testing.expectEqual(cf64.init(0x5.168c51aa21158p-28, 0x3.2504dde4b1a36p-28), acos(cf64.init(0xf.ffffffffffff8p-4, -0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, 0xb.504f3613b1b4p-44), acos(cf64.init(-0xf.fffffp-4, -0x1p-52)));
    // try std.testing.expectEqual(cf64.init(0x3.243f6a4885a3p+0, 0x4p-28), acos(cf64.init(-0x1p+0, -0x1p-52)));
    // try std.testing.expectEqual(cf64.init(0x3.243f6a371cddep+0, 0x3.2504dde4b1a36p-28), acos(cf64.init(-0xf.ffffffffffff8p-4, -0x1p-52)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(0x8p-152, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea13p-4), acos(cf64.init(0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea13p-4), acos(cf64.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0xf.8p-1028, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(0xf.8p-1028, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea13p-4), acos(cf64.init(0xf.8p-1028, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea13p-4), acos(cf64.init(0x8p-152, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea13p-4), acos(cf64.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(0xf.8p-1028, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0xf.8p-1028, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea13p-4), acos(cf64.init(0xf.8p-1028, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea13p-4), acos(cf64.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(-0x8p-152, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea13p-4), acos(cf64.init(-0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0xf.8p-1028, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(-0xf.8p-1028, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea13p-4), acos(cf64.init(-0xf.8p-1028, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea13p-4), acos(cf64.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(-0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea13p-4), acos(cf64.init(-0x8p-152, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(-0xf.8p-1028, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0xf.8p-1028, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea13p-4), acos(cf64.init(-0xf.8p-1028, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x2.d413cccfe779ap-76, -0x2.d413cccfe779ap-76), acos(cf64.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x0p+0), acos(cf64.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0xf.bf7df5c6a789p-516, -0xf.bf7df5c6a789p-516), acos(cf64.init(0x1p+0, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, -0x5.a8279b09d8dap-140), acos(cf64.init(0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, -0x0p+0), acos(cf64.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, -0xa.f5ccbc6314268p-1016), acos(cf64.init(0xf.fffffp-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x4p-28, -0x2p-124), acos(cf64.init(0xf.ffffffffffff8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x4p-28, -0x0p+0), acos(cf64.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x4p-28, -0x3.ep-1000), acos(cf64.init(0xf.ffffffffffff8p-4, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, -0x5.a8279b09d8dap-140), acos(cf64.init(-0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, -0x0p+0), acos(cf64.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, -0xa.f5ccbc6314268p-1016), acos(cf64.init(-0xf.fffffp-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x2.d413cccfe779ap-76), acos(cf64.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x0p+0), acos(cf64.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0xf.bf7df5c6a789p-516), acos(cf64.init(-0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a4885a3p+0, -0x2p-124), acos(cf64.init(-0xf.ffffffffffff8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a4885a3p+0, -0x0p+0), acos(cf64.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a4885a3p+0, -0x3.ep-1000), acos(cf64.init(-0xf.ffffffffffff8p-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x0p+0), acos(cf64.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x2.d413cccfe779ap-76, 0x2.d413cccfe779ap-76), acos(cf64.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0xf.bf7df5c6a789p-516, 0xf.bf7df5c6a789p-516), acos(cf64.init(0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, 0x0p+0), acos(cf64.init(0xf.fffffp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, 0x5.a8279b09d8dap-140), acos(cf64.init(0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, 0xa.f5ccbc6314268p-1016), acos(cf64.init(0xf.fffffp-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x4p-28, 0x0p+0), acos(cf64.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x4p-28, 0x2p-124), acos(cf64.init(0xf.ffffffffffff8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x4p-28, 0x3.ep-1000), acos(cf64.init(0xf.ffffffffffff8p-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, 0x0p+0), acos(cf64.init(-0xf.fffffp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, 0x5.a8279b09d8dap-140), acos(cf64.init(-0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, 0xa.f5ccbc6314268p-1016), acos(cf64.init(-0xf.fffffp-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x0p+0), acos(cf64.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x2.d413cccfe779ap-76), acos(cf64.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0xf.bf7df5c6a789p-516), acos(cf64.init(-0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a4885a3p+0, 0x0p+0), acos(cf64.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a4885a3p+0, 0x2p-124), acos(cf64.init(-0xf.ffffffffffff8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a4885a3p+0, 0x3.ep-1000), acos(cf64.init(-0xf.ffffffffffff8p-4, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea13p-4), acos(cf64.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea13p-4), acos(cf64.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea13p-4), acos(cf64.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea13p-4), acos(cf64.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x0p+0), acos(cf64.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, -0x0p+0), acos(cf64.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x4p-28, -0x0p+0), acos(cf64.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, -0x0p+0), acos(cf64.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x0p+0), acos(cf64.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a4885a3p+0, -0x0p+0), acos(cf64.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x0p+0), acos(cf64.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, 0x0p+0), acos(cf64.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x4p-28, 0x0p+0), acos(cf64.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, 0x0p+0), acos(cf64.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x0p+0), acos(cf64.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a4885a3p+0, 0x0p+0), acos(cf64.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d17p+0, -0x7.b30b2bb145828p-4), acos(cf64.init(0x1p-52, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d17p+0, 0x7.b30b2bb145828p-4), acos(cf64.init(0x1p-52, -0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d19p+0, -0x7.b30b2bb145828p-4), acos(cf64.init(-0x1p-52, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d19p+0, 0x7.b30b2bb145828p-4), acos(cf64.init(-0x1p-52, -0x8p-4)));
    // try std.testing.expectEqual(cf64.init(0x1.0c152382d7366p+0, -0x1.279a74590331cp-52), acos(cf64.init(0x8p-4, 0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x2.182a4705ae6ccp+0, -0x1.279a74590331cp-52), acos(cf64.init(-0x8p-4, 0x1p-52)));
    // try std.testing.expectEqual(cf64.init(0x1.0c152382d7366p+0, 0x1.279a74590331cp-52), acos(cf64.init(0x8p-4, -0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x2.182a4705ae6ccp+0, 0x1.279a74590331cp-52), acos(cf64.init(-0x8p-4, -0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x7.b30b2bb145828p-4), acos(cf64.init(0x8p-152, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x7.b30b2bb145828p-4), acos(cf64.init(0x0p+0, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x7.b30b2bb145828p-4), acos(cf64.init(0xf.8p-1028, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x7.b30b2bb145828p-4), acos(cf64.init(0x8p-152, -0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x7.b30b2bb145828p-4), acos(cf64.init(0x0p+0, -0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x7.b30b2bb145828p-4), acos(cf64.init(0xf.8p-1028, -0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x7.b30b2bb145828p-4), acos(cf64.init(-0x0p+0, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x7.b30b2bb145828p-4), acos(cf64.init(-0x8p-152, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x7.b30b2bb145828p-4), acos(cf64.init(-0xf.8p-1028, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x7.b30b2bb145828p-4), acos(cf64.init(-0x0p+0, -0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x7.b30b2bb145828p-4), acos(cf64.init(-0x8p-152, -0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x7.b30b2bb145828p-4), acos(cf64.init(-0xf.8p-1028, -0x8p-4)));
    // try std.testing.expectEqual(cf64.init(0x1.0c152382d7366p+0, -0x9.3cd3a2c8198ep-152), acos(cf64.init(0x8p-4, 0x8p-152)));
    // try std.testing.expectEqual(cf64.init(0x1.0c152382d7366p+0, -0x0p+0), acos(cf64.init(0x8p-4, 0x0p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.0c152382d7366p+0, -0x1.1e5da0b63b184p-1024), acos(cf64.init(0x8p-4, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf64.init(0x2.182a4705ae6ccp+0, -0x9.3cd3a2c8198ep-152), acos(cf64.init(-0x8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x2.182a4705ae6ccp+0, -0x0p+0), acos(cf64.init(-0x8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x2.182a4705ae6ccp+0, -0x1.1e5da0b63b184p-1024), acos(cf64.init(-0x8p-4, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf64.init(0x1.0c152382d7366p+0, 0x0p+0), acos(cf64.init(0x8p-4, -0x0p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.0c152382d7366p+0, 0x9.3cd3a2c8198ep-152), acos(cf64.init(0x8p-4, -0x8p-152)));
    // try std.testing.expectEqual(cf64.init(0x1.0c152382d7366p+0, 0x1.1e5da0b63b184p-1024), acos(cf64.init(0x8p-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x2.182a4705ae6ccp+0, 0x0p+0), acos(cf64.init(-0x8p-4, -0x0p+0)));
    // try std.testing.expectEqual(cf64.init(0x2.182a4705ae6ccp+0, 0x9.3cd3a2c8198ep-152), acos(cf64.init(-0x8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x2.182a4705ae6ccp+0, 0x1.1e5da0b63b184p-1024), acos(cf64.init(-0x8p-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d17p+0, -0x1p-52), acos(cf64.init(0x1p-52, 0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d17p+0, 0x1p-52), acos(cf64.init(0x1p-52, -0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d19p+0, -0x1p-52), acos(cf64.init(-0x1p-52, 0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d19p+0, 0x1p-52), acos(cf64.init(-0x1p-52, -0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1p-52), acos(cf64.init(0x8p-152, 0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1p-52), acos(cf64.init(0x0p+0, 0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1p-52), acos(cf64.init(0xf.8p-1028, 0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1p-52), acos(cf64.init(0x8p-152, -0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1p-52), acos(cf64.init(0x0p+0, -0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1p-52), acos(cf64.init(0xf.8p-1028, -0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1p-52), acos(cf64.init(-0x0p+0, 0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1p-52), acos(cf64.init(-0x8p-152, 0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1p-52), acos(cf64.init(-0xf.8p-1028, 0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1p-52), acos(cf64.init(-0x0p+0, -0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1p-52), acos(cf64.init(-0x8p-152, -0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1p-52), acos(cf64.init(-0xf.8p-1028, -0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d17p+0, -0x8p-152), acos(cf64.init(0x1p-52, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d17p+0, -0x0p+0), acos(cf64.init(0x1p-52, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d17p+0, -0xf.8p-1028), acos(cf64.init(0x1p-52, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d19p+0, -0x8p-152), acos(cf64.init(-0x1p-52, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d19p+0, -0x0p+0), acos(cf64.init(-0x1p-52, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d19p+0, -0xf.8p-1028), acos(cf64.init(-0x1p-52, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d17p+0, 0x0p+0), acos(cf64.init(0x1p-52, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d17p+0, 0x8p-152), acos(cf64.init(0x1p-52, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d17p+0, 0xf.8p-1028), acos(cf64.init(0x1p-52, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d19p+0, 0x0p+0), acos(cf64.init(-0x1p-52, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d19p+0, 0x8p-152), acos(cf64.init(-0x1p-52, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d19p+0, 0xf.8p-1028), acos(cf64.init(-0x1p-52, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1p-52), acos(cf64.init(0x0p+0, 0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1p-52), acos(cf64.init(0x0p+0, -0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1p-52), acos(cf64.init(-0x0p+0, 0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1p-52), acos(cf64.init(-0x0p+0, -0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d17p+0, -0x0p+0), acos(cf64.init(0x1p-52, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d19p+0, -0x0p+0), acos(cf64.init(-0x1p-52, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d17p+0, 0x0p+0), acos(cf64.init(0x1p-52, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d19p+0, 0x0p+0), acos(cf64.init(-0x1p-52, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x8p-152), acos(cf64.init(0x8p-152, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), acos(cf64.init(0x8p-152, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xf.8p-1028), acos(cf64.init(0x8p-152, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x8p-152), acos(cf64.init(0x0p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), acos(cf64.init(0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xf.8p-1028), acos(cf64.init(0x0p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x8p-152), acos(cf64.init(0xf.8p-1028, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), acos(cf64.init(0xf.8p-1028, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xf.8p-1028), acos(cf64.init(0xf.8p-1028, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), acos(cf64.init(0x8p-152, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x8p-152), acos(cf64.init(0x8p-152, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xf.8p-1028), acos(cf64.init(0x8p-152, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), acos(cf64.init(0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x8p-152), acos(cf64.init(0x0p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xf.8p-1028), acos(cf64.init(0x0p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), acos(cf64.init(0xf.8p-1028, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x8p-152), acos(cf64.init(0xf.8p-1028, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xf.8p-1028), acos(cf64.init(0xf.8p-1028, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x8p-152), acos(cf64.init(-0x0p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), acos(cf64.init(-0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xf.8p-1028), acos(cf64.init(-0x0p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x8p-152), acos(cf64.init(-0x8p-152, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), acos(cf64.init(-0x8p-152, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xf.8p-1028), acos(cf64.init(-0x8p-152, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x8p-152), acos(cf64.init(-0xf.8p-1028, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), acos(cf64.init(-0xf.8p-1028, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xf.8p-1028), acos(cf64.init(-0xf.8p-1028, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), acos(cf64.init(-0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x8p-152), acos(cf64.init(-0x0p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xf.8p-1028), acos(cf64.init(-0x0p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), acos(cf64.init(-0x8p-152, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x8p-152), acos(cf64.init(-0x8p-152, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xf.8p-1028), acos(cf64.init(-0x8p-152, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), acos(cf64.init(-0xf.8p-1028, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x8p-152), acos(cf64.init(-0xf.8p-1028, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xf.8p-1028), acos(cf64.init(-0xf.8p-1028, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x2p-64, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(0x2p-64, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea13p-4), acos(cf64.init(0x2p-64, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(0x2p-64, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x2p-64, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea13p-4), acos(cf64.init(0x2p-64, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x2p-64, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(-0x2p-64, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea13p-4), acos(cf64.init(-0x2p-64, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(-0x2p-64, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x2p-64, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea13p-4), acos(cf64.init(-0x2p-64, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e667f3bcdp-32, -0x1.6a09e667f3bcdp-32), acos(cf64.init(0x1p+0, 0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, -0x1.6a09e6c276368p-52), acos(cf64.init(0xf.fffffp-4, 0x2p-64)));
    // try std.testing.expectEqual(cf64.init(0x4.000007ffffd8p-28, -0x7.fffff000007p-40), acos(cf64.init(0xf.ffffffffffff8p-4, 0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, -0x1.6a09e6c276368p-52), acos(cf64.init(-0xf.fffffp-4, 0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a871b992p+0, -0x1.6a09e667f3bcdp-32), acos(cf64.init(-0x1p+0, 0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a4885a28p+0, -0x7.fffff000007p-40), acos(cf64.init(-0xf.ffffffffffff8p-4, 0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e667f3bcdp-32, 0x1.6a09e667f3bcdp-32), acos(cf64.init(0x1p+0, -0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, 0x1.6a09e6c276368p-52), acos(cf64.init(0xf.fffffp-4, -0x2p-64)));
    // try std.testing.expectEqual(cf64.init(0x4.000007ffffd8p-28, 0x7.fffff000007p-40), acos(cf64.init(0xf.ffffffffffff8p-4, -0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, 0x1.6a09e6c276368p-52), acos(cf64.init(-0xf.fffffp-4, -0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a871b992p+0, 0x1.6a09e667f3bcdp-32), acos(cf64.init(-0x1p+0, -0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a4885a28p+0, 0x7.fffff000007p-40), acos(cf64.init(-0xf.ffffffffffff8p-4, -0x2p-64)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(0x8p-152, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea13p-4), acos(cf64.init(0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea13p-4), acos(cf64.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(0x4p-1076, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea13p-4), acos(cf64.init(0x4p-1076, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea13p-4), acos(cf64.init(0x8p-152, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea13p-4), acos(cf64.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(0x4p-1076, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x4p-1076, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea13p-4), acos(cf64.init(0x4p-1076, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea13p-4), acos(cf64.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(-0x8p-152, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea13p-4), acos(cf64.init(-0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(-0x4p-1076, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea13p-4), acos(cf64.init(-0x4p-1076, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea13p-4), acos(cf64.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(-0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea13p-4), acos(cf64.init(-0x8p-152, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(-0x4p-1076, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x4p-1076, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea13p-4), acos(cf64.init(-0x4p-1076, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x2.d413cccfe779ap-76, -0x2.d413cccfe779ap-76), acos(cf64.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x0p+0), acos(cf64.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x8p-540, -0x8p-540), acos(cf64.init(0x1p+0, 0x4p-1076)));
    // try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, -0x5.a8279b09d8dap-140), acos(cf64.init(0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, -0x0p+0), acos(cf64.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, -0x2.d4p-1064), acos(cf64.init(0xf.fffffp-4, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x4p-28, -0x2p-124), acos(cf64.init(0xf.ffffffffffff8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x4p-28, -0x0p+0), acos(cf64.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x4p-28, -0x1p-1048), acos(cf64.init(0xf.ffffffffffff8p-4, 0x4p-1076)));
    // try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, -0x5.a8279b09d8dap-140), acos(cf64.init(-0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, -0x0p+0), acos(cf64.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, -0x2.d4p-1064), acos(cf64.init(-0xf.fffffp-4, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x2.d413cccfe779ap-76), acos(cf64.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x0p+0), acos(cf64.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x8p-540), acos(cf64.init(-0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a4885a3p+0, -0x2p-124), acos(cf64.init(-0xf.ffffffffffff8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a4885a3p+0, -0x0p+0), acos(cf64.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a4885a3p+0, -0x1p-1048), acos(cf64.init(-0xf.ffffffffffff8p-4, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x0p+0), acos(cf64.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x2.d413cccfe779ap-76, 0x2.d413cccfe779ap-76), acos(cf64.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x8p-540, 0x8p-540), acos(cf64.init(0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, 0x0p+0), acos(cf64.init(0xf.fffffp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, 0x5.a8279b09d8dap-140), acos(cf64.init(0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, 0x2.d4p-1064), acos(cf64.init(0xf.fffffp-4, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x4p-28, 0x0p+0), acos(cf64.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x4p-28, 0x2p-124), acos(cf64.init(0xf.ffffffffffff8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x4p-28, 0x1p-1048), acos(cf64.init(0xf.ffffffffffff8p-4, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, 0x0p+0), acos(cf64.init(-0xf.fffffp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, 0x5.a8279b09d8dap-140), acos(cf64.init(-0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, 0x2.d4p-1064), acos(cf64.init(-0xf.fffffp-4, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x0p+0), acos(cf64.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x2.d413cccfe779ap-76), acos(cf64.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x8p-540), acos(cf64.init(-0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a4885a3p+0, 0x0p+0), acos(cf64.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a4885a3p+0, 0x2p-124), acos(cf64.init(-0xf.ffffffffffff8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a4885a3p+0, 0x1p-1048), acos(cf64.init(-0xf.ffffffffffff8p-4, -0x4p-1076)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea13p-4), acos(cf64.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea13p-4), acos(cf64.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea13p-4), acos(cf64.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea13p-4), acos(cf64.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x0p+0), acos(cf64.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, -0x0p+0), acos(cf64.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x4p-28, -0x0p+0), acos(cf64.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, -0x0p+0), acos(cf64.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x0p+0), acos(cf64.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a4885a3p+0, -0x0p+0), acos(cf64.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x0p+0), acos(cf64.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, 0x0p+0), acos(cf64.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x4p-28, 0x0p+0), acos(cf64.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, 0x0p+0), acos(cf64.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x0p+0), acos(cf64.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a4885a3p+0, 0x0p+0), acos(cf64.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x7.b30b2bb145828p-4), acos(cf64.init(0x2p-64, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x7.b30b2bb145828p-4), acos(cf64.init(0x2p-64, -0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x7.b30b2bb145828p-4), acos(cf64.init(-0x2p-64, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x7.b30b2bb145828p-4), acos(cf64.init(-0x2p-64, -0x8p-4)));
    // try std.testing.expectEqual(cf64.init(0x1.0c152382d7366p+0, -0x2.4f34e8b206638p-64), acos(cf64.init(0x8p-4, 0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x2.182a4705ae6ccp+0, -0x2.4f34e8b206638p-64), acos(cf64.init(-0x8p-4, 0x2p-64)));
    // try std.testing.expectEqual(cf64.init(0x1.0c152382d7366p+0, 0x2.4f34e8b206638p-64), acos(cf64.init(0x8p-4, -0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x2.182a4705ae6ccp+0, 0x2.4f34e8b206638p-64), acos(cf64.init(-0x8p-4, -0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x7.b30b2bb145828p-4), acos(cf64.init(0x8p-152, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x7.b30b2bb145828p-4), acos(cf64.init(0x0p+0, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x7.b30b2bb145828p-4), acos(cf64.init(0x4p-1076, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x7.b30b2bb145828p-4), acos(cf64.init(0x8p-152, -0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x7.b30b2bb145828p-4), acos(cf64.init(0x0p+0, -0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x7.b30b2bb145828p-4), acos(cf64.init(0x4p-1076, -0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x7.b30b2bb145828p-4), acos(cf64.init(-0x0p+0, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x7.b30b2bb145828p-4), acos(cf64.init(-0x8p-152, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x7.b30b2bb145828p-4), acos(cf64.init(-0x4p-1076, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x7.b30b2bb145828p-4), acos(cf64.init(-0x0p+0, -0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x7.b30b2bb145828p-4), acos(cf64.init(-0x8p-152, -0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x7.b30b2bb145828p-4), acos(cf64.init(-0x4p-1076, -0x8p-4)));
    // try std.testing.expectEqual(cf64.init(0x1.0c152382d7366p+0, -0x9.3cd3a2c8198ep-152), acos(cf64.init(0x8p-4, 0x8p-152)));
    // try std.testing.expectEqual(cf64.init(0x1.0c152382d7366p+0, -0x0p+0), acos(cf64.init(0x8p-4, 0x0p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.0c152382d7366p+0, -0x4p-1076), acos(cf64.init(0x8p-4, 0x4p-1076)));
    // try std.testing.expectEqual(cf64.init(0x2.182a4705ae6ccp+0, -0x9.3cd3a2c8198ep-152), acos(cf64.init(-0x8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x2.182a4705ae6ccp+0, -0x0p+0), acos(cf64.init(-0x8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x2.182a4705ae6ccp+0, -0x4p-1076), acos(cf64.init(-0x8p-4, 0x4p-1076)));
    // try std.testing.expectEqual(cf64.init(0x1.0c152382d7366p+0, 0x0p+0), acos(cf64.init(0x8p-4, -0x0p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.0c152382d7366p+0, 0x9.3cd3a2c8198ep-152), acos(cf64.init(0x8p-4, -0x8p-152)));
    // try std.testing.expectEqual(cf64.init(0x1.0c152382d7366p+0, 0x4p-1076), acos(cf64.init(0x8p-4, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x2.182a4705ae6ccp+0, 0x0p+0), acos(cf64.init(-0x8p-4, -0x0p+0)));
    // try std.testing.expectEqual(cf64.init(0x2.182a4705ae6ccp+0, 0x9.3cd3a2c8198ep-152), acos(cf64.init(-0x8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x2.182a4705ae6ccp+0, 0x4p-1076), acos(cf64.init(-0x8p-4, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x2p-64), acos(cf64.init(0x2p-64, 0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x2p-64), acos(cf64.init(0x2p-64, -0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x2p-64), acos(cf64.init(-0x2p-64, 0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x2p-64), acos(cf64.init(-0x2p-64, -0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x2p-64), acos(cf64.init(0x8p-152, 0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x2p-64), acos(cf64.init(0x0p+0, 0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x2p-64), acos(cf64.init(0x4p-1076, 0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x2p-64), acos(cf64.init(0x8p-152, -0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x2p-64), acos(cf64.init(0x0p+0, -0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x2p-64), acos(cf64.init(0x4p-1076, -0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x2p-64), acos(cf64.init(-0x0p+0, 0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x2p-64), acos(cf64.init(-0x8p-152, 0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x2p-64), acos(cf64.init(-0x4p-1076, 0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x2p-64), acos(cf64.init(-0x0p+0, -0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x2p-64), acos(cf64.init(-0x8p-152, -0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x2p-64), acos(cf64.init(-0x4p-1076, -0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x8p-152), acos(cf64.init(0x2p-64, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), acos(cf64.init(0x2p-64, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x4p-1076), acos(cf64.init(0x2p-64, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x8p-152), acos(cf64.init(-0x2p-64, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), acos(cf64.init(-0x2p-64, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x4p-1076), acos(cf64.init(-0x2p-64, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), acos(cf64.init(0x2p-64, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x8p-152), acos(cf64.init(0x2p-64, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x4p-1076), acos(cf64.init(0x2p-64, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), acos(cf64.init(-0x2p-64, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x8p-152), acos(cf64.init(-0x2p-64, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x4p-1076), acos(cf64.init(-0x2p-64, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x2p-64), acos(cf64.init(0x0p+0, 0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x2p-64), acos(cf64.init(0x0p+0, -0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x2p-64), acos(cf64.init(-0x0p+0, 0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x2p-64), acos(cf64.init(-0x0p+0, -0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), acos(cf64.init(0x2p-64, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), acos(cf64.init(-0x2p-64, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), acos(cf64.init(0x2p-64, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), acos(cf64.init(-0x2p-64, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x8p-152), acos(cf64.init(0x8p-152, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), acos(cf64.init(0x8p-152, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x4p-1076), acos(cf64.init(0x8p-152, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x8p-152), acos(cf64.init(0x0p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), acos(cf64.init(0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x4p-1076), acos(cf64.init(0x0p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x8p-152), acos(cf64.init(0x4p-1076, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), acos(cf64.init(0x4p-1076, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x4p-1076), acos(cf64.init(0x4p-1076, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), acos(cf64.init(0x8p-152, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x8p-152), acos(cf64.init(0x8p-152, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x4p-1076), acos(cf64.init(0x8p-152, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), acos(cf64.init(0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x8p-152), acos(cf64.init(0x0p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x4p-1076), acos(cf64.init(0x0p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), acos(cf64.init(0x4p-1076, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x8p-152), acos(cf64.init(0x4p-1076, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x4p-1076), acos(cf64.init(0x4p-1076, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x8p-152), acos(cf64.init(-0x0p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), acos(cf64.init(-0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x4p-1076), acos(cf64.init(-0x0p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x8p-152), acos(cf64.init(-0x8p-152, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), acos(cf64.init(-0x8p-152, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x4p-1076), acos(cf64.init(-0x8p-152, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x8p-152), acos(cf64.init(-0x4p-1076, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), acos(cf64.init(-0x4p-1076, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x4p-1076), acos(cf64.init(-0x4p-1076, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), acos(cf64.init(-0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x8p-152), acos(cf64.init(-0x0p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x4p-1076), acos(cf64.init(-0x0p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), acos(cf64.init(-0x8p-152, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x8p-152), acos(cf64.init(-0x8p-152, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x4p-1076), acos(cf64.init(-0x8p-152, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), acos(cf64.init(-0x4p-1076, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x8p-152), acos(cf64.init(-0x4p-1076, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x4p-1076), acos(cf64.init(-0x4p-1076, -0x4p-1076)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x8p-108, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(0x8p-108, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea13p-4), acos(cf64.init(0x8p-108, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(0x8p-108, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x8p-108, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea13p-4), acos(cf64.init(0x8p-108, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x8p-108, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(-0x8p-108, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea13p-4), acos(cf64.init(-0x8p-108, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(-0x8p-108, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x8p-108, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea13p-4), acos(cf64.init(-0x8p-108, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0xb.504f333f9de68p-56, -0xb.504f333f9de68p-56), acos(cf64.init(0x1p+0, 0x8p-108)));
    // try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, -0x5.a8279b09d8dap-96), acos(cf64.init(0xf.fffffp-4, 0x8p-108)));
    try std.testing.expectEqual(cf64.init(0x4p-28, -0x2p-80), acos(cf64.init(0xf.ffffffffffff8p-4, 0x8p-108)));
    // try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, -0x5.a8279b09d8dap-96), acos(cf64.init(-0xf.fffffp-4, 0x8p-108)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0xb.504f333f9de68p-56), acos(cf64.init(-0x1p+0, 0x8p-108)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a4885a3p+0, -0x2p-80), acos(cf64.init(-0xf.ffffffffffff8p-4, 0x8p-108)));
    try std.testing.expectEqual(cf64.init(0xb.504f333f9de68p-56, 0xb.504f333f9de68p-56), acos(cf64.init(0x1p+0, -0x8p-108)));
    // try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, 0x5.a8279b09d8dap-96), acos(cf64.init(0xf.fffffp-4, -0x8p-108)));
    try std.testing.expectEqual(cf64.init(0x4p-28, 0x2p-80), acos(cf64.init(0xf.ffffffffffff8p-4, -0x8p-108)));
    // try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, 0x5.a8279b09d8dap-96), acos(cf64.init(-0xf.fffffp-4, -0x8p-108)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0xb.504f333f9de68p-56), acos(cf64.init(-0x1p+0, -0x8p-108)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a4885a3p+0, 0x2p-80), acos(cf64.init(-0xf.ffffffffffff8p-4, -0x8p-108)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(0x8p-152, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea13p-4), acos(cf64.init(0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea13p-4), acos(cf64.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0xf.8p-1028, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(0xf.8p-1028, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea13p-4), acos(cf64.init(0xf.8p-1028, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea13p-4), acos(cf64.init(0x8p-152, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea13p-4), acos(cf64.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(0xf.8p-1028, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0xf.8p-1028, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea13p-4), acos(cf64.init(0xf.8p-1028, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea13p-4), acos(cf64.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(-0x8p-152, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea13p-4), acos(cf64.init(-0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0xf.8p-1028, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(-0xf.8p-1028, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea13p-4), acos(cf64.init(-0xf.8p-1028, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea13p-4), acos(cf64.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(-0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea13p-4), acos(cf64.init(-0x8p-152, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(-0xf.8p-1028, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0xf.8p-1028, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea13p-4), acos(cf64.init(-0xf.8p-1028, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x2.d413cccfe779ap-76, -0x2.d413cccfe779ap-76), acos(cf64.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x0p+0), acos(cf64.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0xf.bf7df5c6a789p-516, -0xf.bf7df5c6a789p-516), acos(cf64.init(0x1p+0, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, -0x5.a8279b09d8dap-140), acos(cf64.init(0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, -0x0p+0), acos(cf64.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, -0xa.f5ccbc6314268p-1016), acos(cf64.init(0xf.fffffp-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x4p-28, -0x2p-124), acos(cf64.init(0xf.ffffffffffff8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x4p-28, -0x0p+0), acos(cf64.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x4p-28, -0x3.ep-1000), acos(cf64.init(0xf.ffffffffffff8p-4, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, -0x5.a8279b09d8dap-140), acos(cf64.init(-0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, -0x0p+0), acos(cf64.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, -0xa.f5ccbc6314268p-1016), acos(cf64.init(-0xf.fffffp-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x2.d413cccfe779ap-76), acos(cf64.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x0p+0), acos(cf64.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0xf.bf7df5c6a789p-516), acos(cf64.init(-0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a4885a3p+0, -0x2p-124), acos(cf64.init(-0xf.ffffffffffff8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a4885a3p+0, -0x0p+0), acos(cf64.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a4885a3p+0, -0x3.ep-1000), acos(cf64.init(-0xf.ffffffffffff8p-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x0p+0), acos(cf64.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x2.d413cccfe779ap-76, 0x2.d413cccfe779ap-76), acos(cf64.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0xf.bf7df5c6a789p-516, 0xf.bf7df5c6a789p-516), acos(cf64.init(0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, 0x0p+0), acos(cf64.init(0xf.fffffp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, 0x5.a8279b09d8dap-140), acos(cf64.init(0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, 0xa.f5ccbc6314268p-1016), acos(cf64.init(0xf.fffffp-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x4p-28, 0x0p+0), acos(cf64.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x4p-28, 0x2p-124), acos(cf64.init(0xf.ffffffffffff8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x4p-28, 0x3.ep-1000), acos(cf64.init(0xf.ffffffffffff8p-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, 0x0p+0), acos(cf64.init(-0xf.fffffp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, 0x5.a8279b09d8dap-140), acos(cf64.init(-0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, 0xa.f5ccbc6314268p-1016), acos(cf64.init(-0xf.fffffp-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x0p+0), acos(cf64.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x2.d413cccfe779ap-76), acos(cf64.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0xf.bf7df5c6a789p-516), acos(cf64.init(-0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a4885a3p+0, 0x0p+0), acos(cf64.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a4885a3p+0, 0x2p-124), acos(cf64.init(-0xf.ffffffffffff8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a4885a3p+0, 0x3.ep-1000), acos(cf64.init(-0xf.ffffffffffff8p-4, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea13p-4), acos(cf64.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea13p-4), acos(cf64.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea13p-4), acos(cf64.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea13p-4), acos(cf64.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x0p+0), acos(cf64.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, -0x0p+0), acos(cf64.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x4p-28, -0x0p+0), acos(cf64.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, -0x0p+0), acos(cf64.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x0p+0), acos(cf64.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a4885a3p+0, -0x0p+0), acos(cf64.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x0p+0), acos(cf64.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, 0x0p+0), acos(cf64.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x4p-28, 0x0p+0), acos(cf64.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, 0x0p+0), acos(cf64.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x0p+0), acos(cf64.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a4885a3p+0, 0x0p+0), acos(cf64.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x7.b30b2bb145828p-4), acos(cf64.init(0x8p-108, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x7.b30b2bb145828p-4), acos(cf64.init(0x8p-108, -0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x7.b30b2bb145828p-4), acos(cf64.init(-0x8p-108, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x7.b30b2bb145828p-4), acos(cf64.init(-0x8p-108, -0x8p-4)));
    // try std.testing.expectEqual(cf64.init(0x1.0c152382d7366p+0, -0x9.3cd3a2c8198ep-108), acos(cf64.init(0x8p-4, 0x8p-108)));
    // try std.testing.expectEqual(cf64.init(0x2.182a4705ae6ccp+0, -0x9.3cd3a2c8198ep-108), acos(cf64.init(-0x8p-4, 0x8p-108)));
    // try std.testing.expectEqual(cf64.init(0x1.0c152382d7366p+0, 0x9.3cd3a2c8198ep-108), acos(cf64.init(0x8p-4, -0x8p-108)));
    // try std.testing.expectEqual(cf64.init(0x2.182a4705ae6ccp+0, 0x9.3cd3a2c8198ep-108), acos(cf64.init(-0x8p-4, -0x8p-108)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x8p-108), acos(cf64.init(0x8p-108, 0x8p-108)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x8p-108), acos(cf64.init(0x8p-108, -0x8p-108)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x8p-108), acos(cf64.init(-0x8p-108, 0x8p-108)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x8p-108), acos(cf64.init(-0x8p-108, -0x8p-108)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x8p-108), acos(cf64.init(0x8p-152, 0x8p-108)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x8p-108), acos(cf64.init(0x0p+0, 0x8p-108)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x8p-108), acos(cf64.init(0xf.8p-1028, 0x8p-108)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x8p-108), acos(cf64.init(0x8p-152, -0x8p-108)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x8p-108), acos(cf64.init(0x0p+0, -0x8p-108)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x8p-108), acos(cf64.init(0xf.8p-1028, -0x8p-108)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x8p-108), acos(cf64.init(-0x0p+0, 0x8p-108)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x8p-108), acos(cf64.init(-0x8p-152, 0x8p-108)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x8p-108), acos(cf64.init(-0xf.8p-1028, 0x8p-108)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x8p-108), acos(cf64.init(-0x0p+0, -0x8p-108)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x8p-108), acos(cf64.init(-0x8p-152, -0x8p-108)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x8p-108), acos(cf64.init(-0xf.8p-1028, -0x8p-108)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x8p-152), acos(cf64.init(0x8p-108, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), acos(cf64.init(0x8p-108, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xf.8p-1028), acos(cf64.init(0x8p-108, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x8p-152), acos(cf64.init(-0x8p-108, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), acos(cf64.init(-0x8p-108, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xf.8p-1028), acos(cf64.init(-0x8p-108, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), acos(cf64.init(0x8p-108, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x8p-152), acos(cf64.init(0x8p-108, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xf.8p-1028), acos(cf64.init(0x8p-108, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), acos(cf64.init(-0x8p-108, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x8p-152), acos(cf64.init(-0x8p-108, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xf.8p-1028), acos(cf64.init(-0x8p-108, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x8p-108), acos(cf64.init(0x0p+0, 0x8p-108)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x8p-108), acos(cf64.init(0x0p+0, -0x8p-108)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x8p-108), acos(cf64.init(-0x0p+0, 0x8p-108)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x8p-108), acos(cf64.init(-0x0p+0, -0x8p-108)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), acos(cf64.init(0x8p-108, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), acos(cf64.init(-0x8p-108, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), acos(cf64.init(0x8p-108, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), acos(cf64.init(-0x8p-108, -0x0p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x1p-112, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(0x1p-112, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea13p-4), acos(cf64.init(0x1p-112, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(0x1p-112, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x1p-112, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea13p-4), acos(cf64.init(0x1p-112, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x1p-112, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(-0x1p-112, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea13p-4), acos(cf64.init(-0x1p-112, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(-0x1p-112, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x1p-112, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea13p-4), acos(cf64.init(-0x1p-112, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1p-56, -0x1p-56), acos(cf64.init(0x1p+0, 0x1p-112)));
    // try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, -0xb.504f3613b1b4p-104), acos(cf64.init(0xf.fffffp-4, 0x1p-112)));
    try std.testing.expectEqual(cf64.init(0x4p-28, -0x4p-88), acos(cf64.init(0xf.ffffffffffff8p-4, 0x1p-112)));
    // try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, -0xb.504f3613b1b4p-104), acos(cf64.init(-0xf.fffffp-4, 0x1p-112)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x1p-56), acos(cf64.init(-0x1p+0, 0x1p-112)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a4885a3p+0, -0x4p-88), acos(cf64.init(-0xf.ffffffffffff8p-4, 0x1p-112)));
    try std.testing.expectEqual(cf64.init(0x1p-56, 0x1p-56), acos(cf64.init(0x1p+0, -0x1p-112)));
    // try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, 0xb.504f3613b1b4p-104), acos(cf64.init(0xf.fffffp-4, -0x1p-112)));
    try std.testing.expectEqual(cf64.init(0x4p-28, 0x4p-88), acos(cf64.init(0xf.ffffffffffff8p-4, -0x1p-112)));
    // try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, 0xb.504f3613b1b4p-104), acos(cf64.init(-0xf.fffffp-4, -0x1p-112)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x1p-56), acos(cf64.init(-0x1p+0, -0x1p-112)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a4885a3p+0, 0x4p-88), acos(cf64.init(-0xf.ffffffffffff8p-4, -0x1p-112)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(0x8p-152, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea13p-4), acos(cf64.init(0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea13p-4), acos(cf64.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(0x4p-1076, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea13p-4), acos(cf64.init(0x4p-1076, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea13p-4), acos(cf64.init(0x8p-152, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea13p-4), acos(cf64.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(0x4p-1076, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x4p-1076, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea13p-4), acos(cf64.init(0x4p-1076, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea13p-4), acos(cf64.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(-0x8p-152, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea13p-4), acos(cf64.init(-0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(-0x4p-1076, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea13p-4), acos(cf64.init(-0x4p-1076, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea13p-4), acos(cf64.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(-0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea13p-4), acos(cf64.init(-0x8p-152, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(-0x4p-1076, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x4p-1076, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea13p-4), acos(cf64.init(-0x4p-1076, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x2.d413cccfe779ap-76, -0x2.d413cccfe779ap-76), acos(cf64.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x0p+0), acos(cf64.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x8p-540, -0x8p-540), acos(cf64.init(0x1p+0, 0x4p-1076)));
    // try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, -0x5.a8279b09d8dap-140), acos(cf64.init(0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, -0x0p+0), acos(cf64.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, -0x2.d4p-1064), acos(cf64.init(0xf.fffffp-4, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x4p-28, -0x2p-124), acos(cf64.init(0xf.ffffffffffff8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x4p-28, -0x0p+0), acos(cf64.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x4p-28, -0x1p-1048), acos(cf64.init(0xf.ffffffffffff8p-4, 0x4p-1076)));
    // try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, -0x5.a8279b09d8dap-140), acos(cf64.init(-0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, -0x0p+0), acos(cf64.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, -0x2.d4p-1064), acos(cf64.init(-0xf.fffffp-4, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x2.d413cccfe779ap-76), acos(cf64.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x0p+0), acos(cf64.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x8p-540), acos(cf64.init(-0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a4885a3p+0, -0x2p-124), acos(cf64.init(-0xf.ffffffffffff8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a4885a3p+0, -0x0p+0), acos(cf64.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a4885a3p+0, -0x1p-1048), acos(cf64.init(-0xf.ffffffffffff8p-4, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x0p+0), acos(cf64.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x2.d413cccfe779ap-76, 0x2.d413cccfe779ap-76), acos(cf64.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x8p-540, 0x8p-540), acos(cf64.init(0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, 0x0p+0), acos(cf64.init(0xf.fffffp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, 0x5.a8279b09d8dap-140), acos(cf64.init(0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, 0x2.d4p-1064), acos(cf64.init(0xf.fffffp-4, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x4p-28, 0x0p+0), acos(cf64.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x4p-28, 0x2p-124), acos(cf64.init(0xf.ffffffffffff8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x4p-28, 0x1p-1048), acos(cf64.init(0xf.ffffffffffff8p-4, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, 0x0p+0), acos(cf64.init(-0xf.fffffp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, 0x5.a8279b09d8dap-140), acos(cf64.init(-0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, 0x2.d4p-1064), acos(cf64.init(-0xf.fffffp-4, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x0p+0), acos(cf64.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x2.d413cccfe779ap-76), acos(cf64.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x8p-540), acos(cf64.init(-0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a4885a3p+0, 0x0p+0), acos(cf64.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a4885a3p+0, 0x2p-124), acos(cf64.init(-0xf.ffffffffffff8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a4885a3p+0, 0x1p-1048), acos(cf64.init(-0xf.ffffffffffff8p-4, -0x4p-1076)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea13p-4), acos(cf64.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea13p-4), acos(cf64.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea138p-4), acos(cf64.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b256c9add8p-4), acos(cf64.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xe.1a1b30bcea13p-4), acos(cf64.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b256c9add8p-4), acos(cf64.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea138p-4), acos(cf64.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xe.1a1b30bcea13p-4), acos(cf64.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x0p+0), acos(cf64.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, -0x0p+0), acos(cf64.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x4p-28, -0x0p+0), acos(cf64.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, -0x0p+0), acos(cf64.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, -0x0p+0), acos(cf64.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a4885a3p+0, -0x0p+0), acos(cf64.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x0p+0), acos(cf64.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e6861f3abp-12, 0x0p+0), acos(cf64.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x4p-28, 0x0p+0), acos(cf64.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.2428c9ea1d412p+0, 0x0p+0), acos(cf64.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a8885a3p+0, 0x0p+0), acos(cf64.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x3.243f6a4885a3p+0, 0x0p+0), acos(cf64.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x7.b30b2bb145828p-4), acos(cf64.init(0x1p-112, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x7.b30b2bb145828p-4), acos(cf64.init(0x1p-112, -0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x7.b30b2bb145828p-4), acos(cf64.init(-0x1p-112, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x7.b30b2bb145828p-4), acos(cf64.init(-0x1p-112, -0x8p-4)));
    // try std.testing.expectEqual(cf64.init(0x1.0c152382d7366p+0, -0x1.279a74590331cp-112), acos(cf64.init(0x8p-4, 0x1p-112)));
    // try std.testing.expectEqual(cf64.init(0x2.182a4705ae6ccp+0, -0x1.279a74590331cp-112), acos(cf64.init(-0x8p-4, 0x1p-112)));
    // try std.testing.expectEqual(cf64.init(0x1.0c152382d7366p+0, 0x1.279a74590331cp-112), acos(cf64.init(0x8p-4, -0x1p-112)));
    // try std.testing.expectEqual(cf64.init(0x2.182a4705ae6ccp+0, 0x1.279a74590331cp-112), acos(cf64.init(-0x8p-4, -0x1p-112)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1p-112), acos(cf64.init(0x1p-112, 0x1p-112)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1p-112), acos(cf64.init(0x1p-112, -0x1p-112)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1p-112), acos(cf64.init(-0x1p-112, 0x1p-112)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1p-112), acos(cf64.init(-0x1p-112, -0x1p-112)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1p-112), acos(cf64.init(0x8p-152, 0x1p-112)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1p-112), acos(cf64.init(0x0p+0, 0x1p-112)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1p-112), acos(cf64.init(0x4p-1076, 0x1p-112)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1p-112), acos(cf64.init(0x8p-152, -0x1p-112)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1p-112), acos(cf64.init(0x0p+0, -0x1p-112)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1p-112), acos(cf64.init(0x4p-1076, -0x1p-112)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1p-112), acos(cf64.init(-0x0p+0, 0x1p-112)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1p-112), acos(cf64.init(-0x8p-152, 0x1p-112)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1p-112), acos(cf64.init(-0x4p-1076, 0x1p-112)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1p-112), acos(cf64.init(-0x0p+0, -0x1p-112)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1p-112), acos(cf64.init(-0x8p-152, -0x1p-112)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1p-112), acos(cf64.init(-0x4p-1076, -0x1p-112)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x8p-152), acos(cf64.init(0x1p-112, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), acos(cf64.init(0x1p-112, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x4p-1076), acos(cf64.init(0x1p-112, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x8p-152), acos(cf64.init(-0x1p-112, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), acos(cf64.init(-0x1p-112, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x4p-1076), acos(cf64.init(-0x1p-112, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), acos(cf64.init(0x1p-112, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x8p-152), acos(cf64.init(0x1p-112, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x4p-1076), acos(cf64.init(0x1p-112, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), acos(cf64.init(-0x1p-112, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x8p-152), acos(cf64.init(-0x1p-112, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x4p-1076), acos(cf64.init(-0x1p-112, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1p-112), acos(cf64.init(0x0p+0, 0x1p-112)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1p-112), acos(cf64.init(0x0p+0, -0x1p-112)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1p-112), acos(cf64.init(-0x0p+0, 0x1p-112)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1p-112), acos(cf64.init(-0x0p+0, -0x1p-112)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), acos(cf64.init(0x1p-112, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), acos(cf64.init(-0x1p-112, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), acos(cf64.init(0x1p-112, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), acos(cf64.init(-0x1p-112, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.1e15cced3f1adp+0, -0x1.21e48c8df1875p+0), acos(cf64.init(0xcp-4, 0x1.4p+0)));
    try std.testing.expectEqual(cf64.init(0x2.2436024a4a9ep+0, 0x1.fbbf409ccd56p+0), acos(cf64.init(-0x2p+0, -0x3p+0)));

    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), acos(cf80.init(0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), acos(cf80.init(-0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), acos(cf80.init(-0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), acos(cf80.init(0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.31dc0090b63d8682p+0), acos(cf80.init(0x0p+0, -0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.31dc0090b63d8682p+0), acos(cf80.init(-0x0p+0, -0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x7.b30b2bb14582653p-4), acos(cf80.init(0x0p+0, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x7.b30b2bb14582653p-4), acos(cf80.init(-0x0p+0, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x7.b30b2bb14582653p-4), acos(cf80.init(0x0p+0, 0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x7.b30b2bb14582653p-4), acos(cf80.init(-0x0p+0, 0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.31dc0090b63d8682p+0), acos(cf80.init(0x0p+0, 0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.31dc0090b63d8682p+0), acos(cf80.init(-0x0p+0, 0x1.8p+0)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0xf.661657628b04ca6p-4), acos(cf80.init(-0x1.8p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0xf.661657628b04ca6p-4), acos(cf80.init(-0x1.8p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x0p+0), acos(cf80.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x0p+0), acos(cf80.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x2.182a4705ae6cb08cp+0, -0x0p+0), acos(cf80.init(-0x8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x2.182a4705ae6cb08cp+0, 0x0p+0), acos(cf80.init(-0x8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.0c152382d7365846p+0, -0x0p+0), acos(cf80.init(0x8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.0c152382d7365846p+0, 0x0p+0), acos(cf80.init(0x8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x0p+0), acos(cf80.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x0p+0), acos(cf80.init(0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, -0xf.661657628b04ca6p-4), acos(cf80.init(0x1.8p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0xf.661657628b04ca6p-4), acos(cf80.init(0x1.8p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x4p-52, -0x2.359bac65ecc553d4p+4), acos(cf80.init(0x4p+48, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x4p-52, 0x2.359bac65ecc553d4p+4), acos(cf80.init(0x4p+48, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a2c8d4p+0, -0x2.359bac65ecc553d4p+4), acos(cf80.init(-0x4p+48, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a2c8d4p+0, 0x2.359bac65ecc553d4p+4), acos(cf80.init(-0x4p+48, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1446ap+0, -0x2.359bac65ecc553d4p+4), acos(cf80.init(0x1p+0, 0x4p+48)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1c46ap+0, -0x2.359bac65ecc553d4p+4), acos(cf80.init(-0x1p+0, 0x4p+48)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1446ap+0, 0x2.359bac65ecc553d4p+4), acos(cf80.init(0x1p+0, -0x4p+48)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1c46ap+0, 0x2.359bac65ecc553d4p+4), acos(cf80.init(-0x1p+0, -0x4p+48)));
    try std.testing.expectEqual(cf80.init(0x1.000001000001p-128, -0x5.96a7e12e0b98bcf8p+4), acos(cf80.init(0xf.fffffp+124, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1p-500, -0x1.5b4448e7fd9b091ep+8), acos(cf80.init(0x1p+500, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.000001000001p-128, 0x5.96a7e12e0b98bcf8p+4), acos(cf80.init(0xf.fffffp+124, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1p-500, 0x1.5b4448e7fd9b091ep+8), acos(cf80.init(0x1p+500, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x5.96a7e12e0b98bcf8p+4), acos(cf80.init(-0xf.fffffp+124, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x1.5b4448e7fd9b091ep+8), acos(cf80.init(-0x1p+500, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x5.96a7e12e0b98bcf8p+4), acos(cf80.init(-0xf.fffffp+124, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x1.5b4448e7fd9b091ep+8), acos(cf80.init(-0x1p+500, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x5.96a7e12e0b98bcf8p+4), acos(cf80.init(0x1p+0, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.5b4448e7fd9b091ep+8), acos(cf80.init(0x1p+0, 0x1p+500)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x5.96a7e12e0b98bcf8p+4), acos(cf80.init(-0x1p+0, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.5b4448e7fd9b091ep+8), acos(cf80.init(-0x1p+0, 0x1p+500)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x5.96a7e12e0b98bcf8p+4), acos(cf80.init(0x1p+0, -0xf.fffffp+124)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.5b4448e7fd9b091ep+8), acos(cf80.init(0x1p+0, -0x1p+500)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x5.96a7e12e0b98bcf8p+4), acos(cf80.init(-0x1p+0, -0xf.fffffp+124)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.5b4448e7fd9b091ep+8), acos(cf80.init(-0x1p+0, -0x1p+500)));
    try std.testing.expectEqual(cf80.init(0x1.000001000001p-128, -0x5.96a7e12e0b98bcf8p+4), acos(cf80.init(0xf.fffffp+124, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.00000000000008p-1024, -0x2.c679d1f73f0fb62p+8), acos(cf80.init(0xf.ffffffffffff8p+1020, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1p-5000, -0xd.8a6dd63831ae0fep+8), acos(cf80.init(0x1p+5000, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.000001000001p-128, 0x5.96a7e12e0b98bcf8p+4), acos(cf80.init(0xf.fffffp+124, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.00000000000008p-1024, 0x2.c679d1f73f0fb62p+8), acos(cf80.init(0xf.ffffffffffff8p+1020, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1p-5000, 0xd.8a6dd63831ae0fep+8), acos(cf80.init(0x1p+5000, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x5.96a7e12e0b98bcf8p+4), acos(cf80.init(-0xf.fffffp+124, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x2.c679d1f73f0fb62p+8), acos(cf80.init(-0xf.ffffffffffff8p+1020, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0xd.8a6dd63831ae0fep+8), acos(cf80.init(-0x1p+5000, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x5.96a7e12e0b98bcf8p+4), acos(cf80.init(-0xf.fffffp+124, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x2.c679d1f73f0fb62p+8), acos(cf80.init(-0xf.ffffffffffff8p+1020, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0xd.8a6dd63831ae0fep+8), acos(cf80.init(-0x1p+5000, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x5.96a7e12e0b98bcf8p+4), acos(cf80.init(0x1p+0, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2.c679d1f73f0fb62p+8), acos(cf80.init(0x1p+0, 0xf.ffffffffffff8p+1020)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xd.8a6dd63831ae0fep+8), acos(cf80.init(0x1p+0, 0x1p+5000)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x5.96a7e12e0b98bcf8p+4), acos(cf80.init(-0x1p+0, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2.c679d1f73f0fb62p+8), acos(cf80.init(-0x1p+0, 0xf.ffffffffffff8p+1020)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xd.8a6dd63831ae0fep+8), acos(cf80.init(-0x1p+0, 0x1p+5000)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x5.96a7e12e0b98bcf8p+4), acos(cf80.init(0x1p+0, -0xf.fffffp+124)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2.c679d1f73f0fb62p+8), acos(cf80.init(0x1p+0, -0xf.ffffffffffff8p+1020)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xd.8a6dd63831ae0fep+8), acos(cf80.init(0x1p+0, -0x1p+5000)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x5.96a7e12e0b98bcf8p+4), acos(cf80.init(-0x1p+0, -0xf.fffffp+124)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2.c679d1f73f0fb62p+8), acos(cf80.init(-0x1p+0, -0xf.ffffffffffff8p+1020)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xd.8a6dd63831ae0fep+8), acos(cf80.init(-0x1p+0, -0x1p+5000)));
    try std.testing.expectEqual(cf80.init(0xc.90fdaa22168c235p-4, -0x5.9bb167117aed1eap+4), acos(cf80.init(0xf.8p+124, 0xf.8p+124)));
    // try std.testing.expectEqual(cf80.init(0xc.90fdaa22168c235p-4, -0x5.9c3371edca2738c8p+4), acos(cf80.init(0xf.fffffp+124, 0xf.fffffp+124)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2.c671b1487a1c1408p+8), acos(cf80.init(0xf.fffffp+124, 0xf.8p+1020)));
    // try std.testing.expectEqual(cf80.init(0x1.08420f7bdef7bdfp-896, -0x2.c671b1487a1c1408p+8), acos(cf80.init(0xf.8p+1020, 0xf.fffffp+124)));
    // try std.testing.expectEqual(cf80.init(0xc.90fdaa22168c235p-4, -0x2.c6ca6a547604fbc4p+8), acos(cf80.init(0xf.8p+1020, 0xf.8p+1020)));
    // try std.testing.expectEqual(cf80.init(0xc.90fdaa22168c235p-4, -0x5.9c3371edca2738c8p+4), acos(cf80.init(0xf.fffffp+124, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2.c679d1f73f0fb62p+8), acos(cf80.init(0xf.fffffp+124, 0xf.ffffffffffff8p+1020)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2.c5d2f4f5da6bc984p+12), acos(cf80.init(0xf.fffffp+124, 0xf.8p+16380)));
    try std.testing.expectEqual(cf80.init(0xf.fffff00000008p-900, -0x2.c679d1f73f0fb62p+8), acos(cf80.init(0xf.ffffffffffff8p+1020, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf80.init(0xc.90fdaa22168c235p-4, -0x2.c6d28b033af89ddcp+8), acos(cf80.init(0xf.ffffffffffff8p+1020, 0xf.ffffffffffff8p+1020)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2.c5d2f4f5da6bc984p+12), acos(cf80.init(0xf.ffffffffffff8p+1020, 0xf.8p+16380)));
    try std.testing.expectEqual(cf80.init(0x1.08420f7bdef7bdfp-16256, -0x2.c5d2f4f5da6bc984p+12), acos(cf80.init(0xf.8p+16380, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf80.init(0x1.08421084210839cep-15360, -0x2.c5d2f4f5da6bc984p+12), acos(cf80.init(0xf.8p+16380, 0xf.ffffffffffff8p+1020)));
    try std.testing.expectEqual(cf80.init(0xc.90fdaa22168c235p-4, -0x2.c5d880869a2a58p+12), acos(cf80.init(0xf.8p+16380, 0xf.8p+16380)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.31dc0090b63d8682p+0), acos(cf80.init(0xf.8p-132, 0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.31dc0090b63d8682p+0), acos(cf80.init(0xf.8p-132, -0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.31dc0090b63d8682p+0), acos(cf80.init(-0xf.8p-132, 0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.31dc0090b63d8682p+0), acos(cf80.init(-0xf.8p-132, -0x1.8p+0)));
    // try std.testing.expectEqual(cf80.init(0xd.dd164bc8f73535ep-132, -0xf.661657628b04ca6p-4), acos(cf80.init(0x1.8p+0, 0xf.8p-132)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0xf.661657628b04ca6p-4), acos(cf80.init(-0x1.8p+0, 0xf.8p-132)));
    // try std.testing.expectEqual(cf80.init(0xd.dd164bc8f73535ep-132, 0xf.661657628b04ca6p-4), acos(cf80.init(0x1.8p+0, -0xf.8p-132)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0xf.661657628b04ca6p-4), acos(cf80.init(-0x1.8p+0, -0xf.8p-132)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.31dc0090b63d8682p+0), acos(cf80.init(0x8p-152, 0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.31dc0090b63d8682p+0), acos(cf80.init(0x0p+0, 0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.31dc0090b63d8682p+0), acos(cf80.init(0xf.8p-1028, 0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.31dc0090b63d8682p+0), acos(cf80.init(0x8p-152, -0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.31dc0090b63d8682p+0), acos(cf80.init(0x0p+0, -0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.31dc0090b63d8682p+0), acos(cf80.init(0xf.8p-1028, -0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.31dc0090b63d8682p+0), acos(cf80.init(-0x0p+0, 0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.31dc0090b63d8682p+0), acos(cf80.init(-0x8p-152, 0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.31dc0090b63d8682p+0), acos(cf80.init(-0xf.8p-1028, 0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.31dc0090b63d8682p+0), acos(cf80.init(-0x0p+0, -0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.31dc0090b63d8682p+0), acos(cf80.init(-0x8p-152, -0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.31dc0090b63d8682p+0), acos(cf80.init(-0xf.8p-1028, -0x1.8p+0)));
    // try std.testing.expectEqual(cf80.init(0x7.27c9716ffb764d58p-152, -0xf.661657628b04ca6p-4), acos(cf80.init(0x1.8p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, -0xf.661657628b04ca6p-4), acos(cf80.init(0x1.8p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0xd.dd164bc8f73535ep-1028, -0xf.661657628b04ca6p-4), acos(cf80.init(0x1.8p+0, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0xf.661657628b04ca6p-4), acos(cf80.init(-0x1.8p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0xf.661657628b04ca6p-4), acos(cf80.init(-0x1.8p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0xf.661657628b04ca6p-4), acos(cf80.init(-0x1.8p+0, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0xf.661657628b04ca6p-4), acos(cf80.init(0x1.8p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x7.27c9716ffb764d58p-152, 0xf.661657628b04ca6p-4), acos(cf80.init(0x1.8p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0xd.dd164bc8f73535ep-1028, 0xf.661657628b04ca6p-4), acos(cf80.init(0x1.8p+0, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0xf.661657628b04ca6p-4), acos(cf80.init(-0x1.8p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0xf.661657628b04ca6p-4), acos(cf80.init(-0x1.8p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0xf.661657628b04ca6p-4), acos(cf80.init(-0x1.8p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.31dc0090b63d8682p+0), acos(cf80.init(0x8p-152, 0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.31dc0090b63d8682p+0), acos(cf80.init(0x0p+0, 0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.31dc0090b63d8682p+0), acos(cf80.init(0x4p-1076, 0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.31dc0090b63d8682p+0), acos(cf80.init(0xf.8p-16388, 0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.31dc0090b63d8682p+0), acos(cf80.init(0x8p-152, -0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.31dc0090b63d8682p+0), acos(cf80.init(0x0p+0, -0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.31dc0090b63d8682p+0), acos(cf80.init(0x4p-1076, -0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.31dc0090b63d8682p+0), acos(cf80.init(0xf.8p-16388, -0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.31dc0090b63d8682p+0), acos(cf80.init(-0x0p+0, 0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.31dc0090b63d8682p+0), acos(cf80.init(-0x8p-152, 0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.31dc0090b63d8682p+0), acos(cf80.init(-0x4p-1076, 0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.31dc0090b63d8682p+0), acos(cf80.init(-0xf.8p-16388, 0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.31dc0090b63d8682p+0), acos(cf80.init(-0x0p+0, -0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.31dc0090b63d8682p+0), acos(cf80.init(-0x8p-152, -0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.31dc0090b63d8682p+0), acos(cf80.init(-0x4p-1076, -0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.31dc0090b63d8682p+0), acos(cf80.init(-0xf.8p-16388, -0x1.8p+0)));
    // try std.testing.expectEqual(cf80.init(0x7.27c9716ffb764d58p-152, -0xf.661657628b04ca6p-4), acos(cf80.init(0x1.8p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, -0xf.661657628b04ca6p-4), acos(cf80.init(0x1.8p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x3.93e4b8b7fdbb26acp-1076, -0xf.661657628b04ca6p-4), acos(cf80.init(0x1.8p+0, 0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0xd.dd164bc8f73536p-16388, -0xf.661657628b04ca6p-4), acos(cf80.init(0x1.8p+0, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0xf.661657628b04ca6p-4), acos(cf80.init(-0x1.8p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0xf.661657628b04ca6p-4), acos(cf80.init(-0x1.8p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0xf.661657628b04ca6p-4), acos(cf80.init(-0x1.8p+0, 0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0xf.661657628b04ca6p-4), acos(cf80.init(-0x1.8p+0, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0xf.661657628b04ca6p-4), acos(cf80.init(0x1.8p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x7.27c9716ffb764d58p-152, 0xf.661657628b04ca6p-4), acos(cf80.init(0x1.8p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x3.93e4b8b7fdbb26acp-1076, 0xf.661657628b04ca6p-4), acos(cf80.init(0x1.8p+0, -0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0xd.dd164bc8f73536p-16388, 0xf.661657628b04ca6p-4), acos(cf80.init(0x1.8p+0, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0xf.661657628b04ca6p-4), acos(cf80.init(-0x1.8p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0xf.661657628b04ca6p-4), acos(cf80.init(-0x1.8p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0xf.661657628b04ca6p-4), acos(cf80.init(-0x1.8p+0, -0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0xf.661657628b04ca6p-4), acos(cf80.init(-0x1.8p+0, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(0x1.38aadea15829f284p+0, -0xe.d170de964f5d751p-4), acos(cf80.init(0x8p-4, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.38aadea15829f284p+0, 0xe.d170de964f5d751p-4), acos(cf80.init(0x8p-4, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.eb948be72d79164ep+0, -0xe.d170de964f5d751p-4), acos(cf80.init(-0x8p-4, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.eb948be72d79164ep+0, 0xe.d170de964f5d751p-4), acos(cf80.init(-0x8p-4, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0xa.cc583f03a22a8c4p-4, -0xb.b9c8f86edeb47f1p-4), acos(cf80.init(0x1p+0, 0x8p-4)));
    // try std.testing.expectEqual(cf80.init(0x2.7779e6984b80601p+0, -0xb.b9c8f86edeb47f1p-4), acos(cf80.init(-0x1p+0, 0x8p-4)));
    // try std.testing.expectEqual(cf80.init(0xa.cc583f03a22a8c4p-4, 0xb.b9c8f86edeb47f1p-4), acos(cf80.init(0x1p+0, -0x8p-4)));
    // try std.testing.expectEqual(cf80.init(0x2.7779e6984b80601p+0, 0xb.b9c8f86edeb47f1p-4), acos(cf80.init(-0x1p+0, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.64fd8d454758c166p+0, -0xe.4787aa0d7d0a7c7p-4), acos(cf80.init(0x4p-4, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.64fd8d454758c166p+0, 0xe.4787aa0d7d0a7c7p-4), acos(cf80.init(0x4p-4, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.bf41dd433e4a476cp+0, -0xe.4787aa0d7d0a7c7p-4), acos(cf80.init(-0x4p-4, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.bf41dd433e4a476cp+0, 0xe.4787aa0d7d0a7c7p-4), acos(cf80.init(-0x4p-4, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x7.d32025ccefaafbf8p-4, -0x8.281ac2ec921b31bp-4), acos(cf80.init(0x1p+0, 0x4p-4)));
    try std.testing.expectEqual(cf80.init(0x2.a70d682bb6a85914p+0, -0x8.281ac2ec921b31bp-4), acos(cf80.init(-0x1p+0, 0x4p-4)));
    try std.testing.expectEqual(cf80.init(0x7.d32025ccefaafbf8p-4, 0x8.281ac2ec921b31bp-4), acos(cf80.init(0x1p+0, -0x4p-4)));
    try std.testing.expectEqual(cf80.init(0x2.a70d682bb6a85914p+0, 0x8.281ac2ec921b31bp-4), acos(cf80.init(-0x1p+0, -0x4p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.91c806df5113088ep+0, -0xe.1a1bda9ed1cea5ep-4), acos(cf80.init(0x7.cp-12, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.91c806df5113088ep+0, 0xe.1a1bda9ed1cea5ep-4), acos(cf80.init(0x7.cp-12, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.927763a934900044p+0, -0xe.1a1bda9ed1cea5ep-4), acos(cf80.init(-0x7.cp-12, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.927763a934900044p+0, 0xe.1a1bda9ed1cea5ep-4), acos(cf80.init(-0x7.cp-12, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0xb.223ee4fc5f3ba59p-8, -0xb.23250757a42f7a1p-8), acos(cf80.init(0x1p+0, 0x7.cp-12)));
    try std.testing.expectEqual(cf80.init(0x3.191d2ba38943cd2cp+0, -0xb.23250757a42f7a1p-8), acos(cf80.init(-0x1p+0, 0x7.cp-12)));
    // try std.testing.expectEqual(cf80.init(0xb.223ee4fc5f3ba59p-8, 0xb.23250757a42f7a1p-8), acos(cf80.init(0x1p+0, -0x7.cp-12)));
    try std.testing.expectEqual(cf80.init(0x3.191d2ba38943cd2cp+0, 0xb.23250757a42f7a1p-8), acos(cf80.init(-0x1p+0, -0x7.cp-12)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb53ec7eb2796p+0, -0xe.1a1b30bcea1366bp-4), acos(cf80.init(0x7.cp-32, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb53ec7eb2796p+0, 0xe.1a1b30bcea1366bp-4), acos(cf80.init(0x7.cp-32, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb549bdb7e13cp+0, -0xe.1a1b30bcea1366bp-4), acos(cf80.init(-0x7.cp-32, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb549bdb7e13cp+0, 0xe.1a1b30bcea1366bp-4), acos(cf80.init(-0x7.cp-32, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x2.c8ac80ab4bf3b0c4p-16, -0x2.c8ac80aee47d2c4cp-16), acos(cf80.init(0x1p+0, 0x7.cp-32)));
    // try std.testing.expectEqual(cf80.init(0x3.243ca1dc04f7bcep+0, -0x2.c8ac80aee47d2c4cp-16), acos(cf80.init(-0x1p+0, 0x7.cp-32)));
    // try std.testing.expectEqual(cf80.init(0x2.c8ac80ab4bf3b0c4p-16, 0x2.c8ac80aee47d2c4cp-16), acos(cf80.init(0x1p+0, -0x7.cp-32)));
    // try std.testing.expectEqual(cf80.init(0x3.243ca1dc04f7bcep+0, 0x2.c8ac80aee47d2c4cp-16), acos(cf80.init(-0x1p+0, -0x7.cp-32)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x1.fp-100, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x1.fp-100, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x1.fp-100, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x1.fp-100, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x5.9159015a3070dd18p-52, -0x5.9159015a3070dd18p-52), acos(cf80.init(0x1p+0, 0x1.fp-100)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a2afbcp+0, -0x5.9159015a3070dd18p-52), acos(cf80.init(-0x1p+0, 0x1.fp-100)));
    try std.testing.expectEqual(cf80.init(0x5.9159015a3070dd18p-52, 0x5.9159015a3070dd18p-52), acos(cf80.init(0x1p+0, -0x1.fp-100)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a2afbcp+0, 0x5.9159015a3070dd18p-52), acos(cf80.init(-0x1p+0, -0x1.fp-100)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0xf.8p-132, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0xf.8p-132, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0xf.8p-132, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0xf.8p-132, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0xf.bf7df5c6a788f0cp-68, -0xf.bf7df5c6a788f0cp-68), acos(cf80.init(0x1p+0, 0xf.8p-132)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0xf.bf7df5c6a788f0cp-68), acos(cf80.init(-0x1p+0, 0xf.8p-132)));
    try std.testing.expectEqual(cf80.init(0xf.bf7df5c6a788f0cp-68, 0xf.bf7df5c6a788f0cp-68), acos(cf80.init(0x1p+0, -0xf.8p-132)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0xf.bf7df5c6a788f0cp-68), acos(cf80.init(-0x1p+0, -0xf.8p-132)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x1.fp-1000, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x1.fp-1000, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x1.fp-1000, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x1.fp-1000, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-76, -0x2.d413cccfe779921p-76), acos(cf80.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x0p+0), acos(cf80.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.645640568c1c3746p-500, -0x1.645640568c1c3746p-500), acos(cf80.init(0x1p+0, 0x1.fp-1000)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x2.d413cccfe779921p-76), acos(cf80.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x0p+0), acos(cf80.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x1.645640568c1c3746p-500), acos(cf80.init(-0x1p+0, 0x1.fp-1000)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x0p+0), acos(cf80.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-76, 0x2.d413cccfe779921p-76), acos(cf80.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.645640568c1c3746p-500, 0x1.645640568c1c3746p-500), acos(cf80.init(0x1p+0, -0x1.fp-1000)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x0p+0), acos(cf80.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x2.d413cccfe779921p-76), acos(cf80.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x1.645640568c1c3746p-500), acos(cf80.init(-0x1p+0, -0x1.fp-1000)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0xf.8p-1028, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0xf.8p-1028, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0xf.8p-1028, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0xf.8p-1028, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-76, -0x2.d413cccfe779921p-76), acos(cf80.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x0p+0), acos(cf80.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0xf.bf7df5c6a788f0cp-516, -0xf.bf7df5c6a788f0cp-516), acos(cf80.init(0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x2.d413cccfe779921p-76), acos(cf80.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x0p+0), acos(cf80.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0xf.bf7df5c6a788f0cp-516), acos(cf80.init(-0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x0p+0), acos(cf80.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-76, 0x2.d413cccfe779921p-76), acos(cf80.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0xf.bf7df5c6a788f0cp-516, 0xf.bf7df5c6a788f0cp-516), acos(cf80.init(0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x0p+0), acos(cf80.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x2.d413cccfe779921p-76), acos(cf80.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0xf.bf7df5c6a788f0cp-516), acos(cf80.init(-0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x1.fp-10000, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x4p-1076, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x1.fp-10000, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x1.fp-10000, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x4p-1076, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x1.fp-10000, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-76, -0x2.d413cccfe779921p-76), acos(cf80.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x0p+0), acos(cf80.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x8p-540, -0x8p-540), acos(cf80.init(0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.645640568c1c3746p-5000, -0x1.645640568c1c3746p-5000), acos(cf80.init(0x1p+0, 0x1.fp-10000)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x2.d413cccfe779921p-76), acos(cf80.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x0p+0), acos(cf80.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x8p-540), acos(cf80.init(-0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x1.645640568c1c3746p-5000), acos(cf80.init(-0x1p+0, 0x1.fp-10000)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x0p+0), acos(cf80.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-76, 0x2.d413cccfe779921p-76), acos(cf80.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x8p-540, 0x8p-540), acos(cf80.init(0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.645640568c1c3746p-5000, 0x1.645640568c1c3746p-5000), acos(cf80.init(0x1p+0, -0x1.fp-10000)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x0p+0), acos(cf80.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x2.d413cccfe779921p-76), acos(cf80.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x8p-540), acos(cf80.init(-0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x1.645640568c1c3746p-5000), acos(cf80.init(-0x1p+0, -0x1.fp-10000)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0xf.8p-16388, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x4p-1076, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0xf.8p-16388, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0xf.8p-16388, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x4p-1076, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0xf.8p-16388, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-76, -0x2.d413cccfe779921p-76), acos(cf80.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x0p+0), acos(cf80.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x8p-540, -0x8p-540), acos(cf80.init(0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0xf.bf7df5c6a788f0cp-8196, -0xf.bf7df5c6a788f0cp-8196), acos(cf80.init(0x1p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x2.d413cccfe779921p-76), acos(cf80.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x0p+0), acos(cf80.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x8p-540), acos(cf80.init(-0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0xf.bf7df5c6a788f0cp-8196), acos(cf80.init(-0x1p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x0p+0), acos(cf80.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-76, 0x2.d413cccfe779921p-76), acos(cf80.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x8p-540, 0x8p-540), acos(cf80.init(0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0xf.bf7df5c6a788f0cp-8196, 0xf.bf7df5c6a788f0cp-8196), acos(cf80.init(0x1p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x0p+0), acos(cf80.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x2.d413cccfe779921p-76), acos(cf80.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x8p-540), acos(cf80.init(-0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0xf.bf7df5c6a788f0cp-8196), acos(cf80.init(-0x1p+0, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb3da38ec868p+0, -0xe.1a1b475d8879e55p-4), acos(cf80.init(0x2p-24, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb3da38ec868p+0, 0xe.1a1b475d8879e55p-4), acos(cf80.init(0x2p-24, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb6ae4cb68254p+0, -0xe.1a1b475d8879e55p-4), acos(cf80.init(-0x2p-24, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb6ae4cb68254p+0, 0xe.1a1b475d8879e55p-4), acos(cf80.init(-0x2p-24, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0xe.90189431f8bb9a3p-16, -0x2.3286b92909b70508p-12), acos(cf80.init(0x1.000002p+0, 0x2p-24)));
    try std.testing.expectEqual(cf80.init(0x3.2430da6ff1711018p+0, -0x2.3286b92909b70508p-12), acos(cf80.init(-0x1.000002p+0, 0x2p-24)));
    try std.testing.expectEqual(cf80.init(0xe.90189431f8bb9a3p-16, 0x2.3286b92909b70508p-12), acos(cf80.init(0x1.000002p+0, -0x2p-24)));
    try std.testing.expectEqual(cf80.init(0x3.2430da6ff1711018p+0, 0x2.3286b92909b70508p-12), acos(cf80.init(-0x1.000002p+0, -0x2p-24)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(0xf.8p-132, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(0xf.8p-132, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(-0xf.8p-132, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(-0xf.8p-132, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x7.bffffc200002e8p-120, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, 0xf.8p-132)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, 0xf.8p-132)));
    try std.testing.expectEqual(cf80.init(0x7.bffffc200002e8p-120, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, -0xf.8p-132)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, -0xf.8p-132)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(-0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1791ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(0x1p-52, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1791ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x1p-52, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1791ap+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(0x1p-52, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1791ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x1p-52, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1791ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(0x1p-52, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1791ap+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(0x1p-52, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d18fbap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(-0x1p-52, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d18fbap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x1p-52, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d18fbap+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0x1p-52, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d18fbap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x1p-52, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d18fbap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(-0x1p-52, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d18fbap+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0x1p-52, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x7.fffffc000002ffcp-44, -0x1.ffffffaaaaaad122p-12), acos(cf80.init(0x1.000002p+0, 0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x3.fffffffffffffaacp-28, -0x4.0000000000000558p-28), acos(cf80.init(0x1p+0, 0x1p-52)));
    // try std.testing.expectEqual(cf80.init(0x2.930a5f307dfb9f4p-28, -0x6.3710864f5700aae8p-28), acos(cf80.init(0x1.0000000000001p+0, 0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, -0x4.0000000000000558p-28), acos(cf80.init(-0x1p+0, 0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a88852308d4p+0, -0x1.ffffffaaaaaad122p-12), acos(cf80.init(-0x1.000002p+0, 0x1p-52)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a5f54fd15ccp+0, -0x6.3710864f5700aae8p-28), acos(cf80.init(-0x1.0000000000001p+0, 0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x7.fffffc000002ffcp-44, 0x1.ffffffaaaaaad122p-12), acos(cf80.init(0x1.000002p+0, -0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x3.fffffffffffffaacp-28, 0x4.0000000000000558p-28), acos(cf80.init(0x1p+0, -0x1p-52)));
    // try std.testing.expectEqual(cf80.init(0x2.930a5f307dfb9f4p-28, 0x6.3710864f5700aae8p-28), acos(cf80.init(0x1.0000000000001p+0, -0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, 0x4.0000000000000558p-28), acos(cf80.init(-0x1p+0, -0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a88852308d4p+0, 0x1.ffffffaaaaaad122p-12), acos(cf80.init(-0x1.000002p+0, -0x1p-52)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a5f54fd15ccp+0, 0x6.3710864f5700aae8p-28), acos(cf80.init(-0x1.0000000000001p+0, -0x1p-52)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(0x8p-152, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(0x8p-152, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(0xf.8p-1028, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0xf.8p-1028, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(0xf.8p-1028, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(0x8p-152, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(0x8p-152, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0xf.8p-1028, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(0xf.8p-1028, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(0xf.8p-1028, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(-0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(-0x8p-152, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0x8p-152, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(-0xf.8p-1028, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0xf.8p-1028, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0xf.8p-1028, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(-0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(-0x8p-152, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0x8p-152, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0xf.8p-1028, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(-0xf.8p-1028, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0xf.8p-1028, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x3.fffffe0000018p-140, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x7.bffffc200002e8p-1016, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-76, -0x2.d413cccfe779921p-76), acos(cf80.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x0p+0), acos(cf80.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0xf.bf7df5c6a788f0cp-516, -0xf.bf7df5c6a788f0cp-516), acos(cf80.init(0x1p+0, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc36p-124, -0x5.a827999fcef31c98p-28), acos(cf80.init(0x1.0000000000001p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, -0x5.a827999fcef31c98p-28), acos(cf80.init(0x1.0000000000001p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x2.bd732e69683dba8cp-1000, -0x5.a827999fcef31c98p-28), acos(cf80.init(0x1.0000000000001p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x2.d413cccfe779921p-76), acos(cf80.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x0p+0), acos(cf80.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0xf.bf7df5c6a788f0cp-516), acos(cf80.init(-0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x5.a827999fcef31c98p-28), acos(cf80.init(-0x1.0000000000001p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x5.a827999fcef31c98p-28), acos(cf80.init(-0x1.0000000000001p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x5.a827999fcef31c98p-28), acos(cf80.init(-0x1.0000000000001p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.fffffe0000018p-140, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x7.bffffc200002e8p-1016, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x0p+0), acos(cf80.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-76, 0x2.d413cccfe779921p-76), acos(cf80.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0xf.bf7df5c6a788f0cp-516, 0xf.bf7df5c6a788f0cp-516), acos(cf80.init(0x1p+0, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0x5.a827999fcef31c98p-28), acos(cf80.init(0x1.0000000000001p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc36p-124, 0x5.a827999fcef31c98p-28), acos(cf80.init(0x1.0000000000001p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x2.bd732e69683dba8cp-1000, 0x5.a827999fcef31c98p-28), acos(cf80.init(0x1.0000000000001p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x0p+0), acos(cf80.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x2.d413cccfe779921p-76), acos(cf80.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0xf.bf7df5c6a788f0cp-516), acos(cf80.init(-0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x5.a827999fcef31c98p-28), acos(cf80.init(-0x1.0000000000001p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x5.a827999fcef31c98p-28), acos(cf80.init(-0x1.0000000000001p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x5.a827999fcef31c98p-28), acos(cf80.init(-0x1.0000000000001p+0, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(-0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(-0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x0p+0), acos(cf80.init(0x1p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, -0x5.a827999fcef31c98p-28), acos(cf80.init(0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x0p+0), acos(cf80.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x5.a827999fcef31c98p-28), acos(cf80.init(-0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x0p+0), acos(cf80.init(0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0x5.a827999fcef31c98p-28), acos(cf80.init(0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x0p+0), acos(cf80.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x5.a827999fcef31c98p-28), acos(cf80.init(-0x1.0000000000001p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d18468p+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(0x2p-64, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d18468p+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x2p-64, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d18468p+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(0x2p-64, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d18468p+0, -0xe.1a1b30bcea13662p-4), acos(cf80.init(0x2p-64, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d18468p+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x2p-64, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d18468p+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(0x2p-64, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d18468p+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(0x2p-64, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d18468p+0, 0xe.1a1b30bcea13662p-4), acos(cf80.init(0x2p-64, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(-0x2p-64, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x2p-64, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0x2p-64, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13662p-4), acos(cf80.init(-0x2p-64, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x2p-64, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(-0x2p-64, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0x2p-64, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13662p-4), acos(cf80.init(-0x2p-64, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0xf.fffff8000006p-56, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, 0x2p-64)));
    // try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc908p-32, -0x1.6a09e667f3bcc908p-32), acos(cf80.init(0x1p+0, 0x2p-64)));
    // try std.testing.expectEqual(cf80.init(0x5.a82796cbbb2b30cp-40, -0x5.a8279c73e2bc6368p-28), acos(cf80.init(0x1.0000000000001p+0, 0x2p-64)));
    // try std.testing.expectEqual(cf80.init(0xe.90189c7b6414133p-36, -0x2.3286b95ff53f16bp-32), acos(cf80.init(0x1.0000000000000002p+0, 0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a871b99226cp+0, -0x1.6a09e667f3bcc908p-32), acos(cf80.init(-0x1p+0, 0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a2f8d4p+0, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, 0x2p-64)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a887ffae13cp+0, -0x5.a8279c73e2bc6368p-28), acos(cf80.init(-0x1.0000000000001p+0, 0x2p-64)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a879ca17f0cp+0, -0x2.3286b95ff53f16bp-32), acos(cf80.init(-0x1.0000000000000002p+0, 0x2p-64)));
    try std.testing.expectEqual(cf80.init(0xf.fffff8000006p-56, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, -0x2p-64)));
    // try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc908p-32, 0x1.6a09e667f3bcc908p-32), acos(cf80.init(0x1p+0, -0x2p-64)));
    // try std.testing.expectEqual(cf80.init(0x5.a82796cbbb2b30cp-40, 0x5.a8279c73e2bc6368p-28), acos(cf80.init(0x1.0000000000001p+0, -0x2p-64)));
    // try std.testing.expectEqual(cf80.init(0xe.90189c7b6414133p-36, 0x2.3286b95ff53f16bp-32), acos(cf80.init(0x1.0000000000000002p+0, -0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a871b99226cp+0, 0x1.6a09e667f3bcc908p-32), acos(cf80.init(-0x1p+0, -0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a2f8d4p+0, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, -0x2p-64)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a887ffae13cp+0, 0x5.a8279c73e2bc6368p-28), acos(cf80.init(-0x1.0000000000001p+0, -0x2p-64)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a879ca17f0cp+0, 0x2.3286b95ff53f16bp-32), acos(cf80.init(-0x1.0000000000000002p+0, -0x2p-64)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(0x8p-152, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(0x8p-152, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13662p-4), acos(cf80.init(0x8p-152, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13662p-4), acos(cf80.init(0x0p+0, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(0x4p-1076, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(0x4p-1076, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13662p-4), acos(cf80.init(0x4p-1076, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(0xf.8p-16388, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0xf.8p-16388, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(0xf.8p-16388, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13662p-4), acos(cf80.init(0xf.8p-16388, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(0x8p-152, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(0x8p-152, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13662p-4), acos(cf80.init(0x8p-152, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13662p-4), acos(cf80.init(0x0p+0, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x4p-1076, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(0x4p-1076, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(0x4p-1076, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13662p-4), acos(cf80.init(0x4p-1076, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0xf.8p-16388, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(0xf.8p-16388, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(0xf.8p-16388, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13662p-4), acos(cf80.init(0xf.8p-16388, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(-0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13662p-4), acos(cf80.init(-0x0p+0, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(-0x8p-152, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0x8p-152, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13662p-4), acos(cf80.init(-0x8p-152, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(-0x4p-1076, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0x4p-1076, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13662p-4), acos(cf80.init(-0x4p-1076, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(-0xf.8p-16388, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0xf.8p-16388, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0xf.8p-16388, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13662p-4), acos(cf80.init(-0xf.8p-16388, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(-0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13662p-4), acos(cf80.init(-0x0p+0, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(-0x8p-152, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0x8p-152, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13662p-4), acos(cf80.init(-0x8p-152, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x4p-1076, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(-0x4p-1076, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0x4p-1076, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13662p-4), acos(cf80.init(-0x4p-1076, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0xf.8p-16388, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(-0xf.8p-16388, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0xf.8p-16388, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13662p-4), acos(cf80.init(-0xf.8p-16388, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x3.fffffe0000018p-140, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.ffffff000000cp-1064, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x7.bffffc200002e8p-16376, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-76, -0x2.d413cccfe779921p-76), acos(cf80.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x0p+0), acos(cf80.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x8p-540, -0x8p-540), acos(cf80.init(0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0xf.bf7df5c6a788f0cp-8196, -0xf.bf7df5c6a788f0cp-8196), acos(cf80.init(0x1p+0, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc36p-124, -0x5.a827999fcef31c98p-28), acos(cf80.init(0x1.0000000000001p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, -0x5.a827999fcef31c98p-28), acos(cf80.init(0x1.0000000000001p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0xb.504f333f9de61bp-1052, -0x5.a827999fcef31c98p-28), acos(cf80.init(0x1.0000000000001p+0, 0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x2.bd732e69683dba8cp-16360, -0x5.a827999fcef31c98p-28), acos(cf80.init(0x1.0000000000001p+0, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(0x4p-120, -0x2p-32), acos(cf80.init(0x1.0000000000000002p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, -0x2p-32), acos(cf80.init(0x1.0000000000000002p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x2p-1044, -0x2p-32), acos(cf80.init(0x1.0000000000000002p+0, 0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x7.cp-16356, -0x2p-32), acos(cf80.init(0x1.0000000000000002p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x2.d413cccfe779921p-76), acos(cf80.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x0p+0), acos(cf80.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x8p-540), acos(cf80.init(-0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0xf.bf7df5c6a788f0cp-8196), acos(cf80.init(-0x1p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x5.a827999fcef31c98p-28), acos(cf80.init(-0x1.0000000000001p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x5.a827999fcef31c98p-28), acos(cf80.init(-0x1.0000000000001p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x5.a827999fcef31c98p-28), acos(cf80.init(-0x1.0000000000001p+0, 0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x5.a827999fcef31c98p-28), acos(cf80.init(-0x1.0000000000001p+0, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x2p-32), acos(cf80.init(-0x1.0000000000000002p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x2p-32), acos(cf80.init(-0x1.0000000000000002p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x2p-32), acos(cf80.init(-0x1.0000000000000002p+0, 0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x2p-32), acos(cf80.init(-0x1.0000000000000002p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.fffffe0000018p-140, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.ffffff000000cp-1064, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x7.bffffc200002e8p-16376, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x0p+0), acos(cf80.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-76, 0x2.d413cccfe779921p-76), acos(cf80.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x8p-540, 0x8p-540), acos(cf80.init(0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0xf.bf7df5c6a788f0cp-8196, 0xf.bf7df5c6a788f0cp-8196), acos(cf80.init(0x1p+0, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0x5.a827999fcef31c98p-28), acos(cf80.init(0x1.0000000000001p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc36p-124, 0x5.a827999fcef31c98p-28), acos(cf80.init(0x1.0000000000001p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0xb.504f333f9de61bp-1052, 0x5.a827999fcef31c98p-28), acos(cf80.init(0x1.0000000000001p+0, -0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x2.bd732e69683dba8cp-16360, 0x5.a827999fcef31c98p-28), acos(cf80.init(0x1.0000000000001p+0, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0x2p-32), acos(cf80.init(0x1.0000000000000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x4p-120, 0x2p-32), acos(cf80.init(0x1.0000000000000002p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x2p-1044, 0x2p-32), acos(cf80.init(0x1.0000000000000002p+0, -0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x7.cp-16356, 0x2p-32), acos(cf80.init(0x1.0000000000000002p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x0p+0), acos(cf80.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x2.d413cccfe779921p-76), acos(cf80.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x8p-540), acos(cf80.init(-0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0xf.bf7df5c6a788f0cp-8196), acos(cf80.init(-0x1p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x5.a827999fcef31c98p-28), acos(cf80.init(-0x1.0000000000001p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x5.a827999fcef31c98p-28), acos(cf80.init(-0x1.0000000000001p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x5.a827999fcef31c98p-28), acos(cf80.init(-0x1.0000000000001p+0, -0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x5.a827999fcef31c98p-28), acos(cf80.init(-0x1.0000000000001p+0, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x2p-32), acos(cf80.init(-0x1.0000000000000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x2p-32), acos(cf80.init(-0x1.0000000000000002p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x2p-32), acos(cf80.init(-0x1.0000000000000002p+0, -0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x2p-32), acos(cf80.init(-0x1.0000000000000002p+0, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13662p-4), acos(cf80.init(0x0p+0, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13662p-4), acos(cf80.init(0x0p+0, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(-0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13662p-4), acos(cf80.init(-0x0p+0, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(-0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13662p-4), acos(cf80.init(-0x0p+0, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x0p+0), acos(cf80.init(0x1p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, -0x5.a827999fcef31c98p-28), acos(cf80.init(0x1.0000000000001p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, -0x2p-32), acos(cf80.init(0x1.0000000000000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x0p+0), acos(cf80.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x5.a827999fcef31c98p-28), acos(cf80.init(-0x1.0000000000001p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x2p-32), acos(cf80.init(-0x1.0000000000000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x0p+0), acos(cf80.init(0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0x5.a827999fcef31c98p-28), acos(cf80.init(0x1.0000000000001p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0x2p-32), acos(cf80.init(0x1.0000000000000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x0p+0), acos(cf80.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x5.a827999fcef31c98p-28), acos(cf80.init(-0x1.0000000000001p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x2p-32), acos(cf80.init(-0x1.0000000000000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(0x4p-108, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x4p-108, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(0x4p-108, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13662p-4), acos(cf80.init(0x4p-108, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x4p-108, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(0x4p-108, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(0x4p-108, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13662p-4), acos(cf80.init(0x4p-108, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(-0x4p-108, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x4p-108, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0x4p-108, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13662p-4), acos(cf80.init(-0x4p-108, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x4p-108, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(-0x4p-108, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0x4p-108, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13662p-4), acos(cf80.init(-0x4p-108, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.ffffff000000cp-96, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, 0x4p-108)));
    try std.testing.expectEqual(cf80.init(0x8p-56, -0x8p-56), acos(cf80.init(0x1p+0, 0x4p-108)));
    // try std.testing.expectEqual(cf80.init(0xb.504f333f9de61bp-84, -0x5.a827999fcef31c98p-28), acos(cf80.init(0x1.0000000000001p+0, 0x4p-108)));
    // try std.testing.expectEqual(cf80.init(0x1.fffffffffffffffep-76, -0x2p-32), acos(cf80.init(0x1.0000000000000002p+0, 0x4p-108)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a300d4p+0, -0x8p-56), acos(cf80.init(-0x1p+0, 0x4p-108)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, 0x4p-108)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x5.a827999fcef31c98p-28), acos(cf80.init(-0x1.0000000000001p+0, 0x4p-108)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x2p-32), acos(cf80.init(-0x1.0000000000000002p+0, 0x4p-108)));
    try std.testing.expectEqual(cf80.init(0x1.ffffff000000cp-96, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, -0x4p-108)));
    try std.testing.expectEqual(cf80.init(0x8p-56, 0x8p-56), acos(cf80.init(0x1p+0, -0x4p-108)));
    // try std.testing.expectEqual(cf80.init(0xb.504f333f9de61bp-84, 0x5.a827999fcef31c98p-28), acos(cf80.init(0x1.0000000000001p+0, -0x4p-108)));
    // try std.testing.expectEqual(cf80.init(0x1.fffffffffffffffep-76, 0x2p-32), acos(cf80.init(0x1.0000000000000002p+0, -0x4p-108)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a300d4p+0, 0x8p-56), acos(cf80.init(-0x1p+0, -0x4p-108)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, -0x4p-108)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x5.a827999fcef31c98p-28), acos(cf80.init(-0x1.0000000000001p+0, -0x4p-108)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x2p-32), acos(cf80.init(-0x1.0000000000000002p+0, -0x4p-108)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(0x8p-152, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(0x8p-152, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13662p-4), acos(cf80.init(0x8p-152, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13662p-4), acos(cf80.init(0x0p+0, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(0xf.8p-1028, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0xf.8p-1028, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(0xf.8p-1028, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13662p-4), acos(cf80.init(0xf.8p-1028, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(0x8p-152, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(0x8p-152, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13662p-4), acos(cf80.init(0x8p-152, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13662p-4), acos(cf80.init(0x0p+0, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0xf.8p-1028, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(0xf.8p-1028, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(0xf.8p-1028, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13662p-4), acos(cf80.init(0xf.8p-1028, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(-0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13662p-4), acos(cf80.init(-0x0p+0, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(-0x8p-152, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0x8p-152, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13662p-4), acos(cf80.init(-0x8p-152, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(-0xf.8p-1028, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0xf.8p-1028, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0xf.8p-1028, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13662p-4), acos(cf80.init(-0xf.8p-1028, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(-0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13662p-4), acos(cf80.init(-0x0p+0, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(-0x8p-152, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0x8p-152, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13662p-4), acos(cf80.init(-0x8p-152, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0xf.8p-1028, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(-0xf.8p-1028, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0xf.8p-1028, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13662p-4), acos(cf80.init(-0xf.8p-1028, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x3.fffffe0000018p-140, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x7.bffffc200002e8p-1016, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-76, -0x2.d413cccfe779921p-76), acos(cf80.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x0p+0), acos(cf80.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0xf.bf7df5c6a788f0cp-516, -0xf.bf7df5c6a788f0cp-516), acos(cf80.init(0x1p+0, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc36p-124, -0x5.a827999fcef31c98p-28), acos(cf80.init(0x1.0000000000001p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, -0x5.a827999fcef31c98p-28), acos(cf80.init(0x1.0000000000001p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x2.bd732e69683dba8cp-1000, -0x5.a827999fcef31c98p-28), acos(cf80.init(0x1.0000000000001p+0, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf80.init(0x4p-120, -0x2p-32), acos(cf80.init(0x1.0000000000000002p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, -0x2p-32), acos(cf80.init(0x1.0000000000000002p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x7.cp-996, -0x2p-32), acos(cf80.init(0x1.0000000000000002p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x2.d413cccfe779921p-76), acos(cf80.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x0p+0), acos(cf80.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0xf.bf7df5c6a788f0cp-516), acos(cf80.init(-0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x5.a827999fcef31c98p-28), acos(cf80.init(-0x1.0000000000001p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x5.a827999fcef31c98p-28), acos(cf80.init(-0x1.0000000000001p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x5.a827999fcef31c98p-28), acos(cf80.init(-0x1.0000000000001p+0, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x2p-32), acos(cf80.init(-0x1.0000000000000002p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x2p-32), acos(cf80.init(-0x1.0000000000000002p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x2p-32), acos(cf80.init(-0x1.0000000000000002p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.fffffe0000018p-140, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x7.bffffc200002e8p-1016, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x0p+0), acos(cf80.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-76, 0x2.d413cccfe779921p-76), acos(cf80.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0xf.bf7df5c6a788f0cp-516, 0xf.bf7df5c6a788f0cp-516), acos(cf80.init(0x1p+0, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0x5.a827999fcef31c98p-28), acos(cf80.init(0x1.0000000000001p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc36p-124, 0x5.a827999fcef31c98p-28), acos(cf80.init(0x1.0000000000001p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x2.bd732e69683dba8cp-1000, 0x5.a827999fcef31c98p-28), acos(cf80.init(0x1.0000000000001p+0, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0x2p-32), acos(cf80.init(0x1.0000000000000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x4p-120, 0x2p-32), acos(cf80.init(0x1.0000000000000002p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x7.cp-996, 0x2p-32), acos(cf80.init(0x1.0000000000000002p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x0p+0), acos(cf80.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x2.d413cccfe779921p-76), acos(cf80.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0xf.bf7df5c6a788f0cp-516), acos(cf80.init(-0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x5.a827999fcef31c98p-28), acos(cf80.init(-0x1.0000000000001p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x5.a827999fcef31c98p-28), acos(cf80.init(-0x1.0000000000001p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x5.a827999fcef31c98p-28), acos(cf80.init(-0x1.0000000000001p+0, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x2p-32), acos(cf80.init(-0x1.0000000000000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x2p-32), acos(cf80.init(-0x1.0000000000000002p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x2p-32), acos(cf80.init(-0x1.0000000000000002p+0, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13662p-4), acos(cf80.init(0x0p+0, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13662p-4), acos(cf80.init(0x0p+0, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(-0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13662p-4), acos(cf80.init(-0x0p+0, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(-0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13662p-4), acos(cf80.init(-0x0p+0, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x0p+0), acos(cf80.init(0x1p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, -0x5.a827999fcef31c98p-28), acos(cf80.init(0x1.0000000000001p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, -0x2p-32), acos(cf80.init(0x1.0000000000000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x0p+0), acos(cf80.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x5.a827999fcef31c98p-28), acos(cf80.init(-0x1.0000000000001p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x2p-32), acos(cf80.init(-0x1.0000000000000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x0p+0), acos(cf80.init(0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0x5.a827999fcef31c98p-28), acos(cf80.init(0x1.0000000000001p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0x2p-32), acos(cf80.init(0x1.0000000000000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x0p+0), acos(cf80.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x5.a827999fcef31c98p-28), acos(cf80.init(-0x1.0000000000001p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x2p-32), acos(cf80.init(-0x1.0000000000000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(0x8p-116, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x8p-116, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(0x8p-116, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13662p-4), acos(cf80.init(0x8p-116, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x8p-116, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(0x8p-116, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(0x8p-116, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13662p-4), acos(cf80.init(0x8p-116, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(-0x8p-116, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x8p-116, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0x8p-116, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13662p-4), acos(cf80.init(-0x8p-116, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x8p-116, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(-0x8p-116, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0x8p-116, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13662p-4), acos(cf80.init(-0x8p-116, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x3.fffffe0000018p-104, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, 0x8p-116)));
    try std.testing.expectEqual(cf80.init(0xb.504f333f9de6484p-60, -0xb.504f333f9de6484p-60), acos(cf80.init(0x1p+0, 0x8p-116)));
    // try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc36p-88, -0x5.a827999fcef31c98p-28), acos(cf80.init(0x1.0000000000001p+0, 0x8p-116)));
    // try std.testing.expectEqual(cf80.init(0x3.fffffffffffffffcp-84, -0x2p-32), acos(cf80.init(0x1.0000000000000002p+0, 0x8p-116)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a3082p+0, -0xb.504f333f9de6484p-60), acos(cf80.init(-0x1p+0, 0x8p-116)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, 0x8p-116)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x5.a827999fcef31c98p-28), acos(cf80.init(-0x1.0000000000001p+0, 0x8p-116)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x2p-32), acos(cf80.init(-0x1.0000000000000002p+0, 0x8p-116)));
    try std.testing.expectEqual(cf80.init(0x3.fffffe0000018p-104, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, -0x8p-116)));
    try std.testing.expectEqual(cf80.init(0xb.504f333f9de6484p-60, 0xb.504f333f9de6484p-60), acos(cf80.init(0x1p+0, -0x8p-116)));
    // try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc36p-88, 0x5.a827999fcef31c98p-28), acos(cf80.init(0x1.0000000000001p+0, -0x8p-116)));
    // try std.testing.expectEqual(cf80.init(0x3.fffffffffffffffcp-84, 0x2p-32), acos(cf80.init(0x1.0000000000000002p+0, -0x8p-116)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a3082p+0, 0xb.504f333f9de6484p-60), acos(cf80.init(-0x1p+0, -0x8p-116)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, -0x8p-116)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x5.a827999fcef31c98p-28), acos(cf80.init(-0x1.0000000000001p+0, -0x8p-116)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x2p-32), acos(cf80.init(-0x1.0000000000000002p+0, -0x8p-116)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(0x8p-152, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(0x8p-152, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13662p-4), acos(cf80.init(0x8p-152, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13662p-4), acos(cf80.init(0x0p+0, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(0x4p-1076, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(0x4p-1076, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13662p-4), acos(cf80.init(0x4p-1076, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(0xf.8p-16388, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0xf.8p-16388, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(0xf.8p-16388, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13662p-4), acos(cf80.init(0xf.8p-16388, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(0x8p-152, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(0x8p-152, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13662p-4), acos(cf80.init(0x8p-152, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13662p-4), acos(cf80.init(0x0p+0, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x4p-1076, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(0x4p-1076, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(0x4p-1076, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13662p-4), acos(cf80.init(0x4p-1076, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0xf.8p-16388, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(0xf.8p-16388, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(0xf.8p-16388, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13662p-4), acos(cf80.init(0xf.8p-16388, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(-0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13662p-4), acos(cf80.init(-0x0p+0, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(-0x8p-152, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0x8p-152, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13662p-4), acos(cf80.init(-0x8p-152, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(-0x4p-1076, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0x4p-1076, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13662p-4), acos(cf80.init(-0x4p-1076, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(-0xf.8p-16388, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0xf.8p-16388, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0xf.8p-16388, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13662p-4), acos(cf80.init(-0xf.8p-16388, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(-0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13662p-4), acos(cf80.init(-0x0p+0, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(-0x8p-152, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0x8p-152, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13662p-4), acos(cf80.init(-0x8p-152, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x4p-1076, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(-0x4p-1076, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0x4p-1076, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13662p-4), acos(cf80.init(-0x4p-1076, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0xf.8p-16388, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(-0xf.8p-16388, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0xf.8p-16388, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13662p-4), acos(cf80.init(-0xf.8p-16388, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x3.fffffe0000018p-140, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.ffffff000000cp-1064, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x7.bffffc200002e8p-16376, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-76, -0x2.d413cccfe779921p-76), acos(cf80.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x0p+0), acos(cf80.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x8p-540, -0x8p-540), acos(cf80.init(0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0xf.bf7df5c6a788f0cp-8196, -0xf.bf7df5c6a788f0cp-8196), acos(cf80.init(0x1p+0, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc36p-124, -0x5.a827999fcef31c98p-28), acos(cf80.init(0x1.0000000000001p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, -0x5.a827999fcef31c98p-28), acos(cf80.init(0x1.0000000000001p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0xb.504f333f9de61bp-1052, -0x5.a827999fcef31c98p-28), acos(cf80.init(0x1.0000000000001p+0, 0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x2.bd732e69683dba8cp-16360, -0x5.a827999fcef31c98p-28), acos(cf80.init(0x1.0000000000001p+0, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(0x4p-120, -0x2p-32), acos(cf80.init(0x1.0000000000000002p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, -0x2p-32), acos(cf80.init(0x1.0000000000000002p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x2p-1044, -0x2p-32), acos(cf80.init(0x1.0000000000000002p+0, 0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x7.cp-16356, -0x2p-32), acos(cf80.init(0x1.0000000000000002p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x2.d413cccfe779921p-76), acos(cf80.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x0p+0), acos(cf80.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x8p-540), acos(cf80.init(-0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0xf.bf7df5c6a788f0cp-8196), acos(cf80.init(-0x1p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x5.a827999fcef31c98p-28), acos(cf80.init(-0x1.0000000000001p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x5.a827999fcef31c98p-28), acos(cf80.init(-0x1.0000000000001p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x5.a827999fcef31c98p-28), acos(cf80.init(-0x1.0000000000001p+0, 0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x5.a827999fcef31c98p-28), acos(cf80.init(-0x1.0000000000001p+0, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x2p-32), acos(cf80.init(-0x1.0000000000000002p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x2p-32), acos(cf80.init(-0x1.0000000000000002p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x2p-32), acos(cf80.init(-0x1.0000000000000002p+0, 0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x2p-32), acos(cf80.init(-0x1.0000000000000002p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.fffffe0000018p-140, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.ffffff000000cp-1064, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x7.bffffc200002e8p-16376, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x0p+0), acos(cf80.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-76, 0x2.d413cccfe779921p-76), acos(cf80.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x8p-540, 0x8p-540), acos(cf80.init(0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0xf.bf7df5c6a788f0cp-8196, 0xf.bf7df5c6a788f0cp-8196), acos(cf80.init(0x1p+0, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0x5.a827999fcef31c98p-28), acos(cf80.init(0x1.0000000000001p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc36p-124, 0x5.a827999fcef31c98p-28), acos(cf80.init(0x1.0000000000001p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0xb.504f333f9de61bp-1052, 0x5.a827999fcef31c98p-28), acos(cf80.init(0x1.0000000000001p+0, -0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x2.bd732e69683dba8cp-16360, 0x5.a827999fcef31c98p-28), acos(cf80.init(0x1.0000000000001p+0, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0x2p-32), acos(cf80.init(0x1.0000000000000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x4p-120, 0x2p-32), acos(cf80.init(0x1.0000000000000002p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x2p-1044, 0x2p-32), acos(cf80.init(0x1.0000000000000002p+0, -0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x7.cp-16356, 0x2p-32), acos(cf80.init(0x1.0000000000000002p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x0p+0), acos(cf80.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x2.d413cccfe779921p-76), acos(cf80.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x8p-540), acos(cf80.init(-0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0xf.bf7df5c6a788f0cp-8196), acos(cf80.init(-0x1p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x5.a827999fcef31c98p-28), acos(cf80.init(-0x1.0000000000001p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x5.a827999fcef31c98p-28), acos(cf80.init(-0x1.0000000000001p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x5.a827999fcef31c98p-28), acos(cf80.init(-0x1.0000000000001p+0, -0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x5.a827999fcef31c98p-28), acos(cf80.init(-0x1.0000000000001p+0, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x2p-32), acos(cf80.init(-0x1.0000000000000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x2p-32), acos(cf80.init(-0x1.0000000000000002p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x2p-32), acos(cf80.init(-0x1.0000000000000002p+0, -0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x2p-32), acos(cf80.init(-0x1.0000000000000002p+0, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13662p-4), acos(cf80.init(0x0p+0, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13662p-4), acos(cf80.init(0x0p+0, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b475d886e95p-4), acos(cf80.init(-0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13662p-4), acos(cf80.init(-0x0p+0, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b475d886e95p-4), acos(cf80.init(-0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea141b1p-4), acos(cf80.init(-0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13662p-4), acos(cf80.init(-0x0p+0, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x0p+0), acos(cf80.init(0x1p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, -0x5.a827999fcef31c98p-28), acos(cf80.init(0x1.0000000000001p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, -0x2p-32), acos(cf80.init(0x1.0000000000000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x0p+0), acos(cf80.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x5.a827999fcef31c98p-28), acos(cf80.init(-0x1.0000000000001p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x2p-32), acos(cf80.init(-0x1.0000000000000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x0p+0), acos(cf80.init(0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0x5.a827999fcef31c98p-28), acos(cf80.init(0x1.0000000000001p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0x2p-32), acos(cf80.init(0x1.0000000000000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x0p+0), acos(cf80.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x1.ffffffaaaaaad112p-12), acos(cf80.init(-0x1.000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x5.a827999fcef31c98p-28), acos(cf80.init(-0x1.0000000000001p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x2p-32), acos(cf80.init(-0x1.0000000000000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb3da38ea677p+0, -0xe.1a1b256c9ae8a2bp-4), acos(cf80.init(0x2p-24, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb3da38ea677p+0, 0xe.1a1b256c9ae8a2bp-4), acos(cf80.init(0x2p-24, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb6ae4cb8a162p+0, -0xe.1a1b256c9ae8a2bp-4), acos(cf80.init(-0x2p-24, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb6ae4cb8a162p+0, 0xe.1a1b256c9ae8a2bp-4), acos(cf80.init(-0x2p-24, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.cc8532a60c33a43ap-12, -0x1.1c9e0143157395bcp-12), acos(cf80.init(0xf.fffffp-4, 0x2p-24)));
    try std.testing.expectEqual(cf80.init(0x3.2422a2355b424598p+0, -0x1.1c9e0143157395bcp-12), acos(cf80.init(-0xf.fffffp-4, 0x2p-24)));
    try std.testing.expectEqual(cf80.init(0x1.cc8532a60c33a43ap-12, 0x1.1c9e0143157395bcp-12), acos(cf80.init(0xf.fffffp-4, -0x2p-24)));
    try std.testing.expectEqual(cf80.init(0x3.2422a2355b424598p+0, 0x1.1c9e0143157395bcp-12), acos(cf80.init(-0xf.fffffp-4, -0x2p-24)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(0xf.8p-132, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(0xf.8p-132, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(-0xf.8p-132, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(-0xf.8p-132, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, -0xa.f5ccbc631426867p-120), acos(cf80.init(0xf.fffffp-4, 0xf.8p-132)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, -0xa.f5ccbc631426867p-120), acos(cf80.init(-0xf.fffffp-4, 0xf.8p-132)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, 0xa.f5ccbc631426867p-120), acos(cf80.init(0xf.fffffp-4, -0xf.8p-132)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, 0xa.f5ccbc631426867p-120), acos(cf80.init(-0xf.fffffp-4, -0xf.8p-132)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(-0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, -0x0p+0), acos(cf80.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, -0x0p+0), acos(cf80.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, 0x0p+0), acos(cf80.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, 0x0p+0), acos(cf80.init(-0xf.fffffp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb37a5075286ap+0, -0x7.b30b2bb1458dd808p-4), acos(cf80.init(0x2p-24, 0x8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb37a5075286ap+0, 0x7.b30b2bb1458dd808p-4), acos(cf80.init(0x2p-24, -0x8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb70e352de068p+0, -0x7.b30b2bb1458dd808p-4), acos(cf80.init(-0x2p-24, 0x8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb70e352de068p+0, 0x7.b30b2bb1458dd808p-4), acos(cf80.init(-0x2p-24, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.0c152382d737e26ap+0, -0x2.4f34e8b2065f6e9cp-24), acos(cf80.init(0x8p-4, 0x2p-24)));
    try std.testing.expectEqual(cf80.init(0x2.182a4705ae6b2668p+0, -0x2.4f34e8b2065f6e9cp-24), acos(cf80.init(-0x8p-4, 0x2p-24)));
    try std.testing.expectEqual(cf80.init(0x1.0c152382d737e26ap+0, 0x2.4f34e8b2065f6e9cp-24), acos(cf80.init(0x8p-4, -0x2p-24)));
    try std.testing.expectEqual(cf80.init(0x2.182a4705ae6b2668p+0, 0x2.4f34e8b2065f6e9cp-24), acos(cf80.init(-0x8p-4, -0x2p-24)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x7.b30b2bb14582653p-4), acos(cf80.init(0xf.8p-132, 0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x7.b30b2bb14582653p-4), acos(cf80.init(0xf.8p-132, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x7.b30b2bb14582653p-4), acos(cf80.init(-0xf.8p-132, 0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x7.b30b2bb14582653p-4), acos(cf80.init(-0xf.8p-132, -0x8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.0c152382d7365846p+0, -0x1.1e5da0b63b1836acp-128), acos(cf80.init(0x8p-4, 0xf.8p-132)));
    // try std.testing.expectEqual(cf80.init(0x2.182a4705ae6cb08cp+0, -0x1.1e5da0b63b1836acp-128), acos(cf80.init(-0x8p-4, 0xf.8p-132)));
    // try std.testing.expectEqual(cf80.init(0x1.0c152382d7365846p+0, 0x1.1e5da0b63b1836acp-128), acos(cf80.init(0x8p-4, -0xf.8p-132)));
    // try std.testing.expectEqual(cf80.init(0x2.182a4705ae6cb08cp+0, 0x1.1e5da0b63b1836acp-128), acos(cf80.init(-0x8p-4, -0xf.8p-132)));
    try std.testing.expectEqual(cf80.init(0x1.921fb34442d1846ap+0, -0x2.000000000002aaacp-24), acos(cf80.init(0x2p-24, 0x2p-24)));
    try std.testing.expectEqual(cf80.init(0x1.921fb34442d1846ap+0, 0x2.000000000002aaacp-24), acos(cf80.init(0x2p-24, -0x2p-24)));
    try std.testing.expectEqual(cf80.init(0x1.921fb74442d1846ap+0, -0x2.000000000002aaacp-24), acos(cf80.init(-0x2p-24, 0x2p-24)));
    try std.testing.expectEqual(cf80.init(0x1.921fb74442d1846ap+0, 0x2.000000000002aaacp-24), acos(cf80.init(-0x2p-24, -0x2p-24)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.fffffffffffeaaaap-24), acos(cf80.init(0xf.8p-132, 0x2p-24)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.fffffffffffeaaaap-24), acos(cf80.init(0xf.8p-132, -0x2p-24)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.fffffffffffeaaaap-24), acos(cf80.init(-0xf.8p-132, 0x2p-24)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.fffffffffffeaaaap-24), acos(cf80.init(-0xf.8p-132, -0x2p-24)));
    try std.testing.expectEqual(cf80.init(0x1.921fb34442d1846ap+0, -0xf.80000000001fp-132), acos(cf80.init(0x2p-24, 0xf.8p-132)));
    try std.testing.expectEqual(cf80.init(0x1.921fb74442d1846ap+0, -0xf.80000000001fp-132), acos(cf80.init(-0x2p-24, 0xf.8p-132)));
    try std.testing.expectEqual(cf80.init(0x1.921fb34442d1846ap+0, 0xf.80000000001fp-132), acos(cf80.init(0x2p-24, -0xf.8p-132)));
    try std.testing.expectEqual(cf80.init(0x1.921fb74442d1846ap+0, 0xf.80000000001fp-132), acos(cf80.init(-0x2p-24, -0xf.8p-132)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.fffffffffffeaaaap-24), acos(cf80.init(0x0p+0, 0x2p-24)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.fffffffffffeaaaap-24), acos(cf80.init(0x0p+0, -0x2p-24)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.fffffffffffeaaaap-24), acos(cf80.init(-0x0p+0, 0x2p-24)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.fffffffffffeaaaap-24), acos(cf80.init(-0x0p+0, -0x2p-24)));
    try std.testing.expectEqual(cf80.init(0x1.921fb34442d1846ap+0, -0x0p+0), acos(cf80.init(0x2p-24, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb74442d1846ap+0, -0x0p+0), acos(cf80.init(-0x2p-24, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb34442d1846ap+0, 0x0p+0), acos(cf80.init(0x2p-24, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb74442d1846ap+0, 0x0p+0), acos(cf80.init(-0x2p-24, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xf.8p-132), acos(cf80.init(0xf.8p-132, 0xf.8p-132)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xf.8p-132), acos(cf80.init(0xf.8p-132, -0xf.8p-132)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xf.8p-132), acos(cf80.init(-0xf.8p-132, 0xf.8p-132)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xf.8p-132), acos(cf80.init(-0xf.8p-132, -0xf.8p-132)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1791ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x1p-52, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1791ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(0x1p-52, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1791ap+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(0x1p-52, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1791ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(0x1p-52, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1791ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x1p-52, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1791ap+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(0x1p-52, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d18fbap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x1p-52, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d18fbap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(-0x1p-52, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d18fbap+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0x1p-52, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d18fbap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(-0x1p-52, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d18fbap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x1p-52, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d18fbap+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0x1p-52, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf80.init(0x3.fffffffffffffaacp-28, -0x4.0000000000000558p-28), acos(cf80.init(0x1p+0, 0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadfep-12, -0xb.504f3613b1b4265p-44), acos(cf80.init(0xf.fffffp-4, 0x1p-52)));
    // try std.testing.expectEqual(cf80.init(0x5.168c51aa2115798p-28, -0x3.2504dde4b1a36bfcp-28), acos(cf80.init(0xf.ffffffffffff8p-4, 0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, -0xb.504f3613b1b4265p-44), acos(cf80.init(-0xf.fffffp-4, 0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, -0x4.0000000000000558p-28), acos(cf80.init(-0x1p+0, 0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a371cddee3p+0, -0x3.2504dde4b1a36bfcp-28), acos(cf80.init(-0xf.ffffffffffff8p-4, 0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x3.fffffffffffffaacp-28, 0x4.0000000000000558p-28), acos(cf80.init(0x1p+0, -0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadfep-12, 0xb.504f3613b1b4265p-44), acos(cf80.init(0xf.fffffp-4, -0x1p-52)));
    // try std.testing.expectEqual(cf80.init(0x5.168c51aa2115798p-28, 0x3.2504dde4b1a36bfcp-28), acos(cf80.init(0xf.ffffffffffff8p-4, -0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, 0xb.504f3613b1b4265p-44), acos(cf80.init(-0xf.fffffp-4, -0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, 0x4.0000000000000558p-28), acos(cf80.init(-0x1p+0, -0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a371cddee3p+0, 0x3.2504dde4b1a36bfcp-28), acos(cf80.init(-0xf.ffffffffffff8p-4, -0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(0x8p-152, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(0x8p-152, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(0x0p+0, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0xf.8p-1028, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(0xf.8p-1028, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(0xf.8p-1028, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(0x8p-152, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(0x8p-152, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(0xf.8p-1028, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0xf.8p-1028, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(0xf.8p-1028, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(-0x0p+0, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(-0x8p-152, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0x8p-152, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0xf.8p-1028, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(-0xf.8p-1028, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0xf.8p-1028, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(-0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(-0x8p-152, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0x8p-152, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(-0xf.8p-1028, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0xf.8p-1028, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0xf.8p-1028, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-76, -0x2.d413cccfe779921p-76), acos(cf80.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x0p+0), acos(cf80.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0xf.bf7df5c6a788f0cp-516, -0xf.bf7df5c6a788f0cp-516), acos(cf80.init(0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, -0x5.a8279b09d8da13d8p-140), acos(cf80.init(0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, -0x0p+0), acos(cf80.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, -0xa.f5ccbc631426867p-1016), acos(cf80.init(0xf.fffffp-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x4.00000000000002a8p-28, -0x2.00000000000004p-124), acos(cf80.init(0xf.ffffffffffff8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x4.00000000000002a8p-28, -0x0p+0), acos(cf80.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x4.00000000000002a8p-28, -0x3.e0000000000007cp-1000), acos(cf80.init(0xf.ffffffffffff8p-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, -0x5.a8279b09d8da13d8p-140), acos(cf80.init(-0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, -0x0p+0), acos(cf80.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, -0xa.f5ccbc631426867p-1016), acos(cf80.init(-0xf.fffffp-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x2.d413cccfe779921p-76), acos(cf80.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x0p+0), acos(cf80.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0xf.bf7df5c6a788f0cp-516), acos(cf80.init(-0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, -0x2.00000000000004p-124), acos(cf80.init(-0xf.ffffffffffff8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, -0x0p+0), acos(cf80.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, -0x3.e0000000000007cp-1000), acos(cf80.init(-0xf.ffffffffffff8p-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x0p+0), acos(cf80.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-76, 0x2.d413cccfe779921p-76), acos(cf80.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0xf.bf7df5c6a788f0cp-516, 0xf.bf7df5c6a788f0cp-516), acos(cf80.init(0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, 0x0p+0), acos(cf80.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, 0x5.a8279b09d8da13d8p-140), acos(cf80.init(0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, 0xa.f5ccbc631426867p-1016), acos(cf80.init(0xf.fffffp-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x4.00000000000002a8p-28, 0x0p+0), acos(cf80.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x4.00000000000002a8p-28, 0x2.00000000000004p-124), acos(cf80.init(0xf.ffffffffffff8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x4.00000000000002a8p-28, 0x3.e0000000000007cp-1000), acos(cf80.init(0xf.ffffffffffff8p-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, 0x0p+0), acos(cf80.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, 0x5.a8279b09d8da13d8p-140), acos(cf80.init(-0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, 0xa.f5ccbc631426867p-1016), acos(cf80.init(-0xf.fffffp-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x0p+0), acos(cf80.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x2.d413cccfe779921p-76), acos(cf80.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0xf.bf7df5c6a788f0cp-516), acos(cf80.init(-0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, 0x0p+0), acos(cf80.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, 0x2.00000000000004p-124), acos(cf80.init(-0xf.ffffffffffff8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, 0x3.e0000000000007cp-1000), acos(cf80.init(-0xf.ffffffffffff8p-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(0x0p+0, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(-0x0p+0, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(-0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x0p+0), acos(cf80.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, -0x0p+0), acos(cf80.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x4.00000000000002a8p-28, -0x0p+0), acos(cf80.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, -0x0p+0), acos(cf80.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x0p+0), acos(cf80.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, -0x0p+0), acos(cf80.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x0p+0), acos(cf80.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, 0x0p+0), acos(cf80.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x4.00000000000002a8p-28, 0x0p+0), acos(cf80.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, 0x0p+0), acos(cf80.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x0p+0), acos(cf80.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, 0x0p+0), acos(cf80.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1761ap+0, -0x7.b30b2bb14582653p-4), acos(cf80.init(0x1p-52, 0x8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1761ap+0, 0x7.b30b2bb14582653p-4), acos(cf80.init(0x1p-52, -0x8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d192bap+0, -0x7.b30b2bb14582653p-4), acos(cf80.init(-0x1p-52, 0x8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d192bap+0, 0x7.b30b2bb14582653p-4), acos(cf80.init(-0x1p-52, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.0c152382d7365846p+0, -0x1.279a74590331c4d2p-52), acos(cf80.init(0x8p-4, 0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x2.182a4705ae6cb08cp+0, -0x1.279a74590331c4d2p-52), acos(cf80.init(-0x8p-4, 0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x1.0c152382d7365846p+0, 0x1.279a74590331c4d2p-52), acos(cf80.init(0x8p-4, -0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x2.182a4705ae6cb08cp+0, 0x1.279a74590331c4d2p-52), acos(cf80.init(-0x8p-4, -0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x7.b30b2bb14582653p-4), acos(cf80.init(0x8p-152, 0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x7.b30b2bb14582653p-4), acos(cf80.init(0x0p+0, 0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x7.b30b2bb14582653p-4), acos(cf80.init(0xf.8p-1028, 0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x7.b30b2bb14582653p-4), acos(cf80.init(0x8p-152, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x7.b30b2bb14582653p-4), acos(cf80.init(0x0p+0, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x7.b30b2bb14582653p-4), acos(cf80.init(0xf.8p-1028, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x7.b30b2bb14582653p-4), acos(cf80.init(-0x0p+0, 0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x7.b30b2bb14582653p-4), acos(cf80.init(-0x8p-152, 0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x7.b30b2bb14582653p-4), acos(cf80.init(-0xf.8p-1028, 0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x7.b30b2bb14582653p-4), acos(cf80.init(-0x0p+0, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x7.b30b2bb14582653p-4), acos(cf80.init(-0x8p-152, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x7.b30b2bb14582653p-4), acos(cf80.init(-0xf.8p-1028, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.0c152382d7365846p+0, -0x9.3cd3a2c8198e269p-152), acos(cf80.init(0x8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.0c152382d7365846p+0, -0x0p+0), acos(cf80.init(0x8p-4, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.0c152382d7365846p+0, -0x1.1e5da0b63b1836acp-1024), acos(cf80.init(0x8p-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x2.182a4705ae6cb08cp+0, -0x9.3cd3a2c8198e269p-152), acos(cf80.init(-0x8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x2.182a4705ae6cb08cp+0, -0x0p+0), acos(cf80.init(-0x8p-4, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x2.182a4705ae6cb08cp+0, -0x1.1e5da0b63b1836acp-1024), acos(cf80.init(-0x8p-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.0c152382d7365846p+0, 0x0p+0), acos(cf80.init(0x8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.0c152382d7365846p+0, 0x9.3cd3a2c8198e269p-152), acos(cf80.init(0x8p-4, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x1.0c152382d7365846p+0, 0x1.1e5da0b63b1836acp-1024), acos(cf80.init(0x8p-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x2.182a4705ae6cb08cp+0, 0x0p+0), acos(cf80.init(-0x8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x2.182a4705ae6cb08cp+0, 0x9.3cd3a2c8198e269p-152), acos(cf80.init(-0x8p-4, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x2.182a4705ae6cb08cp+0, 0x1.1e5da0b63b1836acp-1024), acos(cf80.init(-0x8p-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1746ap+0, -0x1p-52), acos(cf80.init(0x1p-52, 0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1746ap+0, 0x1p-52), acos(cf80.init(0x1p-52, -0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1946ap+0, -0x1p-52), acos(cf80.init(-0x1p-52, 0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1946ap+0, 0x1p-52), acos(cf80.init(-0x1p-52, -0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1p-52), acos(cf80.init(0x8p-152, 0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1p-52), acos(cf80.init(0x0p+0, 0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1p-52), acos(cf80.init(0xf.8p-1028, 0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1p-52), acos(cf80.init(0x8p-152, -0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1p-52), acos(cf80.init(0x0p+0, -0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1p-52), acos(cf80.init(0xf.8p-1028, -0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1p-52), acos(cf80.init(-0x0p+0, 0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1p-52), acos(cf80.init(-0x8p-152, 0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1p-52), acos(cf80.init(-0xf.8p-1028, 0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1p-52), acos(cf80.init(-0x0p+0, -0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1p-52), acos(cf80.init(-0x8p-152, -0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1p-52), acos(cf80.init(-0xf.8p-1028, -0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1746ap+0, -0x8p-152), acos(cf80.init(0x1p-52, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1746ap+0, -0x0p+0), acos(cf80.init(0x1p-52, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1746ap+0, -0xf.8p-1028), acos(cf80.init(0x1p-52, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1946ap+0, -0x8p-152), acos(cf80.init(-0x1p-52, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1946ap+0, -0x0p+0), acos(cf80.init(-0x1p-52, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1946ap+0, -0xf.8p-1028), acos(cf80.init(-0x1p-52, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1746ap+0, 0x0p+0), acos(cf80.init(0x1p-52, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1746ap+0, 0x8p-152), acos(cf80.init(0x1p-52, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1746ap+0, 0xf.8p-1028), acos(cf80.init(0x1p-52, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1946ap+0, 0x0p+0), acos(cf80.init(-0x1p-52, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1946ap+0, 0x8p-152), acos(cf80.init(-0x1p-52, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1946ap+0, 0xf.8p-1028), acos(cf80.init(-0x1p-52, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1p-52), acos(cf80.init(0x0p+0, 0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1p-52), acos(cf80.init(0x0p+0, -0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1p-52), acos(cf80.init(-0x0p+0, 0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1p-52), acos(cf80.init(-0x0p+0, -0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1746ap+0, -0x0p+0), acos(cf80.init(0x1p-52, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1946ap+0, -0x0p+0), acos(cf80.init(-0x1p-52, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1746ap+0, 0x0p+0), acos(cf80.init(0x1p-52, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1946ap+0, 0x0p+0), acos(cf80.init(-0x1p-52, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x8p-152), acos(cf80.init(0x8p-152, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), acos(cf80.init(0x8p-152, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xf.8p-1028), acos(cf80.init(0x8p-152, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x8p-152), acos(cf80.init(0x0p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), acos(cf80.init(0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xf.8p-1028), acos(cf80.init(0x0p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x8p-152), acos(cf80.init(0xf.8p-1028, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), acos(cf80.init(0xf.8p-1028, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xf.8p-1028), acos(cf80.init(0xf.8p-1028, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), acos(cf80.init(0x8p-152, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x8p-152), acos(cf80.init(0x8p-152, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xf.8p-1028), acos(cf80.init(0x8p-152, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), acos(cf80.init(0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x8p-152), acos(cf80.init(0x0p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xf.8p-1028), acos(cf80.init(0x0p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), acos(cf80.init(0xf.8p-1028, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x8p-152), acos(cf80.init(0xf.8p-1028, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xf.8p-1028), acos(cf80.init(0xf.8p-1028, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x8p-152), acos(cf80.init(-0x0p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), acos(cf80.init(-0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xf.8p-1028), acos(cf80.init(-0x0p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x8p-152), acos(cf80.init(-0x8p-152, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), acos(cf80.init(-0x8p-152, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xf.8p-1028), acos(cf80.init(-0x8p-152, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x8p-152), acos(cf80.init(-0xf.8p-1028, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), acos(cf80.init(-0xf.8p-1028, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xf.8p-1028), acos(cf80.init(-0xf.8p-1028, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), acos(cf80.init(-0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x8p-152), acos(cf80.init(-0x0p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xf.8p-1028), acos(cf80.init(-0x0p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), acos(cf80.init(-0x8p-152, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x8p-152), acos(cf80.init(-0x8p-152, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xf.8p-1028), acos(cf80.init(-0x8p-152, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), acos(cf80.init(-0xf.8p-1028, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x8p-152), acos(cf80.init(-0xf.8p-1028, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xf.8p-1028), acos(cf80.init(-0xf.8p-1028, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d18468p+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x2p-64, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d18468p+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(0x2p-64, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d18468p+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(0x2p-64, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d18468p+0, -0xe.1a1b30bcea1366p-4), acos(cf80.init(0x2p-64, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d18468p+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(0x2p-64, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d18468p+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x2p-64, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d18468p+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(0x2p-64, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d18468p+0, 0xe.1a1b30bcea1366p-4), acos(cf80.init(0x2p-64, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x2p-64, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(-0x2p-64, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0x2p-64, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea1366p-4), acos(cf80.init(-0x2p-64, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(-0x2p-64, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x2p-64, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0x2p-64, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea1366p-4), acos(cf80.init(-0x2p-64, -0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc908p-32, -0x1.6a09e667f3bcc908p-32), acos(cf80.init(0x1p+0, 0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, -0x1.6a09e6c2763684f6p-52), acos(cf80.init(0xf.fffffp-4, 0x2p-64)));
    // try std.testing.expectEqual(cf80.init(0x4.000007ffffd802a8p-28, -0x7.fffff00000700ff8p-40), acos(cf80.init(0xf.ffffffffffff8p-4, 0x2p-64)));
    // try std.testing.expectEqual(cf80.init(0x1.cc8532af1b6fbf52p-32, -0x1.1c9e00de9cc05378p-32), acos(cf80.init(0xf.fffffffffffffffp-4, 0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, -0x1.6a09e6c2763684f6p-52), acos(cf80.init(-0xf.fffffp-4, 0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a871b99226cp+0, -0x1.6a09e667f3bcc908p-32), acos(cf80.init(-0x1p+0, 0x2p-64)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a4885a288d4p+0, -0x7.fffff00000700ff8p-40), acos(cf80.init(-0xf.ffffffffffff8p-4, 0x2p-64)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a86b91dd624p+0, -0x1.1c9e00de9cc05378p-32), acos(cf80.init(-0xf.fffffffffffffffp-4, 0x2p-64)));
    // try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc908p-32, 0x1.6a09e667f3bcc908p-32), acos(cf80.init(0x1p+0, -0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, 0x1.6a09e6c2763684f6p-52), acos(cf80.init(0xf.fffffp-4, -0x2p-64)));
    // try std.testing.expectEqual(cf80.init(0x4.000007ffffd802a8p-28, 0x7.fffff00000700ff8p-40), acos(cf80.init(0xf.ffffffffffff8p-4, -0x2p-64)));
    // try std.testing.expectEqual(cf80.init(0x1.cc8532af1b6fbf52p-32, 0x1.1c9e00de9cc05378p-32), acos(cf80.init(0xf.fffffffffffffffp-4, -0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, 0x1.6a09e6c2763684f6p-52), acos(cf80.init(-0xf.fffffp-4, -0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a871b99226cp+0, 0x1.6a09e667f3bcc908p-32), acos(cf80.init(-0x1p+0, -0x2p-64)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a4885a288d4p+0, 0x7.fffff00000700ff8p-40), acos(cf80.init(-0xf.ffffffffffff8p-4, -0x2p-64)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a86b91dd624p+0, 0x1.1c9e00de9cc05378p-32), acos(cf80.init(-0xf.fffffffffffffffp-4, -0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(0x8p-152, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea1366p-4), acos(cf80.init(0x8p-152, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(0x0p+0, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea1366p-4), acos(cf80.init(0x0p+0, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(0x4p-1076, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(0x4p-1076, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea1366p-4), acos(cf80.init(0x4p-1076, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0xf.8p-16388, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(0xf.8p-16388, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(0xf.8p-16388, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea1366p-4), acos(cf80.init(0xf.8p-16388, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(0x8p-152, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(0x8p-152, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea1366p-4), acos(cf80.init(0x8p-152, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea1366p-4), acos(cf80.init(0x0p+0, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(0x4p-1076, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x4p-1076, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(0x4p-1076, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea1366p-4), acos(cf80.init(0x4p-1076, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(0xf.8p-16388, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0xf.8p-16388, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(0xf.8p-16388, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea1366p-4), acos(cf80.init(0xf.8p-16388, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(-0x0p+0, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea1366p-4), acos(cf80.init(-0x0p+0, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(-0x8p-152, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea1366p-4), acos(cf80.init(-0x8p-152, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(-0x4p-1076, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0x4p-1076, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea1366p-4), acos(cf80.init(-0x4p-1076, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0xf.8p-16388, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(-0xf.8p-16388, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0xf.8p-16388, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea1366p-4), acos(cf80.init(-0xf.8p-16388, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(-0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea1366p-4), acos(cf80.init(-0x0p+0, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(-0x8p-152, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0x8p-152, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea1366p-4), acos(cf80.init(-0x8p-152, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(-0x4p-1076, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x4p-1076, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0x4p-1076, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea1366p-4), acos(cf80.init(-0x4p-1076, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(-0xf.8p-16388, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0xf.8p-16388, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0xf.8p-16388, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea1366p-4), acos(cf80.init(-0xf.8p-16388, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-76, -0x2.d413cccfe779921p-76), acos(cf80.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x0p+0), acos(cf80.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x8p-540, -0x8p-540), acos(cf80.init(0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0xf.bf7df5c6a788f0cp-8196, -0xf.bf7df5c6a788f0cp-8196), acos(cf80.init(0x1p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, -0x5.a8279b09d8da13d8p-140), acos(cf80.init(0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, -0x0p+0), acos(cf80.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, -0x2.d413cd84ec6d09ecp-1064), acos(cf80.init(0xf.fffffp-4, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, -0xa.f5ccbc631426867p-16376), acos(cf80.init(0xf.fffffp-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x4.00000000000002a8p-28, -0x2.00000000000004p-124), acos(cf80.init(0xf.ffffffffffff8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x4.00000000000002a8p-28, -0x0p+0), acos(cf80.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x4.00000000000002a8p-28, -0x1.00000000000002p-1048), acos(cf80.init(0xf.ffffffffffff8p-4, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x4.00000000000002a8p-28, -0x3.e0000000000007cp-16360), acos(cf80.init(0xf.ffffffffffff8p-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc908p-32, -0x5.a827999fcef32428p-120), acos(cf80.init(0xf.fffffffffffffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc908p-32, -0x0p+0), acos(cf80.init(0xf.fffffffffffffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc908p-32, -0x2.d413cccfe7799214p-1044), acos(cf80.init(0xf.fffffffffffffffp-4, 0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc908p-32, -0xa.f5ccb9a5a0f716p-16356), acos(cf80.init(0xf.fffffffffffffffp-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, -0x5.a8279b09d8da13d8p-140), acos(cf80.init(-0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, -0x0p+0), acos(cf80.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, -0x2.d413cd84ec6d09ecp-1064), acos(cf80.init(-0xf.fffffp-4, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, -0xa.f5ccbc631426867p-16376), acos(cf80.init(-0xf.fffffp-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x2.d413cccfe779921p-76), acos(cf80.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x0p+0), acos(cf80.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x8p-540), acos(cf80.init(-0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0xf.bf7df5c6a788f0cp-8196), acos(cf80.init(-0x1p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, -0x2.00000000000004p-124), acos(cf80.init(-0xf.ffffffffffff8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, -0x0p+0), acos(cf80.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, -0x1.00000000000002p-1048), acos(cf80.init(-0xf.ffffffffffff8p-4, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, -0x3.e0000000000007cp-16360), acos(cf80.init(-0xf.ffffffffffff8p-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a871b99226cp+0, -0x5.a827999fcef32428p-120), acos(cf80.init(-0xf.fffffffffffffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a871b99226cp+0, -0x0p+0), acos(cf80.init(-0xf.fffffffffffffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a871b99226cp+0, -0x2.d413cccfe7799214p-1044), acos(cf80.init(-0xf.fffffffffffffffp-4, 0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a871b99226cp+0, -0xa.f5ccb9a5a0f716p-16356), acos(cf80.init(-0xf.fffffffffffffffp-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x0p+0), acos(cf80.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-76, 0x2.d413cccfe779921p-76), acos(cf80.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x8p-540, 0x8p-540), acos(cf80.init(0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0xf.bf7df5c6a788f0cp-8196, 0xf.bf7df5c6a788f0cp-8196), acos(cf80.init(0x1p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, 0x0p+0), acos(cf80.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, 0x5.a8279b09d8da13d8p-140), acos(cf80.init(0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, 0x2.d413cd84ec6d09ecp-1064), acos(cf80.init(0xf.fffffp-4, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, 0xa.f5ccbc631426867p-16376), acos(cf80.init(0xf.fffffp-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x4.00000000000002a8p-28, 0x0p+0), acos(cf80.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x4.00000000000002a8p-28, 0x2.00000000000004p-124), acos(cf80.init(0xf.ffffffffffff8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x4.00000000000002a8p-28, 0x1.00000000000002p-1048), acos(cf80.init(0xf.ffffffffffff8p-4, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x4.00000000000002a8p-28, 0x3.e0000000000007cp-16360), acos(cf80.init(0xf.ffffffffffff8p-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc908p-32, 0x0p+0), acos(cf80.init(0xf.fffffffffffffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc908p-32, 0x5.a827999fcef32428p-120), acos(cf80.init(0xf.fffffffffffffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc908p-32, 0x2.d413cccfe7799214p-1044), acos(cf80.init(0xf.fffffffffffffffp-4, -0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc908p-32, 0xa.f5ccb9a5a0f716p-16356), acos(cf80.init(0xf.fffffffffffffffp-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, 0x0p+0), acos(cf80.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, 0x5.a8279b09d8da13d8p-140), acos(cf80.init(-0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, 0x2.d413cd84ec6d09ecp-1064), acos(cf80.init(-0xf.fffffp-4, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, 0xa.f5ccbc631426867p-16376), acos(cf80.init(-0xf.fffffp-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x0p+0), acos(cf80.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x2.d413cccfe779921p-76), acos(cf80.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x8p-540), acos(cf80.init(-0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0xf.bf7df5c6a788f0cp-8196), acos(cf80.init(-0x1p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, 0x0p+0), acos(cf80.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, 0x2.00000000000004p-124), acos(cf80.init(-0xf.ffffffffffff8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, 0x1.00000000000002p-1048), acos(cf80.init(-0xf.ffffffffffff8p-4, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, 0x3.e0000000000007cp-16360), acos(cf80.init(-0xf.ffffffffffff8p-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a871b99226cp+0, 0x0p+0), acos(cf80.init(-0xf.fffffffffffffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a871b99226cp+0, 0x5.a827999fcef32428p-120), acos(cf80.init(-0xf.fffffffffffffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a871b99226cp+0, 0x2.d413cccfe7799214p-1044), acos(cf80.init(-0xf.fffffffffffffffp-4, -0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a871b99226cp+0, 0xa.f5ccb9a5a0f716p-16356), acos(cf80.init(-0xf.fffffffffffffffp-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(0x0p+0, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea1366p-4), acos(cf80.init(0x0p+0, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea1366p-4), acos(cf80.init(0x0p+0, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(-0x0p+0, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea1366p-4), acos(cf80.init(-0x0p+0, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(-0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea1366p-4), acos(cf80.init(-0x0p+0, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x0p+0), acos(cf80.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, -0x0p+0), acos(cf80.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x4.00000000000002a8p-28, -0x0p+0), acos(cf80.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc908p-32, -0x0p+0), acos(cf80.init(0xf.fffffffffffffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, -0x0p+0), acos(cf80.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x0p+0), acos(cf80.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, -0x0p+0), acos(cf80.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a871b99226cp+0, -0x0p+0), acos(cf80.init(-0xf.fffffffffffffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x0p+0), acos(cf80.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, 0x0p+0), acos(cf80.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x4.00000000000002a8p-28, 0x0p+0), acos(cf80.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc908p-32, 0x0p+0), acos(cf80.init(0xf.fffffffffffffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, 0x0p+0), acos(cf80.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x0p+0), acos(cf80.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, 0x0p+0), acos(cf80.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a871b99226cp+0, 0x0p+0), acos(cf80.init(-0xf.fffffffffffffffp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d18468p+0, -0x7.b30b2bb14582653p-4), acos(cf80.init(0x2p-64, 0x8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d18468p+0, 0x7.b30b2bb14582653p-4), acos(cf80.init(0x2p-64, -0x8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846cp+0, -0x7.b30b2bb14582653p-4), acos(cf80.init(-0x2p-64, 0x8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846cp+0, 0x7.b30b2bb14582653p-4), acos(cf80.init(-0x2p-64, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.0c152382d7365846p+0, -0x2.4f34e8b2066389a4p-64), acos(cf80.init(0x8p-4, 0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x2.182a4705ae6cb08cp+0, -0x2.4f34e8b2066389a4p-64), acos(cf80.init(-0x8p-4, 0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x1.0c152382d7365846p+0, 0x2.4f34e8b2066389a4p-64), acos(cf80.init(0x8p-4, -0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x2.182a4705ae6cb08cp+0, 0x2.4f34e8b2066389a4p-64), acos(cf80.init(-0x8p-4, -0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x7.b30b2bb14582653p-4), acos(cf80.init(0x8p-152, 0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x7.b30b2bb14582653p-4), acos(cf80.init(0x0p+0, 0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x7.b30b2bb14582653p-4), acos(cf80.init(0x4p-1076, 0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x7.b30b2bb14582653p-4), acos(cf80.init(0xf.8p-16388, 0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x7.b30b2bb14582653p-4), acos(cf80.init(0x8p-152, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x7.b30b2bb14582653p-4), acos(cf80.init(0x0p+0, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x7.b30b2bb14582653p-4), acos(cf80.init(0x4p-1076, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x7.b30b2bb14582653p-4), acos(cf80.init(0xf.8p-16388, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x7.b30b2bb14582653p-4), acos(cf80.init(-0x0p+0, 0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x7.b30b2bb14582653p-4), acos(cf80.init(-0x8p-152, 0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x7.b30b2bb14582653p-4), acos(cf80.init(-0x4p-1076, 0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x7.b30b2bb14582653p-4), acos(cf80.init(-0xf.8p-16388, 0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x7.b30b2bb14582653p-4), acos(cf80.init(-0x0p+0, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x7.b30b2bb14582653p-4), acos(cf80.init(-0x8p-152, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x7.b30b2bb14582653p-4), acos(cf80.init(-0x4p-1076, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x7.b30b2bb14582653p-4), acos(cf80.init(-0xf.8p-16388, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.0c152382d7365846p+0, -0x9.3cd3a2c8198e269p-152), acos(cf80.init(0x8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.0c152382d7365846p+0, -0x0p+0), acos(cf80.init(0x8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.0c152382d7365846p+0, -0x4.9e69d1640cc71348p-1076), acos(cf80.init(0x8p-4, 0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x1.0c152382d7365846p+0, -0x1.1e5da0b63b1836a8p-16384), acos(cf80.init(0x8p-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x2.182a4705ae6cb08cp+0, -0x9.3cd3a2c8198e269p-152), acos(cf80.init(-0x8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x2.182a4705ae6cb08cp+0, -0x0p+0), acos(cf80.init(-0x8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x2.182a4705ae6cb08cp+0, -0x4.9e69d1640cc71348p-1076), acos(cf80.init(-0x8p-4, 0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x2.182a4705ae6cb08cp+0, -0x1.1e5da0b63b1836a8p-16384), acos(cf80.init(-0x8p-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.0c152382d7365846p+0, 0x0p+0), acos(cf80.init(0x8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.0c152382d7365846p+0, 0x9.3cd3a2c8198e269p-152), acos(cf80.init(0x8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.0c152382d7365846p+0, 0x4.9e69d1640cc71348p-1076), acos(cf80.init(0x8p-4, -0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x1.0c152382d7365846p+0, 0x1.1e5da0b63b1836a8p-16384), acos(cf80.init(0x8p-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x2.182a4705ae6cb08cp+0, 0x0p+0), acos(cf80.init(-0x8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x2.182a4705ae6cb08cp+0, 0x9.3cd3a2c8198e269p-152), acos(cf80.init(-0x8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x2.182a4705ae6cb08cp+0, 0x4.9e69d1640cc71348p-1076), acos(cf80.init(-0x8p-4, -0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x2.182a4705ae6cb08cp+0, 0x1.1e5da0b63b1836a8p-16384), acos(cf80.init(-0x8p-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d18468p+0, -0x2p-64), acos(cf80.init(0x2p-64, 0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d18468p+0, 0x2p-64), acos(cf80.init(0x2p-64, -0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846cp+0, -0x2p-64), acos(cf80.init(-0x2p-64, 0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846cp+0, 0x2p-64), acos(cf80.init(-0x2p-64, -0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2p-64), acos(cf80.init(0x8p-152, 0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2p-64), acos(cf80.init(0x0p+0, 0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2p-64), acos(cf80.init(0x4p-1076, 0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2p-64), acos(cf80.init(0xf.8p-16388, 0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2p-64), acos(cf80.init(0x8p-152, -0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2p-64), acos(cf80.init(0x0p+0, -0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2p-64), acos(cf80.init(0x4p-1076, -0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2p-64), acos(cf80.init(0xf.8p-16388, -0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2p-64), acos(cf80.init(-0x0p+0, 0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2p-64), acos(cf80.init(-0x8p-152, 0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2p-64), acos(cf80.init(-0x4p-1076, 0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2p-64), acos(cf80.init(-0xf.8p-16388, 0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2p-64), acos(cf80.init(-0x0p+0, -0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2p-64), acos(cf80.init(-0x8p-152, -0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2p-64), acos(cf80.init(-0x4p-1076, -0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2p-64), acos(cf80.init(-0xf.8p-16388, -0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d18468p+0, -0x8p-152), acos(cf80.init(0x2p-64, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d18468p+0, -0x0p+0), acos(cf80.init(0x2p-64, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d18468p+0, -0x4p-1076), acos(cf80.init(0x2p-64, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d18468p+0, -0xf.8p-16388), acos(cf80.init(0x2p-64, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846cp+0, -0x8p-152), acos(cf80.init(-0x2p-64, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846cp+0, -0x0p+0), acos(cf80.init(-0x2p-64, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846cp+0, -0x4p-1076), acos(cf80.init(-0x2p-64, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846cp+0, -0xf.8p-16388), acos(cf80.init(-0x2p-64, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d18468p+0, 0x0p+0), acos(cf80.init(0x2p-64, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d18468p+0, 0x8p-152), acos(cf80.init(0x2p-64, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d18468p+0, 0x4p-1076), acos(cf80.init(0x2p-64, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d18468p+0, 0xf.8p-16388), acos(cf80.init(0x2p-64, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846cp+0, 0x0p+0), acos(cf80.init(-0x2p-64, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846cp+0, 0x8p-152), acos(cf80.init(-0x2p-64, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846cp+0, 0x4p-1076), acos(cf80.init(-0x2p-64, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846cp+0, 0xf.8p-16388), acos(cf80.init(-0x2p-64, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2p-64), acos(cf80.init(0x0p+0, 0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2p-64), acos(cf80.init(0x0p+0, -0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2p-64), acos(cf80.init(-0x0p+0, 0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2p-64), acos(cf80.init(-0x0p+0, -0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d18468p+0, -0x0p+0), acos(cf80.init(0x2p-64, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846cp+0, -0x0p+0), acos(cf80.init(-0x2p-64, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d18468p+0, 0x0p+0), acos(cf80.init(0x2p-64, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846cp+0, 0x0p+0), acos(cf80.init(-0x2p-64, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x8p-152), acos(cf80.init(0x8p-152, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), acos(cf80.init(0x8p-152, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x4p-1076), acos(cf80.init(0x8p-152, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xf.8p-16388), acos(cf80.init(0x8p-152, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x8p-152), acos(cf80.init(0x0p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), acos(cf80.init(0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x4p-1076), acos(cf80.init(0x0p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xf.8p-16388), acos(cf80.init(0x0p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x8p-152), acos(cf80.init(0x4p-1076, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), acos(cf80.init(0x4p-1076, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x4p-1076), acos(cf80.init(0x4p-1076, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xf.8p-16388), acos(cf80.init(0x4p-1076, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x8p-152), acos(cf80.init(0xf.8p-16388, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), acos(cf80.init(0xf.8p-16388, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x4p-1076), acos(cf80.init(0xf.8p-16388, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xf.8p-16388), acos(cf80.init(0xf.8p-16388, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), acos(cf80.init(0x8p-152, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x8p-152), acos(cf80.init(0x8p-152, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x4p-1076), acos(cf80.init(0x8p-152, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xf.8p-16388), acos(cf80.init(0x8p-152, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), acos(cf80.init(0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x8p-152), acos(cf80.init(0x0p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x4p-1076), acos(cf80.init(0x0p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xf.8p-16388), acos(cf80.init(0x0p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), acos(cf80.init(0x4p-1076, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x8p-152), acos(cf80.init(0x4p-1076, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x4p-1076), acos(cf80.init(0x4p-1076, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xf.8p-16388), acos(cf80.init(0x4p-1076, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), acos(cf80.init(0xf.8p-16388, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x8p-152), acos(cf80.init(0xf.8p-16388, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x4p-1076), acos(cf80.init(0xf.8p-16388, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xf.8p-16388), acos(cf80.init(0xf.8p-16388, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x8p-152), acos(cf80.init(-0x0p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), acos(cf80.init(-0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x4p-1076), acos(cf80.init(-0x0p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xf.8p-16388), acos(cf80.init(-0x0p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x8p-152), acos(cf80.init(-0x8p-152, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), acos(cf80.init(-0x8p-152, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x4p-1076), acos(cf80.init(-0x8p-152, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xf.8p-16388), acos(cf80.init(-0x8p-152, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x8p-152), acos(cf80.init(-0x4p-1076, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), acos(cf80.init(-0x4p-1076, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x4p-1076), acos(cf80.init(-0x4p-1076, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xf.8p-16388), acos(cf80.init(-0x4p-1076, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x8p-152), acos(cf80.init(-0xf.8p-16388, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), acos(cf80.init(-0xf.8p-16388, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x4p-1076), acos(cf80.init(-0xf.8p-16388, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xf.8p-16388), acos(cf80.init(-0xf.8p-16388, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), acos(cf80.init(-0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x8p-152), acos(cf80.init(-0x0p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x4p-1076), acos(cf80.init(-0x0p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xf.8p-16388), acos(cf80.init(-0x0p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), acos(cf80.init(-0x8p-152, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x8p-152), acos(cf80.init(-0x8p-152, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x4p-1076), acos(cf80.init(-0x8p-152, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xf.8p-16388), acos(cf80.init(-0x8p-152, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), acos(cf80.init(-0x4p-1076, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x8p-152), acos(cf80.init(-0x4p-1076, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x4p-1076), acos(cf80.init(-0x4p-1076, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xf.8p-16388), acos(cf80.init(-0x4p-1076, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), acos(cf80.init(-0xf.8p-16388, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x8p-152), acos(cf80.init(-0xf.8p-16388, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x4p-1076), acos(cf80.init(-0xf.8p-16388, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xf.8p-16388), acos(cf80.init(-0xf.8p-16388, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x8p-108, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(0x8p-108, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(0x8p-108, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea1366p-4), acos(cf80.init(0x8p-108, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(0x8p-108, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x8p-108, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(0x8p-108, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea1366p-4), acos(cf80.init(0x8p-108, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x8p-108, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(-0x8p-108, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0x8p-108, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea1366p-4), acos(cf80.init(-0x8p-108, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(-0x8p-108, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x8p-108, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0x8p-108, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea1366p-4), acos(cf80.init(-0x8p-108, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0xb.504f333f9de6484p-56, -0xb.504f333f9de6484p-56), acos(cf80.init(0x1p+0, 0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, -0x5.a8279b09d8da13d8p-96), acos(cf80.init(0xf.fffffp-4, 0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x4.00000000000002a8p-28, -0x2.00000000000004p-80), acos(cf80.init(0xf.ffffffffffff8p-4, 0x8p-108)));
    // try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc908p-32, -0x5.a827999fcef32428p-76), acos(cf80.init(0xf.fffffffffffffffp-4, 0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, -0x5.a8279b09d8da13d8p-96), acos(cf80.init(-0xf.fffffp-4, 0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a2fd84p+0, -0xb.504f333f9de6484p-56), acos(cf80.init(-0x1p+0, 0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, -0x2.00000000000004p-80), acos(cf80.init(-0xf.ffffffffffff8p-4, 0x8p-108)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a871b99226cp+0, -0x5.a827999fcef32428p-76), acos(cf80.init(-0xf.fffffffffffffffp-4, 0x8p-108)));
    try std.testing.expectEqual(cf80.init(0xb.504f333f9de6484p-56, 0xb.504f333f9de6484p-56), acos(cf80.init(0x1p+0, -0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, 0x5.a8279b09d8da13d8p-96), acos(cf80.init(0xf.fffffp-4, -0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x4.00000000000002a8p-28, 0x2.00000000000004p-80), acos(cf80.init(0xf.ffffffffffff8p-4, -0x8p-108)));
    // try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc908p-32, 0x5.a827999fcef32428p-76), acos(cf80.init(0xf.fffffffffffffffp-4, -0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, 0x5.a8279b09d8da13d8p-96), acos(cf80.init(-0xf.fffffp-4, -0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a2fd84p+0, 0xb.504f333f9de6484p-56), acos(cf80.init(-0x1p+0, -0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, 0x2.00000000000004p-80), acos(cf80.init(-0xf.ffffffffffff8p-4, -0x8p-108)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a871b99226cp+0, 0x5.a827999fcef32428p-76), acos(cf80.init(-0xf.fffffffffffffffp-4, -0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(0x8p-152, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea1366p-4), acos(cf80.init(0x8p-152, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(0x0p+0, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea1366p-4), acos(cf80.init(0x0p+0, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0xf.8p-1028, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(0xf.8p-1028, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(0xf.8p-1028, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea1366p-4), acos(cf80.init(0xf.8p-1028, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(0x8p-152, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(0x8p-152, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea1366p-4), acos(cf80.init(0x8p-152, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea1366p-4), acos(cf80.init(0x0p+0, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(0xf.8p-1028, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0xf.8p-1028, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(0xf.8p-1028, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea1366p-4), acos(cf80.init(0xf.8p-1028, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(-0x0p+0, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea1366p-4), acos(cf80.init(-0x0p+0, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(-0x8p-152, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea1366p-4), acos(cf80.init(-0x8p-152, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0xf.8p-1028, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(-0xf.8p-1028, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0xf.8p-1028, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea1366p-4), acos(cf80.init(-0xf.8p-1028, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(-0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea1366p-4), acos(cf80.init(-0x0p+0, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(-0x8p-152, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0x8p-152, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea1366p-4), acos(cf80.init(-0x8p-152, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(-0xf.8p-1028, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0xf.8p-1028, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0xf.8p-1028, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea1366p-4), acos(cf80.init(-0xf.8p-1028, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-76, -0x2.d413cccfe779921p-76), acos(cf80.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x0p+0), acos(cf80.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0xf.bf7df5c6a788f0cp-516, -0xf.bf7df5c6a788f0cp-516), acos(cf80.init(0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, -0x5.a8279b09d8da13d8p-140), acos(cf80.init(0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, -0x0p+0), acos(cf80.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, -0xa.f5ccbc631426867p-1016), acos(cf80.init(0xf.fffffp-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x4.00000000000002a8p-28, -0x2.00000000000004p-124), acos(cf80.init(0xf.ffffffffffff8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x4.00000000000002a8p-28, -0x0p+0), acos(cf80.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x4.00000000000002a8p-28, -0x3.e0000000000007cp-1000), acos(cf80.init(0xf.ffffffffffff8p-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc908p-32, -0x5.a827999fcef32428p-120), acos(cf80.init(0xf.fffffffffffffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc908p-32, -0x0p+0), acos(cf80.init(0xf.fffffffffffffffp-4, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc908p-32, -0xa.f5ccb9a5a0f716p-996), acos(cf80.init(0xf.fffffffffffffffp-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, -0x5.a8279b09d8da13d8p-140), acos(cf80.init(-0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, -0x0p+0), acos(cf80.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, -0xa.f5ccbc631426867p-1016), acos(cf80.init(-0xf.fffffp-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x2.d413cccfe779921p-76), acos(cf80.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x0p+0), acos(cf80.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0xf.bf7df5c6a788f0cp-516), acos(cf80.init(-0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, -0x2.00000000000004p-124), acos(cf80.init(-0xf.ffffffffffff8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, -0x0p+0), acos(cf80.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, -0x3.e0000000000007cp-1000), acos(cf80.init(-0xf.ffffffffffff8p-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a871b99226cp+0, -0x5.a827999fcef32428p-120), acos(cf80.init(-0xf.fffffffffffffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a871b99226cp+0, -0x0p+0), acos(cf80.init(-0xf.fffffffffffffffp-4, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a871b99226cp+0, -0xa.f5ccb9a5a0f716p-996), acos(cf80.init(-0xf.fffffffffffffffp-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x0p+0), acos(cf80.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-76, 0x2.d413cccfe779921p-76), acos(cf80.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0xf.bf7df5c6a788f0cp-516, 0xf.bf7df5c6a788f0cp-516), acos(cf80.init(0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, 0x0p+0), acos(cf80.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, 0x5.a8279b09d8da13d8p-140), acos(cf80.init(0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, 0xa.f5ccbc631426867p-1016), acos(cf80.init(0xf.fffffp-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x4.00000000000002a8p-28, 0x0p+0), acos(cf80.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x4.00000000000002a8p-28, 0x2.00000000000004p-124), acos(cf80.init(0xf.ffffffffffff8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x4.00000000000002a8p-28, 0x3.e0000000000007cp-1000), acos(cf80.init(0xf.ffffffffffff8p-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc908p-32, 0x0p+0), acos(cf80.init(0xf.fffffffffffffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc908p-32, 0x5.a827999fcef32428p-120), acos(cf80.init(0xf.fffffffffffffffp-4, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc908p-32, 0xa.f5ccb9a5a0f716p-996), acos(cf80.init(0xf.fffffffffffffffp-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, 0x0p+0), acos(cf80.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, 0x5.a8279b09d8da13d8p-140), acos(cf80.init(-0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, 0xa.f5ccbc631426867p-1016), acos(cf80.init(-0xf.fffffp-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x0p+0), acos(cf80.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x2.d413cccfe779921p-76), acos(cf80.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0xf.bf7df5c6a788f0cp-516), acos(cf80.init(-0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, 0x0p+0), acos(cf80.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, 0x2.00000000000004p-124), acos(cf80.init(-0xf.ffffffffffff8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, 0x3.e0000000000007cp-1000), acos(cf80.init(-0xf.ffffffffffff8p-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a871b99226cp+0, 0x0p+0), acos(cf80.init(-0xf.fffffffffffffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a871b99226cp+0, 0x5.a827999fcef32428p-120), acos(cf80.init(-0xf.fffffffffffffffp-4, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a871b99226cp+0, 0xa.f5ccb9a5a0f716p-996), acos(cf80.init(-0xf.fffffffffffffffp-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(0x0p+0, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea1366p-4), acos(cf80.init(0x0p+0, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea1366p-4), acos(cf80.init(0x0p+0, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(-0x0p+0, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea1366p-4), acos(cf80.init(-0x0p+0, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(-0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea1366p-4), acos(cf80.init(-0x0p+0, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x0p+0), acos(cf80.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, -0x0p+0), acos(cf80.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x4.00000000000002a8p-28, -0x0p+0), acos(cf80.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc908p-32, -0x0p+0), acos(cf80.init(0xf.fffffffffffffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, -0x0p+0), acos(cf80.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x0p+0), acos(cf80.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, -0x0p+0), acos(cf80.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a871b99226cp+0, -0x0p+0), acos(cf80.init(-0xf.fffffffffffffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x0p+0), acos(cf80.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, 0x0p+0), acos(cf80.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x4.00000000000002a8p-28, 0x0p+0), acos(cf80.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc908p-32, 0x0p+0), acos(cf80.init(0xf.fffffffffffffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, 0x0p+0), acos(cf80.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x0p+0), acos(cf80.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, 0x0p+0), acos(cf80.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a871b99226cp+0, 0x0p+0), acos(cf80.init(-0xf.fffffffffffffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x7.b30b2bb14582653p-4), acos(cf80.init(0x8p-108, 0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x7.b30b2bb14582653p-4), acos(cf80.init(0x8p-108, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x7.b30b2bb14582653p-4), acos(cf80.init(-0x8p-108, 0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x7.b30b2bb14582653p-4), acos(cf80.init(-0x8p-108, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.0c152382d7365846p+0, -0x9.3cd3a2c8198e269p-108), acos(cf80.init(0x8p-4, 0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x2.182a4705ae6cb08cp+0, -0x9.3cd3a2c8198e269p-108), acos(cf80.init(-0x8p-4, 0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x1.0c152382d7365846p+0, 0x9.3cd3a2c8198e269p-108), acos(cf80.init(0x8p-4, -0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x2.182a4705ae6cb08cp+0, 0x9.3cd3a2c8198e269p-108), acos(cf80.init(-0x8p-4, -0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x8p-108), acos(cf80.init(0x8p-108, 0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x8p-108), acos(cf80.init(0x8p-108, -0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x8p-108), acos(cf80.init(-0x8p-108, 0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x8p-108), acos(cf80.init(-0x8p-108, -0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x8p-108), acos(cf80.init(0x8p-152, 0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x8p-108), acos(cf80.init(0x0p+0, 0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x8p-108), acos(cf80.init(0xf.8p-1028, 0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x8p-108), acos(cf80.init(0x8p-152, -0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x8p-108), acos(cf80.init(0x0p+0, -0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x8p-108), acos(cf80.init(0xf.8p-1028, -0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x8p-108), acos(cf80.init(-0x0p+0, 0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x8p-108), acos(cf80.init(-0x8p-152, 0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x8p-108), acos(cf80.init(-0xf.8p-1028, 0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x8p-108), acos(cf80.init(-0x0p+0, -0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x8p-108), acos(cf80.init(-0x8p-152, -0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x8p-108), acos(cf80.init(-0xf.8p-1028, -0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x8p-152), acos(cf80.init(0x8p-108, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), acos(cf80.init(0x8p-108, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xf.8p-1028), acos(cf80.init(0x8p-108, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x8p-152), acos(cf80.init(-0x8p-108, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), acos(cf80.init(-0x8p-108, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xf.8p-1028), acos(cf80.init(-0x8p-108, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), acos(cf80.init(0x8p-108, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x8p-152), acos(cf80.init(0x8p-108, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xf.8p-1028), acos(cf80.init(0x8p-108, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), acos(cf80.init(-0x8p-108, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x8p-152), acos(cf80.init(-0x8p-108, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xf.8p-1028), acos(cf80.init(-0x8p-108, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x8p-108), acos(cf80.init(0x0p+0, 0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x8p-108), acos(cf80.init(0x0p+0, -0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x8p-108), acos(cf80.init(-0x0p+0, 0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x8p-108), acos(cf80.init(-0x0p+0, -0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), acos(cf80.init(0x8p-108, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), acos(cf80.init(-0x8p-108, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), acos(cf80.init(0x8p-108, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), acos(cf80.init(-0x8p-108, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x1p-112, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(0x1p-112, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(0x1p-112, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea1366p-4), acos(cf80.init(0x1p-112, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(0x1p-112, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x1p-112, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(0x1p-112, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea1366p-4), acos(cf80.init(0x1p-112, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x1p-112, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(-0x1p-112, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0x1p-112, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea1366p-4), acos(cf80.init(-0x1p-112, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(-0x1p-112, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x1p-112, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0x1p-112, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea1366p-4), acos(cf80.init(-0x1p-112, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1p-56, -0x1p-56), acos(cf80.init(0x1p+0, 0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, -0xb.504f3613b1b427bp-104), acos(cf80.init(0xf.fffffp-4, 0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x4.00000000000002a8p-28, -0x4.00000000000008p-88), acos(cf80.init(0xf.ffffffffffff8p-4, 0x1p-112)));
    // try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc908p-32, -0xb.504f333f9de6485p-84), acos(cf80.init(0xf.fffffffffffffffp-4, 0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, -0xb.504f3613b1b427bp-104), acos(cf80.init(-0xf.fffffp-4, 0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a307d4p+0, -0x1p-56), acos(cf80.init(-0x1p+0, 0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, -0x4.00000000000008p-88), acos(cf80.init(-0xf.ffffffffffff8p-4, 0x1p-112)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a871b99226cp+0, -0xb.504f333f9de6485p-84), acos(cf80.init(-0xf.fffffffffffffffp-4, 0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x1p-56, 0x1p-56), acos(cf80.init(0x1p+0, -0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, 0xb.504f3613b1b427bp-104), acos(cf80.init(0xf.fffffp-4, -0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x4.00000000000002a8p-28, 0x4.00000000000008p-88), acos(cf80.init(0xf.ffffffffffff8p-4, -0x1p-112)));
    // try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc908p-32, 0xb.504f333f9de6485p-84), acos(cf80.init(0xf.fffffffffffffffp-4, -0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, 0xb.504f3613b1b427bp-104), acos(cf80.init(-0xf.fffffp-4, -0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a307d4p+0, 0x1p-56), acos(cf80.init(-0x1p+0, -0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, 0x4.00000000000008p-88), acos(cf80.init(-0xf.ffffffffffff8p-4, -0x1p-112)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a871b99226cp+0, 0xb.504f333f9de6485p-84), acos(cf80.init(-0xf.fffffffffffffffp-4, -0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(0x8p-152, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea1366p-4), acos(cf80.init(0x8p-152, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(0x0p+0, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea1366p-4), acos(cf80.init(0x0p+0, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(0x4p-1076, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(0x4p-1076, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea1366p-4), acos(cf80.init(0x4p-1076, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0xf.8p-16388, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(0xf.8p-16388, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(0xf.8p-16388, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea1366p-4), acos(cf80.init(0xf.8p-16388, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(0x8p-152, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(0x8p-152, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea1366p-4), acos(cf80.init(0x8p-152, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea1366p-4), acos(cf80.init(0x0p+0, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(0x4p-1076, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x4p-1076, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(0x4p-1076, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea1366p-4), acos(cf80.init(0x4p-1076, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(0xf.8p-16388, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0xf.8p-16388, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(0xf.8p-16388, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea1366p-4), acos(cf80.init(0xf.8p-16388, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(-0x0p+0, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea1366p-4), acos(cf80.init(-0x0p+0, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(-0x8p-152, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea1366p-4), acos(cf80.init(-0x8p-152, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(-0x4p-1076, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0x4p-1076, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea1366p-4), acos(cf80.init(-0x4p-1076, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0xf.8p-16388, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(-0xf.8p-16388, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0xf.8p-16388, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea1366p-4), acos(cf80.init(-0xf.8p-16388, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(-0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea1366p-4), acos(cf80.init(-0x0p+0, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(-0x8p-152, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0x8p-152, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea1366p-4), acos(cf80.init(-0x8p-152, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(-0x4p-1076, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x4p-1076, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0x4p-1076, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea1366p-4), acos(cf80.init(-0x4p-1076, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(-0xf.8p-16388, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0xf.8p-16388, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0xf.8p-16388, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea1366p-4), acos(cf80.init(-0xf.8p-16388, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-76, -0x2.d413cccfe779921p-76), acos(cf80.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x0p+0), acos(cf80.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x8p-540, -0x8p-540), acos(cf80.init(0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0xf.bf7df5c6a788f0cp-8196, -0xf.bf7df5c6a788f0cp-8196), acos(cf80.init(0x1p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, -0x5.a8279b09d8da13d8p-140), acos(cf80.init(0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, -0x0p+0), acos(cf80.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, -0x2.d413cd84ec6d09ecp-1064), acos(cf80.init(0xf.fffffp-4, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, -0xa.f5ccbc631426867p-16376), acos(cf80.init(0xf.fffffp-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x4.00000000000002a8p-28, -0x2.00000000000004p-124), acos(cf80.init(0xf.ffffffffffff8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x4.00000000000002a8p-28, -0x0p+0), acos(cf80.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x4.00000000000002a8p-28, -0x1.00000000000002p-1048), acos(cf80.init(0xf.ffffffffffff8p-4, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x4.00000000000002a8p-28, -0x3.e0000000000007cp-16360), acos(cf80.init(0xf.ffffffffffff8p-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc908p-32, -0x5.a827999fcef32428p-120), acos(cf80.init(0xf.fffffffffffffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc908p-32, -0x0p+0), acos(cf80.init(0xf.fffffffffffffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc908p-32, -0x2.d413cccfe7799214p-1044), acos(cf80.init(0xf.fffffffffffffffp-4, 0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc908p-32, -0xa.f5ccb9a5a0f716p-16356), acos(cf80.init(0xf.fffffffffffffffp-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, -0x5.a8279b09d8da13d8p-140), acos(cf80.init(-0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, -0x0p+0), acos(cf80.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, -0x2.d413cd84ec6d09ecp-1064), acos(cf80.init(-0xf.fffffp-4, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, -0xa.f5ccbc631426867p-16376), acos(cf80.init(-0xf.fffffp-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x2.d413cccfe779921p-76), acos(cf80.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x0p+0), acos(cf80.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x8p-540), acos(cf80.init(-0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0xf.bf7df5c6a788f0cp-8196), acos(cf80.init(-0x1p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, -0x2.00000000000004p-124), acos(cf80.init(-0xf.ffffffffffff8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, -0x0p+0), acos(cf80.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, -0x1.00000000000002p-1048), acos(cf80.init(-0xf.ffffffffffff8p-4, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, -0x3.e0000000000007cp-16360), acos(cf80.init(-0xf.ffffffffffff8p-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a871b99226cp+0, -0x5.a827999fcef32428p-120), acos(cf80.init(-0xf.fffffffffffffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a871b99226cp+0, -0x0p+0), acos(cf80.init(-0xf.fffffffffffffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a871b99226cp+0, -0x2.d413cccfe7799214p-1044), acos(cf80.init(-0xf.fffffffffffffffp-4, 0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a871b99226cp+0, -0xa.f5ccb9a5a0f716p-16356), acos(cf80.init(-0xf.fffffffffffffffp-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x0p+0), acos(cf80.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-76, 0x2.d413cccfe779921p-76), acos(cf80.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x8p-540, 0x8p-540), acos(cf80.init(0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0xf.bf7df5c6a788f0cp-8196, 0xf.bf7df5c6a788f0cp-8196), acos(cf80.init(0x1p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, 0x0p+0), acos(cf80.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, 0x5.a8279b09d8da13d8p-140), acos(cf80.init(0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, 0x2.d413cd84ec6d09ecp-1064), acos(cf80.init(0xf.fffffp-4, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, 0xa.f5ccbc631426867p-16376), acos(cf80.init(0xf.fffffp-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x4.00000000000002a8p-28, 0x0p+0), acos(cf80.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x4.00000000000002a8p-28, 0x2.00000000000004p-124), acos(cf80.init(0xf.ffffffffffff8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x4.00000000000002a8p-28, 0x1.00000000000002p-1048), acos(cf80.init(0xf.ffffffffffff8p-4, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x4.00000000000002a8p-28, 0x3.e0000000000007cp-16360), acos(cf80.init(0xf.ffffffffffff8p-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc908p-32, 0x0p+0), acos(cf80.init(0xf.fffffffffffffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc908p-32, 0x5.a827999fcef32428p-120), acos(cf80.init(0xf.fffffffffffffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc908p-32, 0x2.d413cccfe7799214p-1044), acos(cf80.init(0xf.fffffffffffffffp-4, -0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc908p-32, 0xa.f5ccb9a5a0f716p-16356), acos(cf80.init(0xf.fffffffffffffffp-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, 0x0p+0), acos(cf80.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, 0x5.a8279b09d8da13d8p-140), acos(cf80.init(-0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, 0x2.d413cd84ec6d09ecp-1064), acos(cf80.init(-0xf.fffffp-4, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, 0xa.f5ccbc631426867p-16376), acos(cf80.init(-0xf.fffffp-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x0p+0), acos(cf80.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x2.d413cccfe779921p-76), acos(cf80.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x8p-540), acos(cf80.init(-0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0xf.bf7df5c6a788f0cp-8196), acos(cf80.init(-0x1p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, 0x0p+0), acos(cf80.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, 0x2.00000000000004p-124), acos(cf80.init(-0xf.ffffffffffff8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, 0x1.00000000000002p-1048), acos(cf80.init(-0xf.ffffffffffff8p-4, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, 0x3.e0000000000007cp-16360), acos(cf80.init(-0xf.ffffffffffff8p-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a871b99226cp+0, 0x0p+0), acos(cf80.init(-0xf.fffffffffffffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a871b99226cp+0, 0x5.a827999fcef32428p-120), acos(cf80.init(-0xf.fffffffffffffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a871b99226cp+0, 0x2.d413cccfe7799214p-1044), acos(cf80.init(-0xf.fffffffffffffffp-4, -0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x3.243f6a871b99226cp+0, 0xa.f5ccb9a5a0f716p-16356), acos(cf80.init(-0xf.fffffffffffffffp-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(0x0p+0, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea1366p-4), acos(cf80.init(0x0p+0, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea1366p-4), acos(cf80.init(0x0p+0, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b256c9add526p-4), acos(cf80.init(-0x0p+0, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xe.1a1b30bcea1366p-4), acos(cf80.init(-0x0p+0, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b256c9add526p-4), acos(cf80.init(-0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea13661p-4), acos(cf80.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea130b9p-4), acos(cf80.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xe.1a1b30bcea1366p-4), acos(cf80.init(-0x0p+0, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x0p+0), acos(cf80.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, -0x0p+0), acos(cf80.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x4.00000000000002a8p-28, -0x0p+0), acos(cf80.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc908p-32, -0x0p+0), acos(cf80.init(0xf.fffffffffffffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, -0x0p+0), acos(cf80.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, -0x0p+0), acos(cf80.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, -0x0p+0), acos(cf80.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a871b99226cp+0, -0x0p+0), acos(cf80.init(-0xf.fffffffffffffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x0p+0), acos(cf80.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e6861f3aadd2p-12, 0x0p+0), acos(cf80.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x4.00000000000002a8p-28, 0x0p+0), acos(cf80.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc908p-32, 0x0p+0), acos(cf80.init(0xf.fffffffffffffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.2428c9ea1d411528p+0, 0x0p+0), acos(cf80.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a8885a308d4p+0, 0x0p+0), acos(cf80.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a4885a308d4p+0, 0x0p+0), acos(cf80.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x3.243f6a871b99226cp+0, 0x0p+0), acos(cf80.init(-0xf.fffffffffffffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x7.b30b2bb14582653p-4), acos(cf80.init(0x1p-112, 0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x7.b30b2bb14582653p-4), acos(cf80.init(0x1p-112, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x7.b30b2bb14582653p-4), acos(cf80.init(-0x1p-112, 0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x7.b30b2bb14582653p-4), acos(cf80.init(-0x1p-112, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.0c152382d7365846p+0, -0x1.279a74590331c4d2p-112), acos(cf80.init(0x8p-4, 0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x2.182a4705ae6cb08cp+0, -0x1.279a74590331c4d2p-112), acos(cf80.init(-0x8p-4, 0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x1.0c152382d7365846p+0, 0x1.279a74590331c4d2p-112), acos(cf80.init(0x8p-4, -0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x2.182a4705ae6cb08cp+0, 0x1.279a74590331c4d2p-112), acos(cf80.init(-0x8p-4, -0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1p-112), acos(cf80.init(0x1p-112, 0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1p-112), acos(cf80.init(0x1p-112, -0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1p-112), acos(cf80.init(-0x1p-112, 0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1p-112), acos(cf80.init(-0x1p-112, -0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1p-112), acos(cf80.init(0x8p-152, 0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1p-112), acos(cf80.init(0x0p+0, 0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1p-112), acos(cf80.init(0x4p-1076, 0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1p-112), acos(cf80.init(0xf.8p-16388, 0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1p-112), acos(cf80.init(0x8p-152, -0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1p-112), acos(cf80.init(0x0p+0, -0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1p-112), acos(cf80.init(0x4p-1076, -0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1p-112), acos(cf80.init(0xf.8p-16388, -0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1p-112), acos(cf80.init(-0x0p+0, 0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1p-112), acos(cf80.init(-0x8p-152, 0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1p-112), acos(cf80.init(-0x4p-1076, 0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1p-112), acos(cf80.init(-0xf.8p-16388, 0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1p-112), acos(cf80.init(-0x0p+0, -0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1p-112), acos(cf80.init(-0x8p-152, -0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1p-112), acos(cf80.init(-0x4p-1076, -0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1p-112), acos(cf80.init(-0xf.8p-16388, -0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x8p-152), acos(cf80.init(0x1p-112, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), acos(cf80.init(0x1p-112, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x4p-1076), acos(cf80.init(0x1p-112, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xf.8p-16388), acos(cf80.init(0x1p-112, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x8p-152), acos(cf80.init(-0x1p-112, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), acos(cf80.init(-0x1p-112, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x4p-1076), acos(cf80.init(-0x1p-112, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xf.8p-16388), acos(cf80.init(-0x1p-112, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), acos(cf80.init(0x1p-112, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x8p-152), acos(cf80.init(0x1p-112, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x4p-1076), acos(cf80.init(0x1p-112, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xf.8p-16388), acos(cf80.init(0x1p-112, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), acos(cf80.init(-0x1p-112, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x8p-152), acos(cf80.init(-0x1p-112, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x4p-1076), acos(cf80.init(-0x1p-112, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xf.8p-16388), acos(cf80.init(-0x1p-112, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1p-112), acos(cf80.init(0x0p+0, 0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1p-112), acos(cf80.init(0x0p+0, -0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1p-112), acos(cf80.init(-0x0p+0, 0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1p-112), acos(cf80.init(-0x0p+0, -0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), acos(cf80.init(0x1p-112, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), acos(cf80.init(-0x1p-112, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), acos(cf80.init(0x1p-112, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), acos(cf80.init(-0x1p-112, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.1e15cced3f1ad418p+0, -0x1.21e48c8df1874b5cp+0), acos(cf80.init(0xcp-4, 0x1.4p+0)));
    try std.testing.expectEqual(cf80.init(0x2.2436024a4a9df8fp+0, 0x1.fbbf409ccd55fc68p+0), acos(cf80.init(-0x2p+0, -0x3p+0)));

    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), acos(cf128.init(0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), acos(cf128.init(-0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), acos(cf128.init(-0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), acos(cf128.init(0x0p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.31dc0090b63d86827e4baaad1909p+0), acos(cf128.init(0x0p+0, -0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.31dc0090b63d86827e4baaad1909p+0), acos(cf128.init(-0x0p+0, -0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(0x0p+0, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(-0x0p+0, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(0x0p+0, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(-0x0p+0, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.31dc0090b63d86827e4baaad1909p+0), acos(cf128.init(0x0p+0, 0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.31dc0090b63d86827e4baaad1909p+0), acos(cf128.init(-0x0p+0, 0x1.8p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0xf.661657628b04ca5f0210254b4638p-4), acos(cf128.init(-0x1.8p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0xf.661657628b04ca5f0210254b4638p-4), acos(cf128.init(-0x1.8p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x0p+0), acos(cf128.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x0p+0), acos(cf128.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.182a4705ae6cb08cb7665c1eacf6p+0, -0x0p+0), acos(cf128.init(-0x8p-4, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.182a4705ae6cb08cb7665c1eacf6p+0, 0x0p+0), acos(cf128.init(-0x8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.0c152382d73658465bb32e0f567bp+0, -0x0p+0), acos(cf128.init(0x8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.0c152382d73658465bb32e0f567bp+0, 0x0p+0), acos(cf128.init(0x8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x0p+0), acos(cf128.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x0p+0), acos(cf128.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0xf.661657628b04ca5f0210254b4638p-4), acos(cf128.init(0x1.8p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xf.661657628b04ca5f0210254b4638p-4), acos(cf128.init(0x1.8p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x4.0000000000000000000000000aacp-52, -0x2.359bac65ecc553d39385cc748cd6p+4), acos(cf128.init(0x4p+48, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x4.0000000000000000000000000aacp-52, 0x2.359bac65ecc553d39385cc748cd6p+4), acos(cf128.init(0x4p+48, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a2c8d313198a2e037p+0, -0x2.359bac65ecc553d39385cc748cd6p+4), acos(cf128.init(-0x4p+48, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a2c8d313198a2e037p+0, 0x2.359bac65ecc553d39385cc748cd6p+4), acos(cf128.init(-0x4p+48, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d14469898cc51701b8p+0, -0x2.359bac65ecc553d39385cc748d56p+4), acos(cf128.init(0x1p+0, 0x4p+48)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d1c469898cc51701b8p+0, -0x2.359bac65ecc553d39385cc748d56p+4), acos(cf128.init(-0x1p+0, 0x4p+48)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d14469898cc51701b8p+0, 0x2.359bac65ecc553d39385cc748d56p+4), acos(cf128.init(0x1p+0, -0x4p+48)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d1c469898cc51701b8p+0, 0x2.359bac65ecc553d39385cc748d56p+4), acos(cf128.init(-0x1p+0, -0x4p+48)));
    // try std.testing.expectEqual(cf128.init(0x1.000001000001000001000001p-128, -0x5.96a7e12e0b98bcf90bb682a4468p+4), acos(cf128.init(0xf.fffffp+124, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1p-500, -0x1.5b4448e7fd9b091d321a9e787fbap+8), acos(cf128.init(0x1p+500, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.000001000001000001000001p-128, 0x5.96a7e12e0b98bcf90bb682a4468p+4), acos(cf128.init(0xf.fffffp+124, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1p-500, 0x1.5b4448e7fd9b091d321a9e787fbap+8), acos(cf128.init(0x1p+500, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x5.96a7e12e0b98bcf90bb682a4468p+4), acos(cf128.init(-0xf.fffffp+124, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x1.5b4448e7fd9b091d321a9e787fbap+8), acos(cf128.init(-0x1p+500, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x5.96a7e12e0b98bcf90bb682a4468p+4), acos(cf128.init(-0xf.fffffp+124, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x1.5b4448e7fd9b091d321a9e787fbap+8), acos(cf128.init(-0x1p+500, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x5.96a7e12e0b98bcf90bb682a4468p+4), acos(cf128.init(0x1p+0, 0xf.fffffp+124)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.5b4448e7fd9b091d321a9e787fbap+8), acos(cf128.init(0x1p+0, 0x1p+500)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x5.96a7e12e0b98bcf90bb682a4468p+4), acos(cf128.init(-0x1p+0, 0xf.fffffp+124)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.5b4448e7fd9b091d321a9e787fbap+8), acos(cf128.init(-0x1p+0, 0x1p+500)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x5.96a7e12e0b98bcf90bb682a4468p+4), acos(cf128.init(0x1p+0, -0xf.fffffp+124)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.5b4448e7fd9b091d321a9e787fbap+8), acos(cf128.init(0x1p+0, -0x1p+500)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x5.96a7e12e0b98bcf90bb682a4468p+4), acos(cf128.init(-0x1p+0, -0xf.fffffp+124)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.5b4448e7fd9b091d321a9e787fbap+8), acos(cf128.init(-0x1p+0, -0x1p+500)));
    // try std.testing.expectEqual(cf128.init(0x1.000001000001000001000001p-128, -0x5.96a7e12e0b98bcf90bb682a4468p+4), acos(cf128.init(0xf.fffffp+124, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.000000000000080000000000004p-1024, -0x2.c679d1f73f0fb620d358b213a7dp+8), acos(cf128.init(0xf.ffffffffffff8p+1020, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1p-5000, -0xd.8a6dd63831ae0fdceaf12f64a528p+8), acos(cf128.init(0x1p+5000, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.000000000000040000000000005p-1024, -0x2.c679d1f73f0fb624d358b213a7dp+8), acos(cf128.init(0xf.ffffffffffffbffffffffffffcp+1020, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.000001000001000001000001p-128, 0x5.96a7e12e0b98bcf90bb682a4468p+4), acos(cf128.init(0xf.fffffp+124, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.000000000000080000000000004p-1024, 0x2.c679d1f73f0fb620d358b213a7dp+8), acos(cf128.init(0xf.ffffffffffff8p+1020, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1p-5000, 0xd.8a6dd63831ae0fdceaf12f64a528p+8), acos(cf128.init(0x1p+5000, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.000000000000040000000000005p-1024, 0x2.c679d1f73f0fb624d358b213a7dp+8), acos(cf128.init(0xf.ffffffffffffbffffffffffffcp+1020, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x5.96a7e12e0b98bcf90bb682a4468p+4), acos(cf128.init(-0xf.fffffp+124, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x2.c679d1f73f0fb620d358b213a7dp+8), acos(cf128.init(-0xf.ffffffffffff8p+1020, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0xd.8a6dd63831ae0fdceaf12f64a528p+8), acos(cf128.init(-0x1p+5000, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x2.c679d1f73f0fb624d358b213a7dp+8), acos(cf128.init(-0xf.ffffffffffffbffffffffffffcp+1020, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x5.96a7e12e0b98bcf90bb682a4468p+4), acos(cf128.init(-0xf.fffffp+124, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x2.c679d1f73f0fb620d358b213a7dp+8), acos(cf128.init(-0xf.ffffffffffff8p+1020, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0xd.8a6dd63831ae0fdceaf12f64a528p+8), acos(cf128.init(-0x1p+5000, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x2.c679d1f73f0fb624d358b213a7dp+8), acos(cf128.init(-0xf.ffffffffffffbffffffffffffcp+1020, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x5.96a7e12e0b98bcf90bb682a4468p+4), acos(cf128.init(0x1p+0, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x2.c679d1f73f0fb620d358b213a7dp+8), acos(cf128.init(0x1p+0, 0xf.ffffffffffff8p+1020)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xd.8a6dd63831ae0fdceaf12f64a528p+8), acos(cf128.init(0x1p+0, 0x1p+5000)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x2.c679d1f73f0fb624d358b213a7dp+8), acos(cf128.init(0x1p+0, 0xf.ffffffffffffbffffffffffffcp+1020)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x5.96a7e12e0b98bcf90bb682a4468p+4), acos(cf128.init(-0x1p+0, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x2.c679d1f73f0fb620d358b213a7dp+8), acos(cf128.init(-0x1p+0, 0xf.ffffffffffff8p+1020)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xd.8a6dd63831ae0fdceaf12f64a528p+8), acos(cf128.init(-0x1p+0, 0x1p+5000)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x2.c679d1f73f0fb624d358b213a7dp+8), acos(cf128.init(-0x1p+0, 0xf.ffffffffffffbffffffffffffcp+1020)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x5.96a7e12e0b98bcf90bb682a4468p+4), acos(cf128.init(0x1p+0, -0xf.fffffp+124)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x2.c679d1f73f0fb620d358b213a7dp+8), acos(cf128.init(0x1p+0, -0xf.ffffffffffff8p+1020)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xd.8a6dd63831ae0fdceaf12f64a528p+8), acos(cf128.init(0x1p+0, -0x1p+5000)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x2.c679d1f73f0fb624d358b213a7dp+8), acos(cf128.init(0x1p+0, -0xf.ffffffffffffbffffffffffffcp+1020)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x5.96a7e12e0b98bcf90bb682a4468p+4), acos(cf128.init(-0x1p+0, -0xf.fffffp+124)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x2.c679d1f73f0fb620d358b213a7dp+8), acos(cf128.init(-0x1p+0, -0xf.ffffffffffff8p+1020)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xd.8a6dd63831ae0fdceaf12f64a528p+8), acos(cf128.init(-0x1p+0, -0x1p+5000)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x2.c679d1f73f0fb624d358b213a7dp+8), acos(cf128.init(-0x1p+0, -0xf.ffffffffffffbffffffffffffcp+1020)));
    try std.testing.expectEqual(cf128.init(0xc.90fdaa22168c234c4c6628b80dcp-4, -0x5.9bb167117aed1ea2e95111e7b934p+4), acos(cf128.init(0xf.8p+124, 0xf.8p+124)));
    try std.testing.expectEqual(cf128.init(0xc.90fdaa22168c234c4c6628b80dcp-4, -0x5.9c3371edca2738c66a05a04106ap+4), acos(cf128.init(0xf.fffffp+124, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x2.c671b1487a1c14069b4d13d8bd64p+8), acos(cf128.init(0xf.fffffp+124, 0xf.8p+1020)));
    try std.testing.expectEqual(cf128.init(0x1.08420f7bdef7bdef7bdef7bdef7cp-896, -0x2.c671b1487a1c14069b4d13d8bd64p+8), acos(cf128.init(0xf.8p+1020, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf128.init(0xc.90fdaa22168c234c4c6628b80dcp-4, -0x2.c6ca6a547604fbc3713205b28966p+8), acos(cf128.init(0xf.8p+1020, 0xf.8p+1020)));
    try std.testing.expectEqual(cf128.init(0xc.90fdaa22168c234c4c6628b80dcp-4, -0x5.9c3371edca2738c66a05a04106ap+4), acos(cf128.init(0xf.fffffp+124, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x2.c679d1f73f0fb620d358b213a7dp+8), acos(cf128.init(0xf.fffffp+124, 0xf.ffffffffffff8p+1020)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x2.c5d2f4f5da6bc9849ecab2b79aa6p+12), acos(cf128.init(0xf.fffffp+124, 0xf.8p+16380)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x2.c679d1f73f0fb624d358b213a7dp+8), acos(cf128.init(0xf.fffffp+124, 0xf.ffffffffffffbffffffffffffcp+1020)));
    try std.testing.expectEqual(cf128.init(0xf.fffff00000007fffff80000004p-900, -0x2.c679d1f73f0fb620d358b213a7dp+8), acos(cf128.init(0xf.ffffffffffff8p+1020, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf128.init(0xc.90fdaa22168c234c4c6628b80dcp-4, -0x2.c6d28b033af89ddda93da3ed73d2p+8), acos(cf128.init(0xf.ffffffffffff8p+1020, 0xf.ffffffffffff8p+1020)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x2.c5d2f4f5da6bc9849ecab2b79aa6p+12), acos(cf128.init(0xf.ffffffffffff8p+1020, 0xf.8p+16380)));
    try std.testing.expectEqual(cf128.init(0xc.90fdaa22168c434c4c6628b80c8p-4, -0x2.c6d28b033af89ddfa93da3ed73d2p+8), acos(cf128.init(0xf.ffffffffffff8p+1020, 0xf.ffffffffffffbffffffffffffcp+1020)));
    // try std.testing.expectEqual(cf128.init(0x1.08420f7bdef7bdef7bdef7bdef7cp-16256, -0x2.c5d2f4f5da6bc9849ecab2b79aa6p+12), acos(cf128.init(0xf.8p+16380, 0xf.fffffp+124)));
    // try std.testing.expectEqual(cf128.init(0x1.08421084210839ce739ce739ce74p-15360, -0x2.c5d2f4f5da6bc9849ecab2b79aa6p+12), acos(cf128.init(0xf.8p+16380, 0xf.ffffffffffff8p+1020)));
    // try std.testing.expectEqual(cf128.init(0xc.90fdaa22168c234c4c6628b80dcp-4, -0x2.c5d880869a2a58006c2901d53766p+12), acos(cf128.init(0xf.8p+16380, 0xf.8p+16380)));
    // try std.testing.expectEqual(cf128.init(0x1.0842108421083def7bdef7bdef3ap-15360, -0x2.c5d2f4f5da6bc9849ecab2b79aa6p+12), acos(cf128.init(0xf.8p+16380, 0xf.ffffffffffffbffffffffffffcp+1020)));
    try std.testing.expectEqual(cf128.init(0xf.fffff00000003fffffc0000005p-900, -0x2.c679d1f73f0fb624d358b213a7dp+8), acos(cf128.init(0xf.ffffffffffffbffffffffffffcp+1020, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf128.init(0xc.90fdaa22168c034c4c6628b80fp-4, -0x2.c6d28b033af89ddfa93da3ed73d2p+8), acos(cf128.init(0xf.ffffffffffffbffffffffffffcp+1020, 0xf.ffffffffffff8p+1020)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x2.c5d2f4f5da6bc9849ecab2b79aa6p+12), acos(cf128.init(0xf.ffffffffffffbffffffffffffcp+1020, 0xf.8p+16380)));
    try std.testing.expectEqual(cf128.init(0xc.90fdaa22168c234c4c6628b80dcp-4, -0x2.c6d28b033af89de1a93da3ed73d2p+8), acos(cf128.init(0xf.ffffffffffffbffffffffffffcp+1020, 0xf.ffffffffffffbffffffffffffcp+1020)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.31dc0090b63d86827e4baaad1909p+0), acos(cf128.init(0xf.8p-132, 0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.31dc0090b63d86827e4baaad1909p+0), acos(cf128.init(0xf.8p-132, -0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.31dc0090b63d86827e4baaad1909p+0), acos(cf128.init(-0xf.8p-132, 0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.31dc0090b63d86827e4baaad1909p+0), acos(cf128.init(-0xf.8p-132, -0x1.8p+0)));
    try std.testing.expectEqual(cf128.init(0xd.dd164bc8f73535dcfffe1e44805p-132, -0xf.661657628b04ca5f0210254b4638p-4), acos(cf128.init(0x1.8p+0, 0xf.8p-132)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0xf.661657628b04ca5f0210254b4638p-4), acos(cf128.init(-0x1.8p+0, 0xf.8p-132)));
    try std.testing.expectEqual(cf128.init(0xd.dd164bc8f73535dcfffe1e44805p-132, 0xf.661657628b04ca5f0210254b4638p-4), acos(cf128.init(0x1.8p+0, -0xf.8p-132)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0xf.661657628b04ca5f0210254b4638p-4), acos(cf128.init(-0x1.8p+0, -0xf.8p-132)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.31dc0090b63d86827e4baaad1909p+0), acos(cf128.init(0x8p-152, 0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.31dc0090b63d86827e4baaad1909p+0), acos(cf128.init(0x0p+0, 0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.31dc0090b63d86827e4baaad1909p+0), acos(cf128.init(0xf.8p-1028, 0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.31dc0090b63d86827e4baaad1909p+0), acos(cf128.init(0x8p-152, -0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.31dc0090b63d86827e4baaad1909p+0), acos(cf128.init(0x0p+0, -0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.31dc0090b63d86827e4baaad1909p+0), acos(cf128.init(0xf.8p-1028, -0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.31dc0090b63d86827e4baaad1909p+0), acos(cf128.init(-0x0p+0, 0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.31dc0090b63d86827e4baaad1909p+0), acos(cf128.init(-0x8p-152, 0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.31dc0090b63d86827e4baaad1909p+0), acos(cf128.init(-0xf.8p-1028, 0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.31dc0090b63d86827e4baaad1909p+0), acos(cf128.init(-0x0p+0, -0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.31dc0090b63d86827e4baaad1909p+0), acos(cf128.init(-0x8p-152, -0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.31dc0090b63d86827e4baaad1909p+0), acos(cf128.init(-0xf.8p-1028, -0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x7.27c9716ffb764d594a519c0252cp-152, -0xf.661657628b04ca5f0210254b4638p-4), acos(cf128.init(0x1.8p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0xf.661657628b04ca5f0210254b4638p-4), acos(cf128.init(0x1.8p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0xd.dd164bc8f73535dcfffe1e44805p-1028, -0xf.661657628b04ca5f0210254b4638p-4), acos(cf128.init(0x1.8p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0xf.661657628b04ca5f0210254b4638p-4), acos(cf128.init(-0x1.8p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0xf.661657628b04ca5f0210254b4638p-4), acos(cf128.init(-0x1.8p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0xf.661657628b04ca5f0210254b4638p-4), acos(cf128.init(-0x1.8p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xf.661657628b04ca5f0210254b4638p-4), acos(cf128.init(0x1.8p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x7.27c9716ffb764d594a519c0252cp-152, 0xf.661657628b04ca5f0210254b4638p-4), acos(cf128.init(0x1.8p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0xd.dd164bc8f73535dcfffe1e44805p-1028, 0xf.661657628b04ca5f0210254b4638p-4), acos(cf128.init(0x1.8p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0xf.661657628b04ca5f0210254b4638p-4), acos(cf128.init(-0x1.8p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0xf.661657628b04ca5f0210254b4638p-4), acos(cf128.init(-0x1.8p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0xf.661657628b04ca5f0210254b4638p-4), acos(cf128.init(-0x1.8p+0, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.31dc0090b63d86827e4baaad1909p+0), acos(cf128.init(0x8p-152, 0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.31dc0090b63d86827e4baaad1909p+0), acos(cf128.init(0x0p+0, 0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.31dc0090b63d86827e4baaad1909p+0), acos(cf128.init(0x4p-1076, 0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.31dc0090b63d86827e4baaad1909p+0), acos(cf128.init(0xf.8p-16388, 0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.31dc0090b63d86827e4baaad1909p+0), acos(cf128.init(0x8p-152, -0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.31dc0090b63d86827e4baaad1909p+0), acos(cf128.init(0x0p+0, -0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.31dc0090b63d86827e4baaad1909p+0), acos(cf128.init(0x4p-1076, -0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.31dc0090b63d86827e4baaad1909p+0), acos(cf128.init(0xf.8p-16388, -0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.31dc0090b63d86827e4baaad1909p+0), acos(cf128.init(-0x0p+0, 0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.31dc0090b63d86827e4baaad1909p+0), acos(cf128.init(-0x8p-152, 0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.31dc0090b63d86827e4baaad1909p+0), acos(cf128.init(-0x4p-1076, 0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.31dc0090b63d86827e4baaad1909p+0), acos(cf128.init(-0xf.8p-16388, 0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.31dc0090b63d86827e4baaad1909p+0), acos(cf128.init(-0x0p+0, -0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.31dc0090b63d86827e4baaad1909p+0), acos(cf128.init(-0x8p-152, -0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.31dc0090b63d86827e4baaad1909p+0), acos(cf128.init(-0x4p-1076, -0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.31dc0090b63d86827e4baaad1909p+0), acos(cf128.init(-0xf.8p-16388, -0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x7.27c9716ffb764d594a519c0252cp-152, -0xf.661657628b04ca5f0210254b4638p-4), acos(cf128.init(0x1.8p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0xf.661657628b04ca5f0210254b4638p-4), acos(cf128.init(0x1.8p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x3.93e4b8b7fdbb26aca528ce01296p-1076, -0xf.661657628b04ca5f0210254b4638p-4), acos(cf128.init(0x1.8p+0, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0xd.dd164bc8f73535dcfffe1e44804p-16388, -0xf.661657628b04ca5f0210254b4638p-4), acos(cf128.init(0x1.8p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0xf.661657628b04ca5f0210254b4638p-4), acos(cf128.init(-0x1.8p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0xf.661657628b04ca5f0210254b4638p-4), acos(cf128.init(-0x1.8p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0xf.661657628b04ca5f0210254b4638p-4), acos(cf128.init(-0x1.8p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0xf.661657628b04ca5f0210254b4638p-4), acos(cf128.init(-0x1.8p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xf.661657628b04ca5f0210254b4638p-4), acos(cf128.init(0x1.8p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x7.27c9716ffb764d594a519c0252cp-152, 0xf.661657628b04ca5f0210254b4638p-4), acos(cf128.init(0x1.8p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf128.init(0x3.93e4b8b7fdbb26aca528ce01296p-1076, 0xf.661657628b04ca5f0210254b4638p-4), acos(cf128.init(0x1.8p+0, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0xd.dd164bc8f73535dcfffe1e44804p-16388, 0xf.661657628b04ca5f0210254b4638p-4), acos(cf128.init(0x1.8p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0xf.661657628b04ca5f0210254b4638p-4), acos(cf128.init(-0x1.8p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0xf.661657628b04ca5f0210254b4638p-4), acos(cf128.init(-0x1.8p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0xf.661657628b04ca5f0210254b4638p-4), acos(cf128.init(-0x1.8p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0xf.661657628b04ca5f0210254b4638p-4), acos(cf128.init(-0x1.8p+0, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x1.38aadea15829f2844671e1851fcp+0, -0xe.d170de964f5d75090748cab694p-4), acos(cf128.init(0x8p-4, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.38aadea15829f2844671e1851fcp+0, 0xe.d170de964f5d75090748cab694p-4), acos(cf128.init(0x8p-4, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.eb948be72d79164ecca7a8a8e3bp+0, -0xe.d170de964f5d75090748cab694p-4), acos(cf128.init(-0x8p-4, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.eb948be72d79164ecca7a8a8e3bp+0, 0xe.d170de964f5d75090748cab694p-4), acos(cf128.init(-0x8p-4, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0xa.cc583f03a22a8c40c73e73de7ee8p-4, -0xb.b9c8f86edeb47f0c9aabc8f22f1p-4), acos(cf128.init(0x1p+0, 0x8p-4)));
    try std.testing.expectEqual(cf128.init(0x2.7779e6984b80600f06a5a2f01b82p+0, -0xb.b9c8f86edeb47f0c9aabc8f22f1p-4), acos(cf128.init(-0x1p+0, 0x8p-4)));
    try std.testing.expectEqual(cf128.init(0xa.cc583f03a22a8c40c73e73de7ee8p-4, 0xb.b9c8f86edeb47f0c9aabc8f22f1p-4), acos(cf128.init(0x1p+0, -0x8p-4)));
    try std.testing.expectEqual(cf128.init(0x2.7779e6984b80600f06a5a2f01b82p+0, 0xb.b9c8f86edeb47f0c9aabc8f22f1p-4), acos(cf128.init(-0x1p+0, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.64fd8d454758c166d681836ca8edp+0, -0xe.4787aa0d7d0a7c68f05f6cbceacp-4), acos(cf128.init(0x4p-4, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.64fd8d454758c166d681836ca8edp+0, 0xe.4787aa0d7d0a7c68f05f6cbceacp-4), acos(cf128.init(0x4p-4, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.bf41dd433e4a476c3c9806c15a83p+0, -0xe.4787aa0d7d0a7c68f05f6cbceacp-4), acos(cf128.init(-0x4p-4, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.bf41dd433e4a476c3c9806c15a83p+0, 0xe.4787aa0d7d0a7c68f05f6cbceacp-4), acos(cf128.init(-0x4p-4, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x7.d32025ccefaafbf92e755460e2c8p-4, -0x8.281ac2ec921b31b06a0c6b93987p-4), acos(cf128.init(0x1p+0, 0x4p-4)));
    try std.testing.expectEqual(cf128.init(0x2.a70d682bb6a85913803234e7f544p+0, -0x8.281ac2ec921b31b06a0c6b93987p-4), acos(cf128.init(-0x1p+0, 0x4p-4)));
    try std.testing.expectEqual(cf128.init(0x7.d32025ccefaafbf92e755460e2c8p-4, 0x8.281ac2ec921b31b06a0c6b93987p-4), acos(cf128.init(0x1p+0, -0x4p-4)));
    try std.testing.expectEqual(cf128.init(0x2.a70d682bb6a85913803234e7f544p+0, 0x8.281ac2ec921b31b06a0c6b93987p-4), acos(cf128.init(-0x1p+0, -0x4p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.91c806df5113088eb58bb78dd473p+0, -0xe.1a1bda9ed1cea5e015f30c2c5fdp-4), acos(cf128.init(0x7.cp-12, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.91c806df5113088eb58bb78dd473p+0, 0xe.1a1bda9ed1cea5e015f30c2c5fdp-4), acos(cf128.init(0x7.cp-12, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.927763a9349000445d8dd2a02efdp+0, -0xe.1a1bda9ed1cea5e015f30c2c5fdp-4), acos(cf128.init(-0x7.cp-12, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.927763a9349000445d8dd2a02efdp+0, 0xe.1a1bda9ed1cea5e015f30c2c5fdp-4), acos(cf128.init(-0x7.cp-12, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0xb.223ee4fc5f3ba593110be5057338p-8, -0xb.23250757a42f7a1660fea7eb0a68p-8), acos(cf128.init(0x1p+0, 0x7.cp-12)));
    // try std.testing.expectEqual(cf128.init(0x3.191d2ba38943cd2d80087e48fdfep+0, -0xb.23250757a42f7a1660fea7eb0a68p-8), acos(cf128.init(-0x1p+0, 0x7.cp-12)));
    // try std.testing.expectEqual(cf128.init(0xb.223ee4fc5f3ba593110be5057338p-8, 0xb.23250757a42f7a1660fea7eb0a68p-8), acos(cf128.init(0x1p+0, -0x7.cp-12)));
    // try std.testing.expectEqual(cf128.init(0x3.191d2ba38943cd2d80087e48fdfep+0, 0xb.23250757a42f7a1660fea7eb0a68p-8), acos(cf128.init(-0x1p+0, -0x7.cp-12)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb53ec7eb2796b9113a230312p+0, -0xe.1a1b30bcea1366b7717f2664641p-4), acos(cf128.init(0x7.cp-32, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb53ec7eb2796b9113a230312p+0, 0xe.1a1b30bcea1366b7717f2664641p-4), acos(cf128.init(0x7.cp-32, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb549bdb7e13c5a08500b005ep+0, -0xe.1a1b30bcea1366b7717f2664641p-4), acos(cf128.init(-0x7.cp-32, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb549bdb7e13c5a08500b005ep+0, 0xe.1a1b30bcea1366b7717f2664641p-4), acos(cf128.init(-0x7.cp-32, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.c8ac80ab4bf3b0c37a02d61fd644p-16, -0x2.c8ac80aee47d2c4db94bba30885p-16), acos(cf128.init(0x1p+0, 0x7.cp-32)));
    // try std.testing.expectEqual(cf128.init(0x3.243ca1dc04f7bcdf6256102b2d5p+0, -0x2.c8ac80aee47d2c4db94bba30885p-16), acos(cf128.init(-0x1p+0, 0x7.cp-32)));
    // try std.testing.expectEqual(cf128.init(0x2.c8ac80ab4bf3b0c37a02d61fd644p-16, 0x2.c8ac80aee47d2c4db94bba30885p-16), acos(cf128.init(0x1p+0, -0x7.cp-32)));
    // try std.testing.expectEqual(cf128.init(0x3.243ca1dc04f7bcdf6256102b2d5p+0, 0x2.c8ac80aee47d2c4db94bba30885p-16), acos(cf128.init(-0x1p+0, -0x7.cp-32)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc516ebcdp+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x1.fp-100, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc516ebcdp+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x1.fp-100, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51717a4p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x1.fp-100, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51717a4p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x1.fp-100, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.9159015a3070dd17787e4c8961cp-52, -0x5.9159015a3070dd17787e4c897e84p-52), acos(cf128.init(0x1p+0, 0x1.fp-100)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a2afbd8303e726f59ep+0, -0x5.9159015a3070dd17787e4c897e84p-52), acos(cf128.init(-0x1p+0, 0x1.fp-100)));
    // try std.testing.expectEqual(cf128.init(0x5.9159015a3070dd17787e4c8961cp-52, 0x5.9159015a3070dd17787e4c897e84p-52), acos(cf128.init(0x1p+0, -0x1.fp-100)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a2afbd8303e726f59ep+0, 0x5.9159015a3070dd17787e4c897e84p-52), acos(cf128.init(-0x1p+0, -0x1.fp-100)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0xf.8p-132, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0xf.8p-132, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0xf.8p-132, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0xf.8p-132, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0xf.bf7df5c6a788f0bd8bac8066d4f8p-68, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-68), acos(cf128.init(0x1p+0, 0xf.8p-132)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d21721aad198f8p+0, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-68), acos(cf128.init(-0x1p+0, 0xf.8p-132)));
    try std.testing.expectEqual(cf128.init(0xf.bf7df5c6a788f0bd8bac8066d4f8p-68, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-68), acos(cf128.init(0x1p+0, -0xf.8p-132)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d21721aad198f8p+0, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-68), acos(cf128.init(-0x1p+0, -0xf.8p-132)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x1.fp-1000, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x1.fp-1000, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x1.fp-1000, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x1.fp-1000, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52ap-76, -0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x0p+0), acos(cf128.init(0x1p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.645640568c1c3745de1f93225c09p-500, -0x1.645640568c1c3745de1f93225c09p-500), acos(cf128.init(0x1p+0, 0x1.fp-1000)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d312ec48f13672p+0, -0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x0p+0), acos(cf128.init(-0x1p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x1.645640568c1c3745de1f93225c09p-500), acos(cf128.init(-0x1p+0, 0x1.fp-1000)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x0p+0), acos(cf128.init(0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52ap-76, 0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(0x1p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf128.init(0x1.645640568c1c3745de1f93225c09p-500, 0x1.645640568c1c3745de1f93225c09p-500), acos(cf128.init(0x1p+0, -0x1.fp-1000)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x0p+0), acos(cf128.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d312ec48f13672p+0, 0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(-0x1p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x1.645640568c1c3745de1f93225c09p-500), acos(cf128.init(-0x1p+0, -0x1.fp-1000)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0xf.8p-1028, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0xf.8p-1028, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0xf.8p-1028, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0xf.8p-1028, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52ap-76, -0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x0p+0), acos(cf128.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0xf.bf7df5c6a788f0bd8bac8066d4f8p-516, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-516), acos(cf128.init(0x1p+0, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d312ec48f13672p+0, -0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x0p+0), acos(cf128.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-516), acos(cf128.init(-0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x0p+0), acos(cf128.init(0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52ap-76, 0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0xf.bf7df5c6a788f0bd8bac8066d4f8p-516, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-516), acos(cf128.init(0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x0p+0), acos(cf128.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d312ec48f13672p+0, 0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-516), acos(cf128.init(-0x1p+0, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x4p-1076, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x1.fp-10000, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x4p-1076, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x1.fp-10000, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x4p-1076, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x1.fp-10000, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x4p-1076, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x1.fp-10000, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52ap-76, -0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x0p+0), acos(cf128.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x8p-540, -0x8p-540), acos(cf128.init(0x1p+0, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1.645640568c1c3745de1f93225c09p-5000, -0x1.645640568c1c3745de1f93225c09p-5000), acos(cf128.init(0x1p+0, 0x1.fp-10000)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d312ec48f13672p+0, -0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x0p+0), acos(cf128.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x8p-540), acos(cf128.init(-0x1p+0, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x1.645640568c1c3745de1f93225c09p-5000), acos(cf128.init(-0x1p+0, 0x1.fp-10000)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x0p+0), acos(cf128.init(0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52ap-76, 0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x8p-540, 0x8p-540), acos(cf128.init(0x1p+0, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1.645640568c1c3745de1f93225c09p-5000, 0x1.645640568c1c3745de1f93225c09p-5000), acos(cf128.init(0x1p+0, -0x1.fp-10000)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x0p+0), acos(cf128.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d312ec48f13672p+0, 0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x8p-540), acos(cf128.init(-0x1p+0, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x1.645640568c1c3745de1f93225c09p-5000), acos(cf128.init(-0x1p+0, -0x1.fp-10000)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x4p-1076, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0xf.8p-16388, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x4p-1076, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0xf.8p-16388, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x4p-1076, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0xf.8p-16388, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x4p-1076, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0xf.8p-16388, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52ap-76, -0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x0p+0), acos(cf128.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x8p-540, -0x8p-540), acos(cf128.init(0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196), acos(cf128.init(0x1p+0, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d312ec48f13672p+0, -0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x0p+0), acos(cf128.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x8p-540), acos(cf128.init(-0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196), acos(cf128.init(-0x1p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x0p+0), acos(cf128.init(0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52ap-76, 0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x8p-540, 0x8p-540), acos(cf128.init(0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196), acos(cf128.init(0x1p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x0p+0), acos(cf128.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d312ec48f13672p+0, 0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x8p-540), acos(cf128.init(-0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196), acos(cf128.init(-0x1p+0, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb3da38ec867fb2b3022957b2p+0, -0xe.1a1b475d8879e549549f948a064p-4), acos(cf128.init(0x2p-24, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb3da38ec867fb2b3022957b2p+0, 0xe.1a1b475d8879e549549f948a064p-4), acos(cf128.init(0x2p-24, -0x1.000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb6ae4cb6825360668804abbfp+0, -0xe.1a1b475d8879e549549f948a064p-4), acos(cf128.init(-0x2p-24, 0x1.000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb6ae4cb6825360668804abbfp+0, 0xe.1a1b475d8879e549549f948a064p-4), acos(cf128.init(-0x2p-24, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0xe.90189431f8bb9a2d5c186d86fcd8p-16, -0x2.3286b92909b7050671c3743fdfcp-12), acos(cf128.init(0x1.000002p+0, 0x2p-24)));
    // try std.testing.expectEqual(cf128.init(0x3.2430da6ff171101778ec2e1595eap+0, -0x2.3286b92909b7050671c3743fdfcp-12), acos(cf128.init(-0x1.000002p+0, 0x2p-24)));
    // try std.testing.expectEqual(cf128.init(0xe.90189431f8bb9a2d5c186d86fcd8p-16, 0x2.3286b92909b7050671c3743fdfcp-12), acos(cf128.init(0x1.000002p+0, -0x2p-24)));
    // try std.testing.expectEqual(cf128.init(0x3.2430da6ff171101778ec2e1595eap+0, 0x2.3286b92909b7050671c3743fdfcp-12), acos(cf128.init(-0x1.000002p+0, -0x2p-24)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0xf.8p-132, 0x1.000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0xf.8p-132, -0x1.000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0xf.8p-132, 0x1.000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0xf.8p-132, -0x1.000002p+0)));
    try std.testing.expectEqual(cf128.init(0x7.bffffc200002e7fffd9400021e8p-120, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, 0xf.8p-132)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, 0xf.8p-132)));
    try std.testing.expectEqual(cf128.init(0x7.bffffc200002e7fffd9400021e8p-120, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, -0xf.8p-132)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, -0xf.8p-132)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d179193a64d5c84907p+0, -0xe.1a1b475d886e94fa2cb045e524dp-4), acos(cf128.init(0x1p-52, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d179193a5985791b7p+0, -0xe.1a1b30bcea13660d8f99e8dd27fp-4), acos(cf128.init(0x1p-52, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d179193a5985791bcap+0, -0xe.1a1b30bcea141b1282cde2bb89ap-4), acos(cf128.init(0x1p-52, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d179193a5985791b7p+0, 0xe.1a1b30bcea13660d8f99e8dd27fp-4), acos(cf128.init(0x1p-52, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d179193a64d5c84907p+0, 0xe.1a1b475d886e94fa2cb045e524dp-4), acos(cf128.init(0x1p-52, -0x1.000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d179193a5985791bcap+0, 0xe.1a1b30bcea141b1282cde2bb89ap-4), acos(cf128.init(0x1p-52, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18fb9d8b4b465ba69p+0, -0xe.1a1b475d886e94fa2cb045e524dp-4), acos(cf128.init(-0x1p-52, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18fb9d8c004b4e8p+0, -0xe.1a1b30bcea13660d8f99e8dd27fp-4), acos(cf128.init(-0x1p-52, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18fb9d8c004b4e7a6p+0, -0xe.1a1b30bcea141b1282cde2bb89ap-4), acos(cf128.init(-0x1p-52, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18fb9d8c004b4e8p+0, 0xe.1a1b30bcea13660d8f99e8dd27fp-4), acos(cf128.init(-0x1p-52, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18fb9d8b4b465ba69p+0, 0xe.1a1b475d886e94fa2cb045e524dp-4), acos(cf128.init(-0x1p-52, -0x1.000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18fb9d8c004b4e7a6p+0, 0xe.1a1b30bcea141b1282cde2bb89ap-4), acos(cf128.init(-0x1p-52, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x7.fffffc000002ffbffd7ff557853cp-44, -0x1.ffffffaaaaaad12110fa3da369b2p-12), acos(cf128.init(0x1.000002p+0, 0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x3.fffffffffffffaaaaaaaaaaaaa98p-28, -0x4.0000000000000555555555555544p-28), acos(cf128.init(0x1p+0, 0x1p-52)));
    // try std.testing.expectEqual(cf128.init(0x2.930a5f307dfb9f3e737a73f2c9fp-28, -0x6.3710864f5700aaeade062aa6c66p-28), acos(cf128.init(0x1.0000000000001p+0, 0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d31319df8358c6p+0, -0x4.0000000000000555555555555544p-28), acos(cf128.init(-0x1p+0, 0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a88852308d3531989fe077p+0, -0x1.ffffffaaaaaad12110fa3da369b2p-12), acos(cf128.init(-0x1.000002p+0, 0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a5f54fd15cb335f9646cbcap+0, -0x6.3710864f5700aaeade062aa6c66p-28), acos(cf128.init(-0x1.0000000000001p+0, 0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x7.fffffc000002ffbffd7ff557853cp-44, 0x1.ffffffaaaaaad12110fa3da369b2p-12), acos(cf128.init(0x1.000002p+0, -0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x3.fffffffffffffaaaaaaaaaaaaa98p-28, 0x4.0000000000000555555555555544p-28), acos(cf128.init(0x1p+0, -0x1p-52)));
    // try std.testing.expectEqual(cf128.init(0x2.930a5f307dfb9f3e737a73f2c9fp-28, 0x6.3710864f5700aaeade062aa6c66p-28), acos(cf128.init(0x1.0000000000001p+0, -0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d31319df8358c6p+0, 0x4.0000000000000555555555555544p-28), acos(cf128.init(-0x1p+0, -0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a88852308d3531989fe077p+0, 0x1.ffffffaaaaaad12110fa3da369b2p-12), acos(cf128.init(-0x1.000002p+0, -0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a5f54fd15cb335f9646cbcap+0, 0x6.3710864f5700aaeade062aa6c66p-28), acos(cf128.init(-0x1.0000000000001p+0, -0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(0x8p-152, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0xf.8p-1028, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0xf.8p-1028, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(0xf.8p-1028, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0x8p-152, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(0x8p-152, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0xf.8p-1028, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0xf.8p-1028, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(0xf.8p-1028, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(-0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(-0x8p-152, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0xf.8p-1028, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0xf.8p-1028, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(-0xf.8p-1028, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(-0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0x8p-152, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(-0x8p-152, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0xf.8p-1028, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0xf.8p-1028, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(-0xf.8p-1028, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x3.fffffe0000017ffffec0000118p-140, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x7.bffffc200002e7fffd9400021e8p-1016, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52ap-76, -0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x0p+0), acos(cf128.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0xf.bf7df5c6a788f0bd8bac8066d4f8p-516, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-516), acos(cf128.init(0x1p+0, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc3608b617397f793p-124, -0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(0x1.0000000000001p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x2.bd732e69683dba8b0e0ccff66faep-1000, -0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(0x1.0000000000001p+0, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d312ec48f13672p+0, -0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x0p+0), acos(cf128.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-516), acos(cf128.init(-0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(-0x1.0000000000001p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(-0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(-0x1.0000000000001p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x3.fffffe0000017ffffec0000118p-140, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x7.bffffc200002e7fffd9400021e8p-1016, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x0p+0), acos(cf128.init(0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52ap-76, 0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0xf.bf7df5c6a788f0bd8bac8066d4f8p-516, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-516), acos(cf128.init(0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(0x1.0000000000001p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc3608b617397f793p-124, 0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(0x1.0000000000001p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x2.bd732e69683dba8b0e0ccff66faep-1000, 0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(0x1.0000000000001p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x0p+0), acos(cf128.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d312ec48f13672p+0, 0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-516), acos(cf128.init(-0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(-0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(-0x1.0000000000001p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(-0x1.0000000000001p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(-0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(-0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x0p+0), acos(cf128.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x0p+0), acos(cf128.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(-0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x0p+0), acos(cf128.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x0p+0), acos(cf128.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(-0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d184681f82e01917e1p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0x2p-64, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d184681f82deaf0dfbp+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x2p-64, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d184681f82deaf0dfbp+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(0x2p-64, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d184681f82deaf0dfbp+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(0x2p-64, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d184681f82deaf0dfbp+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x2p-64, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d184681f82e01917e1p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0x2p-64, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d184681f82deaf0dfbp+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(0x2p-64, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d184681f82deaf0dfbp+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(0x2p-64, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d1846af396aa14eb8fp+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0x2p-64, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d1846af396ab7ef575p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x2p-64, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d1846af396ab7ef575p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(-0x2p-64, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d1846af396ab7ef575p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(-0x2p-64, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d1846af396ab7ef575p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x2p-64, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d1846af396aa14eb8fp+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0x2p-64, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d1846af396ab7ef575p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(-0x2p-64, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d1846af396ab7ef575p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(-0x2p-64, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.fffff8000005fffffafe00045fa8p-56, -0x1.ffffffaaaaaad11110fa75a369e4p-12), acos(cf128.init(0x1.000002p+0, 0x2p-64)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc90876a417aaeca1p-32, -0x1.6a09e667f3bcc908ef520f22e88ap-32), acos(cf128.init(0x1p+0, 0x2p-64)));
    // try std.testing.expectEqual(cf128.init(0x5.a82796cbbb2b30bd4eb0fb11ae8cp-40, -0x5.a8279c73e2bc6366ad7b0220ed14p-28), acos(cf128.init(0x1.0000000000001p+0, 0x2p-64)));
    // try std.testing.expectEqual(cf128.init(0xe.90189c7b641413339ccc227bad48p-36, -0x2.3286b95ff53f16aed3237f4704acp-32), acos(cf128.init(0x1.0000000000000002p+0, 0x2p-64)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a871b99226b1f5cc1258cccp+0, -0x1.6a09e667f3bcc908ef520f22e88ap-32), acos(cf128.init(-0x1p+0, 0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a2f8d313218a2dfd7p+0, -0x1.ffffffaaaaaad11110fa75a369e4p-12), acos(cf128.init(-0x1.000002p+0, 0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a887ffae13c475e5efd4622p+0, -0x5.a8279c73e2bc6366ad7b0220ed14p-28), acos(cf128.init(-0x1.0000000000001p+0, 0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a879ca17f0b5cd848fac9a4p+0, -0x2.3286b95ff53f16aed3237f4704acp-32), acos(cf128.init(-0x1.0000000000000002p+0, 0x2p-64)));
    // try std.testing.expectEqual(cf128.init(0xf.fffff8000005fffffafe00045fa8p-56, 0x1.ffffffaaaaaad11110fa75a369e4p-12), acos(cf128.init(0x1.000002p+0, -0x2p-64)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc90876a417aaeca1p-32, 0x1.6a09e667f3bcc908ef520f22e88ap-32), acos(cf128.init(0x1p+0, -0x2p-64)));
    // try std.testing.expectEqual(cf128.init(0x5.a82796cbbb2b30bd4eb0fb11ae8cp-40, 0x5.a8279c73e2bc6366ad7b0220ed14p-28), acos(cf128.init(0x1.0000000000001p+0, -0x2p-64)));
    // try std.testing.expectEqual(cf128.init(0xe.90189c7b641413339ccc227bad48p-36, 0x2.3286b95ff53f16aed3237f4704acp-32), acos(cf128.init(0x1.0000000000000002p+0, -0x2p-64)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a871b99226b1f5cc1258cccp+0, 0x1.6a09e667f3bcc908ef520f22e88ap-32), acos(cf128.init(-0x1p+0, -0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a2f8d313218a2dfd7p+0, 0x1.ffffffaaaaaad11110fa75a369e4p-12), acos(cf128.init(-0x1.000002p+0, -0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a887ffae13c475e5efd4622p+0, 0x5.a8279c73e2bc6366ad7b0220ed14p-28), acos(cf128.init(-0x1.0000000000001p+0, -0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a879ca17f0b5cd848fac9a4p+0, 0x2.3286b95ff53f16aed3237f4704acp-32), acos(cf128.init(-0x1.0000000000000002p+0, -0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(0x8p-152, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(0x8p-152, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(0x0p+0, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0x4p-1076, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x4p-1076, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(0x4p-1076, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(0x4p-1076, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0xf.8p-16388, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0xf.8p-16388, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(0xf.8p-16388, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(0xf.8p-16388, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0x8p-152, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(0x8p-152, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(0x8p-152, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(0x0p+0, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x4p-1076, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0x4p-1076, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(0x4p-1076, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(0x4p-1076, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0xf.8p-16388, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0xf.8p-16388, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(0xf.8p-16388, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(0xf.8p-16388, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(-0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(-0x0p+0, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(-0x8p-152, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(-0x8p-152, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0x4p-1076, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x4p-1076, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(-0x4p-1076, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(-0x4p-1076, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0xf.8p-16388, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0xf.8p-16388, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(-0xf.8p-16388, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(-0xf.8p-16388, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(-0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(-0x0p+0, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0x8p-152, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(-0x8p-152, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(-0x8p-152, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x4p-1076, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0x4p-1076, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(-0x4p-1076, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(-0x4p-1076, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0xf.8p-16388, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0xf.8p-16388, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(-0xf.8p-16388, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(-0xf.8p-16388, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x3.fffffe0000017ffffec0000118p-140, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.ffffff000000bfffff6000008cp-1064, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x7.bffffc200002e7fffd9400021e8p-16376, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52ap-76, -0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x0p+0), acos(cf128.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x8p-540, -0x8p-540), acos(cf128.init(0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196), acos(cf128.init(0x1p+0, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc3608b617397f793p-124, -0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(0x1.0000000000001p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(0x1.0000000000001p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0xb.504f333f9de61b045b0b9cbfbc98p-1052, -0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(0x1.0000000000001p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x2.bd732e69683dba8b0e0ccff66faep-16360, -0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(0x1.0000000000001p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x3.fffffffffffffffep-120, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(0x1.0000000000000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(0x1.0000000000000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.ffffffffffffffffp-1044, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(0x1.0000000000000002p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x7.bffffffffffffffc2p-16356, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(0x1.0000000000000002p+0, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d312ec48f13672p+0, -0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x0p+0), acos(cf128.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x8p-540), acos(cf128.init(-0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196), acos(cf128.init(-0x1p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(-0x1.0000000000001p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(-0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(-0x1.0000000000001p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(-0x1.0000000000001p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(-0x1.0000000000000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(-0x1.0000000000000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(-0x1.0000000000000002p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(-0x1.0000000000000002p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x3.fffffe0000017ffffec0000118p-140, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.ffffff000000bfffff6000008cp-1064, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x7.bffffc200002e7fffd9400021e8p-16376, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x0p+0), acos(cf128.init(0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52ap-76, 0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x8p-540, 0x8p-540), acos(cf128.init(0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196), acos(cf128.init(0x1p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(0x1.0000000000001p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc3608b617397f793p-124, 0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(0x1.0000000000001p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf128.init(0xb.504f333f9de61b045b0b9cbfbc98p-1052, 0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(0x1.0000000000001p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x2.bd732e69683dba8b0e0ccff66faep-16360, 0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(0x1.0000000000001p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(0x1.0000000000000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.fffffffffffffffep-120, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(0x1.0000000000000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.ffffffffffffffffp-1044, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(0x1.0000000000000002p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x7.bffffffffffffffc2p-16356, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(0x1.0000000000000002p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x0p+0), acos(cf128.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d312ec48f13672p+0, 0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x8p-540), acos(cf128.init(-0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196), acos(cf128.init(-0x1p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(-0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(-0x1.0000000000001p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(-0x1.0000000000001p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(-0x1.0000000000001p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(-0x1.0000000000000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(-0x1.0000000000000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(-0x1.0000000000000002p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(-0x1.0000000000000002p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(0x0p+0, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(0x0p+0, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(-0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(-0x0p+0, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(-0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(-0x0p+0, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x0p+0), acos(cf128.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(0x1.0000000000000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x0p+0), acos(cf128.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(-0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(-0x1.0000000000000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x0p+0), acos(cf128.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(0x1.0000000000000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x0p+0), acos(cf128.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(-0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(-0x1.0000000000000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc517018bp+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0x4p-108, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc517018bp+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x4p-108, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc517018bp+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(0x4p-108, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc517018bp+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(0x4p-108, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc517018bp+0, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(0x4p-108, 0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc517018bp+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x4p-108, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc517018bp+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0x4p-108, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc517018bp+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(0x4p-108, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc517018bp+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(0x4p-108, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc517018bp+0, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(0x4p-108, -0x1.000000000000000000000000008p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701e5p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0x4p-108, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701e5p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x4p-108, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701e5p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(-0x4p-108, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701e5p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(-0x4p-108, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701e5p+0, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(-0x4p-108, 0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701e5p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x4p-108, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701e5p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0x4p-108, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701e5p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(-0x4p-108, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701e5p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(-0x4p-108, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701e5p+0, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(-0x4p-108, -0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.ffffff000000bfffff6000008cp-96, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, 0x4p-108)));
    try std.testing.expectEqual(cf128.init(0x7.ffffffffffffffffffffffffffd4p-56, -0x8.0000000000000000000000000028p-56), acos(cf128.init(0x1p+0, 0x4p-108)));
    // try std.testing.expectEqual(cf128.init(0xb.504f333f9de61b045b0b9cbfbc8p-84, -0x5.a827999fcef31c97ec74cddd10f8p-28), acos(cf128.init(0x1.0000000000001p+0, 0x4p-108)));
    try std.testing.expectEqual(cf128.init(0x1.fffffffffffffffeffffffp-76, -0x1.ffffffffffffffffaaaaabaaaaabp-32), acos(cf128.init(0x1.0000000000000002p+0, 0x4p-108)));
    // try std.testing.expectEqual(cf128.init(0x3.e30ee78adee42e5e26a28ada7b42p-56, -0x1.077225f1da571bac72dad86476ffp-52), acos(cf128.init(0x1.000000000000000000000000008p+0, 0x4p-108)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a300d313198a2e037p+0, -0x8.0000000000000000000000000028p-56), acos(cf128.init(-0x1p+0, 0x4p-108)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2c037p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, 0x4p-108)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d31318d529103cp+0, -0x5.a827999fcef31c97ec74cddd10f8p-28), acos(cf128.init(-0x1.0000000000001p+0, 0x4p-108)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d312f98a2e037p+0, -0x1.ffffffffffffffffaaaaabaaaaabp-32), acos(cf128.init(-0x1.0000000000000002p+0, 0x4p-108)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a304f00431ff4f1f42p+0, -0x1.077225f1da571bac72dad86476ffp-52), acos(cf128.init(-0x1.000000000000000000000000008p+0, 0x4p-108)));
    // try std.testing.expectEqual(cf128.init(0x1.ffffff000000bfffff6000008cp-96, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, -0x4p-108)));
    try std.testing.expectEqual(cf128.init(0x7.ffffffffffffffffffffffffffd4p-56, 0x8.0000000000000000000000000028p-56), acos(cf128.init(0x1p+0, -0x4p-108)));
    // try std.testing.expectEqual(cf128.init(0xb.504f333f9de61b045b0b9cbfbc8p-84, 0x5.a827999fcef31c97ec74cddd10f8p-28), acos(cf128.init(0x1.0000000000001p+0, -0x4p-108)));
    try std.testing.expectEqual(cf128.init(0x1.fffffffffffffffeffffffp-76, 0x1.ffffffffffffffffaaaaabaaaaabp-32), acos(cf128.init(0x1.0000000000000002p+0, -0x4p-108)));
    // try std.testing.expectEqual(cf128.init(0x3.e30ee78adee42e5e26a28ada7b42p-56, 0x1.077225f1da571bac72dad86476ffp-52), acos(cf128.init(0x1.000000000000000000000000008p+0, -0x4p-108)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a300d313198a2e037p+0, 0x8.0000000000000000000000000028p-56), acos(cf128.init(-0x1p+0, -0x4p-108)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2c037p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, -0x4p-108)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d31318d529103cp+0, 0x5.a827999fcef31c97ec74cddd10f8p-28), acos(cf128.init(-0x1.0000000000001p+0, -0x4p-108)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d312f98a2e037p+0, 0x1.ffffffffffffffffaaaaabaaaaabp-32), acos(cf128.init(-0x1.0000000000000002p+0, -0x4p-108)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a304f00431ff4f1f42p+0, 0x1.077225f1da571bac72dad86476ffp-52), acos(cf128.init(-0x1.000000000000000000000000008p+0, -0x4p-108)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(0x8p-152, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(0x8p-152, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(0x8p-152, 0x1.000000000000000000000000008p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(0x0p+0, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(0x0p+0, 0x1.000000000000000000000000008p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0xf.8p-1028, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0xf.8p-1028, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(0xf.8p-1028, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(0xf.8p-1028, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(0xf.8p-1028, 0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0x8p-152, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(0x8p-152, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(0x8p-152, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(0x8p-152, -0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(0x0p+0, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(0x0p+0, -0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0xf.8p-1028, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0xf.8p-1028, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(0xf.8p-1028, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(0xf.8p-1028, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(0xf.8p-1028, -0x1.000000000000000000000000008p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(-0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(-0x0p+0, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(-0x0p+0, 0x1.000000000000000000000000008p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(-0x8p-152, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(-0x8p-152, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(-0x8p-152, 0x1.000000000000000000000000008p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0xf.8p-1028, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0xf.8p-1028, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(-0xf.8p-1028, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(-0xf.8p-1028, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(-0xf.8p-1028, 0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(-0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(-0x0p+0, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(-0x0p+0, -0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0x8p-152, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(-0x8p-152, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(-0x8p-152, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(-0x8p-152, -0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0xf.8p-1028, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0xf.8p-1028, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(-0xf.8p-1028, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(-0xf.8p-1028, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(-0xf.8p-1028, -0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(0x3.fffffe0000017ffffec0000118p-140, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x7.bffffc200002e7fffd9400021e8p-1016, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52ap-76, -0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x0p+0), acos(cf128.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0xf.bf7df5c6a788f0bd8bac8066d4f8p-516, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-516), acos(cf128.init(0x1p+0, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc3608b617397f793p-124, -0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(0x1.0000000000001p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x2.bd732e69683dba8b0e0ccff66faep-1000, -0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(0x1.0000000000001p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x3.fffffffffffffffep-120, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(0x1.0000000000000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(0x1.0000000000000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x7.bffffffffffffffc2p-996, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(0x1.0000000000000002p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x7.fffffffffffffffffffffeffffp-100, -0x1.00000000000000000000001ffff5p-52), acos(cf128.init(0x1.000000000000000000000000008p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0xf.ffffffffffffffffffffffffff58p-56), acos(cf128.init(0x1.000000000000000000000000008p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0xf.7ffffffffffffffffffffffffe1p-976, -0xf.ffffffffffffffffffffffffff58p-56), acos(cf128.init(0x1.000000000000000000000000008p+0, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d312ec48f13672p+0, -0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x0p+0), acos(cf128.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-516), acos(cf128.init(-0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(-0x1.0000000000001p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(-0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(-0x1.0000000000001p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(-0x1.0000000000000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(-0x1.0000000000000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(-0x1.0000000000000002p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2d837p+0, -0x1.00000000000000000000001ffff5p-52), acos(cf128.init(-0x1.000000000000000000000000008p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0xf.ffffffffffffffffffffffffff58p-56), acos(cf128.init(-0x1.000000000000000000000000008p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0xf.ffffffffffffffffffffffffff58p-56), acos(cf128.init(-0x1.000000000000000000000000008p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x3.fffffe0000017ffffec0000118p-140, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x7.bffffc200002e7fffd9400021e8p-1016, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x0p+0), acos(cf128.init(0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52ap-76, 0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0xf.bf7df5c6a788f0bd8bac8066d4f8p-516, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-516), acos(cf128.init(0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(0x1.0000000000001p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc3608b617397f793p-124, 0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(0x1.0000000000001p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x2.bd732e69683dba8b0e0ccff66faep-1000, 0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(0x1.0000000000001p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(0x1.0000000000000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.fffffffffffffffep-120, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(0x1.0000000000000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x7.bffffffffffffffc2p-996, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(0x1.0000000000000002p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xf.ffffffffffffffffffffffffff58p-56), acos(cf128.init(0x1.000000000000000000000000008p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x7.fffffffffffffffffffffeffffp-100, 0x1.00000000000000000000001ffff5p-52), acos(cf128.init(0x1.000000000000000000000000008p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0xf.7ffffffffffffffffffffffffe1p-976, 0xf.ffffffffffffffffffffffffff58p-56), acos(cf128.init(0x1.000000000000000000000000008p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x0p+0), acos(cf128.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d312ec48f13672p+0, 0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-516), acos(cf128.init(-0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(-0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(-0x1.0000000000001p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(-0x1.0000000000001p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(-0x1.0000000000000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(-0x1.0000000000000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(-0x1.0000000000000002p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0xf.ffffffffffffffffffffffffff58p-56), acos(cf128.init(-0x1.000000000000000000000000008p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2d837p+0, 0x1.00000000000000000000001ffff5p-52), acos(cf128.init(-0x1.000000000000000000000000008p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0xf.ffffffffffffffffffffffffff58p-56), acos(cf128.init(-0x1.000000000000000000000000008p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(0x0p+0, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(0x0p+0, 0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(0x0p+0, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(0x0p+0, -0x1.000000000000000000000000008p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(-0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(-0x0p+0, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(-0x0p+0, 0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(-0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(-0x0p+0, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(-0x0p+0, -0x1.000000000000000000000000008p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x0p+0), acos(cf128.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(0x1.0000000000000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0xf.ffffffffffffffffffffffffff58p-56), acos(cf128.init(0x1.000000000000000000000000008p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x0p+0), acos(cf128.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(-0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(-0x1.0000000000000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0xf.ffffffffffffffffffffffffff58p-56), acos(cf128.init(-0x1.000000000000000000000000008p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x0p+0), acos(cf128.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(0x1.0000000000000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xf.ffffffffffffffffffffffffff58p-56), acos(cf128.init(0x1.000000000000000000000000008p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x0p+0), acos(cf128.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(-0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(-0x1.0000000000000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0xf.ffffffffffffffffffffffffff58p-56), acos(cf128.init(-0x1.000000000000000000000000008p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0x8p-116, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x8p-116, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(0x8p-116, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(0x8p-116, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd252p-4), acos(cf128.init(0x8p-116, 0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(0x8p-116, 0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x8p-116, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0x8p-116, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(0x8p-116, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(0x8p-116, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd252p-4), acos(cf128.init(0x8p-116, -0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(0x8p-116, -0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b9p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0x8p-116, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b9p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x8p-116, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b9p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(-0x8p-116, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b9p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(-0x8p-116, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b9p+0, -0xe.1a1b30bcea13660d8f99e8dd252p-4), acos(cf128.init(-0x8p-116, 0x1.0000000000000000000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b9p+0, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(-0x8p-116, 0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b9p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x8p-116, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b9p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0x8p-116, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b9p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(-0x8p-116, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b9p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(-0x8p-116, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b9p+0, 0xe.1a1b30bcea13660d8f99e8dd252p-4), acos(cf128.init(-0x8p-116, -0x1.0000000000000000000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b9p+0, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(-0x8p-116, -0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(0x3.fffffe0000017ffffec0000118p-104, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, 0x8p-116)));
    // try std.testing.expectEqual(cf128.init(0xb.504f333f9de6484597d89b3754a8p-60, -0xb.504f333f9de6484597d89b3754bp-60), acos(cf128.init(0x1p+0, 0x8p-116)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc3608b617397f793p-88, -0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(0x1.0000000000001p+0, 0x8p-116)));
    try std.testing.expectEqual(cf128.init(0x3.fffffffffffffffdfffffffff8p-84, -0x1.ffffffffffffffffaaaaaaaaaeabp-32), acos(cf128.init(0x1.0000000000000002p+0, 0x8p-116)));
    // try std.testing.expectEqual(cf128.init(0x5.7f398e83f57b5edad2ea479aab44p-60, -0x1.749199c6dc180964f2cb6bc17b15p-56), acos(cf128.init(0x1.0000000000000000000000000001p+0, 0x8p-116)));
    try std.testing.expectEqual(cf128.init(0x7.ffff00006fffbe002cafdf321864p-64, -0x1.00001ffff600053ffca6025fbe2ap-52), acos(cf128.init(0x1.000000000000000000000000008p+0, 0x8p-116)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a3081e0e265634250cp+0, -0xb.504f333f9de6484597d89b3754bp-60), acos(cf128.init(-0x1p+0, 0x8p-116)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2dff7p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, 0x8p-116)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d3131988c3f98ap+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(-0x1.0000000000001p+0, 0x8p-116)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313194a2e037p+0, -0x1.ffffffffffffffffaaaaaaaaaeabp-32), acos(cf128.init(-0x1.0000000000000002p+0, 0x8p-116)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a3087b1f80a1eeabbap+0, -0x1.749199c6dc180964f2cb6bc17b15p-56), acos(cf128.init(-0x1.0000000000000000000000000001p+0, 0x8p-116)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308cb131a8a2d937p+0, -0x1.00001ffff600053ffca6025fbe2ap-52), acos(cf128.init(-0x1.000000000000000000000000008p+0, 0x8p-116)));
    // try std.testing.expectEqual(cf128.init(0x3.fffffe0000017ffffec0000118p-104, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, -0x8p-116)));
    // try std.testing.expectEqual(cf128.init(0xb.504f333f9de6484597d89b3754a8p-60, 0xb.504f333f9de6484597d89b3754bp-60), acos(cf128.init(0x1p+0, -0x8p-116)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc3608b617397f793p-88, 0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(0x1.0000000000001p+0, -0x8p-116)));
    try std.testing.expectEqual(cf128.init(0x3.fffffffffffffffdfffffffff8p-84, 0x1.ffffffffffffffffaaaaaaaaaeabp-32), acos(cf128.init(0x1.0000000000000002p+0, -0x8p-116)));
    // try std.testing.expectEqual(cf128.init(0x5.7f398e83f57b5edad2ea479aab44p-60, 0x1.749199c6dc180964f2cb6bc17b15p-56), acos(cf128.init(0x1.0000000000000000000000000001p+0, -0x8p-116)));
    try std.testing.expectEqual(cf128.init(0x7.ffff00006fffbe002cafdf321864p-64, 0x1.00001ffff600053ffca6025fbe2ap-52), acos(cf128.init(0x1.000000000000000000000000008p+0, -0x8p-116)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a3081e0e265634250cp+0, 0xb.504f333f9de6484597d89b3754bp-60), acos(cf128.init(-0x1p+0, -0x8p-116)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2dff7p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, -0x8p-116)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d3131988c3f98ap+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(-0x1.0000000000001p+0, -0x8p-116)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313194a2e037p+0, 0x1.ffffffffffffffffaaaaaaaaaeabp-32), acos(cf128.init(-0x1.0000000000000002p+0, -0x8p-116)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a3087b1f80a1eeabbap+0, 0x1.749199c6dc180964f2cb6bc17b15p-56), acos(cf128.init(-0x1.0000000000000000000000000001p+0, -0x8p-116)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308cb131a8a2d937p+0, 0x1.00001ffff600053ffca6025fbe2ap-52), acos(cf128.init(-0x1.000000000000000000000000008p+0, -0x8p-116)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(0x8p-152, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(0x8p-152, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd252p-4), acos(cf128.init(0x8p-152, 0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(0x8p-152, 0x1.000000000000000000000000008p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(0x0p+0, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd252p-4), acos(cf128.init(0x0p+0, 0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(0x0p+0, 0x1.000000000000000000000000008p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0x4p-1076, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x4p-1076, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(0x4p-1076, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(0x4p-1076, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd252p-4), acos(cf128.init(0x4p-1076, 0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(0x4p-1076, 0x1.000000000000000000000000008p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0xf.8p-16388, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0xf.8p-16388, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(0xf.8p-16388, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(0xf.8p-16388, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd252p-4), acos(cf128.init(0xf.8p-16388, 0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(0xf.8p-16388, 0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0x8p-152, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(0x8p-152, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(0x8p-152, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd252p-4), acos(cf128.init(0x8p-152, -0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(0x8p-152, -0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(0x0p+0, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd252p-4), acos(cf128.init(0x0p+0, -0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(0x0p+0, -0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x4p-1076, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0x4p-1076, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(0x4p-1076, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(0x4p-1076, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd252p-4), acos(cf128.init(0x4p-1076, -0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(0x4p-1076, -0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0xf.8p-16388, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0xf.8p-16388, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(0xf.8p-16388, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(0xf.8p-16388, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd252p-4), acos(cf128.init(0xf.8p-16388, -0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(0xf.8p-16388, -0x1.000000000000000000000000008p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(-0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(-0x0p+0, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd252p-4), acos(cf128.init(-0x0p+0, 0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(-0x0p+0, 0x1.000000000000000000000000008p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(-0x8p-152, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(-0x8p-152, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd252p-4), acos(cf128.init(-0x8p-152, 0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(-0x8p-152, 0x1.000000000000000000000000008p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0x4p-1076, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x4p-1076, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(-0x4p-1076, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(-0x4p-1076, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd252p-4), acos(cf128.init(-0x4p-1076, 0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(-0x4p-1076, 0x1.000000000000000000000000008p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0xf.8p-16388, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0xf.8p-16388, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(-0xf.8p-16388, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(-0xf.8p-16388, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd252p-4), acos(cf128.init(-0xf.8p-16388, 0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(-0xf.8p-16388, 0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(-0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(-0x0p+0, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd252p-4), acos(cf128.init(-0x0p+0, -0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(-0x0p+0, -0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0x8p-152, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(-0x8p-152, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(-0x8p-152, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd252p-4), acos(cf128.init(-0x8p-152, -0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(-0x8p-152, -0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x4p-1076, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0x4p-1076, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(-0x4p-1076, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(-0x4p-1076, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd252p-4), acos(cf128.init(-0x4p-1076, -0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(-0x4p-1076, -0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0xf.8p-16388, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0xf.8p-16388, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(-0xf.8p-16388, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(-0xf.8p-16388, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd252p-4), acos(cf128.init(-0xf.8p-16388, -0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(-0xf.8p-16388, -0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(0x3.fffffe0000017ffffec0000118p-140, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.ffffff000000bfffff6000008cp-1064, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x7.bffffc200002e7fffd9400021e8p-16376, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52ap-76, -0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x0p+0), acos(cf128.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x8p-540, -0x8p-540), acos(cf128.init(0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196), acos(cf128.init(0x1p+0, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc3608b617397f793p-124, -0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(0x1.0000000000001p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(0x1.0000000000001p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0xb.504f333f9de61b045b0b9cbfbc98p-1052, -0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(0x1.0000000000001p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x2.bd732e69683dba8b0e0ccff66faep-16360, -0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(0x1.0000000000001p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x3.fffffffffffffffep-120, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(0x1.0000000000000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(0x1.0000000000000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.ffffffffffffffffp-1044, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(0x1.0000000000000002p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x7.bffffffffffffffc2p-16356, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(0x1.0000000000000002p+0, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbbf0c5edd58p-96, -0x1.6a09e667f3bcc908b30663b61dd5p-56), acos(cf128.init(0x1.0000000000000000000000000001p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x1.6a09e667f3bcc908b2fb1366ea95p-56), acos(cf128.init(0x1.0000000000000000000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52ap-1020, -0x1.6a09e667f3bcc908b2fb1366ea95p-56), acos(cf128.init(0x1.0000000000000000000000000001p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f716036b19d65d9ap-16332, -0x1.6a09e667f3bcc908b2fb1366ea95p-56), acos(cf128.init(0x1.0000000000000000000000000001p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x7.fffffffffffffffffffffeffffp-100, -0x1.00000000000000000000001ffff5p-52), acos(cf128.init(0x1.000000000000000000000000008p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0xf.ffffffffffffffffffffffffff58p-56), acos(cf128.init(0x1.000000000000000000000000008p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.ffffffffffffffffffffffffff8p-1024, -0xf.ffffffffffffffffffffffffff58p-56), acos(cf128.init(0x1.000000000000000000000000008p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0xf.7ffffffffffffffffffffffffe1p-16336, -0xf.ffffffffffffffffffffffffff58p-56), acos(cf128.init(0x1.000000000000000000000000008p+0, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d312ec48f13672p+0, -0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x0p+0), acos(cf128.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x8p-540), acos(cf128.init(-0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196), acos(cf128.init(-0x1p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(-0x1.0000000000001p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(-0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(-0x1.0000000000001p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(-0x1.0000000000001p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(-0x1.0000000000000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(-0x1.0000000000000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(-0x1.0000000000000002p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(-0x1.0000000000000002p+0, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a285b48p+0, -0x1.6a09e667f3bcc908b30663b61dd5p-56), acos(cf128.init(-0x1.0000000000000000000000000001p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x1.6a09e667f3bcc908b2fb1366ea95p-56), acos(cf128.init(-0x1.0000000000000000000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x1.6a09e667f3bcc908b2fb1366ea95p-56), acos(cf128.init(-0x1.0000000000000000000000000001p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x1.6a09e667f3bcc908b2fb1366ea95p-56), acos(cf128.init(-0x1.0000000000000000000000000001p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2d837p+0, -0x1.00000000000000000000001ffff5p-52), acos(cf128.init(-0x1.000000000000000000000000008p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0xf.ffffffffffffffffffffffffff58p-56), acos(cf128.init(-0x1.000000000000000000000000008p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0xf.ffffffffffffffffffffffffff58p-56), acos(cf128.init(-0x1.000000000000000000000000008p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0xf.ffffffffffffffffffffffffff58p-56), acos(cf128.init(-0x1.000000000000000000000000008p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x3.fffffe0000017ffffec0000118p-140, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.ffffff000000bfffff6000008cp-1064, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x7.bffffc200002e7fffd9400021e8p-16376, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x0p+0), acos(cf128.init(0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52ap-76, 0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x8p-540, 0x8p-540), acos(cf128.init(0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196), acos(cf128.init(0x1p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(0x1.0000000000001p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc3608b617397f793p-124, 0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(0x1.0000000000001p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf128.init(0xb.504f333f9de61b045b0b9cbfbc98p-1052, 0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(0x1.0000000000001p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x2.bd732e69683dba8b0e0ccff66faep-16360, 0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(0x1.0000000000001p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(0x1.0000000000000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.fffffffffffffffep-120, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(0x1.0000000000000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.ffffffffffffffffp-1044, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(0x1.0000000000000002p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x7.bffffffffffffffc2p-16356, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(0x1.0000000000000002p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x1.6a09e667f3bcc908b2fb1366ea95p-56), acos(cf128.init(0x1.0000000000000000000000000001p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbbf0c5edd58p-96, 0x1.6a09e667f3bcc908b30663b61dd5p-56), acos(cf128.init(0x1.0000000000000000000000000001p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52ap-1020, 0x1.6a09e667f3bcc908b2fb1366ea95p-56), acos(cf128.init(0x1.0000000000000000000000000001p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f716036b19d65d9ap-16332, 0x1.6a09e667f3bcc908b2fb1366ea95p-56), acos(cf128.init(0x1.0000000000000000000000000001p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xf.ffffffffffffffffffffffffff58p-56), acos(cf128.init(0x1.000000000000000000000000008p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x7.fffffffffffffffffffffeffffp-100, 0x1.00000000000000000000001ffff5p-52), acos(cf128.init(0x1.000000000000000000000000008p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.ffffffffffffffffffffffffff8p-1024, 0xf.ffffffffffffffffffffffffff58p-56), acos(cf128.init(0x1.000000000000000000000000008p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0xf.7ffffffffffffffffffffffffe1p-16336, 0xf.ffffffffffffffffffffffffff58p-56), acos(cf128.init(0x1.000000000000000000000000008p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x0p+0), acos(cf128.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d312ec48f13672p+0, 0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x8p-540), acos(cf128.init(-0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196), acos(cf128.init(-0x1p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(-0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(-0x1.0000000000001p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(-0x1.0000000000001p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(-0x1.0000000000001p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(-0x1.0000000000000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(-0x1.0000000000000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(-0x1.0000000000000002p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(-0x1.0000000000000002p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x1.6a09e667f3bcc908b2fb1366ea95p-56), acos(cf128.init(-0x1.0000000000000000000000000001p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a285b48p+0, 0x1.6a09e667f3bcc908b30663b61dd5p-56), acos(cf128.init(-0x1.0000000000000000000000000001p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x1.6a09e667f3bcc908b2fb1366ea95p-56), acos(cf128.init(-0x1.0000000000000000000000000001p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x1.6a09e667f3bcc908b2fb1366ea95p-56), acos(cf128.init(-0x1.0000000000000000000000000001p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0xf.ffffffffffffffffffffffffff58p-56), acos(cf128.init(-0x1.000000000000000000000000008p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2d837p+0, 0x1.00000000000000000000001ffff5p-52), acos(cf128.init(-0x1.000000000000000000000000008p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0xf.ffffffffffffffffffffffffff58p-56), acos(cf128.init(-0x1.000000000000000000000000008p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0xf.ffffffffffffffffffffffffff58p-56), acos(cf128.init(-0x1.000000000000000000000000008p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(0x0p+0, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd252p-4), acos(cf128.init(0x0p+0, 0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(0x0p+0, 0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(0x0p+0, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd252p-4), acos(cf128.init(0x0p+0, -0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(0x0p+0, -0x1.000000000000000000000000008p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(-0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(-0x0p+0, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd252p-4), acos(cf128.init(-0x0p+0, 0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(-0x0p+0, 0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), acos(cf128.init(-0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), acos(cf128.init(-0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), acos(cf128.init(-0x0p+0, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd252p-4), acos(cf128.init(-0x0p+0, -0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), acos(cf128.init(-0x0p+0, -0x1.000000000000000000000000008p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x0p+0), acos(cf128.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(0x1.0000000000000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x1.6a09e667f3bcc908b2fb1366ea95p-56), acos(cf128.init(0x1.0000000000000000000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0xf.ffffffffffffffffffffffffff58p-56), acos(cf128.init(0x1.000000000000000000000000008p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x0p+0), acos(cf128.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(-0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(-0x1.0000000000000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x1.6a09e667f3bcc908b2fb1366ea95p-56), acos(cf128.init(-0x1.0000000000000000000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0xf.ffffffffffffffffffffffffff58p-56), acos(cf128.init(-0x1.000000000000000000000000008p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x0p+0), acos(cf128.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(0x1.0000000000000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x1.6a09e667f3bcc908b2fb1366ea95p-56), acos(cf128.init(0x1.0000000000000000000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xf.ffffffffffffffffffffffffff58p-56), acos(cf128.init(0x1.000000000000000000000000008p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x0p+0), acos(cf128.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), acos(cf128.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), acos(cf128.init(-0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), acos(cf128.init(-0x1.0000000000000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x1.6a09e667f3bcc908b2fb1366ea95p-56), acos(cf128.init(-0x1.0000000000000000000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0xf.ffffffffffffffffffffffffff58p-56), acos(cf128.init(-0x1.000000000000000000000000008p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb3da38ea6770d99ed8444d3ep+0, -0xe.1a1b256c9ae8a2ab14f0d352edcp-4), acos(cf128.init(0x2p-24, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb3da38ea6770d99ed8444d3ep+0, 0xe.1a1b256c9ae8a2ab14f0d352edcp-4), acos(cf128.init(0x2p-24, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb6ae4cb8a162397ab1e9b632p+0, -0xe.1a1b256c9ae8a2ab14f0d352edcp-4), acos(cf128.init(-0x2p-24, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb6ae4cb8a162397ab1e9b632p+0, 0xe.1a1b256c9ae8a2ab14f0d352edcp-4), acos(cf128.init(-0x2p-24, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.cc8532a60c33a43aa49edbb7484ep-12, -0x1.1c9e0143157395bb13651691b237p-12), acos(cf128.init(0xf.fffffp-4, 0x2p-24)));
    try std.testing.expectEqual(cf128.init(0x3.2422a2355b424598cf6f404047fcp+0, -0x1.1c9e0143157395bb13651691b237p-12), acos(cf128.init(-0xf.fffffp-4, 0x2p-24)));
    // try std.testing.expectEqual(cf128.init(0x1.cc8532a60c33a43aa49edbb7484ep-12, 0x1.1c9e0143157395bb13651691b237p-12), acos(cf128.init(0xf.fffffp-4, -0x2p-24)));
    try std.testing.expectEqual(cf128.init(0x3.2422a2355b424598cf6f404047fcp+0, 0x1.1c9e0143157395bb13651691b237p-12), acos(cf128.init(-0xf.fffffp-4, -0x2p-24)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0xf.8p-132, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0xf.8p-132, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0xf.8p-132, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0xf.8p-132, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, -0xa.f5ccbc6314268676dab4784efaf8p-120), acos(cf128.init(0xf.fffffp-4, 0xf.8p-132)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, -0xa.f5ccbc6314268676dab4784efaf8p-120), acos(cf128.init(-0xf.fffffp-4, 0xf.8p-132)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, 0xa.f5ccbc6314268676dab4784efaf8p-120), acos(cf128.init(0xf.fffffp-4, -0xf.8p-132)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, 0xa.f5ccbc6314268676dab4784efaf8p-120), acos(cf128.init(-0xf.fffffp-4, -0xf.8p-132)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, -0x0p+0), acos(cf128.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, -0x0p+0), acos(cf128.init(-0xf.fffffp-4, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, 0x0p+0), acos(cf128.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, 0x0p+0), acos(cf128.init(-0xf.fffffp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb37a5075286aab97bcc53425p+0, -0x7.b30b2bb1458dd80b69bb3ea8703cp-4), acos(cf128.init(0x2p-24, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb37a5075286aab97bcc53425p+0, 0x7.b30b2bb1458dd80b69bb3ea8703cp-4), acos(cf128.init(0x2p-24, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb70e352de0686781cd68cf4bp+0, -0x7.b30b2bb1458dd80b69bb3ea8703cp-4), acos(cf128.init(-0x2p-24, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb70e352de0686781cd68cf4bp+0, 0x7.b30b2bb1458dd80b69bb3ea8703cp-4), acos(cf128.init(-0x2p-24, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.0c152382d737e269a17f32481dd4p+0, -0x2.4f34e8b2065f6e9b77d03156134p-24), acos(cf128.init(0x8p-4, 0x2p-24)));
    // try std.testing.expectEqual(cf128.init(0x2.182a4705ae6b2669719a57e5e59cp+0, -0x2.4f34e8b2065f6e9b77d03156134p-24), acos(cf128.init(-0x8p-4, 0x2p-24)));
    // try std.testing.expectEqual(cf128.init(0x1.0c152382d737e269a17f32481dd4p+0, 0x2.4f34e8b2065f6e9b77d03156134p-24), acos(cf128.init(0x8p-4, -0x2p-24)));
    // try std.testing.expectEqual(cf128.init(0x2.182a4705ae6b2669719a57e5e59cp+0, 0x2.4f34e8b2065f6e9b77d03156134p-24), acos(cf128.init(-0x8p-4, -0x2p-24)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(0xf.8p-132, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(0xf.8p-132, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(-0xf.8p-132, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(-0xf.8p-132, -0x8p-4)));
    try std.testing.expectEqual(cf128.init(0x1.0c152382d73658465bb32e0f567bp+0, -0x1.1e5da0b63b1836ab88305d58a34cp-128), acos(cf128.init(0x8p-4, 0xf.8p-132)));
    // try std.testing.expectEqual(cf128.init(0x2.182a4705ae6cb08cb7665c1eacf6p+0, -0x1.1e5da0b63b1836ab88305d58a34cp-128), acos(cf128.init(-0x8p-4, 0xf.8p-132)));
    try std.testing.expectEqual(cf128.init(0x1.0c152382d73658465bb32e0f567bp+0, 0x1.1e5da0b63b1836ab88305d58a34cp-128), acos(cf128.init(0x8p-4, -0xf.8p-132)));
    // try std.testing.expectEqual(cf128.init(0x2.182a4705ae6cb08cb7665c1eacf6p+0, 0x1.1e5da0b63b1836ab88305d58a34cp-128), acos(cf128.init(-0x8p-4, -0xf.8p-132)));
    try std.testing.expectEqual(cf128.init(0x1.921fb34442d184698c376fc1ac63p+0, -0x2.000000000002aaaaaaaaaaa11112p-24), acos(cf128.init(0x2p-24, 0x2p-24)));
    try std.testing.expectEqual(cf128.init(0x1.921fb34442d184698c376fc1ac63p+0, 0x2.000000000002aaaaaaaaaaa11112p-24), acos(cf128.init(0x2p-24, -0x2p-24)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb74442d1846986e21a6c570ep+0, -0x2.000000000002aaaaaaaaaaa11112p-24), acos(cf128.init(-0x2p-24, 0x2p-24)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb74442d1846986e21a6c570ep+0, 0x2.000000000002aaaaaaaaaaa11112p-24), acos(cf128.init(-0x2p-24, -0x2p-24)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.fffffffffffeaaaaaaaaaaad1111p-24), acos(cf128.init(0xf.8p-132, 0x2p-24)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.fffffffffffeaaaaaaaaaaad1111p-24), acos(cf128.init(0xf.8p-132, -0x2p-24)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.fffffffffffeaaaaaaaaaaad1111p-24), acos(cf128.init(-0xf.8p-132, 0x2p-24)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.fffffffffffeaaaaaaaaaaad1111p-24), acos(cf128.init(-0xf.8p-132, -0x2p-24)));
    try std.testing.expectEqual(cf128.init(0x1.921fb34442d1846988376fc1ac63p+0, -0xf.80000000001f00000000005dp-132), acos(cf128.init(0x2p-24, 0xf.8p-132)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb74442d184698ae21a6c570ep+0, -0xf.80000000001f00000000005dp-132), acos(cf128.init(-0x2p-24, 0xf.8p-132)));
    try std.testing.expectEqual(cf128.init(0x1.921fb34442d1846988376fc1ac63p+0, 0xf.80000000001f00000000005dp-132), acos(cf128.init(0x2p-24, -0xf.8p-132)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb74442d184698ae21a6c570ep+0, 0xf.80000000001f00000000005dp-132), acos(cf128.init(-0x2p-24, -0xf.8p-132)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.fffffffffffeaaaaaaaaaaad1111p-24), acos(cf128.init(0x0p+0, 0x2p-24)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.fffffffffffeaaaaaaaaaaad1111p-24), acos(cf128.init(0x0p+0, -0x2p-24)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.fffffffffffeaaaaaaaaaaad1111p-24), acos(cf128.init(-0x0p+0, 0x2p-24)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.fffffffffffeaaaaaaaaaaad1111p-24), acos(cf128.init(-0x0p+0, -0x2p-24)));
    try std.testing.expectEqual(cf128.init(0x1.921fb34442d1846988376fc1ac63p+0, -0x0p+0), acos(cf128.init(0x2p-24, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb74442d184698ae21a6c570ep+0, -0x0p+0), acos(cf128.init(-0x2p-24, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb34442d1846988376fc1ac63p+0, 0x0p+0), acos(cf128.init(0x2p-24, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb74442d184698ae21a6c570ep+0, 0x0p+0), acos(cf128.init(-0x2p-24, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.8p-132), acos(cf128.init(0xf.8p-132, 0xf.8p-132)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.8p-132), acos(cf128.init(0xf.8p-132, -0xf.8p-132)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.8p-132), acos(cf128.init(-0xf.8p-132, 0xf.8p-132)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.8p-132), acos(cf128.init(-0xf.8p-132, -0xf.8p-132)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d179193a5985791b7p+0, -0xe.1a1b30bcea13660d8f99e8dd27fp-4), acos(cf128.init(0x1p-52, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d179193a53dd518066p+0, -0xe.1a1b256c9add525bdc090dd47288p-4), acos(cf128.init(0x1p-52, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d179193a5985791b43p+0, -0xe.1a1b30bcea130b8b15ffebedf4f8p-4), acos(cf128.init(0x1p-52, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d179193a53dd518066p+0, 0xe.1a1b256c9add525bdc090dd47288p-4), acos(cf128.init(0x1p-52, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d179193a5985791b7p+0, 0xe.1a1b30bcea13660d8f99e8dd27fp-4), acos(cf128.init(0x1p-52, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d179193a5985791b43p+0, 0xe.1a1b30bcea130b8b15ffebedf4f8p-4), acos(cf128.init(0x1p-52, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18fb9d8c004b4e8p+0, -0xe.1a1b30bcea13660d8f99e8dd27fp-4), acos(cf128.init(-0x1p-52, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18fb9d8c5acdc830ap+0, -0xe.1a1b256c9add525bdc090dd47288p-4), acos(cf128.init(-0x1p-52, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18fb9d8c004b4e82ep+0, -0xe.1a1b30bcea130b8b15ffebedf4f8p-4), acos(cf128.init(-0x1p-52, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18fb9d8c5acdc830ap+0, 0xe.1a1b256c9add525bdc090dd47288p-4), acos(cf128.init(-0x1p-52, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18fb9d8c004b4e8p+0, 0xe.1a1b30bcea13660d8f99e8dd27fp-4), acos(cf128.init(-0x1p-52, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18fb9d8c004b4e82ep+0, 0xe.1a1b30bcea130b8b15ffebedf4f8p-4), acos(cf128.init(-0x1p-52, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf128.init(0x3.fffffffffffffaaaaaaaaaaaaa98p-28, -0x4.0000000000000555555555555544p-28), acos(cf128.init(0x1p+0, 0x1p-52)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadfeb7beb01bd883p-12, -0xb.504f3613b1b4264a74c37cbad488p-44), acos(cf128.init(0xf.fffffp-4, 0x1p-52)));
    // try std.testing.expectEqual(cf128.init(0x5.168c51aa2115797c56cd44c704cp-28, -0x3.2504dde4b1a36bfbaac38f7dc6cep-28), acos(cf128.init(0xf.ffffffffffff8p-4, 0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d411528332e0e4301b2p+0, -0xb.504f3613b1b4264a74c37cbad488p-44), acos(cf128.init(-0xf.fffffp-4, 0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d31319df8358c6p+0, -0x4.0000000000000555555555555544p-28), acos(cf128.init(-0x1p+0, 0x1p-52)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a371cddee3101c1f268969cp+0, -0x3.2504dde4b1a36bfbaac38f7dc6cep-28), acos(cf128.init(-0xf.ffffffffffff8p-4, 0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x3.fffffffffffffaaaaaaaaaaaaa98p-28, 0x4.0000000000000555555555555544p-28), acos(cf128.init(0x1p+0, -0x1p-52)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadfeb7beb01bd883p-12, 0xb.504f3613b1b4264a74c37cbad488p-44), acos(cf128.init(0xf.fffffp-4, -0x1p-52)));
    // try std.testing.expectEqual(cf128.init(0x5.168c51aa2115797c56cd44c704cp-28, 0x3.2504dde4b1a36bfbaac38f7dc6cep-28), acos(cf128.init(0xf.ffffffffffff8p-4, -0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d411528332e0e4301b2p+0, 0xb.504f3613b1b4264a74c37cbad488p-44), acos(cf128.init(-0xf.fffffp-4, -0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d31319df8358c6p+0, 0x4.0000000000000555555555555544p-28), acos(cf128.init(-0x1p+0, -0x1p-52)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a371cddee3101c1f268969cp+0, 0x3.2504dde4b1a36bfbaac38f7dc6cep-28), acos(cf128.init(-0xf.ffffffffffff8p-4, -0x1p-52)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0x8p-152, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0xf.8p-1028, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0xf.8p-1028, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(0xf.8p-1028, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(0x8p-152, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0xf.8p-1028, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0xf.8p-1028, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(0xf.8p-1028, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0x8p-152, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(-0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0xf.8p-1028, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0xf.8p-1028, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(-0xf.8p-1028, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(-0x8p-152, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0xf.8p-1028, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0xf.8p-1028, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(-0xf.8p-1028, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52ap-76, -0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x0p+0), acos(cf128.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0xf.bf7df5c6a788f0bd8bac8066d4f8p-516, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-516), acos(cf128.init(0x1p+0, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, -0x5.a8279b09d8da13da3f54e34189ccp-140), acos(cf128.init(0xf.fffffp-4, 0x8p-152)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, -0x0p+0), acos(cf128.init(0xf.fffffp-4, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, -0xa.f5ccbc6314268676dab4784efaf8p-1016), acos(cf128.init(0xf.fffffp-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x4.00000000000002aaaaaaaaaaaabp-28, -0x2.000000000000040000000000000cp-124), acos(cf128.init(0xf.ffffffffffff8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x4.00000000000002aaaaaaaaaaaabp-28, -0x0p+0), acos(cf128.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x4.00000000000002aaaaaaaaaaaabp-28, -0x3.e0000000000007c0000000000018p-1000), acos(cf128.init(0xf.ffffffffffff8p-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, -0x5.a8279b09d8da13da3f54e34189ccp-140), acos(cf128.init(-0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, -0x0p+0), acos(cf128.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, -0xa.f5ccbc6314268676dab4784efaf8p-1016), acos(cf128.init(-0xf.fffffp-4, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d312ec48f13672p+0, -0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x0p+0), acos(cf128.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-516), acos(cf128.init(-0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d313195f8358c6p+0, -0x2.000000000000040000000000000cp-124), acos(cf128.init(-0xf.ffffffffffff8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d313195f8358c6p+0, -0x0p+0), acos(cf128.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d313195f8358c6p+0, -0x3.e0000000000007c0000000000018p-1000), acos(cf128.init(-0xf.ffffffffffff8p-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x0p+0), acos(cf128.init(0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52ap-76, 0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0xf.bf7df5c6a788f0bd8bac8066d4f8p-516, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-516), acos(cf128.init(0x1p+0, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, 0x0p+0), acos(cf128.init(0xf.fffffp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, 0x5.a8279b09d8da13da3f54e34189ccp-140), acos(cf128.init(0xf.fffffp-4, -0x8p-152)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, 0xa.f5ccbc6314268676dab4784efaf8p-1016), acos(cf128.init(0xf.fffffp-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x4.00000000000002aaaaaaaaaaaabp-28, 0x0p+0), acos(cf128.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x4.00000000000002aaaaaaaaaaaabp-28, 0x2.000000000000040000000000000cp-124), acos(cf128.init(0xf.ffffffffffff8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x4.00000000000002aaaaaaaaaaaabp-28, 0x3.e0000000000007c0000000000018p-1000), acos(cf128.init(0xf.ffffffffffff8p-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, 0x0p+0), acos(cf128.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, 0x5.a8279b09d8da13da3f54e34189ccp-140), acos(cf128.init(-0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, 0xa.f5ccbc6314268676dab4784efaf8p-1016), acos(cf128.init(-0xf.fffffp-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x0p+0), acos(cf128.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d312ec48f13672p+0, 0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-516), acos(cf128.init(-0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d313195f8358c6p+0, 0x0p+0), acos(cf128.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d313195f8358c6p+0, 0x2.000000000000040000000000000cp-124), acos(cf128.init(-0xf.ffffffffffff8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d313195f8358c6p+0, 0x3.e0000000000007c0000000000018p-1000), acos(cf128.init(-0xf.ffffffffffff8p-4, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x0p+0), acos(cf128.init(0x1p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, -0x0p+0), acos(cf128.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x4.00000000000002aaaaaaaaaaaabp-28, -0x0p+0), acos(cf128.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, -0x0p+0), acos(cf128.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x0p+0), acos(cf128.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d313195f8358c6p+0, -0x0p+0), acos(cf128.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x0p+0), acos(cf128.init(0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, 0x0p+0), acos(cf128.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x4.00000000000002aaaaaaaaaaaabp-28, 0x0p+0), acos(cf128.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, 0x0p+0), acos(cf128.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x0p+0), acos(cf128.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d313195f8358c6p+0, 0x0p+0), acos(cf128.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d17619f6a9e520151ep+0, -0x7.b30b2bb14582652f810812a5a5f8p-4), acos(cf128.init(0x1p-52, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d17619f6a9e520151ep+0, 0x7.b30b2bb14582652f810812a5a5f8p-4), acos(cf128.init(0x1p-52, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d192b91c6fa50dee53p+0, -0x7.b30b2bb14582652f810812a5a5f8p-4), acos(cf128.init(-0x1p-52, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d192b91c6fa50dee53p+0, 0x7.b30b2bb14582652f810812a5a5f8p-4), acos(cf128.init(-0x1p-52, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.0c152382d73658465bb32e0f56ddp+0, -0x1.279a74590331c4d218f81e4afaa2p-52), acos(cf128.init(0x8p-4, 0x1p-52)));
    // try std.testing.expectEqual(cf128.init(0x2.182a4705ae6cb08cb7665c1eac94p+0, -0x1.279a74590331c4d218f81e4afaa2p-52), acos(cf128.init(-0x8p-4, 0x1p-52)));
    // try std.testing.expectEqual(cf128.init(0x1.0c152382d73658465bb32e0f56ddp+0, 0x1.279a74590331c4d218f81e4afaa2p-52), acos(cf128.init(0x8p-4, -0x1p-52)));
    // try std.testing.expectEqual(cf128.init(0x2.182a4705ae6cb08cb7665c1eac94p+0, 0x1.279a74590331c4d218f81e4afaa2p-52), acos(cf128.init(-0x8p-4, -0x1p-52)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(0x8p-152, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(0x0p+0, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(0xf.8p-1028, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(0x8p-152, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(0x0p+0, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(0xf.8p-1028, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(-0x0p+0, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(-0x8p-152, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(-0xf.8p-1028, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(-0x0p+0, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(-0x8p-152, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(-0xf.8p-1028, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.0c152382d73658465bb32e0f567bp+0, -0x9.3cd3a2c8198e2690c7c0f257d928p-152), acos(cf128.init(0x8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.0c152382d73658465bb32e0f567bp+0, -0x0p+0), acos(cf128.init(0x8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.0c152382d73658465bb32e0f567bp+0, -0x1.1e5da0b63b1836ab88305d58a34cp-1024), acos(cf128.init(0x8p-4, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(0x2.182a4705ae6cb08cb7665c1eacf6p+0, -0x9.3cd3a2c8198e2690c7c0f257d928p-152), acos(cf128.init(-0x8p-4, 0x8p-152)));
    // try std.testing.expectEqual(cf128.init(0x2.182a4705ae6cb08cb7665c1eacf6p+0, -0x0p+0), acos(cf128.init(-0x8p-4, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.182a4705ae6cb08cb7665c1eacf6p+0, -0x1.1e5da0b63b1836ab88305d58a34cp-1024), acos(cf128.init(-0x8p-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.0c152382d73658465bb32e0f567bp+0, 0x0p+0), acos(cf128.init(0x8p-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.0c152382d73658465bb32e0f567bp+0, 0x9.3cd3a2c8198e2690c7c0f257d928p-152), acos(cf128.init(0x8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.0c152382d73658465bb32e0f567bp+0, 0x1.1e5da0b63b1836ab88305d58a34cp-1024), acos(cf128.init(0x8p-4, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(0x2.182a4705ae6cb08cb7665c1eacf6p+0, 0x0p+0), acos(cf128.init(-0x8p-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.182a4705ae6cb08cb7665c1eacf6p+0, 0x9.3cd3a2c8198e2690c7c0f257d928p-152), acos(cf128.init(-0x8p-4, -0x8p-152)));
    // try std.testing.expectEqual(cf128.init(0x2.182a4705ae6cb08cb7665c1eacf6p+0, 0x1.1e5da0b63b1836ab88305d58a34cp-1024), acos(cf128.init(-0x8p-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d17469898cc51701b8p+0, -0x1.0000000000000000000000000055p-52), acos(cf128.init(0x1p-52, 0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d17469898cc51701b8p+0, 0x1.0000000000000000000000000055p-52), acos(cf128.init(0x1p-52, -0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d19469898cc51701b8p+0, -0x1.0000000000000000000000000055p-52), acos(cf128.init(-0x1p-52, 0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d19469898cc51701b8p+0, 0x1.0000000000000000000000000055p-52), acos(cf128.init(-0x1p-52, -0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.fffffffffffffffffffffffffd58p-56), acos(cf128.init(0x8p-152, 0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.fffffffffffffffffffffffffd58p-56), acos(cf128.init(0x0p+0, 0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.fffffffffffffffffffffffffd58p-56), acos(cf128.init(0xf.8p-1028, 0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.fffffffffffffffffffffffffd58p-56), acos(cf128.init(0x8p-152, -0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.fffffffffffffffffffffffffd58p-56), acos(cf128.init(0x0p+0, -0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.fffffffffffffffffffffffffd58p-56), acos(cf128.init(0xf.8p-1028, -0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.fffffffffffffffffffffffffd58p-56), acos(cf128.init(-0x0p+0, 0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.fffffffffffffffffffffffffd58p-56), acos(cf128.init(-0x8p-152, 0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.fffffffffffffffffffffffffd58p-56), acos(cf128.init(-0xf.8p-1028, 0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.fffffffffffffffffffffffffd58p-56), acos(cf128.init(-0x0p+0, -0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.fffffffffffffffffffffffffd58p-56), acos(cf128.init(-0x8p-152, -0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.fffffffffffffffffffffffffd58p-56), acos(cf128.init(-0xf.8p-1028, -0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d17469898cc51701b8p+0, -0x8.00000000000000000000000004p-152), acos(cf128.init(0x1p-52, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d17469898cc51701b8p+0, -0x0p+0), acos(cf128.init(0x1p-52, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d17469898cc51701b8p+0, -0xf.80000000000000000000000007cp-1028), acos(cf128.init(0x1p-52, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d19469898cc51701b8p+0, -0x8.00000000000000000000000004p-152), acos(cf128.init(-0x1p-52, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d19469898cc51701b8p+0, -0x0p+0), acos(cf128.init(-0x1p-52, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d19469898cc51701b8p+0, -0xf.80000000000000000000000007cp-1028), acos(cf128.init(-0x1p-52, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d17469898cc51701b8p+0, 0x0p+0), acos(cf128.init(0x1p-52, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d17469898cc51701b8p+0, 0x8.00000000000000000000000004p-152), acos(cf128.init(0x1p-52, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d17469898cc51701b8p+0, 0xf.80000000000000000000000007cp-1028), acos(cf128.init(0x1p-52, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d19469898cc51701b8p+0, 0x0p+0), acos(cf128.init(-0x1p-52, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d19469898cc51701b8p+0, 0x8.00000000000000000000000004p-152), acos(cf128.init(-0x1p-52, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d19469898cc51701b8p+0, 0xf.80000000000000000000000007cp-1028), acos(cf128.init(-0x1p-52, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.fffffffffffffffffffffffffd58p-56), acos(cf128.init(0x0p+0, 0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.fffffffffffffffffffffffffd58p-56), acos(cf128.init(0x0p+0, -0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.fffffffffffffffffffffffffd58p-56), acos(cf128.init(-0x0p+0, 0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.fffffffffffffffffffffffffd58p-56), acos(cf128.init(-0x0p+0, -0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d17469898cc51701b8p+0, -0x0p+0), acos(cf128.init(0x1p-52, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d19469898cc51701b8p+0, -0x0p+0), acos(cf128.init(-0x1p-52, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d17469898cc51701b8p+0, 0x0p+0), acos(cf128.init(0x1p-52, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d19469898cc51701b8p+0, 0x0p+0), acos(cf128.init(-0x1p-52, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x8p-152), acos(cf128.init(0x8p-152, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), acos(cf128.init(0x8p-152, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.8p-1028), acos(cf128.init(0x8p-152, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x8p-152), acos(cf128.init(0x0p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), acos(cf128.init(0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.8p-1028), acos(cf128.init(0x0p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x8p-152), acos(cf128.init(0xf.8p-1028, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), acos(cf128.init(0xf.8p-1028, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.8p-1028), acos(cf128.init(0xf.8p-1028, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), acos(cf128.init(0x8p-152, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x8p-152), acos(cf128.init(0x8p-152, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.8p-1028), acos(cf128.init(0x8p-152, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), acos(cf128.init(0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x8p-152), acos(cf128.init(0x0p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.8p-1028), acos(cf128.init(0x0p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), acos(cf128.init(0xf.8p-1028, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x8p-152), acos(cf128.init(0xf.8p-1028, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.8p-1028), acos(cf128.init(0xf.8p-1028, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x8p-152), acos(cf128.init(-0x0p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), acos(cf128.init(-0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.8p-1028), acos(cf128.init(-0x0p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x8p-152), acos(cf128.init(-0x8p-152, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), acos(cf128.init(-0x8p-152, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.8p-1028), acos(cf128.init(-0x8p-152, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x8p-152), acos(cf128.init(-0xf.8p-1028, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), acos(cf128.init(-0xf.8p-1028, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.8p-1028), acos(cf128.init(-0xf.8p-1028, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), acos(cf128.init(-0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x8p-152), acos(cf128.init(-0x0p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.8p-1028), acos(cf128.init(-0x0p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), acos(cf128.init(-0x8p-152, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x8p-152), acos(cf128.init(-0x8p-152, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.8p-1028), acos(cf128.init(-0x8p-152, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), acos(cf128.init(-0xf.8p-1028, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x8p-152), acos(cf128.init(-0xf.8p-1028, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.8p-1028), acos(cf128.init(-0xf.8p-1028, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d184681f82deaf0dfbp+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x2p-64, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d184681f82ddfa0908p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0x2p-64, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d184681f82deaf0dfbp+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(0x2p-64, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d184681f82deaf0dfbp+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(0x2p-64, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d184681f82ddfa0908p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0x2p-64, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d184681f82deaf0dfbp+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x2p-64, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d184681f82deaf0dfbp+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(0x2p-64, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d184681f82deaf0dfbp+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(0x2p-64, -0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d1846af396ab7ef575p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x2p-64, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d1846af396ac33fa68p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0x2p-64, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d1846af396ab7ef575p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(-0x2p-64, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d1846af396ab7ef575p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(-0x2p-64, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d1846af396ac33fa68p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0x2p-64, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d1846af396ab7ef575p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x2p-64, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d1846af396ab7ef575p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(-0x2p-64, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d1846af396ab7ef575p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(-0x2p-64, -0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc90876a417aaeca1p-32, -0x1.6a09e667f3bcc908ef520f22e88ap-32), acos(cf128.init(0x1p+0, 0x2p-64)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17682a372a33p-12, -0x1.6a09e6c2763684f68fd483cb6f4ep-52), acos(cf128.init(0xf.fffffp-4, 0x2p-64)));
    // try std.testing.expectEqual(cf128.init(0x4.000007ffffd802abfa9a9d42bb48p-28, -0x7.fffff00000700ffbe00ad75a88ccp-40), acos(cf128.init(0xf.ffffffffffff8p-4, 0x2p-64)));
    // try std.testing.expectEqual(cf128.init(0x1.cc8532af1b6fbf5296ead44f4df2p-32, -0x1.1c9e00de9cc05377aa157a778caep-32), acos(cf128.init(0xf.fffffffffffffffp-4, 0x2p-64)));
    // try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d41152836022203cc46p+0, -0x1.6a09e6c2763684f68fd483cb6f4ep-52), acos(cf128.init(-0xf.fffffp-4, 0x2p-64)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a871b99226b1f5cc1258cccp+0, -0x1.6a09e667f3bcc908ef520f22e88ap-32), acos(cf128.init(-0x1p+0, 0x2p-64)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a4885a288d315995f6e59c6p+0, -0x7.fffff00000700ffbe00ad75a88ccp-40), acos(cf128.init(-0xf.ffffffffffff8p-4, 0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a86b91dd623f7a9cadb6c86p+0, -0x1.1c9e00de9cc05377aa157a778caep-32), acos(cf128.init(-0xf.fffffffffffffffp-4, 0x2p-64)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc90876a417aaeca1p-32, 0x1.6a09e667f3bcc908ef520f22e88ap-32), acos(cf128.init(0x1p+0, -0x2p-64)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17682a372a33p-12, 0x1.6a09e6c2763684f68fd483cb6f4ep-52), acos(cf128.init(0xf.fffffp-4, -0x2p-64)));
    // try std.testing.expectEqual(cf128.init(0x4.000007ffffd802abfa9a9d42bb48p-28, 0x7.fffff00000700ffbe00ad75a88ccp-40), acos(cf128.init(0xf.ffffffffffff8p-4, -0x2p-64)));
    // try std.testing.expectEqual(cf128.init(0x1.cc8532af1b6fbf5296ead44f4df2p-32, 0x1.1c9e00de9cc05377aa157a778caep-32), acos(cf128.init(0xf.fffffffffffffffp-4, -0x2p-64)));
    // try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d41152836022203cc46p+0, 0x1.6a09e6c2763684f68fd483cb6f4ep-52), acos(cf128.init(-0xf.fffffp-4, -0x2p-64)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a871b99226b1f5cc1258cccp+0, 0x1.6a09e667f3bcc908ef520f22e88ap-32), acos(cf128.init(-0x1p+0, -0x2p-64)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a4885a288d315995f6e59c6p+0, 0x7.fffff00000700ffbe00ad75a88ccp-40), acos(cf128.init(-0xf.ffffffffffff8p-4, -0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a86b91dd623f7a9cadb6c86p+0, 0x1.1c9e00de9cc05377aa157a778caep-32), acos(cf128.init(-0xf.fffffffffffffffp-4, -0x2p-64)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0x8p-152, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(0x8p-152, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(0x0p+0, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0x4p-1076, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(0x4p-1076, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(0x4p-1076, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0xf.8p-16388, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0xf.8p-16388, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(0xf.8p-16388, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(0xf.8p-16388, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(0x8p-152, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(0x8p-152, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(0x0p+0, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0x4p-1076, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x4p-1076, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(0x4p-1076, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(0x4p-1076, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0xf.8p-16388, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0xf.8p-16388, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(0xf.8p-16388, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(0xf.8p-16388, -0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(-0x0p+0, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0x8p-152, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(-0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(-0x8p-152, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0x4p-1076, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(-0x4p-1076, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(-0x4p-1076, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0xf.8p-16388, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0xf.8p-16388, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(-0xf.8p-16388, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(-0xf.8p-16388, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(-0x0p+0, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(-0x8p-152, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(-0x8p-152, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0x4p-1076, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x4p-1076, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(-0x4p-1076, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(-0x4p-1076, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0xf.8p-16388, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0xf.8p-16388, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(-0xf.8p-16388, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(-0xf.8p-16388, -0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52ap-76, -0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x0p+0), acos(cf128.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x8p-540, -0x8p-540), acos(cf128.init(0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196), acos(cf128.init(0x1p+0, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, -0x5.a8279b09d8da13da3f54e34189ccp-140), acos(cf128.init(0xf.fffffp-4, 0x8p-152)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, -0x0p+0), acos(cf128.init(0xf.fffffp-4, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, -0x2.d413cd84ec6d09ed1faa71a0c4e6p-1064), acos(cf128.init(0xf.fffffp-4, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, -0xa.f5ccbc6314268676dab4784efaf8p-16376), acos(cf128.init(0xf.fffffp-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x4.00000000000002aaaaaaaaaaaabp-28, -0x2.000000000000040000000000000cp-124), acos(cf128.init(0xf.ffffffffffff8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x4.00000000000002aaaaaaaaaaaabp-28, -0x0p+0), acos(cf128.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x4.00000000000002aaaaaaaaaaaabp-28, -0x1.0000000000000200000000000006p-1048), acos(cf128.init(0xf.ffffffffffff8p-4, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x4.00000000000002aaaaaaaaaaaabp-28, -0x3.e0000000000007c0000000000018p-16360), acos(cf128.init(0xf.ffffffffffff8p-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc908d1269144e99p-32, -0x5.a827999fcef3242435f634039e14p-120), acos(cf128.init(0xf.fffffffffffffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc908d1269144e99p-32, -0x0p+0), acos(cf128.init(0xf.fffffffffffffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc908d1269144e99p-32, -0x2.d413cccfe77992121afb1a01cf0ap-1044), acos(cf128.init(0xf.fffffffffffffffp-4, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc908d1269144e99p-32, -0xa.f5ccb9a5a0f71606288d04c70248p-16356), acos(cf128.init(0xf.fffffffffffffffp-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, -0x5.a8279b09d8da13da3f54e34189ccp-140), acos(cf128.init(-0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, -0x0p+0), acos(cf128.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, -0x2.d413cd84ec6d09ed1faa71a0c4e6p-1064), acos(cf128.init(-0xf.fffffp-4, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, -0xa.f5ccbc6314268676dab4784efaf8p-16376), acos(cf128.init(-0xf.fffffp-4, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d312ec48f13672p+0, -0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x0p+0), acos(cf128.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x8p-540), acos(cf128.init(-0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196), acos(cf128.init(-0x1p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d313195f8358c6p+0, -0x2.000000000000040000000000000cp-124), acos(cf128.init(-0xf.ffffffffffff8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d313195f8358c6p+0, -0x0p+0), acos(cf128.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d313195f8358c6p+0, -0x1.0000000000000200000000000006p-1048), acos(cf128.init(-0xf.ffffffffffff8p-4, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d313195f8358c6p+0, -0x3.e0000000000007c0000000000018p-16360), acos(cf128.init(-0xf.ffffffffffff8p-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a871b99226b1f5cc125324ap+0, -0x5.a827999fcef3242435f634039e14p-120), acos(cf128.init(-0xf.fffffffffffffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a871b99226b1f5cc125324ap+0, -0x0p+0), acos(cf128.init(-0xf.fffffffffffffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a871b99226b1f5cc125324ap+0, -0x2.d413cccfe77992121afb1a01cf0ap-1044), acos(cf128.init(-0xf.fffffffffffffffp-4, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a871b99226b1f5cc125324ap+0, -0xa.f5ccb9a5a0f71606288d04c70248p-16356), acos(cf128.init(-0xf.fffffffffffffffp-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x0p+0), acos(cf128.init(0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52ap-76, 0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x8p-540, 0x8p-540), acos(cf128.init(0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196), acos(cf128.init(0x1p+0, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, 0x0p+0), acos(cf128.init(0xf.fffffp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, 0x5.a8279b09d8da13da3f54e34189ccp-140), acos(cf128.init(0xf.fffffp-4, -0x8p-152)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, 0x2.d413cd84ec6d09ed1faa71a0c4e6p-1064), acos(cf128.init(0xf.fffffp-4, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, 0xa.f5ccbc6314268676dab4784efaf8p-16376), acos(cf128.init(0xf.fffffp-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x4.00000000000002aaaaaaaaaaaabp-28, 0x0p+0), acos(cf128.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x4.00000000000002aaaaaaaaaaaabp-28, 0x2.000000000000040000000000000cp-124), acos(cf128.init(0xf.ffffffffffff8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x4.00000000000002aaaaaaaaaaaabp-28, 0x1.0000000000000200000000000006p-1048), acos(cf128.init(0xf.ffffffffffff8p-4, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x4.00000000000002aaaaaaaaaaaabp-28, 0x3.e0000000000007c0000000000018p-16360), acos(cf128.init(0xf.ffffffffffff8p-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc908d1269144e99p-32, 0x0p+0), acos(cf128.init(0xf.fffffffffffffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc908d1269144e99p-32, 0x5.a827999fcef3242435f634039e14p-120), acos(cf128.init(0xf.fffffffffffffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc908d1269144e99p-32, 0x2.d413cccfe77992121afb1a01cf0ap-1044), acos(cf128.init(0xf.fffffffffffffffp-4, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc908d1269144e99p-32, 0xa.f5ccb9a5a0f71606288d04c70248p-16356), acos(cf128.init(0xf.fffffffffffffffp-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, 0x0p+0), acos(cf128.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, 0x5.a8279b09d8da13da3f54e34189ccp-140), acos(cf128.init(-0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, 0x2.d413cd84ec6d09ed1faa71a0c4e6p-1064), acos(cf128.init(-0xf.fffffp-4, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, 0xa.f5ccbc6314268676dab4784efaf8p-16376), acos(cf128.init(-0xf.fffffp-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x0p+0), acos(cf128.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d312ec48f13672p+0, 0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x8p-540), acos(cf128.init(-0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196), acos(cf128.init(-0x1p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d313195f8358c6p+0, 0x0p+0), acos(cf128.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d313195f8358c6p+0, 0x2.000000000000040000000000000cp-124), acos(cf128.init(-0xf.ffffffffffff8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d313195f8358c6p+0, 0x1.0000000000000200000000000006p-1048), acos(cf128.init(-0xf.ffffffffffff8p-4, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d313195f8358c6p+0, 0x3.e0000000000007c0000000000018p-16360), acos(cf128.init(-0xf.ffffffffffff8p-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a871b99226b1f5cc125324ap+0, 0x0p+0), acos(cf128.init(-0xf.fffffffffffffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a871b99226b1f5cc125324ap+0, 0x5.a827999fcef3242435f634039e14p-120), acos(cf128.init(-0xf.fffffffffffffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a871b99226b1f5cc125324ap+0, 0x2.d413cccfe77992121afb1a01cf0ap-1044), acos(cf128.init(-0xf.fffffffffffffffp-4, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a871b99226b1f5cc125324ap+0, 0xa.f5ccb9a5a0f71606288d04c70248p-16356), acos(cf128.init(-0xf.fffffffffffffffp-4, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(0x0p+0, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(0x0p+0, -0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(-0x0p+0, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(-0x0p+0, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x0p+0), acos(cf128.init(0x1p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, -0x0p+0), acos(cf128.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x4.00000000000002aaaaaaaaaaaabp-28, -0x0p+0), acos(cf128.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc908d1269144e99p-32, -0x0p+0), acos(cf128.init(0xf.fffffffffffffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, -0x0p+0), acos(cf128.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x0p+0), acos(cf128.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d313195f8358c6p+0, -0x0p+0), acos(cf128.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a871b99226b1f5cc125324ap+0, -0x0p+0), acos(cf128.init(-0xf.fffffffffffffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x0p+0), acos(cf128.init(0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, 0x0p+0), acos(cf128.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x4.00000000000002aaaaaaaaaaaabp-28, 0x0p+0), acos(cf128.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc908d1269144e99p-32, 0x0p+0), acos(cf128.init(0xf.fffffffffffffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, 0x0p+0), acos(cf128.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x0p+0), acos(cf128.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d313195f8358c6p+0, 0x0p+0), acos(cf128.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a871b99226b1f5cc125324ap+0, 0x0p+0), acos(cf128.init(-0xf.fffffffffffffffp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18467bf9a68bb02dbp+0, -0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(0x2p-64, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18467bf9a68bb02dbp+0, 0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(0x2p-64, -0x8p-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d1846b537f21730096p+0, -0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(-0x2p-64, 0x8p-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d1846b537f21730096p+0, 0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(-0x2p-64, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.0c152382d73658465bb32e0f567bp+0, -0x2.4f34e8b2066389a431f03c95f64ap-64), acos(cf128.init(0x8p-4, 0x2p-64)));
    // try std.testing.expectEqual(cf128.init(0x2.182a4705ae6cb08cb7665c1eacf6p+0, -0x2.4f34e8b2066389a431f03c95f64ap-64), acos(cf128.init(-0x8p-4, 0x2p-64)));
    // try std.testing.expectEqual(cf128.init(0x1.0c152382d73658465bb32e0f567bp+0, 0x2.4f34e8b2066389a431f03c95f64ap-64), acos(cf128.init(0x8p-4, -0x2p-64)));
    // try std.testing.expectEqual(cf128.init(0x2.182a4705ae6cb08cb7665c1eacf6p+0, 0x2.4f34e8b2066389a431f03c95f64ap-64), acos(cf128.init(-0x8p-4, -0x2p-64)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(0x8p-152, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(0x0p+0, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(0x4p-1076, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(0xf.8p-16388, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(0x8p-152, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(0x0p+0, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(0x4p-1076, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(0xf.8p-16388, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(-0x0p+0, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(-0x8p-152, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(-0x4p-1076, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(-0xf.8p-16388, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(-0x0p+0, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(-0x8p-152, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(-0x4p-1076, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(-0xf.8p-16388, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.0c152382d73658465bb32e0f567bp+0, -0x9.3cd3a2c8198e2690c7c0f257d928p-152), acos(cf128.init(0x8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.0c152382d73658465bb32e0f567bp+0, -0x0p+0), acos(cf128.init(0x8p-4, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.0c152382d73658465bb32e0f567bp+0, -0x4.9e69d1640cc7134863e0792bec94p-1076), acos(cf128.init(0x8p-4, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1.0c152382d73658465bb32e0f567bp+0, -0x1.1e5da0b63b1836ab88305d58a34cp-16384), acos(cf128.init(0x8p-4, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x2.182a4705ae6cb08cb7665c1eacf6p+0, -0x9.3cd3a2c8198e2690c7c0f257d928p-152), acos(cf128.init(-0x8p-4, 0x8p-152)));
    // try std.testing.expectEqual(cf128.init(0x2.182a4705ae6cb08cb7665c1eacf6p+0, -0x0p+0), acos(cf128.init(-0x8p-4, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.182a4705ae6cb08cb7665c1eacf6p+0, -0x4.9e69d1640cc7134863e0792bec94p-1076), acos(cf128.init(-0x8p-4, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x2.182a4705ae6cb08cb7665c1eacf6p+0, -0x1.1e5da0b63b1836ab88305d58a34cp-16384), acos(cf128.init(-0x8p-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.0c152382d73658465bb32e0f567bp+0, 0x0p+0), acos(cf128.init(0x8p-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.0c152382d73658465bb32e0f567bp+0, 0x9.3cd3a2c8198e2690c7c0f257d928p-152), acos(cf128.init(0x8p-4, -0x8p-152)));
    // try std.testing.expectEqual(cf128.init(0x1.0c152382d73658465bb32e0f567bp+0, 0x4.9e69d1640cc7134863e0792bec94p-1076), acos(cf128.init(0x8p-4, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1.0c152382d73658465bb32e0f567bp+0, 0x1.1e5da0b63b1836ab88305d58a34cp-16384), acos(cf128.init(0x8p-4, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x2.182a4705ae6cb08cb7665c1eacf6p+0, 0x0p+0), acos(cf128.init(-0x8p-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.182a4705ae6cb08cb7665c1eacf6p+0, 0x9.3cd3a2c8198e2690c7c0f257d928p-152), acos(cf128.init(-0x8p-4, -0x8p-152)));
    // try std.testing.expectEqual(cf128.init(0x2.182a4705ae6cb08cb7665c1eacf6p+0, 0x4.9e69d1640cc7134863e0792bec94p-1076), acos(cf128.init(-0x8p-4, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x2.182a4705ae6cb08cb7665c1eacf6p+0, 0x1.1e5da0b63b1836ab88305d58a34cp-16384), acos(cf128.init(-0x8p-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18467898cc51701b8p+0, -0x2p-64), acos(cf128.init(0x2p-64, 0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18467898cc51701b8p+0, 0x2p-64), acos(cf128.init(0x2p-64, -0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d1846b898cc51701b8p+0, -0x2p-64), acos(cf128.init(-0x2p-64, 0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d1846b898cc51701b8p+0, 0x2p-64), acos(cf128.init(-0x2p-64, -0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x2p-64), acos(cf128.init(0x8p-152, 0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x2p-64), acos(cf128.init(0x0p+0, 0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x2p-64), acos(cf128.init(0x4p-1076, 0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x2p-64), acos(cf128.init(0xf.8p-16388, 0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x2p-64), acos(cf128.init(0x8p-152, -0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x2p-64), acos(cf128.init(0x0p+0, -0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x2p-64), acos(cf128.init(0x4p-1076, -0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x2p-64), acos(cf128.init(0xf.8p-16388, -0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x2p-64), acos(cf128.init(-0x0p+0, 0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x2p-64), acos(cf128.init(-0x8p-152, 0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x2p-64), acos(cf128.init(-0x4p-1076, 0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x2p-64), acos(cf128.init(-0xf.8p-16388, 0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x2p-64), acos(cf128.init(-0x0p+0, -0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x2p-64), acos(cf128.init(-0x8p-152, -0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x2p-64), acos(cf128.init(-0x4p-1076, -0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x2p-64), acos(cf128.init(-0xf.8p-16388, -0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18467898cc51701b8p+0, -0x8p-152), acos(cf128.init(0x2p-64, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18467898cc51701b8p+0, -0x0p+0), acos(cf128.init(0x2p-64, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18467898cc51701b8p+0, -0x4p-1076), acos(cf128.init(0x2p-64, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18467898cc51701b8p+0, -0xf.8p-16388), acos(cf128.init(0x2p-64, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d1846b898cc51701b8p+0, -0x8p-152), acos(cf128.init(-0x2p-64, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d1846b898cc51701b8p+0, -0x0p+0), acos(cf128.init(-0x2p-64, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d1846b898cc51701b8p+0, -0x4p-1076), acos(cf128.init(-0x2p-64, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d1846b898cc51701b8p+0, -0xf.8p-16388), acos(cf128.init(-0x2p-64, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18467898cc51701b8p+0, 0x0p+0), acos(cf128.init(0x2p-64, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18467898cc51701b8p+0, 0x8p-152), acos(cf128.init(0x2p-64, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18467898cc51701b8p+0, 0x4p-1076), acos(cf128.init(0x2p-64, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18467898cc51701b8p+0, 0xf.8p-16388), acos(cf128.init(0x2p-64, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d1846b898cc51701b8p+0, 0x0p+0), acos(cf128.init(-0x2p-64, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d1846b898cc51701b8p+0, 0x8p-152), acos(cf128.init(-0x2p-64, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d1846b898cc51701b8p+0, 0x4p-1076), acos(cf128.init(-0x2p-64, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d1846b898cc51701b8p+0, 0xf.8p-16388), acos(cf128.init(-0x2p-64, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x2p-64), acos(cf128.init(0x0p+0, 0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x2p-64), acos(cf128.init(0x0p+0, -0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x2p-64), acos(cf128.init(-0x0p+0, 0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x2p-64), acos(cf128.init(-0x0p+0, -0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18467898cc51701b8p+0, -0x0p+0), acos(cf128.init(0x2p-64, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d1846b898cc51701b8p+0, -0x0p+0), acos(cf128.init(-0x2p-64, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18467898cc51701b8p+0, 0x0p+0), acos(cf128.init(0x2p-64, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d1846b898cc51701b8p+0, 0x0p+0), acos(cf128.init(-0x2p-64, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x8p-152), acos(cf128.init(0x8p-152, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), acos(cf128.init(0x8p-152, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x4p-1076), acos(cf128.init(0x8p-152, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.8p-16388), acos(cf128.init(0x8p-152, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x8p-152), acos(cf128.init(0x0p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), acos(cf128.init(0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x4p-1076), acos(cf128.init(0x0p+0, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.8p-16388), acos(cf128.init(0x0p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x8p-152), acos(cf128.init(0x4p-1076, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), acos(cf128.init(0x4p-1076, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x4p-1076), acos(cf128.init(0x4p-1076, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.8p-16388), acos(cf128.init(0x4p-1076, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x8p-152), acos(cf128.init(0xf.8p-16388, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), acos(cf128.init(0xf.8p-16388, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x4p-1076), acos(cf128.init(0xf.8p-16388, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.8p-16388), acos(cf128.init(0xf.8p-16388, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), acos(cf128.init(0x8p-152, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x8p-152), acos(cf128.init(0x8p-152, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x4p-1076), acos(cf128.init(0x8p-152, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.8p-16388), acos(cf128.init(0x8p-152, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), acos(cf128.init(0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x8p-152), acos(cf128.init(0x0p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x4p-1076), acos(cf128.init(0x0p+0, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.8p-16388), acos(cf128.init(0x0p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), acos(cf128.init(0x4p-1076, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x8p-152), acos(cf128.init(0x4p-1076, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x4p-1076), acos(cf128.init(0x4p-1076, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.8p-16388), acos(cf128.init(0x4p-1076, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), acos(cf128.init(0xf.8p-16388, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x8p-152), acos(cf128.init(0xf.8p-16388, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x4p-1076), acos(cf128.init(0xf.8p-16388, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.8p-16388), acos(cf128.init(0xf.8p-16388, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x8p-152), acos(cf128.init(-0x0p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), acos(cf128.init(-0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x4p-1076), acos(cf128.init(-0x0p+0, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.8p-16388), acos(cf128.init(-0x0p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x8p-152), acos(cf128.init(-0x8p-152, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), acos(cf128.init(-0x8p-152, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x4p-1076), acos(cf128.init(-0x8p-152, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.8p-16388), acos(cf128.init(-0x8p-152, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x8p-152), acos(cf128.init(-0x4p-1076, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), acos(cf128.init(-0x4p-1076, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x4p-1076), acos(cf128.init(-0x4p-1076, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.8p-16388), acos(cf128.init(-0x4p-1076, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x8p-152), acos(cf128.init(-0xf.8p-16388, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), acos(cf128.init(-0xf.8p-16388, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x4p-1076), acos(cf128.init(-0xf.8p-16388, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.8p-16388), acos(cf128.init(-0xf.8p-16388, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), acos(cf128.init(-0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x8p-152), acos(cf128.init(-0x0p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x4p-1076), acos(cf128.init(-0x0p+0, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.8p-16388), acos(cf128.init(-0x0p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), acos(cf128.init(-0x8p-152, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x8p-152), acos(cf128.init(-0x8p-152, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x4p-1076), acos(cf128.init(-0x8p-152, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.8p-16388), acos(cf128.init(-0x8p-152, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), acos(cf128.init(-0x4p-1076, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x8p-152), acos(cf128.init(-0x4p-1076, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x4p-1076), acos(cf128.init(-0x4p-1076, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.8p-16388), acos(cf128.init(-0x4p-1076, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), acos(cf128.init(-0xf.8p-16388, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x8p-152), acos(cf128.init(-0xf.8p-16388, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x4p-1076), acos(cf128.init(-0xf.8p-16388, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.8p-16388), acos(cf128.init(-0xf.8p-16388, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc517015ep+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x8p-108, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc517015ep+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0x8p-108, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc517015ep+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(0x8p-108, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc517015ep+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(0x8p-108, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc517015ep+0, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(0x8p-108, 0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc517015ep+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0x8p-108, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc517015ep+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x8p-108, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc517015ep+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(0x8p-108, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc517015ep+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(0x8p-108, -0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc517015ep+0, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(0x8p-108, -0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc5170213p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x8p-108, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc5170213p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0x8p-108, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc5170213p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(-0x8p-108, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc5170213p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(-0x8p-108, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc5170213p+0, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(-0x8p-108, 0xf.fffffffffffffffffffffffffcp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc5170213p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0x8p-108, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc5170213p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x8p-108, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc5170213p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(-0x8p-108, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc5170213p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(-0x8p-108, -0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc5170213p+0, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(-0x8p-108, -0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(0xb.504f333f9de6484597d89b37543p-56, -0xb.504f333f9de6484597d89b375528p-56), acos(cf128.init(0x1p+0, 0x8p-108)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, -0x5.a8279b09d8da13da3f54e34189ccp-96), acos(cf128.init(0xf.fffffp-4, 0x8p-108)));
    try std.testing.expectEqual(cf128.init(0x4.00000000000002aaaaaaaaaaab3p-28, -0x2.00000000000003ffffffffffffccp-80), acos(cf128.init(0xf.ffffffffffff8p-4, 0x8p-108)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc908d1269c9538c3p-32, -0x5.a827999fcef3242435f606c26144p-76), acos(cf128.init(0xf.fffffffffffffffp-4, 0x8p-108)));
    // try std.testing.expectEqual(cf128.init(0xe.64299578db7dfa94ffd081d92e38p-56, -0x8.e4f006f4e6029bba2ce63a3e83dp-56), acos(cf128.init(0xf.fffffffffffffffffffffffffcp-4, 0x8p-108)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, -0x5.a8279b09d8da13da3f54e34189ccp-96), acos(cf128.init(-0xf.fffffp-4, 0x8p-108)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a2fd82c3e64a901d28p+0, -0xb.504f333f9de6484597d89b375528p-56), acos(cf128.init(-0x1p+0, 0x8p-108)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d313195f8358c6p+0, -0x2.00000000000003ffffffffffffccp-80), acos(cf128.init(-0xf.ffffffffffff8p-4, 0x8p-108)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a871b99226b1f5cc125324ap+0, -0x5.a827999fcef3242435f606c26144p-76), acos(cf128.init(-0xf.fffffffffffffffp-4, 0x8p-108)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a2fa6ee98411528576p+0, -0x8.e4f006f4e6029bba2ce63a3e83dp-56), acos(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, 0x8p-108)));
    // try std.testing.expectEqual(cf128.init(0xb.504f333f9de6484597d89b37543p-56, 0xb.504f333f9de6484597d89b375528p-56), acos(cf128.init(0x1p+0, -0x8p-108)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, 0x5.a8279b09d8da13da3f54e34189ccp-96), acos(cf128.init(0xf.fffffp-4, -0x8p-108)));
    try std.testing.expectEqual(cf128.init(0x4.00000000000002aaaaaaaaaaab3p-28, 0x2.00000000000003ffffffffffffccp-80), acos(cf128.init(0xf.ffffffffffff8p-4, -0x8p-108)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc908d1269c9538c3p-32, 0x5.a827999fcef3242435f606c26144p-76), acos(cf128.init(0xf.fffffffffffffffp-4, -0x8p-108)));
    // try std.testing.expectEqual(cf128.init(0xe.64299578db7dfa94ffd081d92e38p-56, 0x8.e4f006f4e6029bba2ce63a3e83dp-56), acos(cf128.init(0xf.fffffffffffffffffffffffffcp-4, -0x8p-108)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, 0x5.a8279b09d8da13da3f54e34189ccp-96), acos(cf128.init(-0xf.fffffp-4, -0x8p-108)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a2fd82c3e64a901d28p+0, 0xb.504f333f9de6484597d89b375528p-56), acos(cf128.init(-0x1p+0, -0x8p-108)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d313195f8358c6p+0, 0x2.00000000000003ffffffffffffccp-80), acos(cf128.init(-0xf.ffffffffffff8p-4, -0x8p-108)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a871b99226b1f5cc125324ap+0, 0x5.a827999fcef3242435f606c26144p-76), acos(cf128.init(-0xf.fffffffffffffffp-4, -0x8p-108)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a2fa6ee98411528576p+0, 0x8.e4f006f4e6029bba2ce63a3e83dp-56), acos(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, -0x8p-108)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0x8p-152, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(0x8p-152, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(0x8p-152, 0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(0x0p+0, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(0x0p+0, 0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0xf.8p-1028, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0xf.8p-1028, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(0xf.8p-1028, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(0xf.8p-1028, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(0xf.8p-1028, 0xf.fffffffffffffffffffffffffcp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(0x8p-152, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(0x8p-152, -0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(0x8p-152, -0xf.fffffffffffffffffffffffffcp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(0x0p+0, -0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(0x0p+0, -0xf.fffffffffffffffffffffffffcp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0xf.8p-1028, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0xf.8p-1028, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(0xf.8p-1028, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(0xf.8p-1028, -0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(0xf.8p-1028, -0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(-0x0p+0, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(-0x0p+0, 0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0x8p-152, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(-0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(-0x8p-152, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(-0x8p-152, 0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0xf.8p-1028, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0xf.8p-1028, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(-0xf.8p-1028, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(-0xf.8p-1028, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(-0xf.8p-1028, 0xf.fffffffffffffffffffffffffcp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(-0x0p+0, -0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(-0x0p+0, -0xf.fffffffffffffffffffffffffcp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(-0x8p-152, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(-0x8p-152, -0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(-0x8p-152, -0xf.fffffffffffffffffffffffffcp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0xf.8p-1028, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0xf.8p-1028, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(-0xf.8p-1028, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(-0xf.8p-1028, -0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(-0xf.8p-1028, -0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52ap-76, -0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x0p+0), acos(cf128.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0xf.bf7df5c6a788f0bd8bac8066d4f8p-516, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-516), acos(cf128.init(0x1p+0, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, -0x5.a8279b09d8da13da3f54e34189ccp-140), acos(cf128.init(0xf.fffffp-4, 0x8p-152)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, -0x0p+0), acos(cf128.init(0xf.fffffp-4, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, -0xa.f5ccbc6314268676dab4784efaf8p-1016), acos(cf128.init(0xf.fffffp-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x4.00000000000002aaaaaaaaaaaabp-28, -0x2.000000000000040000000000000cp-124), acos(cf128.init(0xf.ffffffffffff8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x4.00000000000002aaaaaaaaaaaabp-28, -0x0p+0), acos(cf128.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x4.00000000000002aaaaaaaaaaaabp-28, -0x3.e0000000000007c0000000000018p-1000), acos(cf128.init(0xf.ffffffffffff8p-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc908d1269144e99p-32, -0x5.a827999fcef3242435f634039e14p-120), acos(cf128.init(0xf.fffffffffffffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc908d1269144e99p-32, -0x0p+0), acos(cf128.init(0xf.fffffffffffffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc908d1269144e99p-32, -0xa.f5ccb9a5a0f71606288d04c70248p-996), acos(cf128.init(0xf.fffffffffffffffp-4, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(0xb.504f333f9de6484597d8a0df7c8p-56, -0xb.504f333f9de6484597d8958f2dc8p-100), acos(cf128.init(0xf.fffffffffffffffffffffffffcp-4, 0x8p-152)));
    // try std.testing.expectEqual(cf128.init(0xb.504f333f9de6484597d89b3754e8p-56, -0x0p+0), acos(cf128.init(0xf.fffffffffffffffffffffffffcp-4, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0xb.504f333f9de6484597d89b3754e8p-56, -0x1.5eb99734b41ee2c06d633acbb357p-972), acos(cf128.init(0xf.fffffffffffffffffffffffffcp-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, -0x5.a8279b09d8da13da3f54e34189ccp-140), acos(cf128.init(-0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, -0x0p+0), acos(cf128.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, -0xa.f5ccbc6314268676dab4784efaf8p-1016), acos(cf128.init(-0xf.fffffp-4, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d312ec48f13672p+0, -0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x0p+0), acos(cf128.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-516), acos(cf128.init(-0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d313195f8358c6p+0, -0x2.000000000000040000000000000cp-124), acos(cf128.init(-0xf.ffffffffffff8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d313195f8358c6p+0, -0x0p+0), acos(cf128.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d313195f8358c6p+0, -0x3.e0000000000007c0000000000018p-1000), acos(cf128.init(-0xf.ffffffffffff8p-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a871b99226b1f5cc125324ap+0, -0x5.a827999fcef3242435f634039e14p-120), acos(cf128.init(-0xf.fffffffffffffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a871b99226b1f5cc125324ap+0, -0x0p+0), acos(cf128.init(-0xf.fffffffffffffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a871b99226b1f5cc125324ap+0, -0xa.f5ccb9a5a0f71606288d04c70248p-996), acos(cf128.init(-0xf.fffffffffffffffp-4, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a2fd82c3e64a901d28p+0, -0xb.504f333f9de6484597d8958f2dc8p-100), acos(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a2fd82c3e64a901d28p+0, -0x0p+0), acos(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a2fd82c3e64a901d28p+0, -0x1.5eb99734b41ee2c06d633acbb357p-972), acos(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x0p+0), acos(cf128.init(0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52ap-76, 0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0xf.bf7df5c6a788f0bd8bac8066d4f8p-516, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-516), acos(cf128.init(0x1p+0, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, 0x0p+0), acos(cf128.init(0xf.fffffp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, 0x5.a8279b09d8da13da3f54e34189ccp-140), acos(cf128.init(0xf.fffffp-4, -0x8p-152)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, 0xa.f5ccbc6314268676dab4784efaf8p-1016), acos(cf128.init(0xf.fffffp-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x4.00000000000002aaaaaaaaaaaabp-28, 0x0p+0), acos(cf128.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x4.00000000000002aaaaaaaaaaaabp-28, 0x2.000000000000040000000000000cp-124), acos(cf128.init(0xf.ffffffffffff8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x4.00000000000002aaaaaaaaaaaabp-28, 0x3.e0000000000007c0000000000018p-1000), acos(cf128.init(0xf.ffffffffffff8p-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc908d1269144e99p-32, 0x0p+0), acos(cf128.init(0xf.fffffffffffffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc908d1269144e99p-32, 0x5.a827999fcef3242435f634039e14p-120), acos(cf128.init(0xf.fffffffffffffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc908d1269144e99p-32, 0xa.f5ccb9a5a0f71606288d04c70248p-996), acos(cf128.init(0xf.fffffffffffffffp-4, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(0xb.504f333f9de6484597d89b3754e8p-56, 0x0p+0), acos(cf128.init(0xf.fffffffffffffffffffffffffcp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0xb.504f333f9de6484597d8a0df7c8p-56, 0xb.504f333f9de6484597d8958f2dc8p-100), acos(cf128.init(0xf.fffffffffffffffffffffffffcp-4, -0x8p-152)));
    // try std.testing.expectEqual(cf128.init(0xb.504f333f9de6484597d89b3754e8p-56, 0x1.5eb99734b41ee2c06d633acbb357p-972), acos(cf128.init(0xf.fffffffffffffffffffffffffcp-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, 0x0p+0), acos(cf128.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, 0x5.a8279b09d8da13da3f54e34189ccp-140), acos(cf128.init(-0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, 0xa.f5ccbc6314268676dab4784efaf8p-1016), acos(cf128.init(-0xf.fffffp-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x0p+0), acos(cf128.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d312ec48f13672p+0, 0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-516), acos(cf128.init(-0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d313195f8358c6p+0, 0x0p+0), acos(cf128.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d313195f8358c6p+0, 0x2.000000000000040000000000000cp-124), acos(cf128.init(-0xf.ffffffffffff8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d313195f8358c6p+0, 0x3.e0000000000007c0000000000018p-1000), acos(cf128.init(-0xf.ffffffffffff8p-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a871b99226b1f5cc125324ap+0, 0x0p+0), acos(cf128.init(-0xf.fffffffffffffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a871b99226b1f5cc125324ap+0, 0x5.a827999fcef3242435f634039e14p-120), acos(cf128.init(-0xf.fffffffffffffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a871b99226b1f5cc125324ap+0, 0xa.f5ccb9a5a0f71606288d04c70248p-996), acos(cf128.init(-0xf.fffffffffffffffp-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a2fd82c3e64a901d28p+0, 0x0p+0), acos(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a2fd82c3e64a901d28p+0, 0xb.504f333f9de6484597d8958f2dc8p-100), acos(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a2fd82c3e64a901d28p+0, 0x1.5eb99734b41ee2c06d633acbb357p-972), acos(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(0x0p+0, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(0x0p+0, 0xf.fffffffffffffffffffffffffcp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(0x0p+0, -0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(0x0p+0, -0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(-0x0p+0, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(-0x0p+0, 0xf.fffffffffffffffffffffffffcp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(-0x0p+0, -0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(-0x0p+0, -0xf.fffffffffffffffffffffffffcp-4)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x0p+0), acos(cf128.init(0x1p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, -0x0p+0), acos(cf128.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x4.00000000000002aaaaaaaaaaaabp-28, -0x0p+0), acos(cf128.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc908d1269144e99p-32, -0x0p+0), acos(cf128.init(0xf.fffffffffffffffp-4, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0xb.504f333f9de6484597d89b3754e8p-56, -0x0p+0), acos(cf128.init(0xf.fffffffffffffffffffffffffcp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, -0x0p+0), acos(cf128.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x0p+0), acos(cf128.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d313195f8358c6p+0, -0x0p+0), acos(cf128.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a871b99226b1f5cc125324ap+0, -0x0p+0), acos(cf128.init(-0xf.fffffffffffffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a2fd82c3e64a901d28p+0, -0x0p+0), acos(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x0p+0), acos(cf128.init(0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, 0x0p+0), acos(cf128.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x4.00000000000002aaaaaaaaaaaabp-28, 0x0p+0), acos(cf128.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc908d1269144e99p-32, 0x0p+0), acos(cf128.init(0xf.fffffffffffffffp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0xb.504f333f9de6484597d89b3754e8p-56, 0x0p+0), acos(cf128.init(0xf.fffffffffffffffffffffffffcp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, 0x0p+0), acos(cf128.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x0p+0), acos(cf128.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d313195f8358c6p+0, 0x0p+0), acos(cf128.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a871b99226b1f5cc125324ap+0, 0x0p+0), acos(cf128.init(-0xf.fffffffffffffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a2fd82c3e64a901d28p+0, 0x0p+0), acos(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc5170146p+0, -0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(0x8p-108, 0x8p-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc5170146p+0, 0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(0x8p-108, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc517022bp+0, -0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(-0x8p-108, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc517022bp+0, 0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(-0x8p-108, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.0c152382d73658465bb32e0f567bp+0, -0x9.3cd3a2c8198e2690c7c0f257d928p-108), acos(cf128.init(0x8p-4, 0x8p-108)));
    // try std.testing.expectEqual(cf128.init(0x2.182a4705ae6cb08cb7665c1eacf6p+0, -0x9.3cd3a2c8198e2690c7c0f257d928p-108), acos(cf128.init(-0x8p-4, 0x8p-108)));
    // try std.testing.expectEqual(cf128.init(0x1.0c152382d73658465bb32e0f567bp+0, 0x9.3cd3a2c8198e2690c7c0f257d928p-108), acos(cf128.init(0x8p-4, -0x8p-108)));
    // try std.testing.expectEqual(cf128.init(0x2.182a4705ae6cb08cb7665c1eacf6p+0, 0x9.3cd3a2c8198e2690c7c0f257d928p-108), acos(cf128.init(-0x8p-4, -0x8p-108)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc5170138p+0, -0x8p-108), acos(cf128.init(0x8p-108, 0x8p-108)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc5170138p+0, 0x8p-108), acos(cf128.init(0x8p-108, -0x8p-108)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc5170238p+0, -0x8p-108), acos(cf128.init(-0x8p-108, 0x8p-108)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc5170238p+0, 0x8p-108), acos(cf128.init(-0x8p-108, -0x8p-108)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x8p-108), acos(cf128.init(0x8p-152, 0x8p-108)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x8p-108), acos(cf128.init(0x0p+0, 0x8p-108)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x8p-108), acos(cf128.init(0xf.8p-1028, 0x8p-108)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x8p-108), acos(cf128.init(0x8p-152, -0x8p-108)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x8p-108), acos(cf128.init(0x0p+0, -0x8p-108)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x8p-108), acos(cf128.init(0xf.8p-1028, -0x8p-108)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x8p-108), acos(cf128.init(-0x0p+0, 0x8p-108)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x8p-108), acos(cf128.init(-0x8p-152, 0x8p-108)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x8p-108), acos(cf128.init(-0xf.8p-1028, 0x8p-108)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x8p-108), acos(cf128.init(-0x0p+0, -0x8p-108)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x8p-108), acos(cf128.init(-0x8p-152, -0x8p-108)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x8p-108), acos(cf128.init(-0xf.8p-1028, -0x8p-108)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc5170138p+0, -0x8p-152), acos(cf128.init(0x8p-108, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc5170138p+0, -0x0p+0), acos(cf128.init(0x8p-108, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc5170138p+0, -0xf.8p-1028), acos(cf128.init(0x8p-108, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc5170238p+0, -0x8p-152), acos(cf128.init(-0x8p-108, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc5170238p+0, -0x0p+0), acos(cf128.init(-0x8p-108, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc5170238p+0, -0xf.8p-1028), acos(cf128.init(-0x8p-108, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc5170138p+0, 0x0p+0), acos(cf128.init(0x8p-108, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc5170138p+0, 0x8p-152), acos(cf128.init(0x8p-108, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc5170138p+0, 0xf.8p-1028), acos(cf128.init(0x8p-108, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc5170238p+0, 0x0p+0), acos(cf128.init(-0x8p-108, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc5170238p+0, 0x8p-152), acos(cf128.init(-0x8p-108, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc5170238p+0, 0xf.8p-1028), acos(cf128.init(-0x8p-108, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x8p-108), acos(cf128.init(0x0p+0, 0x8p-108)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x8p-108), acos(cf128.init(0x0p+0, -0x8p-108)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x8p-108), acos(cf128.init(-0x0p+0, 0x8p-108)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x8p-108), acos(cf128.init(-0x0p+0, -0x8p-108)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc5170138p+0, -0x0p+0), acos(cf128.init(0x8p-108, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc5170238p+0, -0x0p+0), acos(cf128.init(-0x8p-108, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc5170138p+0, 0x0p+0), acos(cf128.init(0x8p-108, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc5170238p+0, 0x0p+0), acos(cf128.init(-0x8p-108, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x1p-112, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0x1p-112, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(0x1p-112, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(0x1p-112, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd251p-4), acos(cf128.init(0x1p-112, 0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(0x1p-112, 0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0x1p-112, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x1p-112, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(0x1p-112, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(0x1p-112, -0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd251p-4), acos(cf128.init(0x1p-112, -0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(0x1p-112, -0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b9p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x1p-112, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b9p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0x1p-112, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b9p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(-0x1p-112, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b9p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(-0x1p-112, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b9p+0, -0xe.1a1b30bcea13660d8f99e8dd251p-4), acos(cf128.init(-0x1p-112, 0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b9p+0, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(-0x1p-112, 0xf.fffffffffffffffffffffffffcp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b9p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0x1p-112, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b9p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x1p-112, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b9p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(-0x1p-112, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b9p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(-0x1p-112, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b9p+0, 0xe.1a1b30bcea13660d8f99e8dd251p-4), acos(cf128.init(-0x1p-112, -0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b9p+0, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(-0x1p-112, -0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(0x1p-56, -0x1p-56), acos(cf128.init(0x1p+0, 0x1p-112)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, -0xb.504f3613b1b427b47ea9c6831398p-104), acos(cf128.init(0xf.fffffp-4, 0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x4.00000000000002aaaaaaaaaaaabp-28, -0x4.0000000000000800000000000018p-88), acos(cf128.init(0xf.ffffffffffff8p-4, 0x1p-112)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc908d126914516d1p-32, -0xb.504f333f9de648486bec6805d218p-84), acos(cf128.init(0xf.fffffffffffffffp-4, 0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x1.45a3146a88455e92554501121ec5p-56, -0xc.94137792c68d8c69070afb6cf4c8p-60), acos(cf128.init(0xf.fffffffffffffffffffffffffff8p-4, 0x1p-112)));
    // try std.testing.expectEqual(cf128.init(0xb.5065d36ce503b7a9527d39e8df1p-56, -0x1.6a071267f2bcd6099e2b62994a4ep-60), acos(cf128.init(0xf.fffffffffffffffffffffffffcp-4, 0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, -0xb.504f3613b1b427b47ea9c6831398p-104), acos(cf128.init(-0xf.fffffp-4, 0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a307d313198a2e037p+0, -0x1p-56), acos(cf128.init(-0x1p+0, 0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d313195f8358c6p+0, -0x4.0000000000000800000000000018p-88), acos(cf128.init(-0xf.ffffffffffff8p-4, 0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a871b99226b1f5cc125324ap+0, -0xb.504f333f9de648486bec6805d218p-84), acos(cf128.init(-0xf.fffffffffffffffp-4, 0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a3078d70051fa5be12p+0, -0xc.94137792c68d8c69070afb6cf4c8p-60), acos(cf128.init(-0xf.fffffffffffffffffffffffffff8p-4, 0x1p-112)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a2fd82ad461d48ffb8p+0, -0x1.6a071267f2bcd6099e2b62994a4ep-60), acos(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, 0x1p-112)));
    // try std.testing.expectEqual(cf128.init(0x1p-56, 0x1p-56), acos(cf128.init(0x1p+0, -0x1p-112)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, 0xb.504f3613b1b427b47ea9c6831398p-104), acos(cf128.init(0xf.fffffp-4, -0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x4.00000000000002aaaaaaaaaaaabp-28, 0x4.0000000000000800000000000018p-88), acos(cf128.init(0xf.ffffffffffff8p-4, -0x1p-112)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc908d126914516d1p-32, 0xb.504f333f9de648486bec6805d218p-84), acos(cf128.init(0xf.fffffffffffffffp-4, -0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x1.45a3146a88455e92554501121ec5p-56, 0xc.94137792c68d8c69070afb6cf4c8p-60), acos(cf128.init(0xf.fffffffffffffffffffffffffff8p-4, -0x1p-112)));
    // try std.testing.expectEqual(cf128.init(0xb.5065d36ce503b7a9527d39e8df1p-56, 0x1.6a071267f2bcd6099e2b62994a4ep-60), acos(cf128.init(0xf.fffffffffffffffffffffffffcp-4, -0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, 0xb.504f3613b1b427b47ea9c6831398p-104), acos(cf128.init(-0xf.fffffp-4, -0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a307d313198a2e037p+0, 0x1p-56), acos(cf128.init(-0x1p+0, -0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d313195f8358c6p+0, 0x4.0000000000000800000000000018p-88), acos(cf128.init(-0xf.ffffffffffff8p-4, -0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a871b99226b1f5cc125324ap+0, 0xb.504f333f9de648486bec6805d218p-84), acos(cf128.init(-0xf.fffffffffffffffp-4, -0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a3078d70051fa5be12p+0, 0xc.94137792c68d8c69070afb6cf4c8p-60), acos(cf128.init(-0xf.fffffffffffffffffffffffffff8p-4, -0x1p-112)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a2fd82ad461d48ffb8p+0, 0x1.6a071267f2bcd6099e2b62994a4ep-60), acos(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, -0x1p-112)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0x8p-152, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(0x8p-152, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd251p-4), acos(cf128.init(0x8p-152, 0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(0x8p-152, 0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(0x0p+0, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd251p-4), acos(cf128.init(0x0p+0, 0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(0x0p+0, 0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0x4p-1076, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(0x4p-1076, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(0x4p-1076, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd251p-4), acos(cf128.init(0x4p-1076, 0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(0x4p-1076, 0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0xf.8p-16388, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0xf.8p-16388, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(0xf.8p-16388, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(0xf.8p-16388, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd251p-4), acos(cf128.init(0xf.8p-16388, 0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(0xf.8p-16388, 0xf.fffffffffffffffffffffffffcp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(0x8p-152, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(0x8p-152, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd251p-4), acos(cf128.init(0x8p-152, -0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(0x8p-152, -0xf.fffffffffffffffffffffffffcp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(0x0p+0, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd251p-4), acos(cf128.init(0x0p+0, -0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(0x0p+0, -0xf.fffffffffffffffffffffffffcp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0x4p-1076, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x4p-1076, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(0x4p-1076, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(0x4p-1076, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd251p-4), acos(cf128.init(0x4p-1076, -0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(0x4p-1076, -0xf.fffffffffffffffffffffffffcp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0xf.8p-16388, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0xf.8p-16388, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(0xf.8p-16388, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(0xf.8p-16388, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd251p-4), acos(cf128.init(0xf.8p-16388, -0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(0xf.8p-16388, -0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(-0x0p+0, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd251p-4), acos(cf128.init(-0x0p+0, 0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(-0x0p+0, 0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0x8p-152, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(-0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(-0x8p-152, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd251p-4), acos(cf128.init(-0x8p-152, 0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(-0x8p-152, 0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0x4p-1076, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(-0x4p-1076, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(-0x4p-1076, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd251p-4), acos(cf128.init(-0x4p-1076, 0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(-0x4p-1076, 0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0xf.8p-16388, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0xf.8p-16388, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(-0xf.8p-16388, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(-0xf.8p-16388, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd251p-4), acos(cf128.init(-0xf.8p-16388, 0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(-0xf.8p-16388, 0xf.fffffffffffffffffffffffffcp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(-0x0p+0, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd251p-4), acos(cf128.init(-0x0p+0, -0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(-0x0p+0, -0xf.fffffffffffffffffffffffffcp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(-0x8p-152, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(-0x8p-152, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd251p-4), acos(cf128.init(-0x8p-152, -0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(-0x8p-152, -0xf.fffffffffffffffffffffffffcp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0x4p-1076, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x4p-1076, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(-0x4p-1076, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(-0x4p-1076, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd251p-4), acos(cf128.init(-0x4p-1076, -0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(-0x4p-1076, -0xf.fffffffffffffffffffffffffcp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0xf.8p-16388, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0xf.8p-16388, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(-0xf.8p-16388, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(-0xf.8p-16388, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd251p-4), acos(cf128.init(-0xf.8p-16388, -0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(-0xf.8p-16388, -0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52ap-76, -0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x0p+0), acos(cf128.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x8p-540, -0x8p-540), acos(cf128.init(0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196), acos(cf128.init(0x1p+0, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, -0x5.a8279b09d8da13da3f54e34189ccp-140), acos(cf128.init(0xf.fffffp-4, 0x8p-152)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, -0x0p+0), acos(cf128.init(0xf.fffffp-4, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, -0x2.d413cd84ec6d09ed1faa71a0c4e6p-1064), acos(cf128.init(0xf.fffffp-4, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, -0xa.f5ccbc6314268676dab4784efaf8p-16376), acos(cf128.init(0xf.fffffp-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x4.00000000000002aaaaaaaaaaaabp-28, -0x2.000000000000040000000000000cp-124), acos(cf128.init(0xf.ffffffffffff8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x4.00000000000002aaaaaaaaaaaabp-28, -0x0p+0), acos(cf128.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x4.00000000000002aaaaaaaaaaaabp-28, -0x1.0000000000000200000000000006p-1048), acos(cf128.init(0xf.ffffffffffff8p-4, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x4.00000000000002aaaaaaaaaaaabp-28, -0x3.e0000000000007c0000000000018p-16360), acos(cf128.init(0xf.ffffffffffff8p-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc908d1269144e99p-32, -0x5.a827999fcef3242435f634039e14p-120), acos(cf128.init(0xf.fffffffffffffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc908d1269144e99p-32, -0x0p+0), acos(cf128.init(0xf.fffffffffffffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc908d1269144e99p-32, -0x2.d413cccfe77992121afb1a01cf0ap-1044), acos(cf128.init(0xf.fffffffffffffffp-4, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc908d1269144e99p-32, -0xa.f5ccb9a5a0f71606288d04c70248p-16356), acos(cf128.init(0xf.fffffffffffffffp-4, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x1.0000000000000000002p-56, -0x7.ffffffffffffffffffp-96), acos(cf128.init(0xf.fffffffffffffffffffffffffff8p-4, 0x8p-152)));
    // try std.testing.expectEqual(cf128.init(0x1p-56, -0x0p+0), acos(cf128.init(0xf.fffffffffffffffffffffffffff8p-4, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1p-56, -0x4p-1020), acos(cf128.init(0xf.fffffffffffffffffffffffffff8p-4, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1p-56, -0xf.8p-16332), acos(cf128.init(0xf.fffffffffffffffffffffffffff8p-4, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0xb.504f333f9de6484597d8a0df7c8p-56, -0xb.504f333f9de6484597d8958f2dc8p-100), acos(cf128.init(0xf.fffffffffffffffffffffffffcp-4, 0x8p-152)));
    // try std.testing.expectEqual(cf128.init(0xb.504f333f9de6484597d89b3754e8p-56, -0x0p+0), acos(cf128.init(0xf.fffffffffffffffffffffffffcp-4, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0xb.504f333f9de6484597d89b3754e8p-56, -0x5.a827999fcef32422cbec4d9baabp-1024), acos(cf128.init(0xf.fffffffffffffffffffffffffcp-4, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0xb.504f333f9de6484597d89b3754e8p-56, -0x1.5eb99734b41ee2c06d633acbb357p-16332), acos(cf128.init(0xf.fffffffffffffffffffffffffcp-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, -0x5.a8279b09d8da13da3f54e34189ccp-140), acos(cf128.init(-0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, -0x0p+0), acos(cf128.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, -0x2.d413cd84ec6d09ed1faa71a0c4e6p-1064), acos(cf128.init(-0xf.fffffp-4, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, -0xa.f5ccbc6314268676dab4784efaf8p-16376), acos(cf128.init(-0xf.fffffp-4, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d312ec48f13672p+0, -0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x0p+0), acos(cf128.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x8p-540), acos(cf128.init(-0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196), acos(cf128.init(-0x1p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d313195f8358c6p+0, -0x2.000000000000040000000000000cp-124), acos(cf128.init(-0xf.ffffffffffff8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d313195f8358c6p+0, -0x0p+0), acos(cf128.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d313195f8358c6p+0, -0x1.0000000000000200000000000006p-1048), acos(cf128.init(-0xf.ffffffffffff8p-4, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d313195f8358c6p+0, -0x3.e0000000000007c0000000000018p-16360), acos(cf128.init(-0xf.ffffffffffff8p-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a871b99226b1f5cc125324ap+0, -0x5.a827999fcef3242435f634039e14p-120), acos(cf128.init(-0xf.fffffffffffffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a871b99226b1f5cc125324ap+0, -0x0p+0), acos(cf128.init(-0xf.fffffffffffffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a871b99226b1f5cc125324ap+0, -0x2.d413cccfe77992121afb1a01cf0ap-1044), acos(cf128.init(-0xf.fffffffffffffffp-4, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a871b99226b1f5cc125324ap+0, -0xa.f5ccb9a5a0f71606288d04c70248p-16356), acos(cf128.init(-0xf.fffffffffffffffp-4, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a307d313198a2e037p+0, -0x7.ffffffffffffffffffp-96), acos(cf128.init(-0xf.fffffffffffffffffffffffffff8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a307d313198a2e037p+0, -0x0p+0), acos(cf128.init(-0xf.fffffffffffffffffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a307d313198a2e037p+0, -0x4p-1020), acos(cf128.init(-0xf.fffffffffffffffffffffffffff8p-4, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a307d313198a2e037p+0, -0xf.8p-16332), acos(cf128.init(-0xf.fffffffffffffffffffffffffff8p-4, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a2fd82c3e64a901d28p+0, -0xb.504f333f9de6484597d8958f2dc8p-100), acos(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a2fd82c3e64a901d28p+0, -0x0p+0), acos(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a2fd82c3e64a901d28p+0, -0x5.a827999fcef32422cbec4d9baabp-1024), acos(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a2fd82c3e64a901d28p+0, -0x1.5eb99734b41ee2c06d633acbb357p-16332), acos(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x0p+0), acos(cf128.init(0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52ap-76, 0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x8p-540, 0x8p-540), acos(cf128.init(0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196), acos(cf128.init(0x1p+0, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, 0x0p+0), acos(cf128.init(0xf.fffffp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, 0x5.a8279b09d8da13da3f54e34189ccp-140), acos(cf128.init(0xf.fffffp-4, -0x8p-152)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, 0x2.d413cd84ec6d09ed1faa71a0c4e6p-1064), acos(cf128.init(0xf.fffffp-4, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, 0xa.f5ccbc6314268676dab4784efaf8p-16376), acos(cf128.init(0xf.fffffp-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x4.00000000000002aaaaaaaaaaaabp-28, 0x0p+0), acos(cf128.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x4.00000000000002aaaaaaaaaaaabp-28, 0x2.000000000000040000000000000cp-124), acos(cf128.init(0xf.ffffffffffff8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x4.00000000000002aaaaaaaaaaaabp-28, 0x1.0000000000000200000000000006p-1048), acos(cf128.init(0xf.ffffffffffff8p-4, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x4.00000000000002aaaaaaaaaaaabp-28, 0x3.e0000000000007c0000000000018p-16360), acos(cf128.init(0xf.ffffffffffff8p-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc908d1269144e99p-32, 0x0p+0), acos(cf128.init(0xf.fffffffffffffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc908d1269144e99p-32, 0x5.a827999fcef3242435f634039e14p-120), acos(cf128.init(0xf.fffffffffffffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc908d1269144e99p-32, 0x2.d413cccfe77992121afb1a01cf0ap-1044), acos(cf128.init(0xf.fffffffffffffffp-4, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc908d1269144e99p-32, 0xa.f5ccb9a5a0f71606288d04c70248p-16356), acos(cf128.init(0xf.fffffffffffffffp-4, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x1p-56, 0x0p+0), acos(cf128.init(0xf.fffffffffffffffffffffffffff8p-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.0000000000000000002p-56, 0x7.ffffffffffffffffffp-96), acos(cf128.init(0xf.fffffffffffffffffffffffffff8p-4, -0x8p-152)));
    // try std.testing.expectEqual(cf128.init(0x1p-56, 0x4p-1020), acos(cf128.init(0xf.fffffffffffffffffffffffffff8p-4, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1p-56, 0xf.8p-16332), acos(cf128.init(0xf.fffffffffffffffffffffffffff8p-4, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0xb.504f333f9de6484597d89b3754e8p-56, 0x0p+0), acos(cf128.init(0xf.fffffffffffffffffffffffffcp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0xb.504f333f9de6484597d8a0df7c8p-56, 0xb.504f333f9de6484597d8958f2dc8p-100), acos(cf128.init(0xf.fffffffffffffffffffffffffcp-4, -0x8p-152)));
    // try std.testing.expectEqual(cf128.init(0xb.504f333f9de6484597d89b3754e8p-56, 0x5.a827999fcef32422cbec4d9baabp-1024), acos(cf128.init(0xf.fffffffffffffffffffffffffcp-4, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0xb.504f333f9de6484597d89b3754e8p-56, 0x1.5eb99734b41ee2c06d633acbb357p-16332), acos(cf128.init(0xf.fffffffffffffffffffffffffcp-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, 0x0p+0), acos(cf128.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, 0x5.a8279b09d8da13da3f54e34189ccp-140), acos(cf128.init(-0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, 0x2.d413cd84ec6d09ed1faa71a0c4e6p-1064), acos(cf128.init(-0xf.fffffp-4, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, 0xa.f5ccbc6314268676dab4784efaf8p-16376), acos(cf128.init(-0xf.fffffp-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x0p+0), acos(cf128.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d312ec48f13672p+0, 0x2.d413cccfe779921165f626cdd52ap-76), acos(cf128.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x8p-540), acos(cf128.init(-0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196), acos(cf128.init(-0x1p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d313195f8358c6p+0, 0x0p+0), acos(cf128.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d313195f8358c6p+0, 0x2.000000000000040000000000000cp-124), acos(cf128.init(-0xf.ffffffffffff8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d313195f8358c6p+0, 0x1.0000000000000200000000000006p-1048), acos(cf128.init(-0xf.ffffffffffff8p-4, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d313195f8358c6p+0, 0x3.e0000000000007c0000000000018p-16360), acos(cf128.init(-0xf.ffffffffffff8p-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a871b99226b1f5cc125324ap+0, 0x0p+0), acos(cf128.init(-0xf.fffffffffffffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a871b99226b1f5cc125324ap+0, 0x5.a827999fcef3242435f634039e14p-120), acos(cf128.init(-0xf.fffffffffffffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a871b99226b1f5cc125324ap+0, 0x2.d413cccfe77992121afb1a01cf0ap-1044), acos(cf128.init(-0xf.fffffffffffffffp-4, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a871b99226b1f5cc125324ap+0, 0xa.f5ccb9a5a0f71606288d04c70248p-16356), acos(cf128.init(-0xf.fffffffffffffffp-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a307d313198a2e037p+0, 0x0p+0), acos(cf128.init(-0xf.fffffffffffffffffffffffffff8p-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a307d313198a2e037p+0, 0x7.ffffffffffffffffffp-96), acos(cf128.init(-0xf.fffffffffffffffffffffffffff8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a307d313198a2e037p+0, 0x4p-1020), acos(cf128.init(-0xf.fffffffffffffffffffffffffff8p-4, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a307d313198a2e037p+0, 0xf.8p-16332), acos(cf128.init(-0xf.fffffffffffffffffffffffffff8p-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a2fd82c3e64a901d28p+0, 0x0p+0), acos(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x3.243f6a8885a2fd82c3e64a901d28p+0, 0xb.504f333f9de6484597d8958f2dc8p-100), acos(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a2fd82c3e64a901d28p+0, 0x5.a827999fcef32422cbec4d9baabp-1024), acos(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a2fd82c3e64a901d28p+0, 0x1.5eb99734b41ee2c06d633acbb357p-16332), acos(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(0x0p+0, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd251p-4), acos(cf128.init(0x0p+0, 0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(0x0p+0, 0xf.fffffffffffffffffffffffffcp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(0x0p+0, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd251p-4), acos(cf128.init(0x0p+0, -0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(0x0p+0, -0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(-0x0p+0, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd251p-4), acos(cf128.init(-0x0p+0, 0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(-0x0p+0, 0xf.fffffffffffffffffffffffffcp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), acos(cf128.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), acos(cf128.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), acos(cf128.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), acos(cf128.init(-0x0p+0, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd251p-4), acos(cf128.init(-0x0p+0, -0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), acos(cf128.init(-0x0p+0, -0xf.fffffffffffffffffffffffffcp-4)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x0p+0), acos(cf128.init(0x1p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, -0x0p+0), acos(cf128.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x4.00000000000002aaaaaaaaaaaabp-28, -0x0p+0), acos(cf128.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc908d1269144e99p-32, -0x0p+0), acos(cf128.init(0xf.fffffffffffffffp-4, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1p-56, -0x0p+0), acos(cf128.init(0xf.fffffffffffffffffffffffffff8p-4, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0xb.504f333f9de6484597d89b3754e8p-56, -0x0p+0), acos(cf128.init(0xf.fffffffffffffffffffffffffcp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, -0x0p+0), acos(cf128.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, -0x0p+0), acos(cf128.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d313195f8358c6p+0, -0x0p+0), acos(cf128.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a871b99226b1f5cc125324ap+0, -0x0p+0), acos(cf128.init(-0xf.fffffffffffffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a307d313198a2e037p+0, -0x0p+0), acos(cf128.init(-0xf.fffffffffffffffffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a2fd82c3e64a901d28p+0, -0x0p+0), acos(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x0p+0), acos(cf128.init(0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e6861f3aadd17681ee6db02ap-12, 0x0p+0), acos(cf128.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x4.00000000000002aaaaaaaaaaaabp-28, 0x0p+0), acos(cf128.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc908d1269144e99p-32, 0x0p+0), acos(cf128.init(0xf.fffffffffffffffp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1p-56, 0x0p+0), acos(cf128.init(0xf.fffffffffffffffffffffffffff8p-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0xb.504f333f9de6484597d89b3754e8p-56, 0x0p+0), acos(cf128.init(0xf.fffffffffffffffffffffffffcp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.2428c9ea1d4115283602220f1c96p+0, 0x0p+0), acos(cf128.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a308d313198a2e037p+0, 0x0p+0), acos(cf128.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a4885a308d313195f8358c6p+0, 0x0p+0), acos(cf128.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a871b99226b1f5cc125324ap+0, 0x0p+0), acos(cf128.init(-0xf.fffffffffffffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a307d313198a2e037p+0, 0x0p+0), acos(cf128.init(-0xf.fffffffffffffffffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x3.243f6a8885a2fd82c3e64a901d28p+0, 0x0p+0), acos(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b7p+0, -0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(0x1p-112, 0x8p-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b7p+0, 0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(0x1p-112, -0x8p-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b9p+0, -0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(-0x1p-112, 0x8p-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b9p+0, 0x7.b30b2bb14582652f810812a5a31cp-4), acos(cf128.init(-0x1p-112, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.0c152382d73658465bb32e0f567bp+0, -0x1.279a74590331c4d218f81e4afb25p-112), acos(cf128.init(0x8p-4, 0x1p-112)));
    // try std.testing.expectEqual(cf128.init(0x2.182a4705ae6cb08cb7665c1eacf6p+0, -0x1.279a74590331c4d218f81e4afb25p-112), acos(cf128.init(-0x8p-4, 0x1p-112)));
    // try std.testing.expectEqual(cf128.init(0x1.0c152382d73658465bb32e0f567bp+0, 0x1.279a74590331c4d218f81e4afb25p-112), acos(cf128.init(0x8p-4, -0x1p-112)));
    // try std.testing.expectEqual(cf128.init(0x2.182a4705ae6cb08cb7665c1eacf6p+0, 0x1.279a74590331c4d218f81e4afb25p-112), acos(cf128.init(-0x8p-4, -0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b7p+0, -0x1p-112), acos(cf128.init(0x1p-112, 0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b7p+0, 0x1p-112), acos(cf128.init(0x1p-112, -0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b9p+0, -0x1p-112), acos(cf128.init(-0x1p-112, 0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b9p+0, 0x1p-112), acos(cf128.init(-0x1p-112, -0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1p-112), acos(cf128.init(0x8p-152, 0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1p-112), acos(cf128.init(0x0p+0, 0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1p-112), acos(cf128.init(0x4p-1076, 0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1p-112), acos(cf128.init(0xf.8p-16388, 0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1p-112), acos(cf128.init(0x8p-152, -0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1p-112), acos(cf128.init(0x0p+0, -0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1p-112), acos(cf128.init(0x4p-1076, -0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1p-112), acos(cf128.init(0xf.8p-16388, -0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1p-112), acos(cf128.init(-0x0p+0, 0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1p-112), acos(cf128.init(-0x8p-152, 0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1p-112), acos(cf128.init(-0x4p-1076, 0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1p-112), acos(cf128.init(-0xf.8p-16388, 0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1p-112), acos(cf128.init(-0x0p+0, -0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1p-112), acos(cf128.init(-0x8p-152, -0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1p-112), acos(cf128.init(-0x4p-1076, -0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1p-112), acos(cf128.init(-0xf.8p-16388, -0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b7p+0, -0x8p-152), acos(cf128.init(0x1p-112, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b7p+0, -0x0p+0), acos(cf128.init(0x1p-112, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b7p+0, -0x4p-1076), acos(cf128.init(0x1p-112, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b7p+0, -0xf.8p-16388), acos(cf128.init(0x1p-112, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b9p+0, -0x8p-152), acos(cf128.init(-0x1p-112, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b9p+0, -0x0p+0), acos(cf128.init(-0x1p-112, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b9p+0, -0x4p-1076), acos(cf128.init(-0x1p-112, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b9p+0, -0xf.8p-16388), acos(cf128.init(-0x1p-112, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b7p+0, 0x0p+0), acos(cf128.init(0x1p-112, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b7p+0, 0x8p-152), acos(cf128.init(0x1p-112, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b7p+0, 0x4p-1076), acos(cf128.init(0x1p-112, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b7p+0, 0xf.8p-16388), acos(cf128.init(0x1p-112, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b9p+0, 0x0p+0), acos(cf128.init(-0x1p-112, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b9p+0, 0x8p-152), acos(cf128.init(-0x1p-112, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b9p+0, 0x4p-1076), acos(cf128.init(-0x1p-112, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b9p+0, 0xf.8p-16388), acos(cf128.init(-0x1p-112, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1p-112), acos(cf128.init(0x0p+0, 0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1p-112), acos(cf128.init(0x0p+0, -0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1p-112), acos(cf128.init(-0x0p+0, 0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1p-112), acos(cf128.init(-0x0p+0, -0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b7p+0, -0x0p+0), acos(cf128.init(0x1p-112, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b9p+0, -0x0p+0), acos(cf128.init(-0x1p-112, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b7p+0, 0x0p+0), acos(cf128.init(0x1p-112, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b9p+0, 0x0p+0), acos(cf128.init(-0x1p-112, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.1e15cced3f1ad4176ac2aab4a0fep+0, -0x1.21e48c8df1874b5cd0ce3cbbfb5bp+0), acos(cf128.init(0xcp-4, 0x1.4p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.2436024a4a9df8f1b938aaba4922p+0, 0x1.fbbf409ccd55fc6792dad16bc591p+0), acos(cf128.init(-0x2p+0, -0x3p+0)));
}
