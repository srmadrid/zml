const std = @import("std");
const zml = @import("zml");
const cf32 = zml.cf32;
const cf64 = zml.cf64;
const cf80 = zml.cf80;
const cf128 = zml.cf128;
const asin = zml.cfloat.asin;

test asin {
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x0p+0), asin(cf32.init(0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, 0x0p+0), asin(cf32.init(-0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0x0p+0), asin(cf32.init(0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, -0x0p+0), asin(cf32.init(-0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0x1.31dcp+0), asin(cf32.init(0x0p+0, -0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, -0x1.31dcp+0), asin(cf32.init(-0x0p+0, -0x1.8p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, -0xe.1a1b3p-4), asin(cf32.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, -0xe.1a1b3p-4), asin(cf32.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, -0x7.b30b28p-4), asin(cf32.init(0x0p+0, -0x8p-4)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, -0x7.b30b28p-4), asin(cf32.init(-0x0p+0, -0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, 0x7.b30b28p-4), asin(cf32.init(0x0p+0, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, 0x7.b30b28p-4), asin(cf32.init(-0x0p+0, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, 0xe.1a1b3p-4), asin(cf32.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, 0xe.1a1b3p-4), asin(cf32.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x1.31dcp+0), asin(cf32.init(0x0p+0, 0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, 0x1.31dcp+0), asin(cf32.init(-0x0p+0, 0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0xf.66165p-4), asin(cf32.init(-0x1.8p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0xf.66165p-4), asin(cf32.init(-0x1.8p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x0p+0), asin(cf32.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x0p+0), asin(cf32.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x8.60a92p-4, 0x0p+0), asin(cf32.init(-0x8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x8.60a92p-4, -0x0p+0), asin(cf32.init(-0x8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x8.60a92p-4, 0x0p+0), asin(cf32.init(0x8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x8.60a92p-4, -0x0p+0), asin(cf32.init(0x8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), asin(cf32.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), asin(cf32.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xf.66165p-4), asin(cf32.init(0x1.8p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xf.66165p-4), asin(cf32.init(0x1.8p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2.359bacp+4), asin(cf32.init(0x4p+48, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2.359bacp+4), asin(cf32.init(0x4p+48, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x2.359bacp+4), asin(cf32.init(-0x4p+48, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x2.359bacp+4), asin(cf32.init(-0x4p+48, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x4p-52, 0x2.359bacp+4), asin(cf32.init(0x1p+0, 0x4p+48)));
    try std.testing.expectEqual(cf32.init(-0x4p-52, 0x2.359bacp+4), asin(cf32.init(-0x1p+0, 0x4p+48)));
    try std.testing.expectEqual(cf32.init(0x4p-52, -0x2.359bacp+4), asin(cf32.init(0x1p+0, -0x4p+48)));
    try std.testing.expectEqual(cf32.init(-0x4p-52, -0x2.359bacp+4), asin(cf32.init(-0x1p+0, -0x4p+48)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x5.96a7ep+4), asin(cf32.init(0xf.fffffp+124, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x5.96a7ep+4), asin(cf32.init(0xf.fffffp+124, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x5.96a7ep+4), asin(cf32.init(-0xf.fffffp+124, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x5.96a7ep+4), asin(cf32.init(-0xf.fffffp+124, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1p-128, 0x5.96a7ep+4), asin(cf32.init(0x1p+0, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf32.init(-0x1p-128, 0x5.96a7ep+4), asin(cf32.init(-0x1p+0, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf32.init(0x1p-128, -0x5.96a7ep+4), asin(cf32.init(0x1p+0, -0xf.fffffp+124)));
    try std.testing.expectEqual(cf32.init(-0x1p-128, -0x5.96a7ep+4), asin(cf32.init(-0x1p+0, -0xf.fffffp+124)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x5.96a7ep+4), asin(cf32.init(0xf.fffffp+124, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x5.96a7ep+4), asin(cf32.init(0xf.fffffp+124, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x5.96a7ep+4), asin(cf32.init(-0xf.fffffp+124, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x5.96a7ep+4), asin(cf32.init(-0xf.fffffp+124, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1p-128, 0x5.96a7ep+4), asin(cf32.init(0x1p+0, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf32.init(-0x1p-128, 0x5.96a7ep+4), asin(cf32.init(-0x1p+0, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf32.init(0x1p-128, -0x5.96a7ep+4), asin(cf32.init(0x1p+0, -0xf.fffffp+124)));
    try std.testing.expectEqual(cf32.init(-0x1p-128, -0x5.96a7ep+4), asin(cf32.init(-0x1p+0, -0xf.fffffp+124)));
    try std.testing.expectEqual(cf32.init(0xc.90fdbp-4, 0x5.9bb168p+4), asin(cf32.init(0xf.8p+124, 0xf.8p+124)));
    try std.testing.expectEqual(cf32.init(0xc.90fdbp-4, 0x5.9c337p+4), asin(cf32.init(0xf.fffffp+124, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf32.init(0xc.90fdbp-4, 0x5.9c337p+4), asin(cf32.init(0xf.fffffp+124, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf32.init(0x8.990dp-132, 0x1.31dcp+0), asin(cf32.init(0xf.8p-132, 0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(0x8.990dp-132, -0x1.31dcp+0), asin(cf32.init(0xf.8p-132, -0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(-0x8.990dp-132, 0x1.31dcp+0), asin(cf32.init(-0xf.8p-132, 0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(-0x8.990dp-132, -0x1.31dcp+0), asin(cf32.init(-0xf.8p-132, -0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xf.66165p-4), asin(cf32.init(0x1.8p+0, 0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0xf.66165p-4), asin(cf32.init(-0x1.8p+0, 0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xf.66165p-4), asin(cf32.init(0x1.8p+0, -0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0xf.66165p-4), asin(cf32.init(-0x1.8p+0, -0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(0x8p-152, 0x1.31dcp+0), asin(cf32.init(0x8p-152, 0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x1.31dcp+0), asin(cf32.init(0x0p+0, 0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(0x8p-152, -0x1.31dcp+0), asin(cf32.init(0x8p-152, -0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0x1.31dcp+0), asin(cf32.init(0x0p+0, -0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, 0x1.31dcp+0), asin(cf32.init(-0x0p+0, 0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(-0x8p-152, 0x1.31dcp+0), asin(cf32.init(-0x8p-152, 0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, -0x1.31dcp+0), asin(cf32.init(-0x0p+0, -0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(-0x8p-152, -0x1.31dcp+0), asin(cf32.init(-0x8p-152, -0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xf.66165p-4), asin(cf32.init(0x1.8p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xf.66165p-4), asin(cf32.init(0x1.8p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0xf.66165p-4), asin(cf32.init(-0x1.8p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0xf.66165p-4), asin(cf32.init(-0x1.8p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xf.66165p-4), asin(cf32.init(0x1.8p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xf.66165p-4), asin(cf32.init(0x1.8p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0xf.66165p-4), asin(cf32.init(-0x1.8p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0xf.66165p-4), asin(cf32.init(-0x1.8p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x8p-152, 0x1.31dcp+0), asin(cf32.init(0x8p-152, 0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x1.31dcp+0), asin(cf32.init(0x0p+0, 0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(0x8p-152, -0x1.31dcp+0), asin(cf32.init(0x8p-152, -0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0x1.31dcp+0), asin(cf32.init(0x0p+0, -0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, 0x1.31dcp+0), asin(cf32.init(-0x0p+0, 0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(-0x8p-152, 0x1.31dcp+0), asin(cf32.init(-0x8p-152, 0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, -0x1.31dcp+0), asin(cf32.init(-0x0p+0, -0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(-0x8p-152, -0x1.31dcp+0), asin(cf32.init(-0x8p-152, -0x1.8p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xf.66165p-4), asin(cf32.init(0x1.8p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xf.66165p-4), asin(cf32.init(0x1.8p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0xf.66165p-4), asin(cf32.init(-0x1.8p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0xf.66165p-4), asin(cf32.init(-0x1.8p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xf.66165p-4), asin(cf32.init(0x1.8p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xf.66165p-4), asin(cf32.init(0x1.8p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0xf.66165p-4), asin(cf32.init(-0x1.8p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0xf.66165p-4), asin(cf32.init(-0x1.8p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf32.init(0x5.974d68p-4, 0xe.d170ep-4), asin(cf32.init(0x8p-4, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x5.974d68p-4, -0xe.d170ep-4), asin(cf32.init(0x8p-4, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x5.974d68p-4, 0xe.d170ep-4), asin(cf32.init(-0x8p-4, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x5.974d68p-4, -0xe.d170ep-4), asin(cf32.init(-0x8p-4, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0xe.55a31p-4, 0xb.b9c9p-4), asin(cf32.init(0x1p+0, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(-0xe.55a31p-4, 0xb.b9c9p-4), asin(cf32.init(-0x1p+0, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0xe.55a31p-4, -0xb.b9c9p-4), asin(cf32.init(0x1p+0, -0x8p-4)));
    // try std.testing.expectEqual(cf32.init(-0xe.55a31p-4, -0xb.b9c9p-4), asin(cf32.init(-0x1p+0, -0x8p-4)));
    try std.testing.expectEqual(cf32.init(0x2.d2228p-4, 0xe.4787bp-4), asin(cf32.init(0x4p-4, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x2.d2228p-4, -0xe.4787bp-4), asin(cf32.init(0x4p-4, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x2.d2228p-4, 0xe.4787bp-4), asin(cf32.init(-0x4p-4, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x2.d2228p-4, -0xe.4787bp-4), asin(cf32.init(-0x4p-4, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.14edb2p+0, 0x8.281acp-4), asin(cf32.init(0x1p+0, 0x4p-4)));
    try std.testing.expectEqual(cf32.init(-0x1.14edb2p+0, 0x8.281acp-4), asin(cf32.init(-0x1p+0, 0x4p-4)));
    try std.testing.expectEqual(cf32.init(0x1.14edb2p+0, -0x8.281acp-4), asin(cf32.init(0x1p+0, -0x4p-4)));
    try std.testing.expectEqual(cf32.init(-0x1.14edb2p+0, -0x8.281acp-4), asin(cf32.init(-0x1p+0, -0x4p-4)));
    try std.testing.expectEqual(cf32.init(0x5.7ae65p-12, 0xe.1a1bep-4), asin(cf32.init(0x7.cp-12, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x5.7ae65p-12, -0xe.1a1bep-4), asin(cf32.init(0x7.cp-12, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x5.7ae65p-12, 0xe.1a1bep-4), asin(cf32.init(-0x7.cp-12, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x5.7ae65p-12, -0xe.1a1bep-4), asin(cf32.init(-0x7.cp-12, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.86fd76p+0, 0xb.2325p-8), asin(cf32.init(0x1p+0, 0x7.cp-12)));
    // try std.testing.expectEqual(cf32.init(-0x1.86fd76p+0, 0xb.2325p-8), asin(cf32.init(-0x1p+0, 0x7.cp-12)));
    // try std.testing.expectEqual(cf32.init(0x1.86fd76p+0, -0xb.2325p-8), asin(cf32.init(0x1p+0, -0x7.cp-12)));
    // try std.testing.expectEqual(cf32.init(-0x1.86fd76p+0, -0xb.2325p-8), asin(cf32.init(-0x1p+0, -0x7.cp-12)));
    // try std.testing.expectEqual(cf32.init(0x5.7ae66p-32, 0xe.1a1b3p-4), asin(cf32.init(0x7.cp-32, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x5.7ae66p-32, -0xe.1a1b3p-4), asin(cf32.init(0x7.cp-32, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x5.7ae66p-32, 0xe.1a1b3p-4), asin(cf32.init(-0x7.cp-32, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x5.7ae66p-32, -0xe.1a1b3p-4), asin(cf32.init(-0x7.cp-32, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921cecp+0, 0x2.c8ac8p-16), asin(cf32.init(0x1p+0, 0x7.cp-32)));
    try std.testing.expectEqual(cf32.init(-0x1.921cecp+0, 0x2.c8ac8p-16), asin(cf32.init(-0x1p+0, 0x7.cp-32)));
    try std.testing.expectEqual(cf32.init(0x1.921cecp+0, -0x2.c8ac8p-16), asin(cf32.init(0x1p+0, -0x7.cp-32)));
    try std.testing.expectEqual(cf32.init(-0x1.921cecp+0, -0x2.c8ac8p-16), asin(cf32.init(-0x1p+0, -0x7.cp-32)));
    // try std.testing.expectEqual(cf32.init(0x1.5eb998p-100, 0xe.1a1b3p-4), asin(cf32.init(0x1.fp-100, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.5eb998p-100, -0xe.1a1b3p-4), asin(cf32.init(0x1.fp-100, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x1.5eb998p-100, 0xe.1a1b3p-4), asin(cf32.init(-0x1.fp-100, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x1.5eb998p-100, -0xe.1a1b3p-4), asin(cf32.init(-0x1.fp-100, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x5.9159p-52), asin(cf32.init(0x1p+0, 0x1.fp-100)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x5.9159p-52), asin(cf32.init(-0x1p+0, 0x1.fp-100)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x5.9159p-52), asin(cf32.init(0x1p+0, -0x1.fp-100)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x5.9159p-52), asin(cf32.init(-0x1p+0, -0x1.fp-100)));
    // try std.testing.expectEqual(cf32.init(0xa.f5cc8p-132, 0xe.1a1b3p-4), asin(cf32.init(0xf.8p-132, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0xa.f5cc8p-132, -0xe.1a1b3p-4), asin(cf32.init(0xf.8p-132, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0xa.f5cc8p-132, 0xe.1a1b3p-4), asin(cf32.init(-0xf.8p-132, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0xa.f5cc8p-132, -0xe.1a1b3p-4), asin(cf32.init(-0xf.8p-132, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xf.bf7dfp-68), asin(cf32.init(0x1p+0, 0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0xf.bf7dfp-68), asin(cf32.init(-0x1p+0, 0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xf.bf7dfp-68), asin(cf32.init(0x1p+0, -0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0xf.bf7dfp-68), asin(cf32.init(-0x1p+0, -0xf.8p-132)));
    // try std.testing.expectEqual(cf32.init(0x8p-152, 0xe.1a1b3p-4), asin(cf32.init(0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, 0xe.1a1b3p-4), asin(cf32.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x8p-152, -0xe.1a1b3p-4), asin(cf32.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, -0xe.1a1b3p-4), asin(cf32.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, 0xe.1a1b3p-4), asin(cf32.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x8p-152, 0xe.1a1b3p-4), asin(cf32.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, -0xe.1a1b3p-4), asin(cf32.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x8p-152, -0xe.1a1b3p-4), asin(cf32.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2.d413ccp-76), asin(cf32.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), asin(cf32.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x2.d413ccp-76), asin(cf32.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x0p+0), asin(cf32.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), asin(cf32.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2.d413ccp-76), asin(cf32.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x0p+0), asin(cf32.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x2.d413ccp-76), asin(cf32.init(-0x1p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf32.init(0x8p-152, 0xe.1a1b3p-4), asin(cf32.init(0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, 0xe.1a1b3p-4), asin(cf32.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x8p-152, -0xe.1a1b3p-4), asin(cf32.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, -0xe.1a1b3p-4), asin(cf32.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, 0xe.1a1b3p-4), asin(cf32.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x8p-152, 0xe.1a1b3p-4), asin(cf32.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, -0xe.1a1b3p-4), asin(cf32.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x8p-152, -0xe.1a1b3p-4), asin(cf32.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2.d413ccp-76), asin(cf32.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), asin(cf32.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x2.d413ccp-76), asin(cf32.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x0p+0), asin(cf32.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), asin(cf32.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2.d413ccp-76), asin(cf32.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x0p+0), asin(cf32.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x2.d413ccp-76), asin(cf32.init(-0x1p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf32.init(0x8p-152, 0xe.1a1b3p-4), asin(cf32.init(0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, 0xe.1a1b3p-4), asin(cf32.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x8p-152, -0xe.1a1b3p-4), asin(cf32.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, -0xe.1a1b3p-4), asin(cf32.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, 0xe.1a1b3p-4), asin(cf32.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x8p-152, 0xe.1a1b3p-4), asin(cf32.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, -0xe.1a1b3p-4), asin(cf32.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x8p-152, -0xe.1a1b3p-4), asin(cf32.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2.d413ccp-76), asin(cf32.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), asin(cf32.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x2.d413ccp-76), asin(cf32.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x0p+0), asin(cf32.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), asin(cf32.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2.d413ccp-76), asin(cf32.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x0p+0), asin(cf32.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x2.d413ccp-76), asin(cf32.init(-0x1p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf32.init(0x8p-152, 0xe.1a1b3p-4), asin(cf32.init(0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, 0xe.1a1b3p-4), asin(cf32.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x8p-152, -0xe.1a1b3p-4), asin(cf32.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, -0xe.1a1b3p-4), asin(cf32.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, 0xe.1a1b3p-4), asin(cf32.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x8p-152, 0xe.1a1b3p-4), asin(cf32.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, -0xe.1a1b3p-4), asin(cf32.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x8p-152, -0xe.1a1b3p-4), asin(cf32.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2.d413ccp-76), asin(cf32.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), asin(cf32.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x2.d413ccp-76), asin(cf32.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x0p+0), asin(cf32.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), asin(cf32.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2.d413ccp-76), asin(cf32.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x0p+0), asin(cf32.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x2.d413ccp-76), asin(cf32.init(-0x1p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf32.init(0x1.6a09e4p-24, 0xe.1a1b4p-4), asin(cf32.init(0x2p-24, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.6a09e4p-24, -0xe.1a1b4p-4), asin(cf32.init(0x2p-24, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(-0x1.6a09e4p-24, 0xe.1a1b4p-4), asin(cf32.init(-0x2p-24, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(-0x1.6a09e4p-24, -0xe.1a1b4p-4), asin(cf32.init(-0x2p-24, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921126p+0, 0x2.3286b8p-12), asin(cf32.init(0x1.000002p+0, 0x2p-24)));
    // try std.testing.expectEqual(cf32.init(-0x1.921126p+0, 0x2.3286b8p-12), asin(cf32.init(-0x1.000002p+0, 0x2p-24)));
    // try std.testing.expectEqual(cf32.init(0x1.921126p+0, -0x2.3286b8p-12), asin(cf32.init(0x1.000002p+0, -0x2p-24)));
    // try std.testing.expectEqual(cf32.init(-0x1.921126p+0, -0x2.3286b8p-12), asin(cf32.init(-0x1.000002p+0, -0x2p-24)));
    try std.testing.expectEqual(cf32.init(0xa.f5cc8p-132, 0xe.1a1b4p-4), asin(cf32.init(0xf.8p-132, 0x1.000002p+0)));
    try std.testing.expectEqual(cf32.init(0xa.f5cc8p-132, -0xe.1a1b4p-4), asin(cf32.init(0xf.8p-132, -0x1.000002p+0)));
    try std.testing.expectEqual(cf32.init(-0xa.f5cc8p-132, 0xe.1a1b4p-4), asin(cf32.init(-0xf.8p-132, 0x1.000002p+0)));
    try std.testing.expectEqual(cf32.init(-0xa.f5cc8p-132, -0xe.1a1b4p-4), asin(cf32.init(-0xf.8p-132, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2p-12), asin(cf32.init(0x1.000002p+0, 0xf.8p-132)));
    // try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x2p-12), asin(cf32.init(-0x1.000002p+0, 0xf.8p-132)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2p-12), asin(cf32.init(0x1.000002p+0, -0xf.8p-132)));
    // try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x2p-12), asin(cf32.init(-0x1.000002p+0, -0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0xe.1a1b4p-4), asin(cf32.init(0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0xe.1a1b4p-4), asin(cf32.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, 0xe.1a1b4p-4), asin(cf32.init(-0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, -0xe.1a1b4p-4), asin(cf32.init(-0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2p-12), asin(cf32.init(0x1.000002p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x2p-12), asin(cf32.init(-0x1.000002p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2p-12), asin(cf32.init(0x1.000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x2p-12), asin(cf32.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0xb.504f2p-56, 0xe.1a1b4p-4), asin(cf32.init(0x1p-52, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0xb.504f3p-56, 0xe.1a1b3p-4), asin(cf32.init(0x1p-52, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0xb.504f3p-56, -0xe.1a1b3p-4), asin(cf32.init(0x1p-52, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0xb.504f2p-56, -0xe.1a1b4p-4), asin(cf32.init(0x1p-52, -0x1.000002p+0)));
    try std.testing.expectEqual(cf32.init(-0xb.504f2p-56, 0xe.1a1b4p-4), asin(cf32.init(-0x1p-52, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(-0xb.504f3p-56, 0xe.1a1b3p-4), asin(cf32.init(-0x1p-52, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0xb.504f3p-56, -0xe.1a1b3p-4), asin(cf32.init(-0x1p-52, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0xb.504f2p-56, -0xe.1a1b4p-4), asin(cf32.init(-0x1p-52, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2p-12), asin(cf32.init(0x1.000002p+0, 0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x4p-28), asin(cf32.init(0x1p+0, 0x1p-52)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x4p-28), asin(cf32.init(-0x1p+0, 0x1p-52)));
    // try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x2p-12), asin(cf32.init(-0x1.000002p+0, 0x1p-52)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2p-12), asin(cf32.init(0x1.000002p+0, -0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x4p-28), asin(cf32.init(0x1p+0, -0x1p-52)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x4p-28), asin(cf32.init(-0x1p+0, -0x1p-52)));
    // try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x2p-12), asin(cf32.init(-0x1.000002p+0, -0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x8p-152, 0xe.1a1b4p-4), asin(cf32.init(0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x8p-152, 0xe.1a1b3p-4), asin(cf32.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0xe.1a1b4p-4), asin(cf32.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, 0xe.1a1b3p-4), asin(cf32.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x8p-152, -0xe.1a1b3p-4), asin(cf32.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x8p-152, -0xe.1a1b4p-4), asin(cf32.init(0x8p-152, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, -0xe.1a1b3p-4), asin(cf32.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0xe.1a1b4p-4), asin(cf32.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, 0xe.1a1b4p-4), asin(cf32.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, 0xe.1a1b3p-4), asin(cf32.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x8p-152, 0xe.1a1b4p-4), asin(cf32.init(-0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(-0x8p-152, 0xe.1a1b3p-4), asin(cf32.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, -0xe.1a1b3p-4), asin(cf32.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, -0xe.1a1b4p-4), asin(cf32.init(-0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(-0x8p-152, -0xe.1a1b3p-4), asin(cf32.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x8p-152, -0xe.1a1b4p-4), asin(cf32.init(-0x8p-152, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2p-12), asin(cf32.init(0x1.000002p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2p-12), asin(cf32.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2.d413ccp-76), asin(cf32.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), asin(cf32.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x2.d413ccp-76), asin(cf32.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x0p+0), asin(cf32.init(-0x1p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x2p-12), asin(cf32.init(-0x1.000002p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x2p-12), asin(cf32.init(-0x1.000002p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2p-12), asin(cf32.init(0x1.000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2p-12), asin(cf32.init(0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), asin(cf32.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2.d413ccp-76), asin(cf32.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x0p+0), asin(cf32.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x2.d413ccp-76), asin(cf32.init(-0x1p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x2p-12), asin(cf32.init(-0x1.000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x2p-12), asin(cf32.init(-0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0xe.1a1b4p-4), asin(cf32.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, 0xe.1a1b3p-4), asin(cf32.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, -0xe.1a1b3p-4), asin(cf32.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0xe.1a1b4p-4), asin(cf32.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, 0xe.1a1b4p-4), asin(cf32.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, 0xe.1a1b3p-4), asin(cf32.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, -0xe.1a1b3p-4), asin(cf32.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, -0xe.1a1b4p-4), asin(cf32.init(-0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2p-12), asin(cf32.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), asin(cf32.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x0p+0), asin(cf32.init(-0x1p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x2p-12), asin(cf32.init(-0x1.000002p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2p-12), asin(cf32.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), asin(cf32.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x0p+0), asin(cf32.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x2p-12), asin(cf32.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e4p-64, 0xe.1a1b4p-4), asin(cf32.init(0x2p-64, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.6a09e6p-64, 0xe.1a1b3p-4), asin(cf32.init(0x2p-64, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.6a09e6p-64, -0xe.1a1b3p-4), asin(cf32.init(0x2p-64, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e4p-64, -0xe.1a1b4p-4), asin(cf32.init(0x2p-64, -0x1.000002p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.6a09e4p-64, 0xe.1a1b4p-4), asin(cf32.init(-0x2p-64, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(-0x1.6a09e6p-64, 0xe.1a1b3p-4), asin(cf32.init(-0x2p-64, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x1.6a09e6p-64, -0xe.1a1b3p-4), asin(cf32.init(-0x2p-64, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.6a09e4p-64, -0xe.1a1b4p-4), asin(cf32.init(-0x2p-64, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2p-12), asin(cf32.init(0x1.000002p+0, 0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x1.6a09e6p-32), asin(cf32.init(0x1p+0, 0x2p-64)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x1.6a09e6p-32), asin(cf32.init(-0x1p+0, 0x2p-64)));
    // try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x2p-12), asin(cf32.init(-0x1.000002p+0, 0x2p-64)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2p-12), asin(cf32.init(0x1.000002p+0, -0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x1.6a09e6p-32), asin(cf32.init(0x1p+0, -0x2p-64)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x1.6a09e6p-32), asin(cf32.init(-0x1p+0, -0x2p-64)));
    // try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x2p-12), asin(cf32.init(-0x1.000002p+0, -0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x8p-152, 0xe.1a1b4p-4), asin(cf32.init(0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x8p-152, 0xe.1a1b3p-4), asin(cf32.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0xe.1a1b4p-4), asin(cf32.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, 0xe.1a1b3p-4), asin(cf32.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x8p-152, -0xe.1a1b3p-4), asin(cf32.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x8p-152, -0xe.1a1b4p-4), asin(cf32.init(0x8p-152, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, -0xe.1a1b3p-4), asin(cf32.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0xe.1a1b4p-4), asin(cf32.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, 0xe.1a1b4p-4), asin(cf32.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, 0xe.1a1b3p-4), asin(cf32.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x8p-152, 0xe.1a1b4p-4), asin(cf32.init(-0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(-0x8p-152, 0xe.1a1b3p-4), asin(cf32.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, -0xe.1a1b3p-4), asin(cf32.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, -0xe.1a1b4p-4), asin(cf32.init(-0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(-0x8p-152, -0xe.1a1b3p-4), asin(cf32.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x8p-152, -0xe.1a1b4p-4), asin(cf32.init(-0x8p-152, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2p-12), asin(cf32.init(0x1.000002p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2p-12), asin(cf32.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2.d413ccp-76), asin(cf32.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), asin(cf32.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x2.d413ccp-76), asin(cf32.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x0p+0), asin(cf32.init(-0x1p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x2p-12), asin(cf32.init(-0x1.000002p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x2p-12), asin(cf32.init(-0x1.000002p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2p-12), asin(cf32.init(0x1.000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2p-12), asin(cf32.init(0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), asin(cf32.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2.d413ccp-76), asin(cf32.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x0p+0), asin(cf32.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x2.d413ccp-76), asin(cf32.init(-0x1p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x2p-12), asin(cf32.init(-0x1.000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x2p-12), asin(cf32.init(-0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0xe.1a1b4p-4), asin(cf32.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, 0xe.1a1b3p-4), asin(cf32.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, -0xe.1a1b3p-4), asin(cf32.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0xe.1a1b4p-4), asin(cf32.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, 0xe.1a1b4p-4), asin(cf32.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, 0xe.1a1b3p-4), asin(cf32.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, -0xe.1a1b3p-4), asin(cf32.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, -0xe.1a1b4p-4), asin(cf32.init(-0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2p-12), asin(cf32.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), asin(cf32.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x0p+0), asin(cf32.init(-0x1p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x2p-12), asin(cf32.init(-0x1.000002p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2p-12), asin(cf32.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), asin(cf32.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x0p+0), asin(cf32.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x2p-12), asin(cf32.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x2.d413c8p-108, 0xe.1a1b4p-4), asin(cf32.init(0x4p-108, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x2.d413ccp-108, 0xe.1a1b3p-4), asin(cf32.init(0x4p-108, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x2.d413ccp-108, -0xe.1a1b3p-4), asin(cf32.init(0x4p-108, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x2.d413c8p-108, -0xe.1a1b4p-4), asin(cf32.init(0x4p-108, -0x1.000002p+0)));
    try std.testing.expectEqual(cf32.init(-0x2.d413c8p-108, 0xe.1a1b4p-4), asin(cf32.init(-0x4p-108, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(-0x2.d413ccp-108, 0xe.1a1b3p-4), asin(cf32.init(-0x4p-108, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x2.d413ccp-108, -0xe.1a1b3p-4), asin(cf32.init(-0x4p-108, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x2.d413c8p-108, -0xe.1a1b4p-4), asin(cf32.init(-0x4p-108, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2p-12), asin(cf32.init(0x1.000002p+0, 0x4p-108)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x8p-56), asin(cf32.init(0x1p+0, 0x4p-108)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x8p-56), asin(cf32.init(-0x1p+0, 0x4p-108)));
    // try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x2p-12), asin(cf32.init(-0x1.000002p+0, 0x4p-108)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2p-12), asin(cf32.init(0x1.000002p+0, -0x4p-108)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x8p-56), asin(cf32.init(0x1p+0, -0x4p-108)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x8p-56), asin(cf32.init(-0x1p+0, -0x4p-108)));
    // try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x2p-12), asin(cf32.init(-0x1.000002p+0, -0x4p-108)));
    try std.testing.expectEqual(cf32.init(0x8p-152, 0xe.1a1b4p-4), asin(cf32.init(0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x8p-152, 0xe.1a1b3p-4), asin(cf32.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0xe.1a1b4p-4), asin(cf32.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, 0xe.1a1b3p-4), asin(cf32.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x8p-152, -0xe.1a1b3p-4), asin(cf32.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x8p-152, -0xe.1a1b4p-4), asin(cf32.init(0x8p-152, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, -0xe.1a1b3p-4), asin(cf32.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0xe.1a1b4p-4), asin(cf32.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, 0xe.1a1b4p-4), asin(cf32.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, 0xe.1a1b3p-4), asin(cf32.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x8p-152, 0xe.1a1b4p-4), asin(cf32.init(-0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(-0x8p-152, 0xe.1a1b3p-4), asin(cf32.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, -0xe.1a1b3p-4), asin(cf32.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, -0xe.1a1b4p-4), asin(cf32.init(-0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(-0x8p-152, -0xe.1a1b3p-4), asin(cf32.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x8p-152, -0xe.1a1b4p-4), asin(cf32.init(-0x8p-152, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2p-12), asin(cf32.init(0x1.000002p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2p-12), asin(cf32.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2.d413ccp-76), asin(cf32.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), asin(cf32.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x2.d413ccp-76), asin(cf32.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x0p+0), asin(cf32.init(-0x1p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x2p-12), asin(cf32.init(-0x1.000002p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x2p-12), asin(cf32.init(-0x1.000002p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2p-12), asin(cf32.init(0x1.000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2p-12), asin(cf32.init(0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), asin(cf32.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2.d413ccp-76), asin(cf32.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x0p+0), asin(cf32.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x2.d413ccp-76), asin(cf32.init(-0x1p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x2p-12), asin(cf32.init(-0x1.000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x2p-12), asin(cf32.init(-0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0xe.1a1b4p-4), asin(cf32.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, 0xe.1a1b3p-4), asin(cf32.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, -0xe.1a1b3p-4), asin(cf32.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0xe.1a1b4p-4), asin(cf32.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, 0xe.1a1b4p-4), asin(cf32.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, 0xe.1a1b3p-4), asin(cf32.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, -0xe.1a1b3p-4), asin(cf32.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, -0xe.1a1b4p-4), asin(cf32.init(-0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2p-12), asin(cf32.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), asin(cf32.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x0p+0), asin(cf32.init(-0x1p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x2p-12), asin(cf32.init(-0x1.000002p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2p-12), asin(cf32.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), asin(cf32.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x0p+0), asin(cf32.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x2p-12), asin(cf32.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x5.a8279p-116, 0xe.1a1b4p-4), asin(cf32.init(0x8p-116, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x5.a82798p-116, 0xe.1a1b3p-4), asin(cf32.init(0x8p-116, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x5.a82798p-116, -0xe.1a1b3p-4), asin(cf32.init(0x8p-116, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x5.a8279p-116, -0xe.1a1b4p-4), asin(cf32.init(0x8p-116, -0x1.000002p+0)));
    try std.testing.expectEqual(cf32.init(-0x5.a8279p-116, 0xe.1a1b4p-4), asin(cf32.init(-0x8p-116, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(-0x5.a82798p-116, 0xe.1a1b3p-4), asin(cf32.init(-0x8p-116, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x5.a82798p-116, -0xe.1a1b3p-4), asin(cf32.init(-0x8p-116, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x5.a8279p-116, -0xe.1a1b4p-4), asin(cf32.init(-0x8p-116, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2p-12), asin(cf32.init(0x1.000002p+0, 0x8p-116)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xb.504f3p-60), asin(cf32.init(0x1p+0, 0x8p-116)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0xb.504f3p-60), asin(cf32.init(-0x1p+0, 0x8p-116)));
    // try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x2p-12), asin(cf32.init(-0x1.000002p+0, 0x8p-116)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2p-12), asin(cf32.init(0x1.000002p+0, -0x8p-116)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xb.504f3p-60), asin(cf32.init(0x1p+0, -0x8p-116)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0xb.504f3p-60), asin(cf32.init(-0x1p+0, -0x8p-116)));
    // try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x2p-12), asin(cf32.init(-0x1.000002p+0, -0x8p-116)));
    try std.testing.expectEqual(cf32.init(0x8p-152, 0xe.1a1b4p-4), asin(cf32.init(0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x8p-152, 0xe.1a1b3p-4), asin(cf32.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0xe.1a1b4p-4), asin(cf32.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, 0xe.1a1b3p-4), asin(cf32.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x8p-152, -0xe.1a1b3p-4), asin(cf32.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x8p-152, -0xe.1a1b4p-4), asin(cf32.init(0x8p-152, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, -0xe.1a1b3p-4), asin(cf32.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0xe.1a1b4p-4), asin(cf32.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, 0xe.1a1b4p-4), asin(cf32.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, 0xe.1a1b3p-4), asin(cf32.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x8p-152, 0xe.1a1b4p-4), asin(cf32.init(-0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(-0x8p-152, 0xe.1a1b3p-4), asin(cf32.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, -0xe.1a1b3p-4), asin(cf32.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, -0xe.1a1b4p-4), asin(cf32.init(-0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(-0x8p-152, -0xe.1a1b3p-4), asin(cf32.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x8p-152, -0xe.1a1b4p-4), asin(cf32.init(-0x8p-152, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2p-12), asin(cf32.init(0x1.000002p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2p-12), asin(cf32.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2.d413ccp-76), asin(cf32.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), asin(cf32.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x2.d413ccp-76), asin(cf32.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x0p+0), asin(cf32.init(-0x1p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x2p-12), asin(cf32.init(-0x1.000002p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x2p-12), asin(cf32.init(-0x1.000002p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2p-12), asin(cf32.init(0x1.000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2p-12), asin(cf32.init(0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), asin(cf32.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2.d413ccp-76), asin(cf32.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x0p+0), asin(cf32.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x2.d413ccp-76), asin(cf32.init(-0x1p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x2p-12), asin(cf32.init(-0x1.000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x2p-12), asin(cf32.init(-0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0xe.1a1b4p-4), asin(cf32.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, 0xe.1a1b3p-4), asin(cf32.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, -0xe.1a1b3p-4), asin(cf32.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0xe.1a1b4p-4), asin(cf32.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, 0xe.1a1b4p-4), asin(cf32.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, 0xe.1a1b3p-4), asin(cf32.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, -0xe.1a1b3p-4), asin(cf32.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, -0xe.1a1b4p-4), asin(cf32.init(-0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2p-12), asin(cf32.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), asin(cf32.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x0p+0), asin(cf32.init(-0x1p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x2p-12), asin(cf32.init(-0x1.000002p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2p-12), asin(cf32.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), asin(cf32.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x0p+0), asin(cf32.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x2p-12), asin(cf32.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e8p-24, 0xe.1a1b2p-4), asin(cf32.init(0x2p-24, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x1.6a09e8p-24, -0xe.1a1b2p-4), asin(cf32.init(0x2p-24, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(-0x1.6a09e8p-24, 0xe.1a1b2p-4), asin(cf32.init(-0x2p-24, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(-0x1.6a09e8p-24, -0xe.1a1b2p-4), asin(cf32.init(-0x2p-24, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.9202ecp+0, 0x1.1c9e02p-12), asin(cf32.init(0xf.fffffp-4, 0x2p-24)));
    // try std.testing.expectEqual(cf32.init(-0x1.9202ecp+0, 0x1.1c9e02p-12), asin(cf32.init(-0xf.fffffp-4, 0x2p-24)));
    // try std.testing.expectEqual(cf32.init(0x1.9202ecp+0, -0x1.1c9e02p-12), asin(cf32.init(0xf.fffffp-4, -0x2p-24)));
    // try std.testing.expectEqual(cf32.init(-0x1.9202ecp+0, -0x1.1c9e02p-12), asin(cf32.init(-0xf.fffffp-4, -0x2p-24)));
    try std.testing.expectEqual(cf32.init(0xa.f5cc8p-132, 0xe.1a1b2p-4), asin(cf32.init(0xf.8p-132, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0xa.f5cc8p-132, -0xe.1a1b2p-4), asin(cf32.init(0xf.8p-132, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(-0xa.f5cc8p-132, 0xe.1a1b2p-4), asin(cf32.init(-0xf.8p-132, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(-0xa.f5cc8p-132, -0xe.1a1b2p-4), asin(cf32.init(-0xf.8p-132, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x1.920914p+0, 0xa.f5cccp-120), asin(cf32.init(0xf.fffffp-4, 0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(-0x1.920914p+0, 0xa.f5cccp-120), asin(cf32.init(-0xf.fffffp-4, 0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(0x1.920914p+0, -0xa.f5cccp-120), asin(cf32.init(0xf.fffffp-4, -0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(-0x1.920914p+0, -0xa.f5cccp-120), asin(cf32.init(-0xf.fffffp-4, -0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0xe.1a1b2p-4), asin(cf32.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0xe.1a1b2p-4), asin(cf32.init(0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, 0xe.1a1b2p-4), asin(cf32.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, -0xe.1a1b2p-4), asin(cf32.init(-0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x1.920914p+0, 0x0p+0), asin(cf32.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.920914p+0, 0x0p+0), asin(cf32.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.920914p+0, -0x0p+0), asin(cf32.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.920914p+0, -0x0p+0), asin(cf32.init(-0xf.fffffp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.c9f25cp-24, 0x7.b30b28p-4), asin(cf32.init(0x2p-24, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x1.c9f25cp-24, -0x7.b30b28p-4), asin(cf32.init(0x2p-24, -0x8p-4)));
    // try std.testing.expectEqual(cf32.init(-0x1.c9f25cp-24, 0x7.b30b28p-4), asin(cf32.init(-0x2p-24, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(-0x1.c9f25cp-24, -0x7.b30b28p-4), asin(cf32.init(-0x2p-24, -0x8p-4)));
    try std.testing.expectEqual(cf32.init(0x8.60a92p-4, 0x2.4f34e8p-24), asin(cf32.init(0x8p-4, 0x2p-24)));
    try std.testing.expectEqual(cf32.init(-0x8.60a92p-4, 0x2.4f34e8p-24), asin(cf32.init(-0x8p-4, 0x2p-24)));
    try std.testing.expectEqual(cf32.init(0x8.60a92p-4, -0x2.4f34e8p-24), asin(cf32.init(0x8p-4, -0x2p-24)));
    try std.testing.expectEqual(cf32.init(-0x8.60a92p-4, -0x2.4f34e8p-24), asin(cf32.init(-0x8p-4, -0x2p-24)));
    // try std.testing.expectEqual(cf32.init(0xd.dd168p-132, 0x7.b30b28p-4), asin(cf32.init(0xf.8p-132, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0xd.dd168p-132, -0x7.b30b28p-4), asin(cf32.init(0xf.8p-132, -0x8p-4)));
    // try std.testing.expectEqual(cf32.init(-0xd.dd168p-132, 0x7.b30b28p-4), asin(cf32.init(-0xf.8p-132, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(-0xd.dd168p-132, -0x7.b30b28p-4), asin(cf32.init(-0xf.8p-132, -0x8p-4)));
    try std.testing.expectEqual(cf32.init(0x8.60a92p-4, 0x1.1e5dap-128), asin(cf32.init(0x8p-4, 0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(-0x8.60a92p-4, 0x1.1e5dap-128), asin(cf32.init(-0x8p-4, 0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(0x8.60a92p-4, -0x1.1e5dap-128), asin(cf32.init(0x8p-4, -0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(-0x8.60a92p-4, -0x1.1e5dap-128), asin(cf32.init(-0x8p-4, -0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(0x2p-24, 0x2p-24), asin(cf32.init(0x2p-24, 0x2p-24)));
    try std.testing.expectEqual(cf32.init(0x2p-24, -0x2p-24), asin(cf32.init(0x2p-24, -0x2p-24)));
    try std.testing.expectEqual(cf32.init(-0x2p-24, 0x2p-24), asin(cf32.init(-0x2p-24, 0x2p-24)));
    try std.testing.expectEqual(cf32.init(-0x2p-24, -0x2p-24), asin(cf32.init(-0x2p-24, -0x2p-24)));
    try std.testing.expectEqual(cf32.init(0xf.8p-132, 0x2p-24), asin(cf32.init(0xf.8p-132, 0x2p-24)));
    try std.testing.expectEqual(cf32.init(0xf.8p-132, -0x2p-24), asin(cf32.init(0xf.8p-132, -0x2p-24)));
    try std.testing.expectEqual(cf32.init(-0xf.8p-132, 0x2p-24), asin(cf32.init(-0xf.8p-132, 0x2p-24)));
    try std.testing.expectEqual(cf32.init(-0xf.8p-132, -0x2p-24), asin(cf32.init(-0xf.8p-132, -0x2p-24)));
    try std.testing.expectEqual(cf32.init(0x2p-24, 0xf.8p-132), asin(cf32.init(0x2p-24, 0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(-0x2p-24, 0xf.8p-132), asin(cf32.init(-0x2p-24, 0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(0x2p-24, -0xf.8p-132), asin(cf32.init(0x2p-24, -0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(-0x2p-24, -0xf.8p-132), asin(cf32.init(-0x2p-24, -0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x2p-24), asin(cf32.init(0x0p+0, 0x2p-24)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0x2p-24), asin(cf32.init(0x0p+0, -0x2p-24)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, 0x2p-24), asin(cf32.init(-0x0p+0, 0x2p-24)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, -0x2p-24), asin(cf32.init(-0x0p+0, -0x2p-24)));
    try std.testing.expectEqual(cf32.init(0x2p-24, 0x0p+0), asin(cf32.init(0x2p-24, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x2p-24, 0x0p+0), asin(cf32.init(-0x2p-24, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x2p-24, -0x0p+0), asin(cf32.init(0x2p-24, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x2p-24, -0x0p+0), asin(cf32.init(-0x2p-24, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0xf.8p-132, 0xf.8p-132), asin(cf32.init(0xf.8p-132, 0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(0xf.8p-132, -0xf.8p-132), asin(cf32.init(0xf.8p-132, -0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(-0xf.8p-132, 0xf.8p-132), asin(cf32.init(-0xf.8p-132, 0xf.8p-132)));
    try std.testing.expectEqual(cf32.init(-0xf.8p-132, -0xf.8p-132), asin(cf32.init(-0xf.8p-132, -0xf.8p-132)));
    // try std.testing.expectEqual(cf32.init(0xb.504f3p-56, 0xe.1a1b3p-4), asin(cf32.init(0x1p-52, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0xb.504f4p-56, 0xe.1a1b2p-4), asin(cf32.init(0x1p-52, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0xb.504f4p-56, -0xe.1a1b2p-4), asin(cf32.init(0x1p-52, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0xb.504f3p-56, -0xe.1a1b3p-4), asin(cf32.init(0x1p-52, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0xb.504f3p-56, 0xe.1a1b3p-4), asin(cf32.init(-0x1p-52, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0xb.504f4p-56, 0xe.1a1b2p-4), asin(cf32.init(-0x1p-52, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(-0xb.504f4p-56, -0xe.1a1b2p-4), asin(cf32.init(-0x1p-52, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(-0xb.504f3p-56, -0xe.1a1b3p-4), asin(cf32.init(-0x1p-52, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x4p-28), asin(cf32.init(0x1p+0, 0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x1.920914p+0, 0xb.504f3p-44), asin(cf32.init(0xf.fffffp-4, 0x1p-52)));
    try std.testing.expectEqual(cf32.init(-0x1.920914p+0, 0xb.504f3p-44), asin(cf32.init(-0xf.fffffp-4, 0x1p-52)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x4p-28), asin(cf32.init(-0x1p+0, 0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x4p-28), asin(cf32.init(0x1p+0, -0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x1.920914p+0, -0xb.504f3p-44), asin(cf32.init(0xf.fffffp-4, -0x1p-52)));
    try std.testing.expectEqual(cf32.init(-0x1.920914p+0, -0xb.504f3p-44), asin(cf32.init(-0xf.fffffp-4, -0x1p-52)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x4p-28), asin(cf32.init(-0x1p+0, -0x1p-52)));
    // try std.testing.expectEqual(cf32.init(0x8p-152, 0xe.1a1b3p-4), asin(cf32.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x8p-152, 0xe.1a1b2p-4), asin(cf32.init(0x8p-152, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, 0xe.1a1b3p-4), asin(cf32.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0xe.1a1b2p-4), asin(cf32.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x8p-152, -0xe.1a1b2p-4), asin(cf32.init(0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x8p-152, -0xe.1a1b3p-4), asin(cf32.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0xe.1a1b2p-4), asin(cf32.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, -0xe.1a1b3p-4), asin(cf32.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, 0xe.1a1b3p-4), asin(cf32.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, 0xe.1a1b2p-4), asin(cf32.init(-0x0p+0, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(-0x8p-152, 0xe.1a1b3p-4), asin(cf32.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x8p-152, 0xe.1a1b2p-4), asin(cf32.init(-0x8p-152, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, -0xe.1a1b2p-4), asin(cf32.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, -0xe.1a1b3p-4), asin(cf32.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x8p-152, -0xe.1a1b2p-4), asin(cf32.init(-0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(-0x8p-152, -0xe.1a1b3p-4), asin(cf32.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2.d413ccp-76), asin(cf32.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), asin(cf32.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.920914p+0, 0x5.a8p-140), asin(cf32.init(0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.920914p+0, 0x0p+0), asin(cf32.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.920914p+0, 0x5.a8p-140), asin(cf32.init(-0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x1.920914p+0, 0x0p+0), asin(cf32.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x2.d413ccp-76), asin(cf32.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x0p+0), asin(cf32.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), asin(cf32.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2.d413ccp-76), asin(cf32.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.920914p+0, -0x0p+0), asin(cf32.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.920914p+0, -0x5.a8p-140), asin(cf32.init(0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x1.920914p+0, -0x0p+0), asin(cf32.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.920914p+0, -0x5.a8p-140), asin(cf32.init(-0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x0p+0), asin(cf32.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x2.d413ccp-76), asin(cf32.init(-0x1p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, 0xe.1a1b3p-4), asin(cf32.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0xe.1a1b2p-4), asin(cf32.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0xe.1a1b2p-4), asin(cf32.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, -0xe.1a1b3p-4), asin(cf32.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, 0xe.1a1b3p-4), asin(cf32.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, 0xe.1a1b2p-4), asin(cf32.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, -0xe.1a1b2p-4), asin(cf32.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, -0xe.1a1b3p-4), asin(cf32.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), asin(cf32.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.920914p+0, 0x0p+0), asin(cf32.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.920914p+0, 0x0p+0), asin(cf32.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x0p+0), asin(cf32.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), asin(cf32.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.920914p+0, -0x0p+0), asin(cf32.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.920914p+0, -0x0p+0), asin(cf32.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x0p+0), asin(cf32.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0xe.4f92ep-56, 0x7.b30b28p-4), asin(cf32.init(0x1p-52, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0xe.4f92ep-56, -0x7.b30b28p-4), asin(cf32.init(0x1p-52, -0x8p-4)));
    // try std.testing.expectEqual(cf32.init(-0xe.4f92ep-56, 0x7.b30b28p-4), asin(cf32.init(-0x1p-52, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(-0xe.4f92ep-56, -0x7.b30b28p-4), asin(cf32.init(-0x1p-52, -0x8p-4)));
    try std.testing.expectEqual(cf32.init(0x8.60a92p-4, 0x1.279a74p-52), asin(cf32.init(0x8p-4, 0x1p-52)));
    try std.testing.expectEqual(cf32.init(-0x8.60a92p-4, 0x1.279a74p-52), asin(cf32.init(-0x8p-4, 0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x8.60a92p-4, -0x1.279a74p-52), asin(cf32.init(0x8p-4, -0x1p-52)));
    try std.testing.expectEqual(cf32.init(-0x8.60a92p-4, -0x1.279a74p-52), asin(cf32.init(-0x8p-4, -0x1p-52)));
    // try std.testing.expectEqual(cf32.init(0x8p-152, 0x7.b30b28p-4), asin(cf32.init(0x8p-152, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, 0x7.b30b28p-4), asin(cf32.init(0x0p+0, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x8p-152, -0x7.b30b28p-4), asin(cf32.init(0x8p-152, -0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, -0x7.b30b28p-4), asin(cf32.init(0x0p+0, -0x8p-4)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, 0x7.b30b28p-4), asin(cf32.init(-0x0p+0, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(-0x8p-152, 0x7.b30b28p-4), asin(cf32.init(-0x8p-152, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, -0x7.b30b28p-4), asin(cf32.init(-0x0p+0, -0x8p-4)));
    // try std.testing.expectEqual(cf32.init(-0x8p-152, -0x7.b30b28p-4), asin(cf32.init(-0x8p-152, -0x8p-4)));
    try std.testing.expectEqual(cf32.init(0x8.60a92p-4, 0x8p-152), asin(cf32.init(0x8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x8.60a92p-4, 0x0p+0), asin(cf32.init(0x8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x8.60a92p-4, 0x8p-152), asin(cf32.init(-0x8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x8.60a92p-4, 0x0p+0), asin(cf32.init(-0x8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x8.60a92p-4, -0x0p+0), asin(cf32.init(0x8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x8.60a92p-4, -0x8p-152), asin(cf32.init(0x8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x8.60a92p-4, -0x0p+0), asin(cf32.init(-0x8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x8.60a92p-4, -0x8p-152), asin(cf32.init(-0x8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1p-52, 0x1p-52), asin(cf32.init(0x1p-52, 0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x1p-52, -0x1p-52), asin(cf32.init(0x1p-52, -0x1p-52)));
    try std.testing.expectEqual(cf32.init(-0x1p-52, 0x1p-52), asin(cf32.init(-0x1p-52, 0x1p-52)));
    try std.testing.expectEqual(cf32.init(-0x1p-52, -0x1p-52), asin(cf32.init(-0x1p-52, -0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x8p-152, 0x1p-52), asin(cf32.init(0x8p-152, 0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x1p-52), asin(cf32.init(0x0p+0, 0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x8p-152, -0x1p-52), asin(cf32.init(0x8p-152, -0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0x1p-52), asin(cf32.init(0x0p+0, -0x1p-52)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, 0x1p-52), asin(cf32.init(-0x0p+0, 0x1p-52)));
    try std.testing.expectEqual(cf32.init(-0x8p-152, 0x1p-52), asin(cf32.init(-0x8p-152, 0x1p-52)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, -0x1p-52), asin(cf32.init(-0x0p+0, -0x1p-52)));
    try std.testing.expectEqual(cf32.init(-0x8p-152, -0x1p-52), asin(cf32.init(-0x8p-152, -0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x1p-52, 0x8p-152), asin(cf32.init(0x1p-52, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1p-52, 0x0p+0), asin(cf32.init(0x1p-52, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1p-52, 0x8p-152), asin(cf32.init(-0x1p-52, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x1p-52, 0x0p+0), asin(cf32.init(-0x1p-52, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1p-52, -0x0p+0), asin(cf32.init(0x1p-52, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1p-52, -0x8p-152), asin(cf32.init(0x1p-52, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x1p-52, -0x0p+0), asin(cf32.init(-0x1p-52, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1p-52, -0x8p-152), asin(cf32.init(-0x1p-52, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x1p-52), asin(cf32.init(0x0p+0, 0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0x1p-52), asin(cf32.init(0x0p+0, -0x1p-52)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, 0x1p-52), asin(cf32.init(-0x0p+0, 0x1p-52)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, -0x1p-52), asin(cf32.init(-0x0p+0, -0x1p-52)));
    try std.testing.expectEqual(cf32.init(0x1p-52, 0x0p+0), asin(cf32.init(0x1p-52, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1p-52, 0x0p+0), asin(cf32.init(-0x1p-52, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1p-52, -0x0p+0), asin(cf32.init(0x1p-52, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1p-52, -0x0p+0), asin(cf32.init(-0x1p-52, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x8p-152, 0x8p-152), asin(cf32.init(0x8p-152, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x8p-152, 0x0p+0), asin(cf32.init(0x8p-152, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x8p-152), asin(cf32.init(0x0p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x0p+0), asin(cf32.init(0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x8p-152, -0x0p+0), asin(cf32.init(0x8p-152, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x8p-152, -0x8p-152), asin(cf32.init(0x8p-152, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0x0p+0), asin(cf32.init(0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0x8p-152), asin(cf32.init(0x0p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, 0x8p-152), asin(cf32.init(-0x0p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, 0x0p+0), asin(cf32.init(-0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x8p-152, 0x8p-152), asin(cf32.init(-0x8p-152, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x8p-152, 0x0p+0), asin(cf32.init(-0x8p-152, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, -0x0p+0), asin(cf32.init(-0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, -0x8p-152), asin(cf32.init(-0x0p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x8p-152, -0x0p+0), asin(cf32.init(-0x8p-152, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x8p-152, -0x8p-152), asin(cf32.init(-0x8p-152, -0x8p-152)));
    // try std.testing.expectEqual(cf32.init(0x1.6a09e6p-64, 0xe.1a1b3p-4), asin(cf32.init(0x2p-64, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.6a09e8p-64, 0xe.1a1b2p-4), asin(cf32.init(0x2p-64, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.6a09e8p-64, -0xe.1a1b2p-4), asin(cf32.init(0x2p-64, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x1.6a09e6p-64, -0xe.1a1b3p-4), asin(cf32.init(0x2p-64, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x1.6a09e6p-64, 0xe.1a1b3p-4), asin(cf32.init(-0x2p-64, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x1.6a09e8p-64, 0xe.1a1b2p-4), asin(cf32.init(-0x2p-64, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(-0x1.6a09e8p-64, -0xe.1a1b2p-4), asin(cf32.init(-0x2p-64, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(-0x1.6a09e6p-64, -0xe.1a1b3p-4), asin(cf32.init(-0x2p-64, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x1.6a09e6p-32), asin(cf32.init(0x1p+0, 0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x1.920914p+0, 0x1.6a09e6p-52), asin(cf32.init(0xf.fffffp-4, 0x2p-64)));
    try std.testing.expectEqual(cf32.init(-0x1.920914p+0, 0x1.6a09e6p-52), asin(cf32.init(-0xf.fffffp-4, 0x2p-64)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x1.6a09e6p-32), asin(cf32.init(-0x1p+0, 0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x1.6a09e6p-32), asin(cf32.init(0x1p+0, -0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x1.920914p+0, -0x1.6a09e6p-52), asin(cf32.init(0xf.fffffp-4, -0x2p-64)));
    try std.testing.expectEqual(cf32.init(-0x1.920914p+0, -0x1.6a09e6p-52), asin(cf32.init(-0xf.fffffp-4, -0x2p-64)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x1.6a09e6p-32), asin(cf32.init(-0x1p+0, -0x2p-64)));
    // try std.testing.expectEqual(cf32.init(0x8p-152, 0xe.1a1b3p-4), asin(cf32.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x8p-152, 0xe.1a1b2p-4), asin(cf32.init(0x8p-152, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, 0xe.1a1b3p-4), asin(cf32.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0xe.1a1b2p-4), asin(cf32.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x8p-152, -0xe.1a1b2p-4), asin(cf32.init(0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x8p-152, -0xe.1a1b3p-4), asin(cf32.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0xe.1a1b2p-4), asin(cf32.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, -0xe.1a1b3p-4), asin(cf32.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, 0xe.1a1b3p-4), asin(cf32.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, 0xe.1a1b2p-4), asin(cf32.init(-0x0p+0, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(-0x8p-152, 0xe.1a1b3p-4), asin(cf32.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x8p-152, 0xe.1a1b2p-4), asin(cf32.init(-0x8p-152, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, -0xe.1a1b2p-4), asin(cf32.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, -0xe.1a1b3p-4), asin(cf32.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x8p-152, -0xe.1a1b2p-4), asin(cf32.init(-0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(-0x8p-152, -0xe.1a1b3p-4), asin(cf32.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2.d413ccp-76), asin(cf32.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), asin(cf32.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.920914p+0, 0x5.a8p-140), asin(cf32.init(0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.920914p+0, 0x0p+0), asin(cf32.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.920914p+0, 0x5.a8p-140), asin(cf32.init(-0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x1.920914p+0, 0x0p+0), asin(cf32.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x2.d413ccp-76), asin(cf32.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x0p+0), asin(cf32.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), asin(cf32.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2.d413ccp-76), asin(cf32.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.920914p+0, -0x0p+0), asin(cf32.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.920914p+0, -0x5.a8p-140), asin(cf32.init(0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x1.920914p+0, -0x0p+0), asin(cf32.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.920914p+0, -0x5.a8p-140), asin(cf32.init(-0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x0p+0), asin(cf32.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x2.d413ccp-76), asin(cf32.init(-0x1p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, 0xe.1a1b3p-4), asin(cf32.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0xe.1a1b2p-4), asin(cf32.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0xe.1a1b2p-4), asin(cf32.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, -0xe.1a1b3p-4), asin(cf32.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, 0xe.1a1b3p-4), asin(cf32.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, 0xe.1a1b2p-4), asin(cf32.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, -0xe.1a1b2p-4), asin(cf32.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, -0xe.1a1b3p-4), asin(cf32.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), asin(cf32.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.920914p+0, 0x0p+0), asin(cf32.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.920914p+0, 0x0p+0), asin(cf32.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x0p+0), asin(cf32.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), asin(cf32.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.920914p+0, -0x0p+0), asin(cf32.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.920914p+0, -0x0p+0), asin(cf32.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x0p+0), asin(cf32.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.c9f25cp-64, 0x7.b30b28p-4), asin(cf32.init(0x2p-64, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x1.c9f25cp-64, -0x7.b30b28p-4), asin(cf32.init(0x2p-64, -0x8p-4)));
    // try std.testing.expectEqual(cf32.init(-0x1.c9f25cp-64, 0x7.b30b28p-4), asin(cf32.init(-0x2p-64, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(-0x1.c9f25cp-64, -0x7.b30b28p-4), asin(cf32.init(-0x2p-64, -0x8p-4)));
    try std.testing.expectEqual(cf32.init(0x8.60a92p-4, 0x2.4f34e8p-64), asin(cf32.init(0x8p-4, 0x2p-64)));
    try std.testing.expectEqual(cf32.init(-0x8.60a92p-4, 0x2.4f34e8p-64), asin(cf32.init(-0x8p-4, 0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x8.60a92p-4, -0x2.4f34e8p-64), asin(cf32.init(0x8p-4, -0x2p-64)));
    try std.testing.expectEqual(cf32.init(-0x8.60a92p-4, -0x2.4f34e8p-64), asin(cf32.init(-0x8p-4, -0x2p-64)));
    // try std.testing.expectEqual(cf32.init(0x8p-152, 0x7.b30b28p-4), asin(cf32.init(0x8p-152, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, 0x7.b30b28p-4), asin(cf32.init(0x0p+0, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x8p-152, -0x7.b30b28p-4), asin(cf32.init(0x8p-152, -0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, -0x7.b30b28p-4), asin(cf32.init(0x0p+0, -0x8p-4)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, 0x7.b30b28p-4), asin(cf32.init(-0x0p+0, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(-0x8p-152, 0x7.b30b28p-4), asin(cf32.init(-0x8p-152, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, -0x7.b30b28p-4), asin(cf32.init(-0x0p+0, -0x8p-4)));
    // try std.testing.expectEqual(cf32.init(-0x8p-152, -0x7.b30b28p-4), asin(cf32.init(-0x8p-152, -0x8p-4)));
    try std.testing.expectEqual(cf32.init(0x8.60a92p-4, 0x8p-152), asin(cf32.init(0x8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x8.60a92p-4, 0x0p+0), asin(cf32.init(0x8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x8.60a92p-4, 0x8p-152), asin(cf32.init(-0x8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x8.60a92p-4, 0x0p+0), asin(cf32.init(-0x8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x8.60a92p-4, -0x0p+0), asin(cf32.init(0x8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x8.60a92p-4, -0x8p-152), asin(cf32.init(0x8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x8.60a92p-4, -0x0p+0), asin(cf32.init(-0x8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x8.60a92p-4, -0x8p-152), asin(cf32.init(-0x8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x2p-64, 0x2p-64), asin(cf32.init(0x2p-64, 0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x2p-64, -0x2p-64), asin(cf32.init(0x2p-64, -0x2p-64)));
    try std.testing.expectEqual(cf32.init(-0x2p-64, 0x2p-64), asin(cf32.init(-0x2p-64, 0x2p-64)));
    try std.testing.expectEqual(cf32.init(-0x2p-64, -0x2p-64), asin(cf32.init(-0x2p-64, -0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x8p-152, 0x2p-64), asin(cf32.init(0x8p-152, 0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x2p-64), asin(cf32.init(0x0p+0, 0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x8p-152, -0x2p-64), asin(cf32.init(0x8p-152, -0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0x2p-64), asin(cf32.init(0x0p+0, -0x2p-64)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, 0x2p-64), asin(cf32.init(-0x0p+0, 0x2p-64)));
    try std.testing.expectEqual(cf32.init(-0x8p-152, 0x2p-64), asin(cf32.init(-0x8p-152, 0x2p-64)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, -0x2p-64), asin(cf32.init(-0x0p+0, -0x2p-64)));
    try std.testing.expectEqual(cf32.init(-0x8p-152, -0x2p-64), asin(cf32.init(-0x8p-152, -0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x2p-64, 0x8p-152), asin(cf32.init(0x2p-64, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x2p-64, 0x0p+0), asin(cf32.init(0x2p-64, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x2p-64, 0x8p-152), asin(cf32.init(-0x2p-64, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x2p-64, 0x0p+0), asin(cf32.init(-0x2p-64, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x2p-64, -0x0p+0), asin(cf32.init(0x2p-64, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x2p-64, -0x8p-152), asin(cf32.init(0x2p-64, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x2p-64, -0x0p+0), asin(cf32.init(-0x2p-64, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x2p-64, -0x8p-152), asin(cf32.init(-0x2p-64, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x2p-64), asin(cf32.init(0x0p+0, 0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0x2p-64), asin(cf32.init(0x0p+0, -0x2p-64)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, 0x2p-64), asin(cf32.init(-0x0p+0, 0x2p-64)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, -0x2p-64), asin(cf32.init(-0x0p+0, -0x2p-64)));
    try std.testing.expectEqual(cf32.init(0x2p-64, 0x0p+0), asin(cf32.init(0x2p-64, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x2p-64, 0x0p+0), asin(cf32.init(-0x2p-64, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x2p-64, -0x0p+0), asin(cf32.init(0x2p-64, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x2p-64, -0x0p+0), asin(cf32.init(-0x2p-64, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x8p-152, 0x8p-152), asin(cf32.init(0x8p-152, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x8p-152, 0x0p+0), asin(cf32.init(0x8p-152, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x8p-152), asin(cf32.init(0x0p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x0p+0), asin(cf32.init(0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x8p-152, -0x0p+0), asin(cf32.init(0x8p-152, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x8p-152, -0x8p-152), asin(cf32.init(0x8p-152, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0x0p+0), asin(cf32.init(0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0x8p-152), asin(cf32.init(0x0p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, 0x8p-152), asin(cf32.init(-0x0p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, 0x0p+0), asin(cf32.init(-0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x8p-152, 0x8p-152), asin(cf32.init(-0x8p-152, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x8p-152, 0x0p+0), asin(cf32.init(-0x8p-152, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, -0x0p+0), asin(cf32.init(-0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, -0x8p-152), asin(cf32.init(-0x0p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x8p-152, -0x0p+0), asin(cf32.init(-0x8p-152, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x8p-152, -0x8p-152), asin(cf32.init(-0x8p-152, -0x8p-152)));
    // try std.testing.expectEqual(cf32.init(0x5.a82798p-108, 0xe.1a1b3p-4), asin(cf32.init(0x8p-108, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x5.a827ap-108, 0xe.1a1b2p-4), asin(cf32.init(0x8p-108, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x5.a827ap-108, -0xe.1a1b2p-4), asin(cf32.init(0x8p-108, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x5.a82798p-108, -0xe.1a1b3p-4), asin(cf32.init(0x8p-108, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x5.a82798p-108, 0xe.1a1b3p-4), asin(cf32.init(-0x8p-108, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x5.a827ap-108, 0xe.1a1b2p-4), asin(cf32.init(-0x8p-108, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(-0x5.a827ap-108, -0xe.1a1b2p-4), asin(cf32.init(-0x8p-108, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(-0x5.a82798p-108, -0xe.1a1b3p-4), asin(cf32.init(-0x8p-108, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0xb.504f3p-56), asin(cf32.init(0x1p+0, 0x8p-108)));
    try std.testing.expectEqual(cf32.init(0x1.920914p+0, 0x5.a82798p-96), asin(cf32.init(0xf.fffffp-4, 0x8p-108)));
    try std.testing.expectEqual(cf32.init(-0x1.920914p+0, 0x5.a82798p-96), asin(cf32.init(-0xf.fffffp-4, 0x8p-108)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0xb.504f3p-56), asin(cf32.init(-0x1p+0, 0x8p-108)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0xb.504f3p-56), asin(cf32.init(0x1p+0, -0x8p-108)));
    try std.testing.expectEqual(cf32.init(0x1.920914p+0, -0x5.a82798p-96), asin(cf32.init(0xf.fffffp-4, -0x8p-108)));
    try std.testing.expectEqual(cf32.init(-0x1.920914p+0, -0x5.a82798p-96), asin(cf32.init(-0xf.fffffp-4, -0x8p-108)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0xb.504f3p-56), asin(cf32.init(-0x1p+0, -0x8p-108)));
    // try std.testing.expectEqual(cf32.init(0x8p-152, 0xe.1a1b3p-4), asin(cf32.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x8p-152, 0xe.1a1b2p-4), asin(cf32.init(0x8p-152, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, 0xe.1a1b3p-4), asin(cf32.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0xe.1a1b2p-4), asin(cf32.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x8p-152, -0xe.1a1b2p-4), asin(cf32.init(0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x8p-152, -0xe.1a1b3p-4), asin(cf32.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0xe.1a1b2p-4), asin(cf32.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, -0xe.1a1b3p-4), asin(cf32.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, 0xe.1a1b3p-4), asin(cf32.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, 0xe.1a1b2p-4), asin(cf32.init(-0x0p+0, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(-0x8p-152, 0xe.1a1b3p-4), asin(cf32.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x8p-152, 0xe.1a1b2p-4), asin(cf32.init(-0x8p-152, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, -0xe.1a1b2p-4), asin(cf32.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, -0xe.1a1b3p-4), asin(cf32.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x8p-152, -0xe.1a1b2p-4), asin(cf32.init(-0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(-0x8p-152, -0xe.1a1b3p-4), asin(cf32.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2.d413ccp-76), asin(cf32.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), asin(cf32.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.920914p+0, 0x5.a8p-140), asin(cf32.init(0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.920914p+0, 0x0p+0), asin(cf32.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.920914p+0, 0x5.a8p-140), asin(cf32.init(-0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x1.920914p+0, 0x0p+0), asin(cf32.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x2.d413ccp-76), asin(cf32.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x0p+0), asin(cf32.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), asin(cf32.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2.d413ccp-76), asin(cf32.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.920914p+0, -0x0p+0), asin(cf32.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.920914p+0, -0x5.a8p-140), asin(cf32.init(0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x1.920914p+0, -0x0p+0), asin(cf32.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.920914p+0, -0x5.a8p-140), asin(cf32.init(-0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x0p+0), asin(cf32.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x2.d413ccp-76), asin(cf32.init(-0x1p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, 0xe.1a1b3p-4), asin(cf32.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0xe.1a1b2p-4), asin(cf32.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0xe.1a1b2p-4), asin(cf32.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, -0xe.1a1b3p-4), asin(cf32.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, 0xe.1a1b3p-4), asin(cf32.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, 0xe.1a1b2p-4), asin(cf32.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, -0xe.1a1b2p-4), asin(cf32.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, -0xe.1a1b3p-4), asin(cf32.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), asin(cf32.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.920914p+0, 0x0p+0), asin(cf32.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.920914p+0, 0x0p+0), asin(cf32.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x0p+0), asin(cf32.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), asin(cf32.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.920914p+0, -0x0p+0), asin(cf32.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.920914p+0, -0x0p+0), asin(cf32.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x0p+0), asin(cf32.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x7.27c97p-108, 0x7.b30b28p-4), asin(cf32.init(0x8p-108, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0x7.27c97p-108, -0x7.b30b28p-4), asin(cf32.init(0x8p-108, -0x8p-4)));
    // try std.testing.expectEqual(cf32.init(-0x7.27c97p-108, 0x7.b30b28p-4), asin(cf32.init(-0x8p-108, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(-0x7.27c97p-108, -0x7.b30b28p-4), asin(cf32.init(-0x8p-108, -0x8p-4)));
    try std.testing.expectEqual(cf32.init(0x8.60a92p-4, 0x9.3cd3ap-108), asin(cf32.init(0x8p-4, 0x8p-108)));
    try std.testing.expectEqual(cf32.init(-0x8.60a92p-4, 0x9.3cd3ap-108), asin(cf32.init(-0x8p-4, 0x8p-108)));
    try std.testing.expectEqual(cf32.init(0x8.60a92p-4, -0x9.3cd3ap-108), asin(cf32.init(0x8p-4, -0x8p-108)));
    try std.testing.expectEqual(cf32.init(-0x8.60a92p-4, -0x9.3cd3ap-108), asin(cf32.init(-0x8p-4, -0x8p-108)));
    try std.testing.expectEqual(cf32.init(0x8p-108, 0x8p-108), asin(cf32.init(0x8p-108, 0x8p-108)));
    try std.testing.expectEqual(cf32.init(0x8p-108, -0x8p-108), asin(cf32.init(0x8p-108, -0x8p-108)));
    try std.testing.expectEqual(cf32.init(-0x8p-108, 0x8p-108), asin(cf32.init(-0x8p-108, 0x8p-108)));
    try std.testing.expectEqual(cf32.init(-0x8p-108, -0x8p-108), asin(cf32.init(-0x8p-108, -0x8p-108)));
    try std.testing.expectEqual(cf32.init(0x8p-152, 0x8p-108), asin(cf32.init(0x8p-152, 0x8p-108)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x8p-108), asin(cf32.init(0x0p+0, 0x8p-108)));
    try std.testing.expectEqual(cf32.init(0x8p-152, -0x8p-108), asin(cf32.init(0x8p-152, -0x8p-108)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0x8p-108), asin(cf32.init(0x0p+0, -0x8p-108)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, 0x8p-108), asin(cf32.init(-0x0p+0, 0x8p-108)));
    try std.testing.expectEqual(cf32.init(-0x8p-152, 0x8p-108), asin(cf32.init(-0x8p-152, 0x8p-108)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, -0x8p-108), asin(cf32.init(-0x0p+0, -0x8p-108)));
    try std.testing.expectEqual(cf32.init(-0x8p-152, -0x8p-108), asin(cf32.init(-0x8p-152, -0x8p-108)));
    try std.testing.expectEqual(cf32.init(0x8p-108, 0x8p-152), asin(cf32.init(0x8p-108, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x8p-108, 0x0p+0), asin(cf32.init(0x8p-108, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x8p-108, 0x8p-152), asin(cf32.init(-0x8p-108, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x8p-108, 0x0p+0), asin(cf32.init(-0x8p-108, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x8p-108, -0x0p+0), asin(cf32.init(0x8p-108, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x8p-108, -0x8p-152), asin(cf32.init(0x8p-108, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x8p-108, -0x0p+0), asin(cf32.init(-0x8p-108, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x8p-108, -0x8p-152), asin(cf32.init(-0x8p-108, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x8p-108), asin(cf32.init(0x0p+0, 0x8p-108)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0x8p-108), asin(cf32.init(0x0p+0, -0x8p-108)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, 0x8p-108), asin(cf32.init(-0x0p+0, 0x8p-108)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, -0x8p-108), asin(cf32.init(-0x0p+0, -0x8p-108)));
    try std.testing.expectEqual(cf32.init(0x8p-108, 0x0p+0), asin(cf32.init(0x8p-108, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x8p-108, 0x0p+0), asin(cf32.init(-0x8p-108, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x8p-108, -0x0p+0), asin(cf32.init(0x8p-108, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x8p-108, -0x0p+0), asin(cf32.init(-0x8p-108, -0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0xb.504f3p-116, 0xe.1a1b3p-4), asin(cf32.init(0x1p-112, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0xb.504f4p-116, 0xe.1a1b2p-4), asin(cf32.init(0x1p-112, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0xb.504f4p-116, -0xe.1a1b2p-4), asin(cf32.init(0x1p-112, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0xb.504f3p-116, -0xe.1a1b3p-4), asin(cf32.init(0x1p-112, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0xb.504f3p-116, 0xe.1a1b3p-4), asin(cf32.init(-0x1p-112, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0xb.504f4p-116, 0xe.1a1b2p-4), asin(cf32.init(-0x1p-112, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(-0xb.504f4p-116, -0xe.1a1b2p-4), asin(cf32.init(-0x1p-112, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(-0xb.504f3p-116, -0xe.1a1b3p-4), asin(cf32.init(-0x1p-112, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x1p-56), asin(cf32.init(0x1p+0, 0x1p-112)));
    try std.testing.expectEqual(cf32.init(0x1.920914p+0, 0xb.504f3p-104), asin(cf32.init(0xf.fffffp-4, 0x1p-112)));
    try std.testing.expectEqual(cf32.init(-0x1.920914p+0, 0xb.504f3p-104), asin(cf32.init(-0xf.fffffp-4, 0x1p-112)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x1p-56), asin(cf32.init(-0x1p+0, 0x1p-112)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x1p-56), asin(cf32.init(0x1p+0, -0x1p-112)));
    try std.testing.expectEqual(cf32.init(0x1.920914p+0, -0xb.504f3p-104), asin(cf32.init(0xf.fffffp-4, -0x1p-112)));
    try std.testing.expectEqual(cf32.init(-0x1.920914p+0, -0xb.504f3p-104), asin(cf32.init(-0xf.fffffp-4, -0x1p-112)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x1p-56), asin(cf32.init(-0x1p+0, -0x1p-112)));
    // try std.testing.expectEqual(cf32.init(0x8p-152, 0xe.1a1b3p-4), asin(cf32.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x8p-152, 0xe.1a1b2p-4), asin(cf32.init(0x8p-152, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, 0xe.1a1b3p-4), asin(cf32.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0xe.1a1b2p-4), asin(cf32.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x8p-152, -0xe.1a1b2p-4), asin(cf32.init(0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x8p-152, -0xe.1a1b3p-4), asin(cf32.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0xe.1a1b2p-4), asin(cf32.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, -0xe.1a1b3p-4), asin(cf32.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, 0xe.1a1b3p-4), asin(cf32.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, 0xe.1a1b2p-4), asin(cf32.init(-0x0p+0, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(-0x8p-152, 0xe.1a1b3p-4), asin(cf32.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x8p-152, 0xe.1a1b2p-4), asin(cf32.init(-0x8p-152, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, -0xe.1a1b2p-4), asin(cf32.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, -0xe.1a1b3p-4), asin(cf32.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x8p-152, -0xe.1a1b2p-4), asin(cf32.init(-0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(-0x8p-152, -0xe.1a1b3p-4), asin(cf32.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x2.d413ccp-76), asin(cf32.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), asin(cf32.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.920914p+0, 0x5.a8p-140), asin(cf32.init(0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.920914p+0, 0x0p+0), asin(cf32.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.920914p+0, 0x5.a8p-140), asin(cf32.init(-0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x1.920914p+0, 0x0p+0), asin(cf32.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x2.d413ccp-76), asin(cf32.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x0p+0), asin(cf32.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), asin(cf32.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x2.d413ccp-76), asin(cf32.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1.920914p+0, -0x0p+0), asin(cf32.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.920914p+0, -0x5.a8p-140), asin(cf32.init(0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x1.920914p+0, -0x0p+0), asin(cf32.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.920914p+0, -0x5.a8p-140), asin(cf32.init(-0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x0p+0), asin(cf32.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x2.d413ccp-76), asin(cf32.init(-0x1p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, 0xe.1a1b3p-4), asin(cf32.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0xe.1a1b2p-4), asin(cf32.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0xe.1a1b2p-4), asin(cf32.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, -0xe.1a1b3p-4), asin(cf32.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, 0xe.1a1b3p-4), asin(cf32.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, 0xe.1a1b2p-4), asin(cf32.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, -0xe.1a1b2p-4), asin(cf32.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf32.init(-0x0p+0, -0xe.1a1b3p-4), asin(cf32.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, 0x0p+0), asin(cf32.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.920914p+0, 0x0p+0), asin(cf32.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.920914p+0, 0x0p+0), asin(cf32.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, 0x0p+0), asin(cf32.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.921fb6p+0, -0x0p+0), asin(cf32.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1.920914p+0, -0x0p+0), asin(cf32.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.920914p+0, -0x0p+0), asin(cf32.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1.921fb6p+0, -0x0p+0), asin(cf32.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0xe.4f92ep-116, 0x7.b30b28p-4), asin(cf32.init(0x1p-112, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(0xe.4f92ep-116, -0x7.b30b28p-4), asin(cf32.init(0x1p-112, -0x8p-4)));
    // try std.testing.expectEqual(cf32.init(-0xe.4f92ep-116, 0x7.b30b28p-4), asin(cf32.init(-0x1p-112, 0x8p-4)));
    // try std.testing.expectEqual(cf32.init(-0xe.4f92ep-116, -0x7.b30b28p-4), asin(cf32.init(-0x1p-112, -0x8p-4)));
    try std.testing.expectEqual(cf32.init(0x8.60a92p-4, 0x1.279a74p-112), asin(cf32.init(0x8p-4, 0x1p-112)));
    try std.testing.expectEqual(cf32.init(-0x8.60a92p-4, 0x1.279a74p-112), asin(cf32.init(-0x8p-4, 0x1p-112)));
    try std.testing.expectEqual(cf32.init(0x8.60a92p-4, -0x1.279a74p-112), asin(cf32.init(0x8p-4, -0x1p-112)));
    try std.testing.expectEqual(cf32.init(-0x8.60a92p-4, -0x1.279a74p-112), asin(cf32.init(-0x8p-4, -0x1p-112)));
    try std.testing.expectEqual(cf32.init(0x1p-112, 0x1p-112), asin(cf32.init(0x1p-112, 0x1p-112)));
    try std.testing.expectEqual(cf32.init(0x1p-112, -0x1p-112), asin(cf32.init(0x1p-112, -0x1p-112)));
    try std.testing.expectEqual(cf32.init(-0x1p-112, 0x1p-112), asin(cf32.init(-0x1p-112, 0x1p-112)));
    try std.testing.expectEqual(cf32.init(-0x1p-112, -0x1p-112), asin(cf32.init(-0x1p-112, -0x1p-112)));
    try std.testing.expectEqual(cf32.init(0x8p-152, 0x1p-112), asin(cf32.init(0x8p-152, 0x1p-112)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x1p-112), asin(cf32.init(0x0p+0, 0x1p-112)));
    try std.testing.expectEqual(cf32.init(0x8p-152, -0x1p-112), asin(cf32.init(0x8p-152, -0x1p-112)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0x1p-112), asin(cf32.init(0x0p+0, -0x1p-112)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, 0x1p-112), asin(cf32.init(-0x0p+0, 0x1p-112)));
    try std.testing.expectEqual(cf32.init(-0x8p-152, 0x1p-112), asin(cf32.init(-0x8p-152, 0x1p-112)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, -0x1p-112), asin(cf32.init(-0x0p+0, -0x1p-112)));
    try std.testing.expectEqual(cf32.init(-0x8p-152, -0x1p-112), asin(cf32.init(-0x8p-152, -0x1p-112)));
    try std.testing.expectEqual(cf32.init(0x1p-112, 0x8p-152), asin(cf32.init(0x1p-112, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x1p-112, 0x0p+0), asin(cf32.init(0x1p-112, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1p-112, 0x8p-152), asin(cf32.init(-0x1p-112, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x1p-112, 0x0p+0), asin(cf32.init(-0x1p-112, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1p-112, -0x0p+0), asin(cf32.init(0x1p-112, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1p-112, -0x8p-152), asin(cf32.init(0x1p-112, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(-0x1p-112, -0x0p+0), asin(cf32.init(-0x1p-112, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1p-112, -0x8p-152), asin(cf32.init(-0x1p-112, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x1p-112), asin(cf32.init(0x0p+0, 0x1p-112)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0x1p-112), asin(cf32.init(0x0p+0, -0x1p-112)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, 0x1p-112), asin(cf32.init(-0x0p+0, 0x1p-112)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, -0x1p-112), asin(cf32.init(-0x0p+0, -0x1p-112)));
    try std.testing.expectEqual(cf32.init(0x1p-112, 0x0p+0), asin(cf32.init(0x1p-112, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1p-112, 0x0p+0), asin(cf32.init(-0x1p-112, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x1p-112, -0x0p+0), asin(cf32.init(0x1p-112, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x1p-112, -0x0p+0), asin(cf32.init(-0x1p-112, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x7.409e88p-4, 0x1.21e48cp+0), asin(cf32.init(0xcp-4, 0x1.4p+0)));
    try std.testing.expectEqual(cf32.init(-0x9.2164dp-4, -0x1.fbbf4p+0), asin(cf32.init(-0x2p+0, -0x3p+0)));

    try std.testing.expectEqual(cf64.init(0x0p+0, 0x0p+0), asin(cf64.init(0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0x0p+0), asin(cf64.init(-0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x0p+0), asin(cf64.init(0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0x0p+0), asin(cf64.init(-0x0p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, -0x1.31dc0090b63d8p+0), asin(cf64.init(0x0p+0, -0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, -0x1.31dc0090b63d8p+0), asin(cf64.init(-0x0p+0, -0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x7.b30b2bb145828p-4), asin(cf64.init(0x0p+0, -0x8p-4)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0x7.b30b2bb145828p-4), asin(cf64.init(-0x0p+0, -0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x7.b30b2bb145828p-4), asin(cf64.init(0x0p+0, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0x7.b30b2bb145828p-4), asin(cf64.init(-0x0p+0, 0x8p-4)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, 0x1.31dc0090b63d8p+0), asin(cf64.init(0x0p+0, 0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, 0x1.31dc0090b63d8p+0), asin(cf64.init(-0x0p+0, 0x1.8p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0xf.661657628b05p-4), asin(cf64.init(-0x1.8p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0xf.661657628b05p-4), asin(cf64.init(-0x1.8p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x0p+0), asin(cf64.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x0p+0), asin(cf64.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x8.60a91c16b9b3p-4, 0x0p+0), asin(cf64.init(-0x8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x8.60a91c16b9b3p-4, -0x0p+0), asin(cf64.init(-0x8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x8.60a91c16b9b3p-4, 0x0p+0), asin(cf64.init(0x8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x8.60a91c16b9b3p-4, -0x0p+0), asin(cf64.init(0x8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), asin(cf64.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), asin(cf64.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xf.661657628b05p-4), asin(cf64.init(0x1.8p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xf.661657628b05p-4), asin(cf64.init(0x1.8p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d14p+0, 0x2.359bac65ecc56p+4), asin(cf64.init(0x4p+48, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d14p+0, -0x2.359bac65ecc56p+4), asin(cf64.init(0x4p+48, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d14p+0, 0x2.359bac65ecc56p+4), asin(cf64.init(-0x4p+48, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d14p+0, -0x2.359bac65ecc56p+4), asin(cf64.init(-0x4p+48, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x4p-52, 0x2.359bac65ecc56p+4), asin(cf64.init(0x1p+0, 0x4p+48)));
    try std.testing.expectEqual(cf64.init(-0x4p-52, 0x2.359bac65ecc56p+4), asin(cf64.init(-0x1p+0, 0x4p+48)));
    try std.testing.expectEqual(cf64.init(0x4p-52, -0x2.359bac65ecc56p+4), asin(cf64.init(0x1p+0, -0x4p+48)));
    try std.testing.expectEqual(cf64.init(-0x4p-52, -0x2.359bac65ecc56p+4), asin(cf64.init(-0x1p+0, -0x4p+48)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x5.96a7e12e0b98cp+4), asin(cf64.init(0xf.fffffp+124, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.5b4448e7fd9b1p+8), asin(cf64.init(0x1p+500, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x5.96a7e12e0b98cp+4), asin(cf64.init(0xf.fffffp+124, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.5b4448e7fd9b1p+8), asin(cf64.init(0x1p+500, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x5.96a7e12e0b98cp+4), asin(cf64.init(-0xf.fffffp+124, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x1.5b4448e7fd9b1p+8), asin(cf64.init(-0x1p+500, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x5.96a7e12e0b98cp+4), asin(cf64.init(-0xf.fffffp+124, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x1.5b4448e7fd9b1p+8), asin(cf64.init(-0x1p+500, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.000001000001p-128, 0x5.96a7e12e0b98cp+4), asin(cf64.init(0x1p+0, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf64.init(0x1p-500, 0x1.5b4448e7fd9b1p+8), asin(cf64.init(0x1p+0, 0x1p+500)));
    try std.testing.expectEqual(cf64.init(-0x1.000001000001p-128, 0x5.96a7e12e0b98cp+4), asin(cf64.init(-0x1p+0, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf64.init(-0x1p-500, 0x1.5b4448e7fd9b1p+8), asin(cf64.init(-0x1p+0, 0x1p+500)));
    try std.testing.expectEqual(cf64.init(0x1.000001000001p-128, -0x5.96a7e12e0b98cp+4), asin(cf64.init(0x1p+0, -0xf.fffffp+124)));
    try std.testing.expectEqual(cf64.init(0x1p-500, -0x1.5b4448e7fd9b1p+8), asin(cf64.init(0x1p+0, -0x1p+500)));
    try std.testing.expectEqual(cf64.init(-0x1.000001000001p-128, -0x5.96a7e12e0b98cp+4), asin(cf64.init(-0x1p+0, -0xf.fffffp+124)));
    try std.testing.expectEqual(cf64.init(-0x1p-500, -0x1.5b4448e7fd9b1p+8), asin(cf64.init(-0x1p+0, -0x1p+500)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x5.96a7e12e0b98cp+4), asin(cf64.init(0xf.fffffp+124, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x2.c679d1f73f0fcp+8), asin(cf64.init(0xf.ffffffffffff8p+1020, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x5.96a7e12e0b98cp+4), asin(cf64.init(0xf.fffffp+124, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x2.c679d1f73f0fcp+8), asin(cf64.init(0xf.ffffffffffff8p+1020, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x5.96a7e12e0b98cp+4), asin(cf64.init(-0xf.fffffp+124, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x2.c679d1f73f0fcp+8), asin(cf64.init(-0xf.ffffffffffff8p+1020, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x5.96a7e12e0b98cp+4), asin(cf64.init(-0xf.fffffp+124, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x2.c679d1f73f0fcp+8), asin(cf64.init(-0xf.ffffffffffff8p+1020, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.000001000001p-128, 0x5.96a7e12e0b98cp+4), asin(cf64.init(0x1p+0, 0xf.fffffp+124)));
    // try std.testing.expectEqual(cf64.init(0x1p-1024, 0x2.c679d1f73f0fcp+8), asin(cf64.init(0x1p+0, 0xf.ffffffffffff8p+1020)));
    try std.testing.expectEqual(cf64.init(-0x1.000001000001p-128, 0x5.96a7e12e0b98cp+4), asin(cf64.init(-0x1p+0, 0xf.fffffp+124)));
    // try std.testing.expectEqual(cf64.init(-0x1p-1024, 0x2.c679d1f73f0fcp+8), asin(cf64.init(-0x1p+0, 0xf.ffffffffffff8p+1020)));
    try std.testing.expectEqual(cf64.init(0x1.000001000001p-128, -0x5.96a7e12e0b98cp+4), asin(cf64.init(0x1p+0, -0xf.fffffp+124)));
    // try std.testing.expectEqual(cf64.init(0x1p-1024, -0x2.c679d1f73f0fcp+8), asin(cf64.init(0x1p+0, -0xf.ffffffffffff8p+1020)));
    try std.testing.expectEqual(cf64.init(-0x1.000001000001p-128, -0x5.96a7e12e0b98cp+4), asin(cf64.init(-0x1p+0, -0xf.fffffp+124)));
    // try std.testing.expectEqual(cf64.init(-0x1p-1024, -0x2.c679d1f73f0fcp+8), asin(cf64.init(-0x1p+0, -0xf.ffffffffffff8p+1020)));
    // try std.testing.expectEqual(cf64.init(0xc.90fdaa22168cp-4, 0x5.9bb167117aedp+4), asin(cf64.init(0xf.8p+124, 0xf.8p+124)));
    try std.testing.expectEqual(cf64.init(0xc.90fdaa22168cp-4, 0x5.9c3371edca274p+4), asin(cf64.init(0xf.fffffp+124, 0xf.fffffp+124)));
    // try std.testing.expectEqual(cf64.init(0x1.08420f7bdef7cp-896, 0x2.c671b1487a1c2p+8), asin(cf64.init(0xf.fffffp+124, 0xf.8p+1020)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x2.c671b1487a1c2p+8), asin(cf64.init(0xf.8p+1020, 0xf.fffffp+124)));
    // try std.testing.expectEqual(cf64.init(0xc.90fdaa22168cp-4, 0x2.c6ca6a547605p+8), asin(cf64.init(0xf.8p+1020, 0xf.8p+1020)));
    try std.testing.expectEqual(cf64.init(0xc.90fdaa22168cp-4, 0x5.9c3371edca274p+4), asin(cf64.init(0xf.fffffp+124, 0xf.fffffp+124)));
    // try std.testing.expectEqual(cf64.init(0xf.fffff00000008p-900, 0x2.c679d1f73f0fcp+8), asin(cf64.init(0xf.fffffp+124, 0xf.ffffffffffff8p+1020)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x2.c679d1f73f0fcp+8), asin(cf64.init(0xf.ffffffffffff8p+1020, 0xf.fffffp+124)));
    // try std.testing.expectEqual(cf64.init(0xc.90fdaa22168cp-4, 0x2.c6d28b033af8ap+8), asin(cf64.init(0xf.ffffffffffff8p+1020, 0xf.ffffffffffff8p+1020)));
    // try std.testing.expectEqual(cf64.init(0x8.990ce59d04a88p-132, 0x1.31dc0090b63d8p+0), asin(cf64.init(0xf.8p-132, 0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(0x8.990ce59d04a88p-132, -0x1.31dc0090b63d8p+0), asin(cf64.init(0xf.8p-132, -0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(-0x8.990ce59d04a88p-132, 0x1.31dc0090b63d8p+0), asin(cf64.init(-0xf.8p-132, 0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(-0x8.990ce59d04a88p-132, -0x1.31dc0090b63d8p+0), asin(cf64.init(-0xf.8p-132, -0x1.8p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xf.661657628b05p-4), asin(cf64.init(0x1.8p+0, 0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0xf.661657628b05p-4), asin(cf64.init(-0x1.8p+0, 0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xf.661657628b05p-4), asin(cf64.init(0x1.8p+0, -0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0xf.661657628b05p-4), asin(cf64.init(-0x1.8p+0, -0xf.8p-132)));
    // try std.testing.expectEqual(cf64.init(0x4.7006a80efa258p-152, 0x1.31dc0090b63d8p+0), asin(cf64.init(0x8p-152, 0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, 0x1.31dc0090b63d8p+0), asin(cf64.init(0x0p+0, 0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(0x8.990ce59d04a8p-1028, 0x1.31dc0090b63d8p+0), asin(cf64.init(0xf.8p-1028, 0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(0x4.7006a80efa258p-152, -0x1.31dc0090b63d8p+0), asin(cf64.init(0x8p-152, -0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, -0x1.31dc0090b63d8p+0), asin(cf64.init(0x0p+0, -0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(0x8.990ce59d04a8p-1028, -0x1.31dc0090b63d8p+0), asin(cf64.init(0xf.8p-1028, -0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, 0x1.31dc0090b63d8p+0), asin(cf64.init(-0x0p+0, 0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(-0x4.7006a80efa258p-152, 0x1.31dc0090b63d8p+0), asin(cf64.init(-0x8p-152, 0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(-0x8.990ce59d04a8p-1028, 0x1.31dc0090b63d8p+0), asin(cf64.init(-0xf.8p-1028, 0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, -0x1.31dc0090b63d8p+0), asin(cf64.init(-0x0p+0, -0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(-0x4.7006a80efa258p-152, -0x1.31dc0090b63d8p+0), asin(cf64.init(-0x8p-152, -0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(-0x8.990ce59d04a8p-1028, -0x1.31dc0090b63d8p+0), asin(cf64.init(-0xf.8p-1028, -0x1.8p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xf.661657628b05p-4), asin(cf64.init(0x1.8p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xf.661657628b05p-4), asin(cf64.init(0x1.8p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xf.661657628b05p-4), asin(cf64.init(0x1.8p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0xf.661657628b05p-4), asin(cf64.init(-0x1.8p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0xf.661657628b05p-4), asin(cf64.init(-0x1.8p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0xf.661657628b05p-4), asin(cf64.init(-0x1.8p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xf.661657628b05p-4), asin(cf64.init(0x1.8p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xf.661657628b05p-4), asin(cf64.init(0x1.8p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xf.661657628b05p-4), asin(cf64.init(0x1.8p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0xf.661657628b05p-4), asin(cf64.init(-0x1.8p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0xf.661657628b05p-4), asin(cf64.init(-0x1.8p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0xf.661657628b05p-4), asin(cf64.init(-0x1.8p+0, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf64.init(0x4.7006a80efa258p-152, 0x1.31dc0090b63d8p+0), asin(cf64.init(0x8p-152, 0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, 0x1.31dc0090b63d8p+0), asin(cf64.init(0x0p+0, 0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(0x4p-1076, 0x1.31dc0090b63d8p+0), asin(cf64.init(0x4p-1076, 0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(0x4.7006a80efa258p-152, -0x1.31dc0090b63d8p+0), asin(cf64.init(0x8p-152, -0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, -0x1.31dc0090b63d8p+0), asin(cf64.init(0x0p+0, -0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(0x4p-1076, -0x1.31dc0090b63d8p+0), asin(cf64.init(0x4p-1076, -0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, 0x1.31dc0090b63d8p+0), asin(cf64.init(-0x0p+0, 0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(-0x4.7006a80efa258p-152, 0x1.31dc0090b63d8p+0), asin(cf64.init(-0x8p-152, 0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(-0x4p-1076, 0x1.31dc0090b63d8p+0), asin(cf64.init(-0x4p-1076, 0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, -0x1.31dc0090b63d8p+0), asin(cf64.init(-0x0p+0, -0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(-0x4.7006a80efa258p-152, -0x1.31dc0090b63d8p+0), asin(cf64.init(-0x8p-152, -0x1.8p+0)));
    // try std.testing.expectEqual(cf64.init(-0x4p-1076, -0x1.31dc0090b63d8p+0), asin(cf64.init(-0x4p-1076, -0x1.8p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xf.661657628b05p-4), asin(cf64.init(0x1.8p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xf.661657628b05p-4), asin(cf64.init(0x1.8p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xf.661657628b05p-4), asin(cf64.init(0x1.8p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0xf.661657628b05p-4), asin(cf64.init(-0x1.8p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0xf.661657628b05p-4), asin(cf64.init(-0x1.8p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0xf.661657628b05p-4), asin(cf64.init(-0x1.8p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xf.661657628b05p-4), asin(cf64.init(0x1.8p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xf.661657628b05p-4), asin(cf64.init(0x1.8p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xf.661657628b05p-4), asin(cf64.init(0x1.8p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0xf.661657628b05p-4), asin(cf64.init(-0x1.8p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0xf.661657628b05p-4), asin(cf64.init(-0x1.8p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0xf.661657628b05p-4), asin(cf64.init(-0x1.8p+0, -0x4p-1076)));
    // try std.testing.expectEqual(cf64.init(0x5.974d6a2eaa79p-4, 0xe.d170de964f5d8p-4), asin(cf64.init(0x8p-4, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x5.974d6a2eaa79p-4, -0xe.d170de964f5d8p-4), asin(cf64.init(0x8p-4, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0x5.974d6a2eaa79p-4, 0xe.d170de964f5d8p-4), asin(cf64.init(-0x8p-4, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0x5.974d6a2eaa79p-4, -0xe.d170de964f5d8p-4), asin(cf64.init(-0x8p-4, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0xe.55a315408aed8p-4, 0xb.b9c8f86edeb48p-4), asin(cf64.init(0x1p+0, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(-0xe.55a315408aed8p-4, 0xb.b9c8f86edeb48p-4), asin(cf64.init(-0x1p+0, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(0xe.55a315408aed8p-4, -0xb.b9c8f86edeb48p-4), asin(cf64.init(0x1p+0, -0x8p-4)));
    try std.testing.expectEqual(cf64.init(-0xe.55a315408aed8p-4, -0xb.b9c8f86edeb48p-4), asin(cf64.init(-0x1p+0, -0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x2.d2227fefb78c4p-4, 0xe.4787aa0d7d0a8p-4), asin(cf64.init(0x4p-4, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x2.d2227fefb78c4p-4, -0xe.4787aa0d7d0a8p-4), asin(cf64.init(0x4p-4, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x2.d2227fefb78c4p-4, 0xe.4787aa0d7d0a8p-4), asin(cf64.init(-0x4p-4, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x2.d2227fefb78c4p-4, -0xe.4787aa0d7d0a8p-4), asin(cf64.init(-0x4p-4, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.14edb2e773d6dp+0, 0x8.281ac2ec921bp-4), asin(cf64.init(0x1p+0, 0x4p-4)));
    // try std.testing.expectEqual(cf64.init(-0x1.14edb2e773d6dp+0, 0x8.281ac2ec921bp-4), asin(cf64.init(-0x1p+0, 0x4p-4)));
    // try std.testing.expectEqual(cf64.init(0x1.14edb2e773d6dp+0, -0x8.281ac2ec921bp-4), asin(cf64.init(0x1p+0, -0x4p-4)));
    // try std.testing.expectEqual(cf64.init(-0x1.14edb2e773d6dp+0, -0x8.281ac2ec921bp-4), asin(cf64.init(-0x1p+0, -0x4p-4)));
    // try std.testing.expectEqual(cf64.init(0x5.7ae64f1be7bdcp-12, 0xe.1a1bda9ed1ce8p-4), asin(cf64.init(0x7.cp-12, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x5.7ae64f1be7bdcp-12, -0xe.1a1bda9ed1ce8p-4), asin(cf64.init(0x7.cp-12, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0x5.7ae64f1be7bdcp-12, 0xe.1a1bda9ed1ce8p-4), asin(cf64.init(-0x7.cp-12, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0x5.7ae64f1be7bdcp-12, -0xe.1a1bda9ed1ce8p-4), asin(cf64.init(-0x7.cp-12, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.86fd765f46725p+0, 0xb.23250757a42f8p-8), asin(cf64.init(0x1p+0, 0x7.cp-12)));
    try std.testing.expectEqual(cf64.init(-0x1.86fd765f46725p+0, 0xb.23250757a42f8p-8), asin(cf64.init(-0x1p+0, 0x7.cp-12)));
    try std.testing.expectEqual(cf64.init(0x1.86fd765f46725p+0, -0xb.23250757a42f8p-8), asin(cf64.init(0x1p+0, -0x7.cp-12)));
    try std.testing.expectEqual(cf64.init(-0x1.86fd765f46725p+0, -0xb.23250757a42f8p-8), asin(cf64.init(-0x1p+0, -0x7.cp-12)));
    // try std.testing.expectEqual(cf64.init(0x5.7ae65cd2d07b8p-32, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x7.cp-32, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x5.7ae65cd2d07b8p-32, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x7.cp-32, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0x5.7ae65cd2d07b8p-32, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x7.cp-32, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0x5.7ae65cd2d07b8p-32, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x7.cp-32, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921cec97c2264p+0, 0x2.c8ac80aee47d2p-16), asin(cf64.init(0x1p+0, 0x7.cp-32)));
    try std.testing.expectEqual(cf64.init(-0x1.921cec97c2264p+0, 0x2.c8ac80aee47d2p-16), asin(cf64.init(-0x1p+0, 0x7.cp-32)));
    try std.testing.expectEqual(cf64.init(0x1.921cec97c2264p+0, -0x2.c8ac80aee47d2p-16), asin(cf64.init(0x1p+0, -0x7.cp-32)));
    try std.testing.expectEqual(cf64.init(-0x1.921cec97c2264p+0, -0x2.c8ac80aee47d2p-16), asin(cf64.init(-0x1p+0, -0x7.cp-32)));
    // try std.testing.expectEqual(cf64.init(0x1.5eb99734b41eep-100, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x1.fp-100, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.5eb99734b41eep-100, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x1.fp-100, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0x1.5eb99734b41eep-100, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x1.fp-100, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0x1.5eb99734b41eep-100, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x1.fp-100, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d13p+0, 0x5.9159015a3070cp-52), asin(cf64.init(0x1p+0, 0x1.fp-100)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d13p+0, 0x5.9159015a3070cp-52), asin(cf64.init(-0x1p+0, 0x1.fp-100)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d13p+0, -0x5.9159015a3070cp-52), asin(cf64.init(0x1p+0, -0x1.fp-100)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d13p+0, -0x5.9159015a3070cp-52), asin(cf64.init(-0x1p+0, -0x1.fp-100)));
    // try std.testing.expectEqual(cf64.init(0xa.f5ccb9a5a0f7p-132, 0xe.1a1b30bcea138p-4), asin(cf64.init(0xf.8p-132, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0xa.f5ccb9a5a0f7p-132, -0xe.1a1b30bcea138p-4), asin(cf64.init(0xf.8p-132, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0xa.f5ccb9a5a0f7p-132, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0xf.8p-132, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0xa.f5ccb9a5a0f7p-132, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0xf.8p-132, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xf.bf7df5c6a789p-68), asin(cf64.init(0x1p+0, 0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0xf.bf7df5c6a789p-68), asin(cf64.init(-0x1p+0, 0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xf.bf7df5c6a789p-68), asin(cf64.init(0x1p+0, -0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0xf.bf7df5c6a789p-68), asin(cf64.init(-0x1p+0, -0xf.8p-132)));
    // try std.testing.expectEqual(cf64.init(0x5.a827999fcef34p-152, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.5eb99734b41eep-1000, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x1.fp-1000, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x5.a827999fcef34p-152, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.5eb99734b41eep-1000, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x1.fp-1000, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0x5.a827999fcef34p-152, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0x1.5eb99734b41eep-1000, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x1.fp-1000, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0x5.a827999fcef34p-152, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0x1.5eb99734b41eep-1000, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x1.fp-1000, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x2.d413cccfe779ap-76), asin(cf64.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), asin(cf64.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.645640568c1c3p-500), asin(cf64.init(0x1p+0, 0x1.fp-1000)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x2.d413cccfe779ap-76), asin(cf64.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x0p+0), asin(cf64.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x1.645640568c1c3p-500), asin(cf64.init(-0x1p+0, 0x1.fp-1000)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), asin(cf64.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x2.d413cccfe779ap-76), asin(cf64.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.645640568c1c3p-500), asin(cf64.init(0x1p+0, -0x1.fp-1000)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x0p+0), asin(cf64.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x2.d413cccfe779ap-76), asin(cf64.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x1.645640568c1c3p-500), asin(cf64.init(-0x1p+0, -0x1.fp-1000)));
    // try std.testing.expectEqual(cf64.init(0x5.a827999fcef34p-152, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0xa.f5ccb9a5a0f8p-1028, 0xe.1a1b30bcea138p-4), asin(cf64.init(0xf.8p-1028, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x5.a827999fcef34p-152, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0xa.f5ccb9a5a0f8p-1028, -0xe.1a1b30bcea138p-4), asin(cf64.init(0xf.8p-1028, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0x5.a827999fcef34p-152, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0xa.f5ccb9a5a0f8p-1028, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0xf.8p-1028, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0x5.a827999fcef34p-152, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0xa.f5ccb9a5a0f8p-1028, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0xf.8p-1028, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x2.d413cccfe779ap-76), asin(cf64.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), asin(cf64.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xf.bf7df5c6a789p-516), asin(cf64.init(0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x2.d413cccfe779ap-76), asin(cf64.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x0p+0), asin(cf64.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0xf.bf7df5c6a789p-516), asin(cf64.init(-0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), asin(cf64.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x2.d413cccfe779ap-76), asin(cf64.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xf.bf7df5c6a789p-516), asin(cf64.init(0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x0p+0), asin(cf64.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x2.d413cccfe779ap-76), asin(cf64.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0xf.bf7df5c6a789p-516), asin(cf64.init(-0x1p+0, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf64.init(0x5.a827999fcef34p-152, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x4p-1076, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x4p-1076, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x5.a827999fcef34p-152, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x4p-1076, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x4p-1076, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0x5.a827999fcef34p-152, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0x4p-1076, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x4p-1076, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0x5.a827999fcef34p-152, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0x4p-1076, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x4p-1076, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x2.d413cccfe779ap-76), asin(cf64.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), asin(cf64.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x8p-540), asin(cf64.init(0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x2.d413cccfe779ap-76), asin(cf64.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x0p+0), asin(cf64.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x8p-540), asin(cf64.init(-0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), asin(cf64.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x2.d413cccfe779ap-76), asin(cf64.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x8p-540), asin(cf64.init(0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x0p+0), asin(cf64.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x2.d413cccfe779ap-76), asin(cf64.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x8p-540), asin(cf64.init(-0x1p+0, -0x4p-1076)));
    // try std.testing.expectEqual(cf64.init(0x5.a827999fcef34p-152, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x4p-1076, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x4p-1076, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x5.a827999fcef34p-152, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x4p-1076, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x4p-1076, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0x5.a827999fcef34p-152, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0x4p-1076, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x4p-1076, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0x5.a827999fcef34p-152, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0x4p-1076, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x4p-1076, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x2.d413cccfe779ap-76), asin(cf64.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), asin(cf64.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x8p-540), asin(cf64.init(0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x2.d413cccfe779ap-76), asin(cf64.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x0p+0), asin(cf64.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x8p-540), asin(cf64.init(-0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), asin(cf64.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x2.d413cccfe779ap-76), asin(cf64.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x8p-540), asin(cf64.init(0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x0p+0), asin(cf64.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x2.d413cccfe779ap-76), asin(cf64.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x8p-540), asin(cf64.init(-0x1p+0, -0x4p-1076)));
    // try std.testing.expectEqual(cf64.init(0x1.6a09e4fde9d6ep-24, 0xe.1a1b475d887ap-4), asin(cf64.init(0x2p-24, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.6a09e4fde9d6ep-24, -0xe.1a1b475d887ap-4), asin(cf64.init(0x2p-24, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(-0x1.6a09e4fde9d6ep-24, 0xe.1a1b475d887ap-4), asin(cf64.init(-0x2p-24, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(-0x1.6a09e4fde9d6ep-24, -0xe.1a1b475d887ap-4), asin(cf64.init(-0x2p-24, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.9211252bae9f9p+0, 0x2.3286b92909b7p-12), asin(cf64.init(0x1.000002p+0, 0x2p-24)));
    try std.testing.expectEqual(cf64.init(-0x1.9211252bae9f9p+0, 0x2.3286b92909b7p-12), asin(cf64.init(-0x1.000002p+0, 0x2p-24)));
    try std.testing.expectEqual(cf64.init(0x1.9211252bae9f9p+0, -0x2.3286b92909b7p-12), asin(cf64.init(0x1.000002p+0, -0x2p-24)));
    try std.testing.expectEqual(cf64.init(-0x1.9211252bae9f9p+0, -0x2.3286b92909b7p-12), asin(cf64.init(-0x1.000002p+0, -0x2p-24)));
    try std.testing.expectEqual(cf64.init(0xa.f5ccaeafd443p-132, 0xe.1a1b475d886e8p-4), asin(cf64.init(0xf.8p-132, 0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0xa.f5ccaeafd443p-132, -0xe.1a1b475d886e8p-4), asin(cf64.init(0xf.8p-132, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(-0xa.f5ccaeafd443p-132, 0xe.1a1b475d886e8p-4), asin(cf64.init(-0xf.8p-132, 0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(-0xa.f5ccaeafd443p-132, -0xe.1a1b475d886e8p-4), asin(cf64.init(-0xf.8p-132, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, 0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, 0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, -0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, -0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b475d886e8p-4), asin(cf64.init(0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b475d886e8p-4), asin(cf64.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b475d886e8p-4), asin(cf64.init(-0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b475d886e8p-4), asin(cf64.init(-0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0xb.504f27ef4eb88p-56, 0xe.1a1b475d886e8p-4), asin(cf64.init(0x1p-52, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0xb.504f333f9de68p-56, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x1p-52, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0xb.504f333f9de6p-56, 0xe.1a1b30bcea14p-4), asin(cf64.init(0x1p-52, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0xb.504f333f9de68p-56, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x1p-52, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0xb.504f27ef4eb88p-56, -0xe.1a1b475d886e8p-4), asin(cf64.init(0x1p-52, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0xb.504f333f9de6p-56, -0xe.1a1b30bcea14p-4), asin(cf64.init(0x1p-52, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(-0xb.504f27ef4eb88p-56, 0xe.1a1b475d886e8p-4), asin(cf64.init(-0x1p-52, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(-0xb.504f333f9de68p-56, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x1p-52, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0xb.504f333f9de6p-56, 0xe.1a1b30bcea14p-4), asin(cf64.init(-0x1p-52, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(-0xb.504f333f9de68p-56, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x1p-52, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0xb.504f27ef4eb88p-56, -0xe.1a1b475d886e8p-4), asin(cf64.init(-0x1p-52, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(-0xb.504f333f9de6p-56, -0xe.1a1b30bcea14p-4), asin(cf64.init(-0x1p-52, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442518p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, 0x1p-52)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb50442d18p+0, 0x4p-28), asin(cf64.init(0x1p+0, 0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x1.921fb51b122b9p+0, 0x6.3710864f5700cp-28), asin(cf64.init(0x1.0000000000001p+0, 0x1p-52)));
    // try std.testing.expectEqual(cf64.init(-0x1.921fb50442d18p+0, 0x4p-28), asin(cf64.init(-0x1p+0, 0x1p-52)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442518p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, 0x1p-52)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb51b122b9p+0, 0x6.3710864f5700cp-28), asin(cf64.init(-0x1.0000000000001p+0, 0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442518p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, -0x1p-52)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb50442d18p+0, -0x4p-28), asin(cf64.init(0x1p+0, -0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x1.921fb51b122b9p+0, -0x6.3710864f5700cp-28), asin(cf64.init(0x1.0000000000001p+0, -0x1p-52)));
    // try std.testing.expectEqual(cf64.init(-0x1.921fb50442d18p+0, -0x4p-28), asin(cf64.init(-0x1p+0, -0x1p-52)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442518p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, -0x1p-52)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb51b122b9p+0, -0x6.3710864f5700cp-28), asin(cf64.init(-0x1.0000000000001p+0, -0x1p-52)));
    // try std.testing.expectEqual(cf64.init(0x5.a82793f7a75c4p-152, 0xe.1a1b475d886e8p-4), asin(cf64.init(0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x5.a827999fcef34p-152, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x5.a827999fcef3p-152, 0xe.1a1b30bcea14p-4), asin(cf64.init(0x8p-152, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b475d886e8p-4), asin(cf64.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b30bcea14p-4), asin(cf64.init(0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0xa.f5ccaeafd444p-1028, 0xe.1a1b475d886e8p-4), asin(cf64.init(0xf.8p-1028, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0xa.f5ccb9a5a0f8p-1028, 0xe.1a1b30bcea138p-4), asin(cf64.init(0xf.8p-1028, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0xa.f5ccb9a5a0f8p-1028, 0xe.1a1b30bcea14p-4), asin(cf64.init(0xf.8p-1028, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x5.a827999fcef34p-152, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x5.a82793f7a75c4p-152, -0xe.1a1b475d886e8p-4), asin(cf64.init(0x8p-152, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x5.a827999fcef3p-152, -0xe.1a1b30bcea14p-4), asin(cf64.init(0x8p-152, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b475d886e8p-4), asin(cf64.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b30bcea14p-4), asin(cf64.init(0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0xa.f5ccb9a5a0f8p-1028, -0xe.1a1b30bcea138p-4), asin(cf64.init(0xf.8p-1028, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0xa.f5ccaeafd444p-1028, -0xe.1a1b475d886e8p-4), asin(cf64.init(0xf.8p-1028, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0xa.f5ccb9a5a0f8p-1028, -0xe.1a1b30bcea14p-4), asin(cf64.init(0xf.8p-1028, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b475d886e8p-4), asin(cf64.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b30bcea14p-4), asin(cf64.init(-0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(-0x5.a82793f7a75c4p-152, 0xe.1a1b475d886e8p-4), asin(cf64.init(-0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(-0x5.a827999fcef34p-152, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x5.a827999fcef3p-152, 0xe.1a1b30bcea14p-4), asin(cf64.init(-0x8p-152, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(-0xa.f5ccaeafd444p-1028, 0xe.1a1b475d886e8p-4), asin(cf64.init(-0xf.8p-1028, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(-0xa.f5ccb9a5a0f8p-1028, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0xf.8p-1028, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0xa.f5ccb9a5a0f8p-1028, 0xe.1a1b30bcea14p-4), asin(cf64.init(-0xf.8p-1028, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b475d886e8p-4), asin(cf64.init(-0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b30bcea14p-4), asin(cf64.init(-0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(-0x5.a827999fcef34p-152, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0x5.a82793f7a75c4p-152, -0xe.1a1b475d886e8p-4), asin(cf64.init(-0x8p-152, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(-0x5.a827999fcef3p-152, -0xe.1a1b30bcea14p-4), asin(cf64.init(-0x8p-152, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(-0xa.f5ccb9a5a0f8p-1028, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0xf.8p-1028, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0xa.f5ccaeafd444p-1028, -0xe.1a1b475d886e8p-4), asin(cf64.init(-0xf.8p-1028, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(-0xa.f5ccb9a5a0f8p-1028, -0xe.1a1b30bcea14p-4), asin(cf64.init(-0xf.8p-1028, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x2.d413cccfe779ap-76), asin(cf64.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), asin(cf64.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xf.bf7df5c6a789p-516), asin(cf64.init(0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x5.a827999fcef3p-28), asin(cf64.init(0x1.0000000000001p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x5.a827999fcef3p-28), asin(cf64.init(0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x5.a827999fcef3p-28), asin(cf64.init(0x1.0000000000001p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x2.d413cccfe779ap-76), asin(cf64.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x0p+0), asin(cf64.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0xf.bf7df5c6a789p-516), asin(cf64.init(-0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x5.a827999fcef3p-28), asin(cf64.init(-0x1.0000000000001p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x5.a827999fcef3p-28), asin(cf64.init(-0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x5.a827999fcef3p-28), asin(cf64.init(-0x1.0000000000001p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), asin(cf64.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x2.d413cccfe779ap-76), asin(cf64.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xf.bf7df5c6a789p-516), asin(cf64.init(0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x5.a827999fcef3p-28), asin(cf64.init(0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x5.a827999fcef3p-28), asin(cf64.init(0x1.0000000000001p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x5.a827999fcef3p-28), asin(cf64.init(0x1.0000000000001p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x0p+0), asin(cf64.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x2.d413cccfe779ap-76), asin(cf64.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0xf.bf7df5c6a789p-516), asin(cf64.init(-0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x5.a827999fcef3p-28), asin(cf64.init(-0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x5.a827999fcef3p-28), asin(cf64.init(-0x1.0000000000001p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x5.a827999fcef3p-28), asin(cf64.init(-0x1.0000000000001p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b475d886e8p-4), asin(cf64.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b30bcea14p-4), asin(cf64.init(0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b475d886e8p-4), asin(cf64.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b30bcea14p-4), asin(cf64.init(0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b475d886e8p-4), asin(cf64.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b30bcea14p-4), asin(cf64.init(-0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b475d886e8p-4), asin(cf64.init(-0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b30bcea14p-4), asin(cf64.init(-0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), asin(cf64.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x5.a827999fcef3p-28), asin(cf64.init(0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x0p+0), asin(cf64.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x5.a827999fcef3p-28), asin(cf64.init(-0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), asin(cf64.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x5.a827999fcef3p-28), asin(cf64.init(0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x0p+0), asin(cf64.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x5.a827999fcef3p-28), asin(cf64.init(-0x1.0000000000001p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.6a09e4fde9d71p-64, 0xe.1a1b475d886e8p-4), asin(cf64.init(0x2p-64, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.6a09e667f3bcdp-64, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x2p-64, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e667f3bccp-64, 0xe.1a1b30bcea14p-4), asin(cf64.init(0x2p-64, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.6a09e667f3bcdp-64, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x2p-64, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.6a09e4fde9d71p-64, -0xe.1a1b475d886e8p-4), asin(cf64.init(0x2p-64, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e667f3bccp-64, -0xe.1a1b30bcea14p-4), asin(cf64.init(0x2p-64, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(-0x1.6a09e4fde9d71p-64, 0xe.1a1b475d886e8p-4), asin(cf64.init(-0x2p-64, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(-0x1.6a09e667f3bcdp-64, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x2p-64, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.6a09e667f3bccp-64, 0xe.1a1b30bcea14p-4), asin(cf64.init(-0x2p-64, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(-0x1.6a09e667f3bcdp-64, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x2p-64, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0x1.6a09e4fde9d71p-64, -0xe.1a1b475d886e8p-4), asin(cf64.init(-0x2p-64, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.6a09e667f3bccp-64, -0xe.1a1b30bcea14p-4), asin(cf64.init(-0x2p-64, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d17p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, 0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x1.921fb542d8c7ap+0, 0x1.6a09e667f3bcdp-32), asin(cf64.init(0x1p+0, 0x2p-64)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb5443d296p+0, 0x5.a8279c73e2bc8p-28), asin(cf64.init(0x1.0000000000001p+0, 0x2p-64)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb542d8c7ap+0, 0x1.6a09e667f3bcdp-32), asin(cf64.init(-0x1p+0, 0x2p-64)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d17p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, 0x2p-64)));
    // try std.testing.expectEqual(cf64.init(-0x1.921fb5443d296p+0, 0x5.a8279c73e2bc8p-28), asin(cf64.init(-0x1.0000000000001p+0, 0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d17p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, -0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x1.921fb542d8c7ap+0, -0x1.6a09e667f3bcdp-32), asin(cf64.init(0x1p+0, -0x2p-64)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb5443d296p+0, -0x5.a8279c73e2bc8p-28), asin(cf64.init(0x1.0000000000001p+0, -0x2p-64)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb542d8c7ap+0, -0x1.6a09e667f3bcdp-32), asin(cf64.init(-0x1p+0, -0x2p-64)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d17p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, -0x2p-64)));
    // try std.testing.expectEqual(cf64.init(-0x1.921fb5443d296p+0, -0x5.a8279c73e2bc8p-28), asin(cf64.init(-0x1.0000000000001p+0, -0x2p-64)));
    // try std.testing.expectEqual(cf64.init(0x5.a82793f7a75c4p-152, 0xe.1a1b475d886e8p-4), asin(cf64.init(0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x5.a827999fcef34p-152, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x5.a827999fcef3p-152, 0xe.1a1b30bcea14p-4), asin(cf64.init(0x8p-152, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b475d886e8p-4), asin(cf64.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b30bcea14p-4), asin(cf64.init(0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x4p-1076, 0xe.1a1b475d886e8p-4), asin(cf64.init(0x4p-1076, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x4p-1076, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x4p-1076, 0xe.1a1b30bcea14p-4), asin(cf64.init(0x4p-1076, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x5.a827999fcef34p-152, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x5.a82793f7a75c4p-152, -0xe.1a1b475d886e8p-4), asin(cf64.init(0x8p-152, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x5.a827999fcef3p-152, -0xe.1a1b30bcea14p-4), asin(cf64.init(0x8p-152, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b475d886e8p-4), asin(cf64.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b30bcea14p-4), asin(cf64.init(0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x4p-1076, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x4p-1076, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x4p-1076, -0xe.1a1b475d886e8p-4), asin(cf64.init(0x4p-1076, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x4p-1076, -0xe.1a1b30bcea14p-4), asin(cf64.init(0x4p-1076, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b475d886e8p-4), asin(cf64.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b30bcea14p-4), asin(cf64.init(-0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(-0x5.a82793f7a75c4p-152, 0xe.1a1b475d886e8p-4), asin(cf64.init(-0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(-0x5.a827999fcef34p-152, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x5.a827999fcef3p-152, 0xe.1a1b30bcea14p-4), asin(cf64.init(-0x8p-152, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(-0x4p-1076, 0xe.1a1b475d886e8p-4), asin(cf64.init(-0x4p-1076, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(-0x4p-1076, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x4p-1076, 0xe.1a1b30bcea14p-4), asin(cf64.init(-0x4p-1076, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b475d886e8p-4), asin(cf64.init(-0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b30bcea14p-4), asin(cf64.init(-0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(-0x5.a827999fcef34p-152, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0x5.a82793f7a75c4p-152, -0xe.1a1b475d886e8p-4), asin(cf64.init(-0x8p-152, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(-0x5.a827999fcef3p-152, -0xe.1a1b30bcea14p-4), asin(cf64.init(-0x8p-152, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(-0x4p-1076, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x4p-1076, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x4p-1076, -0xe.1a1b475d886e8p-4), asin(cf64.init(-0x4p-1076, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(-0x4p-1076, -0xe.1a1b30bcea14p-4), asin(cf64.init(-0x4p-1076, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x2.d413cccfe779ap-76), asin(cf64.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), asin(cf64.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x8p-540), asin(cf64.init(0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x5.a827999fcef3p-28), asin(cf64.init(0x1.0000000000001p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x5.a827999fcef3p-28), asin(cf64.init(0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x5.a827999fcef3p-28), asin(cf64.init(0x1.0000000000001p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x2.d413cccfe779ap-76), asin(cf64.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x0p+0), asin(cf64.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x8p-540), asin(cf64.init(-0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x5.a827999fcef3p-28), asin(cf64.init(-0x1.0000000000001p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x5.a827999fcef3p-28), asin(cf64.init(-0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x5.a827999fcef3p-28), asin(cf64.init(-0x1.0000000000001p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), asin(cf64.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x2.d413cccfe779ap-76), asin(cf64.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x8p-540), asin(cf64.init(0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x5.a827999fcef3p-28), asin(cf64.init(0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x5.a827999fcef3p-28), asin(cf64.init(0x1.0000000000001p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x5.a827999fcef3p-28), asin(cf64.init(0x1.0000000000001p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x0p+0), asin(cf64.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x2.d413cccfe779ap-76), asin(cf64.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x8p-540), asin(cf64.init(-0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x5.a827999fcef3p-28), asin(cf64.init(-0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x5.a827999fcef3p-28), asin(cf64.init(-0x1.0000000000001p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x5.a827999fcef3p-28), asin(cf64.init(-0x1.0000000000001p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b475d886e8p-4), asin(cf64.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b30bcea14p-4), asin(cf64.init(0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b475d886e8p-4), asin(cf64.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b30bcea14p-4), asin(cf64.init(0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b475d886e8p-4), asin(cf64.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b30bcea14p-4), asin(cf64.init(-0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b475d886e8p-4), asin(cf64.init(-0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b30bcea14p-4), asin(cf64.init(-0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), asin(cf64.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x5.a827999fcef3p-28), asin(cf64.init(0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x0p+0), asin(cf64.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x5.a827999fcef3p-28), asin(cf64.init(-0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), asin(cf64.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x5.a827999fcef3p-28), asin(cf64.init(0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x0p+0), asin(cf64.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x5.a827999fcef3p-28), asin(cf64.init(-0x1.0000000000001p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf64.init(0x2.d413c9fbd3ae2p-108, 0xe.1a1b475d886e8p-4), asin(cf64.init(0x4p-108, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x2.d413cccfe779ap-108, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x4p-108, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x2.d413cccfe7798p-108, 0xe.1a1b30bcea14p-4), asin(cf64.init(0x4p-108, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x2.d413cccfe779ap-108, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x4p-108, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x2.d413c9fbd3ae2p-108, -0xe.1a1b475d886e8p-4), asin(cf64.init(0x4p-108, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x2.d413cccfe7798p-108, -0xe.1a1b30bcea14p-4), asin(cf64.init(0x4p-108, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(-0x2.d413c9fbd3ae2p-108, 0xe.1a1b475d886e8p-4), asin(cf64.init(-0x4p-108, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(-0x2.d413cccfe779ap-108, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x4p-108, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x2.d413cccfe7798p-108, 0xe.1a1b30bcea14p-4), asin(cf64.init(-0x4p-108, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(-0x2.d413cccfe779ap-108, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x4p-108, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0x2.d413c9fbd3ae2p-108, -0xe.1a1b475d886e8p-4), asin(cf64.init(-0x4p-108, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(-0x2.d413cccfe7798p-108, -0xe.1a1b30bcea14p-4), asin(cf64.init(-0x4p-108, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, 0x4p-108)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x8p-56), asin(cf64.init(0x1p+0, 0x4p-108)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x5.a827999fcef3p-28), asin(cf64.init(0x1.0000000000001p+0, 0x4p-108)));
    // try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x8p-56), asin(cf64.init(-0x1p+0, 0x4p-108)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, 0x4p-108)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x5.a827999fcef3p-28), asin(cf64.init(-0x1.0000000000001p+0, 0x4p-108)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, -0x4p-108)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x8p-56), asin(cf64.init(0x1p+0, -0x4p-108)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x5.a827999fcef3p-28), asin(cf64.init(0x1.0000000000001p+0, -0x4p-108)));
    // try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x8p-56), asin(cf64.init(-0x1p+0, -0x4p-108)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, -0x4p-108)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x5.a827999fcef3p-28), asin(cf64.init(-0x1.0000000000001p+0, -0x4p-108)));
    // try std.testing.expectEqual(cf64.init(0x5.a82793f7a75c4p-152, 0xe.1a1b475d886e8p-4), asin(cf64.init(0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x5.a827999fcef34p-152, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x5.a827999fcef3p-152, 0xe.1a1b30bcea14p-4), asin(cf64.init(0x8p-152, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b475d886e8p-4), asin(cf64.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b30bcea14p-4), asin(cf64.init(0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0xa.f5ccaeafd444p-1028, 0xe.1a1b475d886e8p-4), asin(cf64.init(0xf.8p-1028, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0xa.f5ccb9a5a0f8p-1028, 0xe.1a1b30bcea138p-4), asin(cf64.init(0xf.8p-1028, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0xa.f5ccb9a5a0f8p-1028, 0xe.1a1b30bcea14p-4), asin(cf64.init(0xf.8p-1028, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x5.a827999fcef34p-152, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x5.a82793f7a75c4p-152, -0xe.1a1b475d886e8p-4), asin(cf64.init(0x8p-152, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x5.a827999fcef3p-152, -0xe.1a1b30bcea14p-4), asin(cf64.init(0x8p-152, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b475d886e8p-4), asin(cf64.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b30bcea14p-4), asin(cf64.init(0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0xa.f5ccb9a5a0f8p-1028, -0xe.1a1b30bcea138p-4), asin(cf64.init(0xf.8p-1028, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0xa.f5ccaeafd444p-1028, -0xe.1a1b475d886e8p-4), asin(cf64.init(0xf.8p-1028, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0xa.f5ccb9a5a0f8p-1028, -0xe.1a1b30bcea14p-4), asin(cf64.init(0xf.8p-1028, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b475d886e8p-4), asin(cf64.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b30bcea14p-4), asin(cf64.init(-0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(-0x5.a82793f7a75c4p-152, 0xe.1a1b475d886e8p-4), asin(cf64.init(-0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(-0x5.a827999fcef34p-152, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x5.a827999fcef3p-152, 0xe.1a1b30bcea14p-4), asin(cf64.init(-0x8p-152, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(-0xa.f5ccaeafd444p-1028, 0xe.1a1b475d886e8p-4), asin(cf64.init(-0xf.8p-1028, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(-0xa.f5ccb9a5a0f8p-1028, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0xf.8p-1028, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0xa.f5ccb9a5a0f8p-1028, 0xe.1a1b30bcea14p-4), asin(cf64.init(-0xf.8p-1028, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b475d886e8p-4), asin(cf64.init(-0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b30bcea14p-4), asin(cf64.init(-0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(-0x5.a827999fcef34p-152, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0x5.a82793f7a75c4p-152, -0xe.1a1b475d886e8p-4), asin(cf64.init(-0x8p-152, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(-0x5.a827999fcef3p-152, -0xe.1a1b30bcea14p-4), asin(cf64.init(-0x8p-152, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(-0xa.f5ccb9a5a0f8p-1028, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0xf.8p-1028, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0xa.f5ccaeafd444p-1028, -0xe.1a1b475d886e8p-4), asin(cf64.init(-0xf.8p-1028, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(-0xa.f5ccb9a5a0f8p-1028, -0xe.1a1b30bcea14p-4), asin(cf64.init(-0xf.8p-1028, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x2.d413cccfe779ap-76), asin(cf64.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), asin(cf64.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xf.bf7df5c6a789p-516), asin(cf64.init(0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x5.a827999fcef3p-28), asin(cf64.init(0x1.0000000000001p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x5.a827999fcef3p-28), asin(cf64.init(0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x5.a827999fcef3p-28), asin(cf64.init(0x1.0000000000001p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x2.d413cccfe779ap-76), asin(cf64.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x0p+0), asin(cf64.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0xf.bf7df5c6a789p-516), asin(cf64.init(-0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x5.a827999fcef3p-28), asin(cf64.init(-0x1.0000000000001p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x5.a827999fcef3p-28), asin(cf64.init(-0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x5.a827999fcef3p-28), asin(cf64.init(-0x1.0000000000001p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), asin(cf64.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x2.d413cccfe779ap-76), asin(cf64.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xf.bf7df5c6a789p-516), asin(cf64.init(0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x5.a827999fcef3p-28), asin(cf64.init(0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x5.a827999fcef3p-28), asin(cf64.init(0x1.0000000000001p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x5.a827999fcef3p-28), asin(cf64.init(0x1.0000000000001p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x0p+0), asin(cf64.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x2.d413cccfe779ap-76), asin(cf64.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0xf.bf7df5c6a789p-516), asin(cf64.init(-0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x5.a827999fcef3p-28), asin(cf64.init(-0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x5.a827999fcef3p-28), asin(cf64.init(-0x1.0000000000001p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x5.a827999fcef3p-28), asin(cf64.init(-0x1.0000000000001p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b475d886e8p-4), asin(cf64.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b30bcea14p-4), asin(cf64.init(0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b475d886e8p-4), asin(cf64.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b30bcea14p-4), asin(cf64.init(0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b475d886e8p-4), asin(cf64.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b30bcea14p-4), asin(cf64.init(-0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b475d886e8p-4), asin(cf64.init(-0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b30bcea14p-4), asin(cf64.init(-0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), asin(cf64.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x5.a827999fcef3p-28), asin(cf64.init(0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x0p+0), asin(cf64.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x5.a827999fcef3p-28), asin(cf64.init(-0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), asin(cf64.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x5.a827999fcef3p-28), asin(cf64.init(0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x0p+0), asin(cf64.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x5.a827999fcef3p-28), asin(cf64.init(-0x1.0000000000001p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf64.init(0x5.a82793f7a75c4p-116, 0xe.1a1b475d886e8p-4), asin(cf64.init(0x8p-116, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x5.a827999fcef34p-116, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x8p-116, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x5.a827999fcef3p-116, 0xe.1a1b30bcea14p-4), asin(cf64.init(0x8p-116, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x5.a827999fcef34p-116, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x8p-116, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x5.a82793f7a75c4p-116, -0xe.1a1b475d886e8p-4), asin(cf64.init(0x8p-116, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x5.a827999fcef3p-116, -0xe.1a1b30bcea14p-4), asin(cf64.init(0x8p-116, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(-0x5.a82793f7a75c4p-116, 0xe.1a1b475d886e8p-4), asin(cf64.init(-0x8p-116, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(-0x5.a827999fcef34p-116, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x8p-116, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x5.a827999fcef3p-116, 0xe.1a1b30bcea14p-4), asin(cf64.init(-0x8p-116, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(-0x5.a827999fcef34p-116, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x8p-116, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0x5.a82793f7a75c4p-116, -0xe.1a1b475d886e8p-4), asin(cf64.init(-0x8p-116, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(-0x5.a827999fcef3p-116, -0xe.1a1b30bcea14p-4), asin(cf64.init(-0x8p-116, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, 0x8p-116)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xb.504f333f9de68p-60), asin(cf64.init(0x1p+0, 0x8p-116)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x5.a827999fcef3p-28), asin(cf64.init(0x1.0000000000001p+0, 0x8p-116)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0xb.504f333f9de68p-60), asin(cf64.init(-0x1p+0, 0x8p-116)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, 0x8p-116)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x5.a827999fcef3p-28), asin(cf64.init(-0x1.0000000000001p+0, 0x8p-116)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, -0x8p-116)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xb.504f333f9de68p-60), asin(cf64.init(0x1p+0, -0x8p-116)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x5.a827999fcef3p-28), asin(cf64.init(0x1.0000000000001p+0, -0x8p-116)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0xb.504f333f9de68p-60), asin(cf64.init(-0x1p+0, -0x8p-116)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, -0x8p-116)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x5.a827999fcef3p-28), asin(cf64.init(-0x1.0000000000001p+0, -0x8p-116)));
    // try std.testing.expectEqual(cf64.init(0x5.a82793f7a75c4p-152, 0xe.1a1b475d886e8p-4), asin(cf64.init(0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x5.a827999fcef34p-152, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x5.a827999fcef3p-152, 0xe.1a1b30bcea14p-4), asin(cf64.init(0x8p-152, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b475d886e8p-4), asin(cf64.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b30bcea14p-4), asin(cf64.init(0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x4p-1076, 0xe.1a1b475d886e8p-4), asin(cf64.init(0x4p-1076, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x4p-1076, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x4p-1076, 0xe.1a1b30bcea14p-4), asin(cf64.init(0x4p-1076, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x5.a827999fcef34p-152, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0x5.a82793f7a75c4p-152, -0xe.1a1b475d886e8p-4), asin(cf64.init(0x8p-152, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x5.a827999fcef3p-152, -0xe.1a1b30bcea14p-4), asin(cf64.init(0x8p-152, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b475d886e8p-4), asin(cf64.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b30bcea14p-4), asin(cf64.init(0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x4p-1076, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x4p-1076, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x4p-1076, -0xe.1a1b475d886e8p-4), asin(cf64.init(0x4p-1076, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x4p-1076, -0xe.1a1b30bcea14p-4), asin(cf64.init(0x4p-1076, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b475d886e8p-4), asin(cf64.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b30bcea14p-4), asin(cf64.init(-0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(-0x5.a82793f7a75c4p-152, 0xe.1a1b475d886e8p-4), asin(cf64.init(-0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(-0x5.a827999fcef34p-152, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x5.a827999fcef3p-152, 0xe.1a1b30bcea14p-4), asin(cf64.init(-0x8p-152, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(-0x4p-1076, 0xe.1a1b475d886e8p-4), asin(cf64.init(-0x4p-1076, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(-0x4p-1076, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x4p-1076, 0xe.1a1b30bcea14p-4), asin(cf64.init(-0x4p-1076, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b475d886e8p-4), asin(cf64.init(-0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b30bcea14p-4), asin(cf64.init(-0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(-0x5.a827999fcef34p-152, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0x5.a82793f7a75c4p-152, -0xe.1a1b475d886e8p-4), asin(cf64.init(-0x8p-152, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(-0x5.a827999fcef3p-152, -0xe.1a1b30bcea14p-4), asin(cf64.init(-0x8p-152, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(-0x4p-1076, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x4p-1076, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x4p-1076, -0xe.1a1b475d886e8p-4), asin(cf64.init(-0x4p-1076, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(-0x4p-1076, -0xe.1a1b30bcea14p-4), asin(cf64.init(-0x4p-1076, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x2.d413cccfe779ap-76), asin(cf64.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), asin(cf64.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x8p-540), asin(cf64.init(0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x5.a827999fcef3p-28), asin(cf64.init(0x1.0000000000001p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x5.a827999fcef3p-28), asin(cf64.init(0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x5.a827999fcef3p-28), asin(cf64.init(0x1.0000000000001p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x2.d413cccfe779ap-76), asin(cf64.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x0p+0), asin(cf64.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x8p-540), asin(cf64.init(-0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x5.a827999fcef3p-28), asin(cf64.init(-0x1.0000000000001p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x5.a827999fcef3p-28), asin(cf64.init(-0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x5.a827999fcef3p-28), asin(cf64.init(-0x1.0000000000001p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), asin(cf64.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x2.d413cccfe779ap-76), asin(cf64.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x8p-540), asin(cf64.init(0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x5.a827999fcef3p-28), asin(cf64.init(0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x5.a827999fcef3p-28), asin(cf64.init(0x1.0000000000001p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x5.a827999fcef3p-28), asin(cf64.init(0x1.0000000000001p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x0p+0), asin(cf64.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x2.d413cccfe779ap-76), asin(cf64.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x8p-540), asin(cf64.init(-0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x5.a827999fcef3p-28), asin(cf64.init(-0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x5.a827999fcef3p-28), asin(cf64.init(-0x1.0000000000001p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x5.a827999fcef3p-28), asin(cf64.init(-0x1.0000000000001p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b475d886e8p-4), asin(cf64.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b30bcea14p-4), asin(cf64.init(0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b475d886e8p-4), asin(cf64.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b30bcea14p-4), asin(cf64.init(0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b475d886e8p-4), asin(cf64.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b30bcea14p-4), asin(cf64.init(-0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b475d886e8p-4), asin(cf64.init(-0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b30bcea14p-4), asin(cf64.init(-0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), asin(cf64.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x5.a827999fcef3p-28), asin(cf64.init(0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x0p+0), asin(cf64.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x5.a827999fcef3p-28), asin(cf64.init(-0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), asin(cf64.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x5.a827999fcef3p-28), asin(cf64.init(0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x0p+0), asin(cf64.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x1.ffffffaaaaaadp-12), asin(cf64.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x5.a827999fcef3p-28), asin(cf64.init(-0x1.0000000000001p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.6a09e71cf8affp-24, 0xe.1a1b256c9ae88p-4), asin(cf64.init(0x2p-24, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.6a09e71cf8affp-24, -0xe.1a1b256c9ae88p-4), asin(cf64.init(0x2p-24, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(-0x1.6a09e71cf8affp-24, 0xe.1a1b256c9ae88p-4), asin(cf64.init(-0x2p-24, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(-0x1.6a09e71cf8affp-24, -0xe.1a1b256c9ae88p-4), asin(cf64.init(-0x2p-24, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.9202ecf11870cp+0, 0x1.1c9e014315739p-12), asin(cf64.init(0xf.fffffp-4, 0x2p-24)));
    try std.testing.expectEqual(cf64.init(-0x1.9202ecf11870cp+0, 0x1.1c9e014315739p-12), asin(cf64.init(-0xf.fffffp-4, 0x2p-24)));
    try std.testing.expectEqual(cf64.init(0x1.9202ecf11870cp+0, -0x1.1c9e014315739p-12), asin(cf64.init(0xf.fffffp-4, -0x2p-24)));
    try std.testing.expectEqual(cf64.init(-0x1.9202ecf11870cp+0, -0x1.1c9e014315739p-12), asin(cf64.init(-0xf.fffffp-4, -0x2p-24)));
    try std.testing.expectEqual(cf64.init(0xa.f5ccbf2087558p-132, 0xe.1a1b256c9add8p-4), asin(cf64.init(0xf.8p-132, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0xa.f5ccbf2087558p-132, -0xe.1a1b256c9add8p-4), asin(cf64.init(0xf.8p-132, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(-0xa.f5ccbf2087558p-132, 0xe.1a1b256c9add8p-4), asin(cf64.init(-0xf.8p-132, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(-0xa.f5ccbf2087558p-132, -0xe.1a1b256c9add8p-4), asin(cf64.init(-0xf.8p-132, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, 0xa.f5ccbc6314268p-120), asin(cf64.init(0xf.fffffp-4, 0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, 0xa.f5ccbc6314268p-120), asin(cf64.init(-0xf.fffffp-4, 0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, -0xa.f5ccbc6314268p-120), asin(cf64.init(0xf.fffffp-4, -0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, -0xa.f5ccbc6314268p-120), asin(cf64.init(-0xf.fffffp-4, -0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b256c9add8p-4), asin(cf64.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b256c9add8p-4), asin(cf64.init(0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b256c9add8p-4), asin(cf64.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b256c9add8p-4), asin(cf64.init(-0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, 0x0p+0), asin(cf64.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, 0x0p+0), asin(cf64.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, -0x0p+0), asin(cf64.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, -0x0p+0), asin(cf64.init(-0xf.fffffp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.c9f25c5bfeddfp-24, 0x7.b30b2bb1458dcp-4), asin(cf64.init(0x2p-24, 0x8p-4)));
    // try std.testing.expectEqual(cf64.init(0x1.c9f25c5bfeddfp-24, -0x7.b30b2bb1458dcp-4), asin(cf64.init(0x2p-24, -0x8p-4)));
    // try std.testing.expectEqual(cf64.init(-0x1.c9f25c5bfeddfp-24, 0x7.b30b2bb1458dcp-4), asin(cf64.init(-0x2p-24, 0x8p-4)));
    // try std.testing.expectEqual(cf64.init(-0x1.c9f25c5bfeddfp-24, -0x7.b30b2bb1458dcp-4), asin(cf64.init(-0x2p-24, -0x8p-4)));
    // try std.testing.expectEqual(cf64.init(0x8.60a91c16b99ap-4, 0x2.4f34e8b2065f6p-24), asin(cf64.init(0x8p-4, 0x2p-24)));
    // try std.testing.expectEqual(cf64.init(-0x8.60a91c16b99ap-4, 0x2.4f34e8b2065f6p-24), asin(cf64.init(-0x8p-4, 0x2p-24)));
    // try std.testing.expectEqual(cf64.init(0x8.60a91c16b99ap-4, -0x2.4f34e8b2065f6p-24), asin(cf64.init(0x8p-4, -0x2p-24)));
    // try std.testing.expectEqual(cf64.init(-0x8.60a91c16b99ap-4, -0x2.4f34e8b2065f6p-24), asin(cf64.init(-0x8p-4, -0x2p-24)));
    try std.testing.expectEqual(cf64.init(0xd.dd164bc8f735p-132, 0x7.b30b2bb145828p-4), asin(cf64.init(0xf.8p-132, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(0xd.dd164bc8f735p-132, -0x7.b30b2bb145828p-4), asin(cf64.init(0xf.8p-132, -0x8p-4)));
    try std.testing.expectEqual(cf64.init(-0xd.dd164bc8f735p-132, 0x7.b30b2bb145828p-4), asin(cf64.init(-0xf.8p-132, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(-0xd.dd164bc8f735p-132, -0x7.b30b2bb145828p-4), asin(cf64.init(-0xf.8p-132, -0x8p-4)));
    // try std.testing.expectEqual(cf64.init(0x8.60a91c16b9b3p-4, 0x1.1e5da0b63b183p-128), asin(cf64.init(0x8p-4, 0xf.8p-132)));
    // try std.testing.expectEqual(cf64.init(-0x8.60a91c16b9b3p-4, 0x1.1e5da0b63b183p-128), asin(cf64.init(-0x8p-4, 0xf.8p-132)));
    // try std.testing.expectEqual(cf64.init(0x8.60a91c16b9b3p-4, -0x1.1e5da0b63b183p-128), asin(cf64.init(0x8p-4, -0xf.8p-132)));
    // try std.testing.expectEqual(cf64.init(-0x8.60a91c16b9b3p-4, -0x1.1e5da0b63b183p-128), asin(cf64.init(-0x8p-4, -0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(0x1.fffffffffffd5p-24, 0x2.000000000002ap-24), asin(cf64.init(0x2p-24, 0x2p-24)));
    try std.testing.expectEqual(cf64.init(0x1.fffffffffffd5p-24, -0x2.000000000002ap-24), asin(cf64.init(0x2p-24, -0x2p-24)));
    try std.testing.expectEqual(cf64.init(-0x1.fffffffffffd5p-24, 0x2.000000000002ap-24), asin(cf64.init(-0x2p-24, 0x2p-24)));
    try std.testing.expectEqual(cf64.init(-0x1.fffffffffffd5p-24, -0x2.000000000002ap-24), asin(cf64.init(-0x2p-24, -0x2p-24)));
    try std.testing.expectEqual(cf64.init(0xf.7fffffffffe1p-132, 0x1.fffffffffffebp-24), asin(cf64.init(0xf.8p-132, 0x2p-24)));
    try std.testing.expectEqual(cf64.init(0xf.7fffffffffe1p-132, -0x1.fffffffffffebp-24), asin(cf64.init(0xf.8p-132, -0x2p-24)));
    try std.testing.expectEqual(cf64.init(-0xf.7fffffffffe1p-132, 0x1.fffffffffffebp-24), asin(cf64.init(-0xf.8p-132, 0x2p-24)));
    try std.testing.expectEqual(cf64.init(-0xf.7fffffffffe1p-132, -0x1.fffffffffffebp-24), asin(cf64.init(-0xf.8p-132, -0x2p-24)));
    try std.testing.expectEqual(cf64.init(0x2.0000000000016p-24, 0xf.80000000001fp-132), asin(cf64.init(0x2p-24, 0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(-0x2.0000000000016p-24, 0xf.80000000001fp-132), asin(cf64.init(-0x2p-24, 0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(0x2.0000000000016p-24, -0xf.80000000001fp-132), asin(cf64.init(0x2p-24, -0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(-0x2.0000000000016p-24, -0xf.80000000001fp-132), asin(cf64.init(-0x2p-24, -0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x1.fffffffffffebp-24), asin(cf64.init(0x0p+0, 0x2p-24)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x1.fffffffffffebp-24), asin(cf64.init(0x0p+0, -0x2p-24)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0x1.fffffffffffebp-24), asin(cf64.init(-0x0p+0, 0x2p-24)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0x1.fffffffffffebp-24), asin(cf64.init(-0x0p+0, -0x2p-24)));
    try std.testing.expectEqual(cf64.init(0x2.0000000000016p-24, 0x0p+0), asin(cf64.init(0x2p-24, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x2.0000000000016p-24, 0x0p+0), asin(cf64.init(-0x2p-24, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x2.0000000000016p-24, -0x0p+0), asin(cf64.init(0x2p-24, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x2.0000000000016p-24, -0x0p+0), asin(cf64.init(-0x2p-24, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0xf.8p-132, 0xf.8p-132), asin(cf64.init(0xf.8p-132, 0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(0xf.8p-132, -0xf.8p-132), asin(cf64.init(0xf.8p-132, -0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(-0xf.8p-132, 0xf.8p-132), asin(cf64.init(-0xf.8p-132, 0xf.8p-132)));
    try std.testing.expectEqual(cf64.init(-0xf.8p-132, -0xf.8p-132), asin(cf64.init(-0xf.8p-132, -0xf.8p-132)));
    // try std.testing.expectEqual(cf64.init(0xb.504f333f9de68p-56, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x1p-52, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(0xb.504f38e7c5818p-56, 0xe.1a1b256c9add8p-4), asin(cf64.init(0x1p-52, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0xb.504f333f9de68p-56, 0xe.1a1b30bcea13p-4), asin(cf64.init(0x1p-52, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(0xb.504f38e7c5818p-56, -0xe.1a1b256c9add8p-4), asin(cf64.init(0x1p-52, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0xb.504f333f9de68p-56, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x1p-52, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0xb.504f333f9de68p-56, -0xe.1a1b30bcea13p-4), asin(cf64.init(0x1p-52, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(-0xb.504f333f9de68p-56, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x1p-52, 0x1p+0)));
    // try std.testing.expectEqual(cf64.init(-0xb.504f38e7c5818p-56, 0xe.1a1b256c9add8p-4), asin(cf64.init(-0x1p-52, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(-0xb.504f333f9de68p-56, 0xe.1a1b30bcea13p-4), asin(cf64.init(-0x1p-52, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(-0xb.504f38e7c5818p-56, -0xe.1a1b256c9add8p-4), asin(cf64.init(-0x1p-52, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(-0xb.504f333f9de68p-56, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x1p-52, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0xb.504f333f9de68p-56, -0xe.1a1b30bcea13p-4), asin(cf64.init(-0x1p-52, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb50442d18p+0, 0x4p-28), asin(cf64.init(0x1p+0, 0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, 0xb.504f3613b1b4p-44), asin(cf64.init(0xf.fffffp-4, 0x1p-52)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb4f2da0c7p+0, 0x3.2504dde4b1a36p-28), asin(cf64.init(0xf.ffffffffffff8p-4, 0x1p-52)));
    try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, 0xb.504f3613b1b4p-44), asin(cf64.init(-0xf.fffffp-4, 0x1p-52)));
    // try std.testing.expectEqual(cf64.init(-0x1.921fb50442d18p+0, 0x4p-28), asin(cf64.init(-0x1p+0, 0x1p-52)));
    // try std.testing.expectEqual(cf64.init(-0x1.921fb4f2da0c7p+0, 0x3.2504dde4b1a36p-28), asin(cf64.init(-0xf.ffffffffffff8p-4, 0x1p-52)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb50442d18p+0, -0x4p-28), asin(cf64.init(0x1p+0, -0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, -0xb.504f3613b1b4p-44), asin(cf64.init(0xf.fffffp-4, -0x1p-52)));
    // try std.testing.expectEqual(cf64.init(0x1.921fb4f2da0c7p+0, -0x3.2504dde4b1a36p-28), asin(cf64.init(0xf.ffffffffffff8p-4, -0x1p-52)));
    try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, -0xb.504f3613b1b4p-44), asin(cf64.init(-0xf.fffffp-4, -0x1p-52)));
    // try std.testing.expectEqual(cf64.init(-0x1.921fb50442d18p+0, -0x4p-28), asin(cf64.init(-0x1p+0, -0x1p-52)));
    // try std.testing.expectEqual(cf64.init(-0x1.921fb4f2da0c7p+0, -0x3.2504dde4b1a36p-28), asin(cf64.init(-0xf.ffffffffffff8p-4, -0x1p-52)));
    // try std.testing.expectEqual(cf64.init(0x5.a827999fcef34p-152, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x5.a8279c73e2c0cp-152, 0xe.1a1b256c9add8p-4), asin(cf64.init(0x8p-152, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x5.a827999fcef34p-152, 0xe.1a1b30bcea13p-4), asin(cf64.init(0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b256c9add8p-4), asin(cf64.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b30bcea13p-4), asin(cf64.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(0xa.f5ccb9a5a0f8p-1028, 0xe.1a1b30bcea138p-4), asin(cf64.init(0xf.8p-1028, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0xa.f5ccbf208754p-1028, 0xe.1a1b256c9add8p-4), asin(cf64.init(0xf.8p-1028, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0xa.f5ccb9a5a0f8p-1028, 0xe.1a1b30bcea13p-4), asin(cf64.init(0xf.8p-1028, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x5.a8279c73e2c0cp-152, -0xe.1a1b256c9add8p-4), asin(cf64.init(0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x5.a827999fcef34p-152, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x5.a827999fcef34p-152, -0xe.1a1b30bcea13p-4), asin(cf64.init(0x8p-152, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b256c9add8p-4), asin(cf64.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b30bcea13p-4), asin(cf64.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0xa.f5ccbf208754p-1028, -0xe.1a1b256c9add8p-4), asin(cf64.init(0xf.8p-1028, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0xa.f5ccb9a5a0f8p-1028, -0xe.1a1b30bcea138p-4), asin(cf64.init(0xf.8p-1028, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0xa.f5ccb9a5a0f8p-1028, -0xe.1a1b30bcea13p-4), asin(cf64.init(0xf.8p-1028, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b256c9add8p-4), asin(cf64.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b30bcea13p-4), asin(cf64.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(-0x5.a827999fcef34p-152, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x5.a8279c73e2c0cp-152, 0xe.1a1b256c9add8p-4), asin(cf64.init(-0x8p-152, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(-0x5.a827999fcef34p-152, 0xe.1a1b30bcea13p-4), asin(cf64.init(-0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(-0xa.f5ccb9a5a0f8p-1028, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0xf.8p-1028, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0xa.f5ccbf208754p-1028, 0xe.1a1b256c9add8p-4), asin(cf64.init(-0xf.8p-1028, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(-0xa.f5ccb9a5a0f8p-1028, 0xe.1a1b30bcea13p-4), asin(cf64.init(-0xf.8p-1028, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b256c9add8p-4), asin(cf64.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b30bcea13p-4), asin(cf64.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(-0x5.a8279c73e2c0cp-152, -0xe.1a1b256c9add8p-4), asin(cf64.init(-0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(-0x5.a827999fcef34p-152, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x5.a827999fcef34p-152, -0xe.1a1b30bcea13p-4), asin(cf64.init(-0x8p-152, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(-0xa.f5ccbf208754p-1028, -0xe.1a1b256c9add8p-4), asin(cf64.init(-0xf.8p-1028, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(-0xa.f5ccb9a5a0f8p-1028, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0xf.8p-1028, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0xa.f5ccb9a5a0f8p-1028, -0xe.1a1b30bcea13p-4), asin(cf64.init(-0xf.8p-1028, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x2.d413cccfe779ap-76), asin(cf64.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), asin(cf64.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xf.bf7df5c6a789p-516), asin(cf64.init(0x1p+0, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, 0x5.a8279b09d8dap-140), asin(cf64.init(0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, 0x0p+0), asin(cf64.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, 0xa.f5ccbc6314268p-1016), asin(cf64.init(0xf.fffffp-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.921fb50442d18p+0, 0x2p-124), asin(cf64.init(0xf.ffffffffffff8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb50442d18p+0, 0x0p+0), asin(cf64.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb50442d18p+0, 0x3.ep-1000), asin(cf64.init(0xf.ffffffffffff8p-4, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, 0x5.a8279b09d8dap-140), asin(cf64.init(-0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, 0x0p+0), asin(cf64.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, 0xa.f5ccbc6314268p-1016), asin(cf64.init(-0xf.fffffp-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x2.d413cccfe779ap-76), asin(cf64.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x0p+0), asin(cf64.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0xf.bf7df5c6a789p-516), asin(cf64.init(-0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb50442d18p+0, 0x2p-124), asin(cf64.init(-0xf.ffffffffffff8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb50442d18p+0, 0x0p+0), asin(cf64.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb50442d18p+0, 0x3.ep-1000), asin(cf64.init(-0xf.ffffffffffff8p-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), asin(cf64.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x2.d413cccfe779ap-76), asin(cf64.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xf.bf7df5c6a789p-516), asin(cf64.init(0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, -0x0p+0), asin(cf64.init(0xf.fffffp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, -0x5.a8279b09d8dap-140), asin(cf64.init(0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, -0xa.f5ccbc6314268p-1016), asin(cf64.init(0xf.fffffp-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.921fb50442d18p+0, -0x0p+0), asin(cf64.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb50442d18p+0, -0x2p-124), asin(cf64.init(0xf.ffffffffffff8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb50442d18p+0, -0x3.ep-1000), asin(cf64.init(0xf.ffffffffffff8p-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, -0x0p+0), asin(cf64.init(-0xf.fffffp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, -0x5.a8279b09d8dap-140), asin(cf64.init(-0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, -0xa.f5ccbc6314268p-1016), asin(cf64.init(-0xf.fffffp-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x0p+0), asin(cf64.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x2.d413cccfe779ap-76), asin(cf64.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0xf.bf7df5c6a789p-516), asin(cf64.init(-0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb50442d18p+0, -0x0p+0), asin(cf64.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb50442d18p+0, -0x2p-124), asin(cf64.init(-0xf.ffffffffffff8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb50442d18p+0, -0x3.ep-1000), asin(cf64.init(-0xf.ffffffffffff8p-4, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b256c9add8p-4), asin(cf64.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b30bcea13p-4), asin(cf64.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b256c9add8p-4), asin(cf64.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b30bcea13p-4), asin(cf64.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b256c9add8p-4), asin(cf64.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b30bcea13p-4), asin(cf64.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b256c9add8p-4), asin(cf64.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b30bcea13p-4), asin(cf64.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), asin(cf64.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, 0x0p+0), asin(cf64.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb50442d18p+0, 0x0p+0), asin(cf64.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, 0x0p+0), asin(cf64.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x0p+0), asin(cf64.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb50442d18p+0, 0x0p+0), asin(cf64.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), asin(cf64.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, -0x0p+0), asin(cf64.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb50442d18p+0, -0x0p+0), asin(cf64.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, -0x0p+0), asin(cf64.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x0p+0), asin(cf64.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb50442d18p+0, -0x0p+0), asin(cf64.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0xe.4f92e2dff6ec8p-56, 0x7.b30b2bb145828p-4), asin(cf64.init(0x1p-52, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(0xe.4f92e2dff6ec8p-56, -0x7.b30b2bb145828p-4), asin(cf64.init(0x1p-52, -0x8p-4)));
    try std.testing.expectEqual(cf64.init(-0xe.4f92e2dff6ec8p-56, 0x7.b30b2bb145828p-4), asin(cf64.init(-0x1p-52, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(-0xe.4f92e2dff6ec8p-56, -0x7.b30b2bb145828p-4), asin(cf64.init(-0x1p-52, -0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x8.60a91c16b9b3p-4, 0x1.279a74590331cp-52), asin(cf64.init(0x8p-4, 0x1p-52)));
    try std.testing.expectEqual(cf64.init(-0x8.60a91c16b9b3p-4, 0x1.279a74590331cp-52), asin(cf64.init(-0x8p-4, 0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x8.60a91c16b9b3p-4, -0x1.279a74590331cp-52), asin(cf64.init(0x8p-4, -0x1p-52)));
    try std.testing.expectEqual(cf64.init(-0x8.60a91c16b9b3p-4, -0x1.279a74590331cp-52), asin(cf64.init(-0x8p-4, -0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x7.27c9716ffb764p-152, 0x7.b30b2bb145828p-4), asin(cf64.init(0x8p-152, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x7.b30b2bb145828p-4), asin(cf64.init(0x0p+0, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(0xd.dd164bc8f734p-1028, 0x7.b30b2bb145828p-4), asin(cf64.init(0xf.8p-1028, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x7.27c9716ffb764p-152, -0x7.b30b2bb145828p-4), asin(cf64.init(0x8p-152, -0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x7.b30b2bb145828p-4), asin(cf64.init(0x0p+0, -0x8p-4)));
    try std.testing.expectEqual(cf64.init(0xd.dd164bc8f734p-1028, -0x7.b30b2bb145828p-4), asin(cf64.init(0xf.8p-1028, -0x8p-4)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0x7.b30b2bb145828p-4), asin(cf64.init(-0x0p+0, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(-0x7.27c9716ffb764p-152, 0x7.b30b2bb145828p-4), asin(cf64.init(-0x8p-152, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(-0xd.dd164bc8f734p-1028, 0x7.b30b2bb145828p-4), asin(cf64.init(-0xf.8p-1028, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0x7.b30b2bb145828p-4), asin(cf64.init(-0x0p+0, -0x8p-4)));
    try std.testing.expectEqual(cf64.init(-0x7.27c9716ffb764p-152, -0x7.b30b2bb145828p-4), asin(cf64.init(-0x8p-152, -0x8p-4)));
    try std.testing.expectEqual(cf64.init(-0xd.dd164bc8f734p-1028, -0x7.b30b2bb145828p-4), asin(cf64.init(-0xf.8p-1028, -0x8p-4)));
    // try std.testing.expectEqual(cf64.init(0x8.60a91c16b9b3p-4, 0x9.3cd3a2c8198ep-152), asin(cf64.init(0x8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x8.60a91c16b9b3p-4, 0x0p+0), asin(cf64.init(0x8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x8.60a91c16b9b3p-4, 0x1.1e5da0b63b184p-1024), asin(cf64.init(0x8p-4, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf64.init(-0x8.60a91c16b9b3p-4, 0x9.3cd3a2c8198ep-152), asin(cf64.init(-0x8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x8.60a91c16b9b3p-4, 0x0p+0), asin(cf64.init(-0x8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x8.60a91c16b9b3p-4, 0x1.1e5da0b63b184p-1024), asin(cf64.init(-0x8p-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x8.60a91c16b9b3p-4, -0x0p+0), asin(cf64.init(0x8p-4, -0x0p+0)));
    // try std.testing.expectEqual(cf64.init(0x8.60a91c16b9b3p-4, -0x9.3cd3a2c8198ep-152), asin(cf64.init(0x8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x8.60a91c16b9b3p-4, -0x1.1e5da0b63b184p-1024), asin(cf64.init(0x8p-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(-0x8.60a91c16b9b3p-4, -0x0p+0), asin(cf64.init(-0x8p-4, -0x0p+0)));
    // try std.testing.expectEqual(cf64.init(-0x8.60a91c16b9b3p-4, -0x9.3cd3a2c8198ep-152), asin(cf64.init(-0x8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x8.60a91c16b9b3p-4, -0x1.1e5da0b63b184p-1024), asin(cf64.init(-0x8p-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1p-52, 0x1p-52), asin(cf64.init(0x1p-52, 0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x1p-52, -0x1p-52), asin(cf64.init(0x1p-52, -0x1p-52)));
    try std.testing.expectEqual(cf64.init(-0x1p-52, 0x1p-52), asin(cf64.init(-0x1p-52, 0x1p-52)));
    try std.testing.expectEqual(cf64.init(-0x1p-52, -0x1p-52), asin(cf64.init(-0x1p-52, -0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x8p-152, 0x1p-52), asin(cf64.init(0x8p-152, 0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x1p-52), asin(cf64.init(0x0p+0, 0x1p-52)));
    try std.testing.expectEqual(cf64.init(0xf.8p-1028, 0x1p-52), asin(cf64.init(0xf.8p-1028, 0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x8p-152, -0x1p-52), asin(cf64.init(0x8p-152, -0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x1p-52), asin(cf64.init(0x0p+0, -0x1p-52)));
    try std.testing.expectEqual(cf64.init(0xf.8p-1028, -0x1p-52), asin(cf64.init(0xf.8p-1028, -0x1p-52)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0x1p-52), asin(cf64.init(-0x0p+0, 0x1p-52)));
    try std.testing.expectEqual(cf64.init(-0x8p-152, 0x1p-52), asin(cf64.init(-0x8p-152, 0x1p-52)));
    try std.testing.expectEqual(cf64.init(-0xf.8p-1028, 0x1p-52), asin(cf64.init(-0xf.8p-1028, 0x1p-52)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0x1p-52), asin(cf64.init(-0x0p+0, -0x1p-52)));
    try std.testing.expectEqual(cf64.init(-0x8p-152, -0x1p-52), asin(cf64.init(-0x8p-152, -0x1p-52)));
    try std.testing.expectEqual(cf64.init(-0xf.8p-1028, -0x1p-52), asin(cf64.init(-0xf.8p-1028, -0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x1p-52, 0x8p-152), asin(cf64.init(0x1p-52, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1p-52, 0x0p+0), asin(cf64.init(0x1p-52, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1p-52, 0xf.8p-1028), asin(cf64.init(0x1p-52, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(-0x1p-52, 0x8p-152), asin(cf64.init(-0x1p-52, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1p-52, 0x0p+0), asin(cf64.init(-0x1p-52, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1p-52, 0xf.8p-1028), asin(cf64.init(-0x1p-52, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1p-52, -0x0p+0), asin(cf64.init(0x1p-52, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1p-52, -0x8p-152), asin(cf64.init(0x1p-52, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1p-52, -0xf.8p-1028), asin(cf64.init(0x1p-52, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(-0x1p-52, -0x0p+0), asin(cf64.init(-0x1p-52, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1p-52, -0x8p-152), asin(cf64.init(-0x1p-52, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1p-52, -0xf.8p-1028), asin(cf64.init(-0x1p-52, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x1p-52), asin(cf64.init(0x0p+0, 0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x1p-52), asin(cf64.init(0x0p+0, -0x1p-52)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0x1p-52), asin(cf64.init(-0x0p+0, 0x1p-52)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0x1p-52), asin(cf64.init(-0x0p+0, -0x1p-52)));
    try std.testing.expectEqual(cf64.init(0x1p-52, 0x0p+0), asin(cf64.init(0x1p-52, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1p-52, 0x0p+0), asin(cf64.init(-0x1p-52, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1p-52, -0x0p+0), asin(cf64.init(0x1p-52, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1p-52, -0x0p+0), asin(cf64.init(-0x1p-52, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x8p-152, 0x8p-152), asin(cf64.init(0x8p-152, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x8p-152, 0x0p+0), asin(cf64.init(0x8p-152, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x8p-152, 0xf.8p-1028), asin(cf64.init(0x8p-152, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x8p-152), asin(cf64.init(0x0p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x0p+0), asin(cf64.init(0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0xf.8p-1028), asin(cf64.init(0x0p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0xf.8p-1028, 0x8p-152), asin(cf64.init(0xf.8p-1028, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0xf.8p-1028, 0x0p+0), asin(cf64.init(0xf.8p-1028, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0xf.8p-1028, 0xf.8p-1028), asin(cf64.init(0xf.8p-1028, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x8p-152, -0x0p+0), asin(cf64.init(0x8p-152, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x8p-152, -0x8p-152), asin(cf64.init(0x8p-152, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x8p-152, -0xf.8p-1028), asin(cf64.init(0x8p-152, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x0p+0), asin(cf64.init(0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x8p-152), asin(cf64.init(0x0p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0xf.8p-1028), asin(cf64.init(0x0p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0xf.8p-1028, -0x0p+0), asin(cf64.init(0xf.8p-1028, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0xf.8p-1028, -0x8p-152), asin(cf64.init(0xf.8p-1028, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0xf.8p-1028, -0xf.8p-1028), asin(cf64.init(0xf.8p-1028, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0x8p-152), asin(cf64.init(-0x0p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0x0p+0), asin(cf64.init(-0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0xf.8p-1028), asin(cf64.init(-0x0p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(-0x8p-152, 0x8p-152), asin(cf64.init(-0x8p-152, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x8p-152, 0x0p+0), asin(cf64.init(-0x8p-152, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x8p-152, 0xf.8p-1028), asin(cf64.init(-0x8p-152, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(-0xf.8p-1028, 0x8p-152), asin(cf64.init(-0xf.8p-1028, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0xf.8p-1028, 0x0p+0), asin(cf64.init(-0xf.8p-1028, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0xf.8p-1028, 0xf.8p-1028), asin(cf64.init(-0xf.8p-1028, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0x0p+0), asin(cf64.init(-0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0x8p-152), asin(cf64.init(-0x0p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0xf.8p-1028), asin(cf64.init(-0x0p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(-0x8p-152, -0x0p+0), asin(cf64.init(-0x8p-152, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x8p-152, -0x8p-152), asin(cf64.init(-0x8p-152, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x8p-152, -0xf.8p-1028), asin(cf64.init(-0x8p-152, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(-0xf.8p-1028, -0x0p+0), asin(cf64.init(-0xf.8p-1028, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0xf.8p-1028, -0x8p-152), asin(cf64.init(-0xf.8p-1028, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0xf.8p-1028, -0xf.8p-1028), asin(cf64.init(-0xf.8p-1028, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf64.init(0x1.6a09e667f3bcdp-64, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x2p-64, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e71cf8b03p-64, 0xe.1a1b256c9add8p-4), asin(cf64.init(0x2p-64, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e667f3bcdp-64, 0xe.1a1b30bcea13p-4), asin(cf64.init(0x2p-64, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e71cf8b03p-64, -0xe.1a1b256c9add8p-4), asin(cf64.init(0x2p-64, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.6a09e667f3bcdp-64, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x2p-64, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1.6a09e667f3bcdp-64, -0xe.1a1b30bcea13p-4), asin(cf64.init(0x2p-64, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(-0x1.6a09e667f3bcdp-64, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x2p-64, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.6a09e71cf8b03p-64, 0xe.1a1b256c9add8p-4), asin(cf64.init(-0x2p-64, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(-0x1.6a09e667f3bcdp-64, 0xe.1a1b30bcea13p-4), asin(cf64.init(-0x2p-64, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(-0x1.6a09e71cf8b03p-64, -0xe.1a1b256c9add8p-4), asin(cf64.init(-0x2p-64, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(-0x1.6a09e667f3bcdp-64, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x2p-64, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.6a09e667f3bcdp-64, -0xe.1a1b30bcea13p-4), asin(cf64.init(-0x2p-64, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb542d8c7ap+0, 0x1.6a09e667f3bcdp-32), asin(cf64.init(0x1p+0, 0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, 0x1.6a09e6c276368p-52), asin(cf64.init(0xf.fffffp-4, 0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x1.921fb50442d1p+0, 0x7.fffff000007p-40), asin(cf64.init(0xf.ffffffffffff8p-4, 0x2p-64)));
    try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, 0x1.6a09e6c276368p-52), asin(cf64.init(-0xf.fffffp-4, 0x2p-64)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb542d8c7ap+0, 0x1.6a09e667f3bcdp-32), asin(cf64.init(-0x1p+0, 0x2p-64)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb50442d1p+0, 0x7.fffff000007p-40), asin(cf64.init(-0xf.ffffffffffff8p-4, 0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x1.921fb542d8c7ap+0, -0x1.6a09e667f3bcdp-32), asin(cf64.init(0x1p+0, -0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, -0x1.6a09e6c276368p-52), asin(cf64.init(0xf.fffffp-4, -0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x1.921fb50442d1p+0, -0x7.fffff000007p-40), asin(cf64.init(0xf.ffffffffffff8p-4, -0x2p-64)));
    try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, -0x1.6a09e6c276368p-52), asin(cf64.init(-0xf.fffffp-4, -0x2p-64)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb542d8c7ap+0, -0x1.6a09e667f3bcdp-32), asin(cf64.init(-0x1p+0, -0x2p-64)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb50442d1p+0, -0x7.fffff000007p-40), asin(cf64.init(-0xf.ffffffffffff8p-4, -0x2p-64)));
    // try std.testing.expectEqual(cf64.init(0x5.a827999fcef34p-152, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x5.a8279c73e2c0cp-152, 0xe.1a1b256c9add8p-4), asin(cf64.init(0x8p-152, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x5.a827999fcef34p-152, 0xe.1a1b30bcea13p-4), asin(cf64.init(0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b256c9add8p-4), asin(cf64.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b30bcea13p-4), asin(cf64.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(0x4p-1076, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x4p-1076, 0xe.1a1b256c9add8p-4), asin(cf64.init(0x4p-1076, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x4p-1076, 0xe.1a1b30bcea13p-4), asin(cf64.init(0x4p-1076, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x5.a8279c73e2c0cp-152, -0xe.1a1b256c9add8p-4), asin(cf64.init(0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x5.a827999fcef34p-152, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x5.a827999fcef34p-152, -0xe.1a1b30bcea13p-4), asin(cf64.init(0x8p-152, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b256c9add8p-4), asin(cf64.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b30bcea13p-4), asin(cf64.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x4p-1076, -0xe.1a1b256c9add8p-4), asin(cf64.init(0x4p-1076, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x4p-1076, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x4p-1076, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x4p-1076, -0xe.1a1b30bcea13p-4), asin(cf64.init(0x4p-1076, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b256c9add8p-4), asin(cf64.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b30bcea13p-4), asin(cf64.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(-0x5.a827999fcef34p-152, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x5.a8279c73e2c0cp-152, 0xe.1a1b256c9add8p-4), asin(cf64.init(-0x8p-152, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(-0x5.a827999fcef34p-152, 0xe.1a1b30bcea13p-4), asin(cf64.init(-0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(-0x4p-1076, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x4p-1076, 0xe.1a1b256c9add8p-4), asin(cf64.init(-0x4p-1076, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(-0x4p-1076, 0xe.1a1b30bcea13p-4), asin(cf64.init(-0x4p-1076, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b256c9add8p-4), asin(cf64.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b30bcea13p-4), asin(cf64.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(-0x5.a8279c73e2c0cp-152, -0xe.1a1b256c9add8p-4), asin(cf64.init(-0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(-0x5.a827999fcef34p-152, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x5.a827999fcef34p-152, -0xe.1a1b30bcea13p-4), asin(cf64.init(-0x8p-152, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(-0x4p-1076, -0xe.1a1b256c9add8p-4), asin(cf64.init(-0x4p-1076, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(-0x4p-1076, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x4p-1076, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x4p-1076, -0xe.1a1b30bcea13p-4), asin(cf64.init(-0x4p-1076, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x2.d413cccfe779ap-76), asin(cf64.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), asin(cf64.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x8p-540), asin(cf64.init(0x1p+0, 0x4p-1076)));
    // try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, 0x5.a8279b09d8dap-140), asin(cf64.init(0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, 0x0p+0), asin(cf64.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, 0x2.d4p-1064), asin(cf64.init(0xf.fffffp-4, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.921fb50442d18p+0, 0x2p-124), asin(cf64.init(0xf.ffffffffffff8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb50442d18p+0, 0x0p+0), asin(cf64.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb50442d18p+0, 0x1p-1048), asin(cf64.init(0xf.ffffffffffff8p-4, 0x4p-1076)));
    // try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, 0x5.a8279b09d8dap-140), asin(cf64.init(-0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, 0x0p+0), asin(cf64.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, 0x2.d4p-1064), asin(cf64.init(-0xf.fffffp-4, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x2.d413cccfe779ap-76), asin(cf64.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x0p+0), asin(cf64.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x8p-540), asin(cf64.init(-0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb50442d18p+0, 0x2p-124), asin(cf64.init(-0xf.ffffffffffff8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb50442d18p+0, 0x0p+0), asin(cf64.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb50442d18p+0, 0x1p-1048), asin(cf64.init(-0xf.ffffffffffff8p-4, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), asin(cf64.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x2.d413cccfe779ap-76), asin(cf64.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x8p-540), asin(cf64.init(0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, -0x0p+0), asin(cf64.init(0xf.fffffp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, -0x5.a8279b09d8dap-140), asin(cf64.init(0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, -0x2.d4p-1064), asin(cf64.init(0xf.fffffp-4, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.921fb50442d18p+0, -0x0p+0), asin(cf64.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb50442d18p+0, -0x2p-124), asin(cf64.init(0xf.ffffffffffff8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb50442d18p+0, -0x1p-1048), asin(cf64.init(0xf.ffffffffffff8p-4, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, -0x0p+0), asin(cf64.init(-0xf.fffffp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, -0x5.a8279b09d8dap-140), asin(cf64.init(-0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, -0x2.d4p-1064), asin(cf64.init(-0xf.fffffp-4, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x0p+0), asin(cf64.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x2.d413cccfe779ap-76), asin(cf64.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x8p-540), asin(cf64.init(-0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb50442d18p+0, -0x0p+0), asin(cf64.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb50442d18p+0, -0x2p-124), asin(cf64.init(-0xf.ffffffffffff8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb50442d18p+0, -0x1p-1048), asin(cf64.init(-0xf.ffffffffffff8p-4, -0x4p-1076)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b256c9add8p-4), asin(cf64.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b30bcea13p-4), asin(cf64.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b256c9add8p-4), asin(cf64.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b30bcea13p-4), asin(cf64.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b256c9add8p-4), asin(cf64.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b30bcea13p-4), asin(cf64.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b256c9add8p-4), asin(cf64.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b30bcea13p-4), asin(cf64.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), asin(cf64.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, 0x0p+0), asin(cf64.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb50442d18p+0, 0x0p+0), asin(cf64.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, 0x0p+0), asin(cf64.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x0p+0), asin(cf64.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb50442d18p+0, 0x0p+0), asin(cf64.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), asin(cf64.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, -0x0p+0), asin(cf64.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb50442d18p+0, -0x0p+0), asin(cf64.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, -0x0p+0), asin(cf64.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x0p+0), asin(cf64.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb50442d18p+0, -0x0p+0), asin(cf64.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.c9f25c5bfedd9p-64, 0x7.b30b2bb145828p-4), asin(cf64.init(0x2p-64, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.c9f25c5bfedd9p-64, -0x7.b30b2bb145828p-4), asin(cf64.init(0x2p-64, -0x8p-4)));
    try std.testing.expectEqual(cf64.init(-0x1.c9f25c5bfedd9p-64, 0x7.b30b2bb145828p-4), asin(cf64.init(-0x2p-64, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(-0x1.c9f25c5bfedd9p-64, -0x7.b30b2bb145828p-4), asin(cf64.init(-0x2p-64, -0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x8.60a91c16b9b3p-4, 0x2.4f34e8b206638p-64), asin(cf64.init(0x8p-4, 0x2p-64)));
    try std.testing.expectEqual(cf64.init(-0x8.60a91c16b9b3p-4, 0x2.4f34e8b206638p-64), asin(cf64.init(-0x8p-4, 0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x8.60a91c16b9b3p-4, -0x2.4f34e8b206638p-64), asin(cf64.init(0x8p-4, -0x2p-64)));
    try std.testing.expectEqual(cf64.init(-0x8.60a91c16b9b3p-4, -0x2.4f34e8b206638p-64), asin(cf64.init(-0x8p-4, -0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x7.27c9716ffb764p-152, 0x7.b30b2bb145828p-4), asin(cf64.init(0x8p-152, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x7.b30b2bb145828p-4), asin(cf64.init(0x0p+0, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x4p-1076, 0x7.b30b2bb145828p-4), asin(cf64.init(0x4p-1076, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x7.27c9716ffb764p-152, -0x7.b30b2bb145828p-4), asin(cf64.init(0x8p-152, -0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x7.b30b2bb145828p-4), asin(cf64.init(0x0p+0, -0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x4p-1076, -0x7.b30b2bb145828p-4), asin(cf64.init(0x4p-1076, -0x8p-4)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0x7.b30b2bb145828p-4), asin(cf64.init(-0x0p+0, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(-0x7.27c9716ffb764p-152, 0x7.b30b2bb145828p-4), asin(cf64.init(-0x8p-152, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(-0x4p-1076, 0x7.b30b2bb145828p-4), asin(cf64.init(-0x4p-1076, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0x7.b30b2bb145828p-4), asin(cf64.init(-0x0p+0, -0x8p-4)));
    try std.testing.expectEqual(cf64.init(-0x7.27c9716ffb764p-152, -0x7.b30b2bb145828p-4), asin(cf64.init(-0x8p-152, -0x8p-4)));
    try std.testing.expectEqual(cf64.init(-0x4p-1076, -0x7.b30b2bb145828p-4), asin(cf64.init(-0x4p-1076, -0x8p-4)));
    // try std.testing.expectEqual(cf64.init(0x8.60a91c16b9b3p-4, 0x9.3cd3a2c8198ep-152), asin(cf64.init(0x8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x8.60a91c16b9b3p-4, 0x0p+0), asin(cf64.init(0x8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x8.60a91c16b9b3p-4, 0x4p-1076), asin(cf64.init(0x8p-4, 0x4p-1076)));
    // try std.testing.expectEqual(cf64.init(-0x8.60a91c16b9b3p-4, 0x9.3cd3a2c8198ep-152), asin(cf64.init(-0x8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x8.60a91c16b9b3p-4, 0x0p+0), asin(cf64.init(-0x8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x8.60a91c16b9b3p-4, 0x4p-1076), asin(cf64.init(-0x8p-4, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x8.60a91c16b9b3p-4, -0x0p+0), asin(cf64.init(0x8p-4, -0x0p+0)));
    // try std.testing.expectEqual(cf64.init(0x8.60a91c16b9b3p-4, -0x9.3cd3a2c8198ep-152), asin(cf64.init(0x8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x8.60a91c16b9b3p-4, -0x4p-1076), asin(cf64.init(0x8p-4, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(-0x8.60a91c16b9b3p-4, -0x0p+0), asin(cf64.init(-0x8p-4, -0x0p+0)));
    // try std.testing.expectEqual(cf64.init(-0x8.60a91c16b9b3p-4, -0x9.3cd3a2c8198ep-152), asin(cf64.init(-0x8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x8.60a91c16b9b3p-4, -0x4p-1076), asin(cf64.init(-0x8p-4, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x2p-64, 0x2p-64), asin(cf64.init(0x2p-64, 0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x2p-64, -0x2p-64), asin(cf64.init(0x2p-64, -0x2p-64)));
    try std.testing.expectEqual(cf64.init(-0x2p-64, 0x2p-64), asin(cf64.init(-0x2p-64, 0x2p-64)));
    try std.testing.expectEqual(cf64.init(-0x2p-64, -0x2p-64), asin(cf64.init(-0x2p-64, -0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x8p-152, 0x2p-64), asin(cf64.init(0x8p-152, 0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x2p-64), asin(cf64.init(0x0p+0, 0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x4p-1076, 0x2p-64), asin(cf64.init(0x4p-1076, 0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x8p-152, -0x2p-64), asin(cf64.init(0x8p-152, -0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x2p-64), asin(cf64.init(0x0p+0, -0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x4p-1076, -0x2p-64), asin(cf64.init(0x4p-1076, -0x2p-64)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0x2p-64), asin(cf64.init(-0x0p+0, 0x2p-64)));
    try std.testing.expectEqual(cf64.init(-0x8p-152, 0x2p-64), asin(cf64.init(-0x8p-152, 0x2p-64)));
    try std.testing.expectEqual(cf64.init(-0x4p-1076, 0x2p-64), asin(cf64.init(-0x4p-1076, 0x2p-64)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0x2p-64), asin(cf64.init(-0x0p+0, -0x2p-64)));
    try std.testing.expectEqual(cf64.init(-0x8p-152, -0x2p-64), asin(cf64.init(-0x8p-152, -0x2p-64)));
    try std.testing.expectEqual(cf64.init(-0x4p-1076, -0x2p-64), asin(cf64.init(-0x4p-1076, -0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x2p-64, 0x8p-152), asin(cf64.init(0x2p-64, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x2p-64, 0x0p+0), asin(cf64.init(0x2p-64, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x2p-64, 0x4p-1076), asin(cf64.init(0x2p-64, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(-0x2p-64, 0x8p-152), asin(cf64.init(-0x2p-64, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x2p-64, 0x0p+0), asin(cf64.init(-0x2p-64, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x2p-64, 0x4p-1076), asin(cf64.init(-0x2p-64, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x2p-64, -0x0p+0), asin(cf64.init(0x2p-64, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x2p-64, -0x8p-152), asin(cf64.init(0x2p-64, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x2p-64, -0x4p-1076), asin(cf64.init(0x2p-64, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(-0x2p-64, -0x0p+0), asin(cf64.init(-0x2p-64, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x2p-64, -0x8p-152), asin(cf64.init(-0x2p-64, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x2p-64, -0x4p-1076), asin(cf64.init(-0x2p-64, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x2p-64), asin(cf64.init(0x0p+0, 0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x2p-64), asin(cf64.init(0x0p+0, -0x2p-64)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0x2p-64), asin(cf64.init(-0x0p+0, 0x2p-64)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0x2p-64), asin(cf64.init(-0x0p+0, -0x2p-64)));
    try std.testing.expectEqual(cf64.init(0x2p-64, 0x0p+0), asin(cf64.init(0x2p-64, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x2p-64, 0x0p+0), asin(cf64.init(-0x2p-64, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x2p-64, -0x0p+0), asin(cf64.init(0x2p-64, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x2p-64, -0x0p+0), asin(cf64.init(-0x2p-64, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x8p-152, 0x8p-152), asin(cf64.init(0x8p-152, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x8p-152, 0x0p+0), asin(cf64.init(0x8p-152, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x8p-152, 0x4p-1076), asin(cf64.init(0x8p-152, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x8p-152), asin(cf64.init(0x0p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x0p+0), asin(cf64.init(0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x4p-1076), asin(cf64.init(0x0p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x4p-1076, 0x8p-152), asin(cf64.init(0x4p-1076, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x4p-1076, 0x0p+0), asin(cf64.init(0x4p-1076, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x4p-1076, 0x4p-1076), asin(cf64.init(0x4p-1076, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x8p-152, -0x0p+0), asin(cf64.init(0x8p-152, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x8p-152, -0x8p-152), asin(cf64.init(0x8p-152, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x8p-152, -0x4p-1076), asin(cf64.init(0x8p-152, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x0p+0), asin(cf64.init(0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x8p-152), asin(cf64.init(0x0p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x4p-1076), asin(cf64.init(0x0p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x4p-1076, -0x0p+0), asin(cf64.init(0x4p-1076, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x4p-1076, -0x8p-152), asin(cf64.init(0x4p-1076, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x4p-1076, -0x4p-1076), asin(cf64.init(0x4p-1076, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0x8p-152), asin(cf64.init(-0x0p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0x0p+0), asin(cf64.init(-0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0x4p-1076), asin(cf64.init(-0x0p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(-0x8p-152, 0x8p-152), asin(cf64.init(-0x8p-152, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x8p-152, 0x0p+0), asin(cf64.init(-0x8p-152, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x8p-152, 0x4p-1076), asin(cf64.init(-0x8p-152, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(-0x4p-1076, 0x8p-152), asin(cf64.init(-0x4p-1076, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x4p-1076, 0x0p+0), asin(cf64.init(-0x4p-1076, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x4p-1076, 0x4p-1076), asin(cf64.init(-0x4p-1076, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0x0p+0), asin(cf64.init(-0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0x8p-152), asin(cf64.init(-0x0p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0x4p-1076), asin(cf64.init(-0x0p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(-0x8p-152, -0x0p+0), asin(cf64.init(-0x8p-152, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x8p-152, -0x8p-152), asin(cf64.init(-0x8p-152, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x8p-152, -0x4p-1076), asin(cf64.init(-0x8p-152, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(-0x4p-1076, -0x0p+0), asin(cf64.init(-0x4p-1076, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x4p-1076, -0x8p-152), asin(cf64.init(-0x4p-1076, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x4p-1076, -0x4p-1076), asin(cf64.init(-0x4p-1076, -0x4p-1076)));
    // try std.testing.expectEqual(cf64.init(0x5.a827999fcef34p-108, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x8p-108, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x5.a8279c73e2c0cp-108, 0xe.1a1b256c9add8p-4), asin(cf64.init(0x8p-108, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x5.a827999fcef34p-108, 0xe.1a1b30bcea13p-4), asin(cf64.init(0x8p-108, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x5.a8279c73e2c0cp-108, -0xe.1a1b256c9add8p-4), asin(cf64.init(0x8p-108, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x5.a827999fcef34p-108, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x8p-108, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x5.a827999fcef34p-108, -0xe.1a1b30bcea13p-4), asin(cf64.init(0x8p-108, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(-0x5.a827999fcef34p-108, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x8p-108, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x5.a8279c73e2c0cp-108, 0xe.1a1b256c9add8p-4), asin(cf64.init(-0x8p-108, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(-0x5.a827999fcef34p-108, 0xe.1a1b30bcea13p-4), asin(cf64.init(-0x8p-108, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(-0x5.a8279c73e2c0cp-108, -0xe.1a1b256c9add8p-4), asin(cf64.init(-0x8p-108, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(-0x5.a827999fcef34p-108, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x8p-108, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x5.a827999fcef34p-108, -0xe.1a1b30bcea13p-4), asin(cf64.init(-0x8p-108, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xb.504f333f9de68p-56), asin(cf64.init(0x1p+0, 0x8p-108)));
    // try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, 0x5.a8279b09d8dap-96), asin(cf64.init(0xf.fffffp-4, 0x8p-108)));
    try std.testing.expectEqual(cf64.init(0x1.921fb50442d18p+0, 0x2p-80), asin(cf64.init(0xf.ffffffffffff8p-4, 0x8p-108)));
    // try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, 0x5.a8279b09d8dap-96), asin(cf64.init(-0xf.fffffp-4, 0x8p-108)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0xb.504f333f9de68p-56), asin(cf64.init(-0x1p+0, 0x8p-108)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb50442d18p+0, 0x2p-80), asin(cf64.init(-0xf.ffffffffffff8p-4, 0x8p-108)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xb.504f333f9de68p-56), asin(cf64.init(0x1p+0, -0x8p-108)));
    // try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, -0x5.a8279b09d8dap-96), asin(cf64.init(0xf.fffffp-4, -0x8p-108)));
    try std.testing.expectEqual(cf64.init(0x1.921fb50442d18p+0, -0x2p-80), asin(cf64.init(0xf.ffffffffffff8p-4, -0x8p-108)));
    // try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, -0x5.a8279b09d8dap-96), asin(cf64.init(-0xf.fffffp-4, -0x8p-108)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0xb.504f333f9de68p-56), asin(cf64.init(-0x1p+0, -0x8p-108)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb50442d18p+0, -0x2p-80), asin(cf64.init(-0xf.ffffffffffff8p-4, -0x8p-108)));
    // try std.testing.expectEqual(cf64.init(0x5.a827999fcef34p-152, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x5.a8279c73e2c0cp-152, 0xe.1a1b256c9add8p-4), asin(cf64.init(0x8p-152, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x5.a827999fcef34p-152, 0xe.1a1b30bcea13p-4), asin(cf64.init(0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b256c9add8p-4), asin(cf64.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b30bcea13p-4), asin(cf64.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(0xa.f5ccb9a5a0f8p-1028, 0xe.1a1b30bcea138p-4), asin(cf64.init(0xf.8p-1028, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0xa.f5ccbf208754p-1028, 0xe.1a1b256c9add8p-4), asin(cf64.init(0xf.8p-1028, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0xa.f5ccb9a5a0f8p-1028, 0xe.1a1b30bcea13p-4), asin(cf64.init(0xf.8p-1028, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x5.a8279c73e2c0cp-152, -0xe.1a1b256c9add8p-4), asin(cf64.init(0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x5.a827999fcef34p-152, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x5.a827999fcef34p-152, -0xe.1a1b30bcea13p-4), asin(cf64.init(0x8p-152, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b256c9add8p-4), asin(cf64.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b30bcea13p-4), asin(cf64.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0xa.f5ccbf208754p-1028, -0xe.1a1b256c9add8p-4), asin(cf64.init(0xf.8p-1028, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0xa.f5ccb9a5a0f8p-1028, -0xe.1a1b30bcea138p-4), asin(cf64.init(0xf.8p-1028, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0xa.f5ccb9a5a0f8p-1028, -0xe.1a1b30bcea13p-4), asin(cf64.init(0xf.8p-1028, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b256c9add8p-4), asin(cf64.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b30bcea13p-4), asin(cf64.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(-0x5.a827999fcef34p-152, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x5.a8279c73e2c0cp-152, 0xe.1a1b256c9add8p-4), asin(cf64.init(-0x8p-152, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(-0x5.a827999fcef34p-152, 0xe.1a1b30bcea13p-4), asin(cf64.init(-0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(-0xa.f5ccb9a5a0f8p-1028, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0xf.8p-1028, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0xa.f5ccbf208754p-1028, 0xe.1a1b256c9add8p-4), asin(cf64.init(-0xf.8p-1028, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(-0xa.f5ccb9a5a0f8p-1028, 0xe.1a1b30bcea13p-4), asin(cf64.init(-0xf.8p-1028, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b256c9add8p-4), asin(cf64.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b30bcea13p-4), asin(cf64.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(-0x5.a8279c73e2c0cp-152, -0xe.1a1b256c9add8p-4), asin(cf64.init(-0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(-0x5.a827999fcef34p-152, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x5.a827999fcef34p-152, -0xe.1a1b30bcea13p-4), asin(cf64.init(-0x8p-152, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(-0xa.f5ccbf208754p-1028, -0xe.1a1b256c9add8p-4), asin(cf64.init(-0xf.8p-1028, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(-0xa.f5ccb9a5a0f8p-1028, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0xf.8p-1028, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0xa.f5ccb9a5a0f8p-1028, -0xe.1a1b30bcea13p-4), asin(cf64.init(-0xf.8p-1028, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x2.d413cccfe779ap-76), asin(cf64.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), asin(cf64.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0xf.bf7df5c6a789p-516), asin(cf64.init(0x1p+0, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, 0x5.a8279b09d8dap-140), asin(cf64.init(0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, 0x0p+0), asin(cf64.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, 0xa.f5ccbc6314268p-1016), asin(cf64.init(0xf.fffffp-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.921fb50442d18p+0, 0x2p-124), asin(cf64.init(0xf.ffffffffffff8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb50442d18p+0, 0x0p+0), asin(cf64.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb50442d18p+0, 0x3.ep-1000), asin(cf64.init(0xf.ffffffffffff8p-4, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, 0x5.a8279b09d8dap-140), asin(cf64.init(-0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, 0x0p+0), asin(cf64.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, 0xa.f5ccbc6314268p-1016), asin(cf64.init(-0xf.fffffp-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x2.d413cccfe779ap-76), asin(cf64.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x0p+0), asin(cf64.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0xf.bf7df5c6a789p-516), asin(cf64.init(-0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb50442d18p+0, 0x2p-124), asin(cf64.init(-0xf.ffffffffffff8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb50442d18p+0, 0x0p+0), asin(cf64.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb50442d18p+0, 0x3.ep-1000), asin(cf64.init(-0xf.ffffffffffff8p-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), asin(cf64.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x2.d413cccfe779ap-76), asin(cf64.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0xf.bf7df5c6a789p-516), asin(cf64.init(0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, -0x0p+0), asin(cf64.init(0xf.fffffp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, -0x5.a8279b09d8dap-140), asin(cf64.init(0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, -0xa.f5ccbc6314268p-1016), asin(cf64.init(0xf.fffffp-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x1.921fb50442d18p+0, -0x0p+0), asin(cf64.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb50442d18p+0, -0x2p-124), asin(cf64.init(0xf.ffffffffffff8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb50442d18p+0, -0x3.ep-1000), asin(cf64.init(0xf.ffffffffffff8p-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, -0x0p+0), asin(cf64.init(-0xf.fffffp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, -0x5.a8279b09d8dap-140), asin(cf64.init(-0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, -0xa.f5ccbc6314268p-1016), asin(cf64.init(-0xf.fffffp-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x0p+0), asin(cf64.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x2.d413cccfe779ap-76), asin(cf64.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0xf.bf7df5c6a789p-516), asin(cf64.init(-0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb50442d18p+0, -0x0p+0), asin(cf64.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb50442d18p+0, -0x2p-124), asin(cf64.init(-0xf.ffffffffffff8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb50442d18p+0, -0x3.ep-1000), asin(cf64.init(-0xf.ffffffffffff8p-4, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b256c9add8p-4), asin(cf64.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b30bcea13p-4), asin(cf64.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b256c9add8p-4), asin(cf64.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b30bcea13p-4), asin(cf64.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b256c9add8p-4), asin(cf64.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b30bcea13p-4), asin(cf64.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b256c9add8p-4), asin(cf64.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b30bcea13p-4), asin(cf64.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), asin(cf64.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, 0x0p+0), asin(cf64.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb50442d18p+0, 0x0p+0), asin(cf64.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, 0x0p+0), asin(cf64.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x0p+0), asin(cf64.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb50442d18p+0, 0x0p+0), asin(cf64.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), asin(cf64.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, -0x0p+0), asin(cf64.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb50442d18p+0, -0x0p+0), asin(cf64.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, -0x0p+0), asin(cf64.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x0p+0), asin(cf64.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb50442d18p+0, -0x0p+0), asin(cf64.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x7.27c9716ffb764p-108, 0x7.b30b2bb145828p-4), asin(cf64.init(0x8p-108, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(0x7.27c9716ffb764p-108, -0x7.b30b2bb145828p-4), asin(cf64.init(0x8p-108, -0x8p-4)));
    try std.testing.expectEqual(cf64.init(-0x7.27c9716ffb764p-108, 0x7.b30b2bb145828p-4), asin(cf64.init(-0x8p-108, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(-0x7.27c9716ffb764p-108, -0x7.b30b2bb145828p-4), asin(cf64.init(-0x8p-108, -0x8p-4)));
    // try std.testing.expectEqual(cf64.init(0x8.60a91c16b9b3p-4, 0x9.3cd3a2c8198ep-108), asin(cf64.init(0x8p-4, 0x8p-108)));
    // try std.testing.expectEqual(cf64.init(-0x8.60a91c16b9b3p-4, 0x9.3cd3a2c8198ep-108), asin(cf64.init(-0x8p-4, 0x8p-108)));
    // try std.testing.expectEqual(cf64.init(0x8.60a91c16b9b3p-4, -0x9.3cd3a2c8198ep-108), asin(cf64.init(0x8p-4, -0x8p-108)));
    // try std.testing.expectEqual(cf64.init(-0x8.60a91c16b9b3p-4, -0x9.3cd3a2c8198ep-108), asin(cf64.init(-0x8p-4, -0x8p-108)));
    try std.testing.expectEqual(cf64.init(0x8p-108, 0x8p-108), asin(cf64.init(0x8p-108, 0x8p-108)));
    try std.testing.expectEqual(cf64.init(0x8p-108, -0x8p-108), asin(cf64.init(0x8p-108, -0x8p-108)));
    try std.testing.expectEqual(cf64.init(-0x8p-108, 0x8p-108), asin(cf64.init(-0x8p-108, 0x8p-108)));
    try std.testing.expectEqual(cf64.init(-0x8p-108, -0x8p-108), asin(cf64.init(-0x8p-108, -0x8p-108)));
    try std.testing.expectEqual(cf64.init(0x8p-152, 0x8p-108), asin(cf64.init(0x8p-152, 0x8p-108)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x8p-108), asin(cf64.init(0x0p+0, 0x8p-108)));
    try std.testing.expectEqual(cf64.init(0xf.8p-1028, 0x8p-108), asin(cf64.init(0xf.8p-1028, 0x8p-108)));
    try std.testing.expectEqual(cf64.init(0x8p-152, -0x8p-108), asin(cf64.init(0x8p-152, -0x8p-108)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x8p-108), asin(cf64.init(0x0p+0, -0x8p-108)));
    try std.testing.expectEqual(cf64.init(0xf.8p-1028, -0x8p-108), asin(cf64.init(0xf.8p-1028, -0x8p-108)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0x8p-108), asin(cf64.init(-0x0p+0, 0x8p-108)));
    try std.testing.expectEqual(cf64.init(-0x8p-152, 0x8p-108), asin(cf64.init(-0x8p-152, 0x8p-108)));
    try std.testing.expectEqual(cf64.init(-0xf.8p-1028, 0x8p-108), asin(cf64.init(-0xf.8p-1028, 0x8p-108)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0x8p-108), asin(cf64.init(-0x0p+0, -0x8p-108)));
    try std.testing.expectEqual(cf64.init(-0x8p-152, -0x8p-108), asin(cf64.init(-0x8p-152, -0x8p-108)));
    try std.testing.expectEqual(cf64.init(-0xf.8p-1028, -0x8p-108), asin(cf64.init(-0xf.8p-1028, -0x8p-108)));
    try std.testing.expectEqual(cf64.init(0x8p-108, 0x8p-152), asin(cf64.init(0x8p-108, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x8p-108, 0x0p+0), asin(cf64.init(0x8p-108, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x8p-108, 0xf.8p-1028), asin(cf64.init(0x8p-108, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(-0x8p-108, 0x8p-152), asin(cf64.init(-0x8p-108, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x8p-108, 0x0p+0), asin(cf64.init(-0x8p-108, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x8p-108, 0xf.8p-1028), asin(cf64.init(-0x8p-108, 0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x8p-108, -0x0p+0), asin(cf64.init(0x8p-108, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x8p-108, -0x8p-152), asin(cf64.init(0x8p-108, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x8p-108, -0xf.8p-1028), asin(cf64.init(0x8p-108, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(-0x8p-108, -0x0p+0), asin(cf64.init(-0x8p-108, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x8p-108, -0x8p-152), asin(cf64.init(-0x8p-108, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x8p-108, -0xf.8p-1028), asin(cf64.init(-0x8p-108, -0xf.8p-1028)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x8p-108), asin(cf64.init(0x0p+0, 0x8p-108)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x8p-108), asin(cf64.init(0x0p+0, -0x8p-108)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0x8p-108), asin(cf64.init(-0x0p+0, 0x8p-108)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0x8p-108), asin(cf64.init(-0x0p+0, -0x8p-108)));
    try std.testing.expectEqual(cf64.init(0x8p-108, 0x0p+0), asin(cf64.init(0x8p-108, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x8p-108, 0x0p+0), asin(cf64.init(-0x8p-108, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x8p-108, -0x0p+0), asin(cf64.init(0x8p-108, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x8p-108, -0x0p+0), asin(cf64.init(-0x8p-108, -0x0p+0)));
    // try std.testing.expectEqual(cf64.init(0xb.504f333f9de68p-116, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x1p-112, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0xb.504f38e7c5818p-116, 0xe.1a1b256c9add8p-4), asin(cf64.init(0x1p-112, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0xb.504f333f9de68p-116, 0xe.1a1b30bcea13p-4), asin(cf64.init(0x1p-112, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0xb.504f38e7c5818p-116, -0xe.1a1b256c9add8p-4), asin(cf64.init(0x1p-112, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0xb.504f333f9de68p-116, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x1p-112, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0xb.504f333f9de68p-116, -0xe.1a1b30bcea13p-4), asin(cf64.init(0x1p-112, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(-0xb.504f333f9de68p-116, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x1p-112, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0xb.504f38e7c5818p-116, 0xe.1a1b256c9add8p-4), asin(cf64.init(-0x1p-112, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(-0xb.504f333f9de68p-116, 0xe.1a1b30bcea13p-4), asin(cf64.init(-0x1p-112, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(-0xb.504f38e7c5818p-116, -0xe.1a1b256c9add8p-4), asin(cf64.init(-0x1p-112, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(-0xb.504f333f9de68p-116, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x1p-112, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0xb.504f333f9de68p-116, -0xe.1a1b30bcea13p-4), asin(cf64.init(-0x1p-112, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x1p-56), asin(cf64.init(0x1p+0, 0x1p-112)));
    // try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, 0xb.504f3613b1b4p-104), asin(cf64.init(0xf.fffffp-4, 0x1p-112)));
    try std.testing.expectEqual(cf64.init(0x1.921fb50442d18p+0, 0x4p-88), asin(cf64.init(0xf.ffffffffffff8p-4, 0x1p-112)));
    // try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, 0xb.504f3613b1b4p-104), asin(cf64.init(-0xf.fffffp-4, 0x1p-112)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x1p-56), asin(cf64.init(-0x1p+0, 0x1p-112)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb50442d18p+0, 0x4p-88), asin(cf64.init(-0xf.ffffffffffff8p-4, 0x1p-112)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x1p-56), asin(cf64.init(0x1p+0, -0x1p-112)));
    // try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, -0xb.504f3613b1b4p-104), asin(cf64.init(0xf.fffffp-4, -0x1p-112)));
    try std.testing.expectEqual(cf64.init(0x1.921fb50442d18p+0, -0x4p-88), asin(cf64.init(0xf.ffffffffffff8p-4, -0x1p-112)));
    // try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, -0xb.504f3613b1b4p-104), asin(cf64.init(-0xf.fffffp-4, -0x1p-112)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x1p-56), asin(cf64.init(-0x1p+0, -0x1p-112)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb50442d18p+0, -0x4p-88), asin(cf64.init(-0xf.ffffffffffff8p-4, -0x1p-112)));
    // try std.testing.expectEqual(cf64.init(0x5.a827999fcef34p-152, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x5.a8279c73e2c0cp-152, 0xe.1a1b256c9add8p-4), asin(cf64.init(0x8p-152, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x5.a827999fcef34p-152, 0xe.1a1b30bcea13p-4), asin(cf64.init(0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b256c9add8p-4), asin(cf64.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b30bcea13p-4), asin(cf64.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(0x4p-1076, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x4p-1076, 0xe.1a1b256c9add8p-4), asin(cf64.init(0x4p-1076, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x4p-1076, 0xe.1a1b30bcea13p-4), asin(cf64.init(0x4p-1076, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x5.a8279c73e2c0cp-152, -0xe.1a1b256c9add8p-4), asin(cf64.init(0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x5.a827999fcef34p-152, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x5.a827999fcef34p-152, -0xe.1a1b30bcea13p-4), asin(cf64.init(0x8p-152, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b256c9add8p-4), asin(cf64.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b30bcea13p-4), asin(cf64.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x4p-1076, -0xe.1a1b256c9add8p-4), asin(cf64.init(0x4p-1076, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x4p-1076, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x4p-1076, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x4p-1076, -0xe.1a1b30bcea13p-4), asin(cf64.init(0x4p-1076, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b256c9add8p-4), asin(cf64.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b30bcea13p-4), asin(cf64.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(-0x5.a827999fcef34p-152, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x5.a8279c73e2c0cp-152, 0xe.1a1b256c9add8p-4), asin(cf64.init(-0x8p-152, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(-0x5.a827999fcef34p-152, 0xe.1a1b30bcea13p-4), asin(cf64.init(-0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(-0x4p-1076, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x4p-1076, 0xe.1a1b256c9add8p-4), asin(cf64.init(-0x4p-1076, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(-0x4p-1076, 0xe.1a1b30bcea13p-4), asin(cf64.init(-0x4p-1076, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b256c9add8p-4), asin(cf64.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b30bcea13p-4), asin(cf64.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(-0x5.a8279c73e2c0cp-152, -0xe.1a1b256c9add8p-4), asin(cf64.init(-0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(-0x5.a827999fcef34p-152, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x5.a827999fcef34p-152, -0xe.1a1b30bcea13p-4), asin(cf64.init(-0x8p-152, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(-0x4p-1076, -0xe.1a1b256c9add8p-4), asin(cf64.init(-0x4p-1076, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(-0x4p-1076, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x4p-1076, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x4p-1076, -0xe.1a1b30bcea13p-4), asin(cf64.init(-0x4p-1076, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x2.d413cccfe779ap-76), asin(cf64.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), asin(cf64.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x8p-540), asin(cf64.init(0x1p+0, 0x4p-1076)));
    // try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, 0x5.a8279b09d8dap-140), asin(cf64.init(0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, 0x0p+0), asin(cf64.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, 0x2.d4p-1064), asin(cf64.init(0xf.fffffp-4, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.921fb50442d18p+0, 0x2p-124), asin(cf64.init(0xf.ffffffffffff8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb50442d18p+0, 0x0p+0), asin(cf64.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb50442d18p+0, 0x1p-1048), asin(cf64.init(0xf.ffffffffffff8p-4, 0x4p-1076)));
    // try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, 0x5.a8279b09d8dap-140), asin(cf64.init(-0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, 0x0p+0), asin(cf64.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, 0x2.d4p-1064), asin(cf64.init(-0xf.fffffp-4, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x2.d413cccfe779ap-76), asin(cf64.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x0p+0), asin(cf64.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x8p-540), asin(cf64.init(-0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb50442d18p+0, 0x2p-124), asin(cf64.init(-0xf.ffffffffffff8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb50442d18p+0, 0x0p+0), asin(cf64.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb50442d18p+0, 0x1p-1048), asin(cf64.init(-0xf.ffffffffffff8p-4, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), asin(cf64.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x2.d413cccfe779ap-76), asin(cf64.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x8p-540), asin(cf64.init(0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, -0x0p+0), asin(cf64.init(0xf.fffffp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, -0x5.a8279b09d8dap-140), asin(cf64.init(0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, -0x2.d4p-1064), asin(cf64.init(0xf.fffffp-4, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1.921fb50442d18p+0, -0x0p+0), asin(cf64.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb50442d18p+0, -0x2p-124), asin(cf64.init(0xf.ffffffffffff8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1.921fb50442d18p+0, -0x1p-1048), asin(cf64.init(0xf.ffffffffffff8p-4, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, -0x0p+0), asin(cf64.init(-0xf.fffffp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, -0x5.a8279b09d8dap-140), asin(cf64.init(-0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, -0x2.d4p-1064), asin(cf64.init(-0xf.fffffp-4, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x0p+0), asin(cf64.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x2.d413cccfe779ap-76), asin(cf64.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x8p-540), asin(cf64.init(-0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb50442d18p+0, -0x0p+0), asin(cf64.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb50442d18p+0, -0x2p-124), asin(cf64.init(-0xf.ffffffffffff8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb50442d18p+0, -0x1p-1048), asin(cf64.init(-0xf.ffffffffffff8p-4, -0x4p-1076)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b30bcea138p-4), asin(cf64.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b256c9add8p-4), asin(cf64.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0xe.1a1b30bcea13p-4), asin(cf64.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b256c9add8p-4), asin(cf64.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b30bcea138p-4), asin(cf64.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0xe.1a1b30bcea13p-4), asin(cf64.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b30bcea138p-4), asin(cf64.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b256c9add8p-4), asin(cf64.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0xe.1a1b30bcea13p-4), asin(cf64.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b256c9add8p-4), asin(cf64.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b30bcea138p-4), asin(cf64.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0xe.1a1b30bcea13p-4), asin(cf64.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, 0x0p+0), asin(cf64.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, 0x0p+0), asin(cf64.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb50442d18p+0, 0x0p+0), asin(cf64.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, 0x0p+0), asin(cf64.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, 0x0p+0), asin(cf64.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb50442d18p+0, 0x0p+0), asin(cf64.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb54442d18p+0, -0x0p+0), asin(cf64.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.920914a5da6f9p+0, -0x0p+0), asin(cf64.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.921fb50442d18p+0, -0x0p+0), asin(cf64.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.920914a5da6f9p+0, -0x0p+0), asin(cf64.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb54442d18p+0, -0x0p+0), asin(cf64.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1.921fb50442d18p+0, -0x0p+0), asin(cf64.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0xe.4f92e2dff6ec8p-116, 0x7.b30b2bb145828p-4), asin(cf64.init(0x1p-112, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(0xe.4f92e2dff6ec8p-116, -0x7.b30b2bb145828p-4), asin(cf64.init(0x1p-112, -0x8p-4)));
    try std.testing.expectEqual(cf64.init(-0xe.4f92e2dff6ec8p-116, 0x7.b30b2bb145828p-4), asin(cf64.init(-0x1p-112, 0x8p-4)));
    try std.testing.expectEqual(cf64.init(-0xe.4f92e2dff6ec8p-116, -0x7.b30b2bb145828p-4), asin(cf64.init(-0x1p-112, -0x8p-4)));
    // try std.testing.expectEqual(cf64.init(0x8.60a91c16b9b3p-4, 0x1.279a74590331cp-112), asin(cf64.init(0x8p-4, 0x1p-112)));
    // try std.testing.expectEqual(cf64.init(-0x8.60a91c16b9b3p-4, 0x1.279a74590331cp-112), asin(cf64.init(-0x8p-4, 0x1p-112)));
    // try std.testing.expectEqual(cf64.init(0x8.60a91c16b9b3p-4, -0x1.279a74590331cp-112), asin(cf64.init(0x8p-4, -0x1p-112)));
    // try std.testing.expectEqual(cf64.init(-0x8.60a91c16b9b3p-4, -0x1.279a74590331cp-112), asin(cf64.init(-0x8p-4, -0x1p-112)));
    try std.testing.expectEqual(cf64.init(0x1p-112, 0x1p-112), asin(cf64.init(0x1p-112, 0x1p-112)));
    try std.testing.expectEqual(cf64.init(0x1p-112, -0x1p-112), asin(cf64.init(0x1p-112, -0x1p-112)));
    try std.testing.expectEqual(cf64.init(-0x1p-112, 0x1p-112), asin(cf64.init(-0x1p-112, 0x1p-112)));
    try std.testing.expectEqual(cf64.init(-0x1p-112, -0x1p-112), asin(cf64.init(-0x1p-112, -0x1p-112)));
    try std.testing.expectEqual(cf64.init(0x8p-152, 0x1p-112), asin(cf64.init(0x8p-152, 0x1p-112)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x1p-112), asin(cf64.init(0x0p+0, 0x1p-112)));
    try std.testing.expectEqual(cf64.init(0x4p-1076, 0x1p-112), asin(cf64.init(0x4p-1076, 0x1p-112)));
    try std.testing.expectEqual(cf64.init(0x8p-152, -0x1p-112), asin(cf64.init(0x8p-152, -0x1p-112)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x1p-112), asin(cf64.init(0x0p+0, -0x1p-112)));
    try std.testing.expectEqual(cf64.init(0x4p-1076, -0x1p-112), asin(cf64.init(0x4p-1076, -0x1p-112)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0x1p-112), asin(cf64.init(-0x0p+0, 0x1p-112)));
    try std.testing.expectEqual(cf64.init(-0x8p-152, 0x1p-112), asin(cf64.init(-0x8p-152, 0x1p-112)));
    try std.testing.expectEqual(cf64.init(-0x4p-1076, 0x1p-112), asin(cf64.init(-0x4p-1076, 0x1p-112)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0x1p-112), asin(cf64.init(-0x0p+0, -0x1p-112)));
    try std.testing.expectEqual(cf64.init(-0x8p-152, -0x1p-112), asin(cf64.init(-0x8p-152, -0x1p-112)));
    try std.testing.expectEqual(cf64.init(-0x4p-1076, -0x1p-112), asin(cf64.init(-0x4p-1076, -0x1p-112)));
    try std.testing.expectEqual(cf64.init(0x1p-112, 0x8p-152), asin(cf64.init(0x1p-112, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1p-112, 0x0p+0), asin(cf64.init(0x1p-112, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1p-112, 0x4p-1076), asin(cf64.init(0x1p-112, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(-0x1p-112, 0x8p-152), asin(cf64.init(-0x1p-112, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1p-112, 0x0p+0), asin(cf64.init(-0x1p-112, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1p-112, 0x4p-1076), asin(cf64.init(-0x1p-112, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x1p-112, -0x0p+0), asin(cf64.init(0x1p-112, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1p-112, -0x8p-152), asin(cf64.init(0x1p-112, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x1p-112, -0x4p-1076), asin(cf64.init(0x1p-112, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(-0x1p-112, -0x0p+0), asin(cf64.init(-0x1p-112, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1p-112, -0x8p-152), asin(cf64.init(-0x1p-112, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(-0x1p-112, -0x4p-1076), asin(cf64.init(-0x1p-112, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x1p-112), asin(cf64.init(0x0p+0, 0x1p-112)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x1p-112), asin(cf64.init(0x0p+0, -0x1p-112)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0x1p-112), asin(cf64.init(-0x0p+0, 0x1p-112)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0x1p-112), asin(cf64.init(-0x0p+0, -0x1p-112)));
    try std.testing.expectEqual(cf64.init(0x1p-112, 0x0p+0), asin(cf64.init(0x1p-112, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1p-112, 0x0p+0), asin(cf64.init(-0x1p-112, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1p-112, -0x0p+0), asin(cf64.init(0x1p-112, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x1p-112, -0x0p+0), asin(cf64.init(-0x1p-112, -0x0p+0)));
    // try std.testing.expectEqual(cf64.init(0x7.409e85703b6bp-4, 0x1.21e48c8df1875p+0), asin(cf64.init(0xcp-4, 0x1.4p+0)));
    try std.testing.expectEqual(cf64.init(-0x9.2164d0607cc78p-4, -0x1.fbbf409ccd56p+0), asin(cf64.init(-0x2p+0, -0x3p+0)));

    try std.testing.expectEqual(cf80.init(0x0p+0, 0x0p+0), asin(cf80.init(0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0x0p+0), asin(cf80.init(-0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x0p+0), asin(cf80.init(0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0x0p+0), asin(cf80.init(-0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x1.31dc0090b63d8682p+0), asin(cf80.init(0x0p+0, -0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0x1.31dc0090b63d8682p+0), asin(cf80.init(-0x0p+0, -0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x7.b30b2bb14582653p-4), asin(cf80.init(0x0p+0, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0x7.b30b2bb14582653p-4), asin(cf80.init(-0x0p+0, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x7.b30b2bb14582653p-4), asin(cf80.init(0x0p+0, 0x8p-4)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0x7.b30b2bb14582653p-4), asin(cf80.init(-0x0p+0, 0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x1.31dc0090b63d8682p+0), asin(cf80.init(0x0p+0, 0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0x1.31dc0090b63d8682p+0), asin(cf80.init(-0x0p+0, 0x1.8p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0xf.661657628b04ca6p-4), asin(cf80.init(-0x1.8p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0xf.661657628b04ca6p-4), asin(cf80.init(-0x1.8p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x0p+0), asin(cf80.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x0p+0), asin(cf80.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x8.60a91c16b9b2c23p-4, 0x0p+0), asin(cf80.init(-0x8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x8.60a91c16b9b2c23p-4, -0x0p+0), asin(cf80.init(-0x8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x8.60a91c16b9b2c23p-4, 0x0p+0), asin(cf80.init(0x8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x8.60a91c16b9b2c23p-4, -0x0p+0), asin(cf80.init(0x8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), asin(cf80.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), asin(cf80.init(0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xf.661657628b04ca6p-4), asin(cf80.init(0x1.8p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xf.661657628b04ca6p-4), asin(cf80.init(0x1.8p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1446ap+0, 0x2.359bac65ecc553d4p+4), asin(cf80.init(0x4p+48, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1446ap+0, -0x2.359bac65ecc553d4p+4), asin(cf80.init(0x4p+48, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1446ap+0, 0x2.359bac65ecc553d4p+4), asin(cf80.init(-0x4p+48, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1446ap+0, -0x2.359bac65ecc553d4p+4), asin(cf80.init(-0x4p+48, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x4p-52, 0x2.359bac65ecc553d4p+4), asin(cf80.init(0x1p+0, 0x4p+48)));
    try std.testing.expectEqual(cf80.init(-0x4p-52, 0x2.359bac65ecc553d4p+4), asin(cf80.init(-0x1p+0, 0x4p+48)));
    try std.testing.expectEqual(cf80.init(0x4p-52, -0x2.359bac65ecc553d4p+4), asin(cf80.init(0x1p+0, -0x4p+48)));
    try std.testing.expectEqual(cf80.init(-0x4p-52, -0x2.359bac65ecc553d4p+4), asin(cf80.init(-0x1p+0, -0x4p+48)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x5.96a7e12e0b98bcf8p+4), asin(cf80.init(0xf.fffffp+124, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.5b4448e7fd9b091ep+8), asin(cf80.init(0x1p+500, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x5.96a7e12e0b98bcf8p+4), asin(cf80.init(0xf.fffffp+124, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.5b4448e7fd9b091ep+8), asin(cf80.init(0x1p+500, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x5.96a7e12e0b98bcf8p+4), asin(cf80.init(-0xf.fffffp+124, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x1.5b4448e7fd9b091ep+8), asin(cf80.init(-0x1p+500, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x5.96a7e12e0b98bcf8p+4), asin(cf80.init(-0xf.fffffp+124, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x1.5b4448e7fd9b091ep+8), asin(cf80.init(-0x1p+500, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.000001000001p-128, 0x5.96a7e12e0b98bcf8p+4), asin(cf80.init(0x1p+0, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf80.init(0x1p-500, 0x1.5b4448e7fd9b091ep+8), asin(cf80.init(0x1p+0, 0x1p+500)));
    try std.testing.expectEqual(cf80.init(-0x1.000001000001p-128, 0x5.96a7e12e0b98bcf8p+4), asin(cf80.init(-0x1p+0, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf80.init(-0x1p-500, 0x1.5b4448e7fd9b091ep+8), asin(cf80.init(-0x1p+0, 0x1p+500)));
    try std.testing.expectEqual(cf80.init(0x1.000001000001p-128, -0x5.96a7e12e0b98bcf8p+4), asin(cf80.init(0x1p+0, -0xf.fffffp+124)));
    try std.testing.expectEqual(cf80.init(0x1p-500, -0x1.5b4448e7fd9b091ep+8), asin(cf80.init(0x1p+0, -0x1p+500)));
    try std.testing.expectEqual(cf80.init(-0x1.000001000001p-128, -0x5.96a7e12e0b98bcf8p+4), asin(cf80.init(-0x1p+0, -0xf.fffffp+124)));
    try std.testing.expectEqual(cf80.init(-0x1p-500, -0x1.5b4448e7fd9b091ep+8), asin(cf80.init(-0x1p+0, -0x1p+500)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x5.96a7e12e0b98bcf8p+4), asin(cf80.init(0xf.fffffp+124, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2.c679d1f73f0fb62p+8), asin(cf80.init(0xf.ffffffffffff8p+1020, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xd.8a6dd63831ae0fep+8), asin(cf80.init(0x1p+5000, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x5.96a7e12e0b98bcf8p+4), asin(cf80.init(0xf.fffffp+124, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2.c679d1f73f0fb62p+8), asin(cf80.init(0xf.ffffffffffff8p+1020, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xd.8a6dd63831ae0fep+8), asin(cf80.init(0x1p+5000, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x5.96a7e12e0b98bcf8p+4), asin(cf80.init(-0xf.fffffp+124, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x2.c679d1f73f0fb62p+8), asin(cf80.init(-0xf.ffffffffffff8p+1020, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0xd.8a6dd63831ae0fep+8), asin(cf80.init(-0x1p+5000, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x5.96a7e12e0b98bcf8p+4), asin(cf80.init(-0xf.fffffp+124, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x2.c679d1f73f0fb62p+8), asin(cf80.init(-0xf.ffffffffffff8p+1020, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0xd.8a6dd63831ae0fep+8), asin(cf80.init(-0x1p+5000, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.000001000001p-128, 0x5.96a7e12e0b98bcf8p+4), asin(cf80.init(0x1p+0, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf80.init(0x1.00000000000008p-1024, 0x2.c679d1f73f0fb62p+8), asin(cf80.init(0x1p+0, 0xf.ffffffffffff8p+1020)));
    try std.testing.expectEqual(cf80.init(0x1p-5000, 0xd.8a6dd63831ae0fep+8), asin(cf80.init(0x1p+0, 0x1p+5000)));
    try std.testing.expectEqual(cf80.init(-0x1.000001000001p-128, 0x5.96a7e12e0b98bcf8p+4), asin(cf80.init(-0x1p+0, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf80.init(-0x1.00000000000008p-1024, 0x2.c679d1f73f0fb62p+8), asin(cf80.init(-0x1p+0, 0xf.ffffffffffff8p+1020)));
    try std.testing.expectEqual(cf80.init(-0x1p-5000, 0xd.8a6dd63831ae0fep+8), asin(cf80.init(-0x1p+0, 0x1p+5000)));
    try std.testing.expectEqual(cf80.init(0x1.000001000001p-128, -0x5.96a7e12e0b98bcf8p+4), asin(cf80.init(0x1p+0, -0xf.fffffp+124)));
    try std.testing.expectEqual(cf80.init(0x1.00000000000008p-1024, -0x2.c679d1f73f0fb62p+8), asin(cf80.init(0x1p+0, -0xf.ffffffffffff8p+1020)));
    try std.testing.expectEqual(cf80.init(0x1p-5000, -0xd.8a6dd63831ae0fep+8), asin(cf80.init(0x1p+0, -0x1p+5000)));
    try std.testing.expectEqual(cf80.init(-0x1.000001000001p-128, -0x5.96a7e12e0b98bcf8p+4), asin(cf80.init(-0x1p+0, -0xf.fffffp+124)));
    try std.testing.expectEqual(cf80.init(-0x1.00000000000008p-1024, -0x2.c679d1f73f0fb62p+8), asin(cf80.init(-0x1p+0, -0xf.ffffffffffff8p+1020)));
    try std.testing.expectEqual(cf80.init(-0x1p-5000, -0xd.8a6dd63831ae0fep+8), asin(cf80.init(-0x1p+0, -0x1p+5000)));
    try std.testing.expectEqual(cf80.init(0xc.90fdaa22168c235p-4, 0x5.9bb167117aed1eap+4), asin(cf80.init(0xf.8p+124, 0xf.8p+124)));
    // try std.testing.expectEqual(cf80.init(0xc.90fdaa22168c235p-4, 0x5.9c3371edca2738c8p+4), asin(cf80.init(0xf.fffffp+124, 0xf.fffffp+124)));
    // try std.testing.expectEqual(cf80.init(0x1.08420f7bdef7bdfp-896, 0x2.c671b1487a1c1408p+8), asin(cf80.init(0xf.fffffp+124, 0xf.8p+1020)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2.c671b1487a1c1408p+8), asin(cf80.init(0xf.8p+1020, 0xf.fffffp+124)));
    // try std.testing.expectEqual(cf80.init(0xc.90fdaa22168c235p-4, 0x2.c6ca6a547604fbc4p+8), asin(cf80.init(0xf.8p+1020, 0xf.8p+1020)));
    // try std.testing.expectEqual(cf80.init(0xc.90fdaa22168c235p-4, 0x5.9c3371edca2738c8p+4), asin(cf80.init(0xf.fffffp+124, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf80.init(0xf.fffff00000008p-900, 0x2.c679d1f73f0fb62p+8), asin(cf80.init(0xf.fffffp+124, 0xf.ffffffffffff8p+1020)));
    try std.testing.expectEqual(cf80.init(0x1.08420f7bdef7bdfp-16256, 0x2.c5d2f4f5da6bc984p+12), asin(cf80.init(0xf.fffffp+124, 0xf.8p+16380)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2.c679d1f73f0fb62p+8), asin(cf80.init(0xf.ffffffffffff8p+1020, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf80.init(0xc.90fdaa22168c235p-4, 0x2.c6d28b033af89ddcp+8), asin(cf80.init(0xf.ffffffffffff8p+1020, 0xf.ffffffffffff8p+1020)));
    try std.testing.expectEqual(cf80.init(0x1.08421084210839cep-15360, 0x2.c5d2f4f5da6bc984p+12), asin(cf80.init(0xf.ffffffffffff8p+1020, 0xf.8p+16380)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2.c5d2f4f5da6bc984p+12), asin(cf80.init(0xf.8p+16380, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2.c5d2f4f5da6bc984p+12), asin(cf80.init(0xf.8p+16380, 0xf.ffffffffffff8p+1020)));
    try std.testing.expectEqual(cf80.init(0xc.90fdaa22168c235p-4, 0x2.c5d880869a2a58p+12), asin(cf80.init(0xf.8p+16380, 0xf.8p+16380)));
    try std.testing.expectEqual(cf80.init(0x8.990ce59d04a88bbp-132, 0x1.31dc0090b63d8682p+0), asin(cf80.init(0xf.8p-132, 0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x8.990ce59d04a88bbp-132, -0x1.31dc0090b63d8682p+0), asin(cf80.init(0xf.8p-132, -0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(-0x8.990ce59d04a88bbp-132, 0x1.31dc0090b63d8682p+0), asin(cf80.init(-0xf.8p-132, 0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(-0x8.990ce59d04a88bbp-132, -0x1.31dc0090b63d8682p+0), asin(cf80.init(-0xf.8p-132, -0x1.8p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xf.661657628b04ca6p-4), asin(cf80.init(0x1.8p+0, 0xf.8p-132)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0xf.661657628b04ca6p-4), asin(cf80.init(-0x1.8p+0, 0xf.8p-132)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xf.661657628b04ca6p-4), asin(cf80.init(0x1.8p+0, -0xf.8p-132)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0xf.661657628b04ca6p-4), asin(cf80.init(-0x1.8p+0, -0xf.8p-132)));
    try std.testing.expectEqual(cf80.init(0x4.7006a80efa25716p-152, 0x1.31dc0090b63d8682p+0), asin(cf80.init(0x8p-152, 0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x1.31dc0090b63d8682p+0), asin(cf80.init(0x0p+0, 0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x8.990ce59d04a88bbp-1028, 0x1.31dc0090b63d8682p+0), asin(cf80.init(0xf.8p-1028, 0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x4.7006a80efa25716p-152, -0x1.31dc0090b63d8682p+0), asin(cf80.init(0x8p-152, -0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x1.31dc0090b63d8682p+0), asin(cf80.init(0x0p+0, -0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x8.990ce59d04a88bbp-1028, -0x1.31dc0090b63d8682p+0), asin(cf80.init(0xf.8p-1028, -0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0x1.31dc0090b63d8682p+0), asin(cf80.init(-0x0p+0, 0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(-0x4.7006a80efa25716p-152, 0x1.31dc0090b63d8682p+0), asin(cf80.init(-0x8p-152, 0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(-0x8.990ce59d04a88bbp-1028, 0x1.31dc0090b63d8682p+0), asin(cf80.init(-0xf.8p-1028, 0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0x1.31dc0090b63d8682p+0), asin(cf80.init(-0x0p+0, -0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(-0x4.7006a80efa25716p-152, -0x1.31dc0090b63d8682p+0), asin(cf80.init(-0x8p-152, -0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(-0x8.990ce59d04a88bbp-1028, -0x1.31dc0090b63d8682p+0), asin(cf80.init(-0xf.8p-1028, -0x1.8p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xf.661657628b04ca6p-4), asin(cf80.init(0x1.8p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xf.661657628b04ca6p-4), asin(cf80.init(0x1.8p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xf.661657628b04ca6p-4), asin(cf80.init(0x1.8p+0, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0xf.661657628b04ca6p-4), asin(cf80.init(-0x1.8p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0xf.661657628b04ca6p-4), asin(cf80.init(-0x1.8p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0xf.661657628b04ca6p-4), asin(cf80.init(-0x1.8p+0, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xf.661657628b04ca6p-4), asin(cf80.init(0x1.8p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xf.661657628b04ca6p-4), asin(cf80.init(0x1.8p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xf.661657628b04ca6p-4), asin(cf80.init(0x1.8p+0, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0xf.661657628b04ca6p-4), asin(cf80.init(-0x1.8p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0xf.661657628b04ca6p-4), asin(cf80.init(-0x1.8p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0xf.661657628b04ca6p-4), asin(cf80.init(-0x1.8p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x4.7006a80efa25716p-152, 0x1.31dc0090b63d8682p+0), asin(cf80.init(0x8p-152, 0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x1.31dc0090b63d8682p+0), asin(cf80.init(0x0p+0, 0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x2.380354077d12b8bp-1076, 0x1.31dc0090b63d8682p+0), asin(cf80.init(0x4p-1076, 0x1.8p+0)));
    // try std.testing.expectEqual(cf80.init(0x8.990ce59d04a88b8p-16388, 0x1.31dc0090b63d8682p+0), asin(cf80.init(0xf.8p-16388, 0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x4.7006a80efa25716p-152, -0x1.31dc0090b63d8682p+0), asin(cf80.init(0x8p-152, -0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x1.31dc0090b63d8682p+0), asin(cf80.init(0x0p+0, -0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(0x2.380354077d12b8bp-1076, -0x1.31dc0090b63d8682p+0), asin(cf80.init(0x4p-1076, -0x1.8p+0)));
    // try std.testing.expectEqual(cf80.init(0x8.990ce59d04a88b8p-16388, -0x1.31dc0090b63d8682p+0), asin(cf80.init(0xf.8p-16388, -0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0x1.31dc0090b63d8682p+0), asin(cf80.init(-0x0p+0, 0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(-0x4.7006a80efa25716p-152, 0x1.31dc0090b63d8682p+0), asin(cf80.init(-0x8p-152, 0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(-0x2.380354077d12b8bp-1076, 0x1.31dc0090b63d8682p+0), asin(cf80.init(-0x4p-1076, 0x1.8p+0)));
    // try std.testing.expectEqual(cf80.init(-0x8.990ce59d04a88b8p-16388, 0x1.31dc0090b63d8682p+0), asin(cf80.init(-0xf.8p-16388, 0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0x1.31dc0090b63d8682p+0), asin(cf80.init(-0x0p+0, -0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(-0x4.7006a80efa25716p-152, -0x1.31dc0090b63d8682p+0), asin(cf80.init(-0x8p-152, -0x1.8p+0)));
    try std.testing.expectEqual(cf80.init(-0x2.380354077d12b8bp-1076, -0x1.31dc0090b63d8682p+0), asin(cf80.init(-0x4p-1076, -0x1.8p+0)));
    // try std.testing.expectEqual(cf80.init(-0x8.990ce59d04a88b8p-16388, -0x1.31dc0090b63d8682p+0), asin(cf80.init(-0xf.8p-16388, -0x1.8p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xf.661657628b04ca6p-4), asin(cf80.init(0x1.8p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xf.661657628b04ca6p-4), asin(cf80.init(0x1.8p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xf.661657628b04ca6p-4), asin(cf80.init(0x1.8p+0, 0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xf.661657628b04ca6p-4), asin(cf80.init(0x1.8p+0, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0xf.661657628b04ca6p-4), asin(cf80.init(-0x1.8p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0xf.661657628b04ca6p-4), asin(cf80.init(-0x1.8p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0xf.661657628b04ca6p-4), asin(cf80.init(-0x1.8p+0, 0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0xf.661657628b04ca6p-4), asin(cf80.init(-0x1.8p+0, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xf.661657628b04ca6p-4), asin(cf80.init(0x1.8p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xf.661657628b04ca6p-4), asin(cf80.init(0x1.8p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xf.661657628b04ca6p-4), asin(cf80.init(0x1.8p+0, -0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xf.661657628b04ca6p-4), asin(cf80.init(0x1.8p+0, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0xf.661657628b04ca6p-4), asin(cf80.init(-0x1.8p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0xf.661657628b04ca6p-4), asin(cf80.init(-0x1.8p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0xf.661657628b04ca6p-4), asin(cf80.init(-0x1.8p+0, -0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0xf.661657628b04ca6p-4), asin(cf80.init(-0x1.8p+0, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(0x5.974d6a2eaa791e58p-4, 0xe.d170de964f5d751p-4), asin(cf80.init(0x8p-4, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x5.974d6a2eaa791e58p-4, -0xe.d170de964f5d751p-4), asin(cf80.init(0x8p-4, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x5.974d6a2eaa791e58p-4, 0xe.d170de964f5d751p-4), asin(cf80.init(-0x8p-4, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x5.974d6a2eaa791e58p-4, -0xe.d170de964f5d751p-4), asin(cf80.init(-0x8p-4, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0xe.55a315408aedba5p-4, 0xb.b9c8f86edeb47f1p-4), asin(cf80.init(0x1p+0, 0x8p-4)));
    // try std.testing.expectEqual(cf80.init(-0xe.55a315408aedba5p-4, 0xb.b9c8f86edeb47f1p-4), asin(cf80.init(-0x1p+0, 0x8p-4)));
    // try std.testing.expectEqual(cf80.init(0xe.55a315408aedba5p-4, -0xb.b9c8f86edeb47f1p-4), asin(cf80.init(0x1p+0, -0x8p-4)));
    // try std.testing.expectEqual(cf80.init(-0xe.55a315408aedba5p-4, -0xb.b9c8f86edeb47f1p-4), asin(cf80.init(-0x1p+0, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x2.d2227fefb78c302cp-4, 0xe.4787aa0d7d0a7c7p-4), asin(cf80.init(0x4p-4, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x2.d2227fefb78c302cp-4, -0xe.4787aa0d7d0a7c7p-4), asin(cf80.init(0x4p-4, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x2.d2227fefb78c302cp-4, 0xe.4787aa0d7d0a7c7p-4), asin(cf80.init(-0x4p-4, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x2.d2227fefb78c302cp-4, -0xe.4787aa0d7d0a7c7p-4), asin(cf80.init(-0x4p-4, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.14edb2e773d6d4aap+0, 0x8.281ac2ec921b31bp-4), asin(cf80.init(0x1p+0, 0x4p-4)));
    try std.testing.expectEqual(cf80.init(-0x1.14edb2e773d6d4aap+0, 0x8.281ac2ec921b31bp-4), asin(cf80.init(-0x1p+0, 0x4p-4)));
    try std.testing.expectEqual(cf80.init(0x1.14edb2e773d6d4aap+0, -0x8.281ac2ec921b31bp-4), asin(cf80.init(0x1p+0, -0x4p-4)));
    try std.testing.expectEqual(cf80.init(-0x1.14edb2e773d6d4aap+0, -0x8.281ac2ec921b31bp-4), asin(cf80.init(-0x1p+0, -0x4p-4)));
    // try std.testing.expectEqual(cf80.init(0x5.7ae64f1be7bdad4p-12, 0xe.1a1bda9ed1cea5ep-4), asin(cf80.init(0x7.cp-12, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x5.7ae64f1be7bdad4p-12, -0xe.1a1bda9ed1cea5ep-4), asin(cf80.init(0x7.cp-12, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x5.7ae64f1be7bdad4p-12, 0xe.1a1bda9ed1cea5ep-4), asin(cf80.init(-0x7.cp-12, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x5.7ae64f1be7bdad4p-12, -0xe.1a1bda9ed1cea5ep-4), asin(cf80.init(-0x7.cp-12, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.86fd765f467248c4p+0, 0xb.23250757a42f7a1p-8), asin(cf80.init(0x1p+0, 0x7.cp-12)));
    try std.testing.expectEqual(cf80.init(-0x1.86fd765f467248c4p+0, 0xb.23250757a42f7a1p-8), asin(cf80.init(-0x1p+0, 0x7.cp-12)));
    try std.testing.expectEqual(cf80.init(0x1.86fd765f467248c4p+0, -0xb.23250757a42f7a1p-8), asin(cf80.init(0x1p+0, -0x7.cp-12)));
    try std.testing.expectEqual(cf80.init(-0x1.86fd765f467248c4p+0, -0xb.23250757a42f7a1p-8), asin(cf80.init(-0x1p+0, -0x7.cp-12)));
    // try std.testing.expectEqual(cf80.init(0x5.7ae65cd2d07b8afp-32, 0xe.1a1b30bcea1366bp-4), asin(cf80.init(0x7.cp-32, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x5.7ae65cd2d07b8afp-32, -0xe.1a1b30bcea1366bp-4), asin(cf80.init(0x7.cp-32, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x5.7ae65cd2d07b8afp-32, 0xe.1a1b30bcea1366bp-4), asin(cf80.init(-0x7.cp-32, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x5.7ae65cd2d07b8afp-32, -0xe.1a1b30bcea1366bp-4), asin(cf80.init(-0x7.cp-32, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921cec97c2263876p+0, 0x2.c8ac80aee47d2c4cp-16), asin(cf80.init(0x1p+0, 0x7.cp-32)));
    // try std.testing.expectEqual(cf80.init(-0x1.921cec97c2263876p+0, 0x2.c8ac80aee47d2c4cp-16), asin(cf80.init(-0x1p+0, 0x7.cp-32)));
    // try std.testing.expectEqual(cf80.init(0x1.921cec97c2263876p+0, -0x2.c8ac80aee47d2c4cp-16), asin(cf80.init(0x1p+0, -0x7.cp-32)));
    // try std.testing.expectEqual(cf80.init(-0x1.921cec97c2263876p+0, -0x2.c8ac80aee47d2c4cp-16), asin(cf80.init(-0x1p+0, -0x7.cp-32)));
    // try std.testing.expectEqual(cf80.init(0x1.5eb99734b41ee2cp-100, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x1.fp-100, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.5eb99734b41ee2cp-100, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x1.fp-100, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.5eb99734b41ee2cp-100, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x1.fp-100, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.5eb99734b41ee2cp-100, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x1.fp-100, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d12b54p+0, 0x5.9159015a3070dd18p-52), asin(cf80.init(0x1p+0, 0x1.fp-100)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d12b54p+0, 0x5.9159015a3070dd18p-52), asin(cf80.init(-0x1p+0, 0x1.fp-100)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d12b54p+0, -0x5.9159015a3070dd18p-52), asin(cf80.init(0x1p+0, -0x1.fp-100)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d12b54p+0, -0x5.9159015a3070dd18p-52), asin(cf80.init(-0x1p+0, -0x1.fp-100)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f716p-132, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0xf.8p-132, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f716p-132, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0xf.8p-132, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f716p-132, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0xf.8p-132, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f716p-132, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0xf.8p-132, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d18468p+0, 0xf.bf7df5c6a788f0cp-68), asin(cf80.init(0x1p+0, 0xf.8p-132)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d18468p+0, 0xf.bf7df5c6a788f0cp-68), asin(cf80.init(-0x1p+0, 0xf.8p-132)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d18468p+0, -0xf.bf7df5c6a788f0cp-68), asin(cf80.init(0x1p+0, -0xf.8p-132)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d18468p+0, -0xf.bf7df5c6a788f0cp-68), asin(cf80.init(-0x1p+0, -0xf.8p-132)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef3242p-152, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.5eb99734b41ee2cp-1000, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x1.fp-1000, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef3242p-152, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.5eb99734b41ee2cp-1000, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x1.fp-1000, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef3242p-152, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.5eb99734b41ee2cp-1000, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x1.fp-1000, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef3242p-152, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.5eb99734b41ee2cp-1000, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x1.fp-1000, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2.d413cccfe779921p-76), asin(cf80.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), asin(cf80.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.645640568c1c3746p-500), asin(cf80.init(0x1p+0, 0x1.fp-1000)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x2.d413cccfe779921p-76), asin(cf80.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x0p+0), asin(cf80.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x1.645640568c1c3746p-500), asin(cf80.init(-0x1p+0, 0x1.fp-1000)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), asin(cf80.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2.d413cccfe779921p-76), asin(cf80.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.645640568c1c3746p-500), asin(cf80.init(0x1p+0, -0x1.fp-1000)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x0p+0), asin(cf80.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x2.d413cccfe779921p-76), asin(cf80.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x1.645640568c1c3746p-500), asin(cf80.init(-0x1p+0, -0x1.fp-1000)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef3242p-152, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f716p-1028, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0xf.8p-1028, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef3242p-152, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f716p-1028, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0xf.8p-1028, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef3242p-152, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f716p-1028, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0xf.8p-1028, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef3242p-152, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f716p-1028, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0xf.8p-1028, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2.d413cccfe779921p-76), asin(cf80.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), asin(cf80.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xf.bf7df5c6a788f0cp-516), asin(cf80.init(0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x2.d413cccfe779921p-76), asin(cf80.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x0p+0), asin(cf80.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0xf.bf7df5c6a788f0cp-516), asin(cf80.init(-0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), asin(cf80.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2.d413cccfe779921p-76), asin(cf80.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xf.bf7df5c6a788f0cp-516), asin(cf80.init(0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x0p+0), asin(cf80.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x2.d413cccfe779921p-76), asin(cf80.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0xf.bf7df5c6a788f0cp-516), asin(cf80.init(-0x1p+0, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef3242p-152, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-1076, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x4p-1076, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.5eb99734b41ee2cp-10000, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x1.fp-10000, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef3242p-152, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-1076, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x4p-1076, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.5eb99734b41ee2cp-10000, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x1.fp-10000, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef3242p-152, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x2.d413cccfe779921p-1076, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x4p-1076, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.5eb99734b41ee2cp-10000, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x1.fp-10000, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef3242p-152, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x2.d413cccfe779921p-1076, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x4p-1076, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.5eb99734b41ee2cp-10000, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x1.fp-10000, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2.d413cccfe779921p-76), asin(cf80.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), asin(cf80.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x8p-540), asin(cf80.init(0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.645640568c1c3746p-5000), asin(cf80.init(0x1p+0, 0x1.fp-10000)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x2.d413cccfe779921p-76), asin(cf80.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x0p+0), asin(cf80.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x8p-540), asin(cf80.init(-0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x1.645640568c1c3746p-5000), asin(cf80.init(-0x1p+0, 0x1.fp-10000)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), asin(cf80.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2.d413cccfe779921p-76), asin(cf80.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x8p-540), asin(cf80.init(0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.645640568c1c3746p-5000), asin(cf80.init(0x1p+0, -0x1.fp-10000)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x0p+0), asin(cf80.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x2.d413cccfe779921p-76), asin(cf80.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x8p-540), asin(cf80.init(-0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x1.645640568c1c3746p-5000), asin(cf80.init(-0x1p+0, -0x1.fp-10000)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef3242p-152, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-1076, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x4p-1076, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f716p-16388, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0xf.8p-16388, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef3242p-152, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-1076, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x4p-1076, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f716p-16388, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0xf.8p-16388, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef3242p-152, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x2.d413cccfe779921p-1076, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x4p-1076, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f716p-16388, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0xf.8p-16388, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef3242p-152, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x2.d413cccfe779921p-1076, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x4p-1076, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f716p-16388, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0xf.8p-16388, -0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2.d413cccfe779921p-76), asin(cf80.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), asin(cf80.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x8p-540), asin(cf80.init(0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xf.bf7df5c6a788f0cp-8196), asin(cf80.init(0x1p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x2.d413cccfe779921p-76), asin(cf80.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x0p+0), asin(cf80.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x8p-540), asin(cf80.init(-0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0xf.bf7df5c6a788f0cp-8196), asin(cf80.init(-0x1p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), asin(cf80.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2.d413cccfe779921p-76), asin(cf80.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x8p-540), asin(cf80.init(0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xf.bf7df5c6a788f0cp-8196), asin(cf80.init(0x1p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x0p+0), asin(cf80.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x2.d413cccfe779921p-76), asin(cf80.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x8p-540), asin(cf80.init(-0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0xf.bf7df5c6a788f0cp-8196), asin(cf80.init(-0x1p+0, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(0x1.6a09e4fde9d6d9c2p-24, 0xe.1a1b475d8879e55p-4), asin(cf80.init(0x2p-24, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.6a09e4fde9d6d9c2p-24, -0xe.1a1b475d8879e55p-4), asin(cf80.init(0x2p-24, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.6a09e4fde9d6d9c2p-24, 0xe.1a1b475d8879e55p-4), asin(cf80.init(-0x2p-24, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.6a09e4fde9d6d9c2p-24, -0xe.1a1b475d8879e55p-4), asin(cf80.init(-0x2p-24, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.9211252bae9f8baep+0, 0x2.3286b92909b70508p-12), asin(cf80.init(0x1.000002p+0, 0x2p-24)));
    try std.testing.expectEqual(cf80.init(-0x1.9211252bae9f8baep+0, 0x2.3286b92909b70508p-12), asin(cf80.init(-0x1.000002p+0, 0x2p-24)));
    try std.testing.expectEqual(cf80.init(0x1.9211252bae9f8baep+0, -0x2.3286b92909b70508p-12), asin(cf80.init(0x1.000002p+0, -0x2p-24)));
    try std.testing.expectEqual(cf80.init(-0x1.9211252bae9f8baep+0, -0x2.3286b92909b70508p-12), asin(cf80.init(-0x1.000002p+0, -0x2p-24)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccaeafd442eb5p-132, 0xe.1a1b475d886e95p-4), asin(cf80.init(0xf.8p-132, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccaeafd442eb5p-132, -0xe.1a1b475d886e95p-4), asin(cf80.init(0xf.8p-132, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccaeafd442eb5p-132, 0xe.1a1b475d886e95p-4), asin(cf80.init(-0xf.8p-132, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccaeafd442eb5p-132, -0xe.1a1b475d886e95p-4), asin(cf80.init(-0xf.8p-132, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, 0xf.8p-132)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, 0xf.8p-132)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, -0xf.8p-132)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, -0xf.8p-132)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b475d886e95p-4), asin(cf80.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b475d886e95p-4), asin(cf80.init(0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b475d886e95p-4), asin(cf80.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b475d886e95p-4), asin(cf80.init(-0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0xb.504f27ef4eb8b0dp-56, 0xe.1a1b475d886e95p-4), asin(cf80.init(0x1p-52, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0xb.504f333f9de6484p-56, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x1p-52, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0xb.504f333f9de5edcp-56, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(0x1p-52, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0xb.504f333f9de6484p-56, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x1p-52, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0xb.504f27ef4eb8b0dp-56, -0xe.1a1b475d886e95p-4), asin(cf80.init(0x1p-52, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0xb.504f333f9de5edcp-56, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(0x1p-52, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf80.init(-0xb.504f27ef4eb8b0dp-56, 0xe.1a1b475d886e95p-4), asin(cf80.init(-0x1p-52, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(-0xb.504f333f9de6484p-56, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x1p-52, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0xb.504f333f9de5edcp-56, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0x1p-52, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(-0xb.504f333f9de6484p-56, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x1p-52, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0xb.504f27ef4eb8b0dp-56, -0xe.1a1b475d886e95p-4), asin(cf80.init(-0x1p-52, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(-0xb.504f333f9de5edcp-56, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0x1p-52, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb5444251846ap+0, 0x1.ffffffaaaaaad122p-12), asin(cf80.init(0x1.000002p+0, 0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, 0x4.0000000000000558p-28), asin(cf80.init(0x1p+0, 0x1p-52)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb51b122b9162p+0, 0x6.3710864f5700aae8p-28), asin(cf80.init(0x1.0000000000001p+0, 0x1p-52)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, 0x4.0000000000000558p-28), asin(cf80.init(-0x1p+0, 0x1p-52)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb5444251846ap+0, 0x1.ffffffaaaaaad122p-12), asin(cf80.init(-0x1.000002p+0, 0x1p-52)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb51b122b9162p+0, 0x6.3710864f5700aae8p-28), asin(cf80.init(-0x1.0000000000001p+0, 0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x1.921fb5444251846ap+0, -0x1.ffffffaaaaaad122p-12), asin(cf80.init(0x1.000002p+0, -0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, -0x4.0000000000000558p-28), asin(cf80.init(0x1p+0, -0x1p-52)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb51b122b9162p+0, -0x6.3710864f5700aae8p-28), asin(cf80.init(0x1.0000000000001p+0, -0x1p-52)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, -0x4.0000000000000558p-28), asin(cf80.init(-0x1p+0, -0x1p-52)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb5444251846ap+0, -0x1.ffffffaaaaaad122p-12), asin(cf80.init(-0x1.000002p+0, -0x1p-52)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb51b122b9162p+0, -0x6.3710864f5700aae8p-28), asin(cf80.init(-0x1.0000000000001p+0, -0x1p-52)));
    // try std.testing.expectEqual(cf80.init(0x5.a82793f7a75c5868p-152, 0xe.1a1b475d886e95p-4), asin(cf80.init(0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef3242p-152, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x5.a827999fcef2f6ep-152, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(0x8p-152, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b475d886e95p-4), asin(cf80.init(0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccaeafd442eb5p-1028, 0xe.1a1b475d886e95p-4), asin(cf80.init(0xf.8p-1028, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f716p-1028, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0xf.8p-1028, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f6be5p-1028, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(0xf.8p-1028, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef3242p-152, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x5.a82793f7a75c5868p-152, -0xe.1a1b475d886e95p-4), asin(cf80.init(0x8p-152, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x5.a827999fcef2f6ep-152, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(0x8p-152, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b475d886e95p-4), asin(cf80.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f716p-1028, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0xf.8p-1028, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccaeafd442eb5p-1028, -0xe.1a1b475d886e95p-4), asin(cf80.init(0xf.8p-1028, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f6be5p-1028, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(0xf.8p-1028, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b475d886e95p-4), asin(cf80.init(-0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf80.init(-0x5.a82793f7a75c5868p-152, 0xe.1a1b475d886e95p-4), asin(cf80.init(-0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef3242p-152, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x5.a827999fcef2f6ep-152, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0x8p-152, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccaeafd442eb5p-1028, 0xe.1a1b475d886e95p-4), asin(cf80.init(-0xf.8p-1028, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f716p-1028, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0xf.8p-1028, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f6be5p-1028, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0xf.8p-1028, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b475d886e95p-4), asin(cf80.init(-0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef3242p-152, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x5.a82793f7a75c5868p-152, -0xe.1a1b475d886e95p-4), asin(cf80.init(-0x8p-152, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(-0x5.a827999fcef2f6ep-152, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0x8p-152, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f716p-1028, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0xf.8p-1028, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccaeafd442eb5p-1028, -0xe.1a1b475d886e95p-4), asin(cf80.init(-0xf.8p-1028, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f6be5p-1028, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0xf.8p-1028, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2.d413cccfe779921p-76), asin(cf80.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), asin(cf80.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xf.bf7df5c6a788f0cp-516), asin(cf80.init(0x1p+0, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x5.a827999fcef31c98p-28), asin(cf80.init(0x1.0000000000001p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x5.a827999fcef31c98p-28), asin(cf80.init(0x1.0000000000001p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x5.a827999fcef31c98p-28), asin(cf80.init(0x1.0000000000001p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x2.d413cccfe779921p-76), asin(cf80.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x0p+0), asin(cf80.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0xf.bf7df5c6a788f0cp-516), asin(cf80.init(-0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x5.a827999fcef31c98p-28), asin(cf80.init(-0x1.0000000000001p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x5.a827999fcef31c98p-28), asin(cf80.init(-0x1.0000000000001p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x5.a827999fcef31c98p-28), asin(cf80.init(-0x1.0000000000001p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), asin(cf80.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2.d413cccfe779921p-76), asin(cf80.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xf.bf7df5c6a788f0cp-516), asin(cf80.init(0x1p+0, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x5.a827999fcef31c98p-28), asin(cf80.init(0x1.0000000000001p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x5.a827999fcef31c98p-28), asin(cf80.init(0x1.0000000000001p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x5.a827999fcef31c98p-28), asin(cf80.init(0x1.0000000000001p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x0p+0), asin(cf80.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x2.d413cccfe779921p-76), asin(cf80.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0xf.bf7df5c6a788f0cp-516), asin(cf80.init(-0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x5.a827999fcef31c98p-28), asin(cf80.init(-0x1.0000000000001p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x5.a827999fcef31c98p-28), asin(cf80.init(-0x1.0000000000001p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x5.a827999fcef31c98p-28), asin(cf80.init(-0x1.0000000000001p+0, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b475d886e95p-4), asin(cf80.init(0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b475d886e95p-4), asin(cf80.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b475d886e95p-4), asin(cf80.init(-0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b475d886e95p-4), asin(cf80.init(-0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), asin(cf80.init(0x1p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x5.a827999fcef31c98p-28), asin(cf80.init(0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x0p+0), asin(cf80.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x5.a827999fcef31c98p-28), asin(cf80.init(-0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), asin(cf80.init(0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x5.a827999fcef31c98p-28), asin(cf80.init(0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x0p+0), asin(cf80.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x5.a827999fcef31c98p-28), asin(cf80.init(-0x1.0000000000001p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.6a09e4fde9d7161ap-64, 0xe.1a1b475d886e95p-4), asin(cf80.init(0x2p-64, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc908p-64, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x2p-64, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcbdb8p-64, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(0x2p-64, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc908p-64, 0xe.1a1b30bcea13662p-4), asin(cf80.init(0x2p-64, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc908p-64, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x2p-64, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.6a09e4fde9d7161ap-64, -0xe.1a1b475d886e95p-4), asin(cf80.init(0x2p-64, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcbdb8p-64, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(0x2p-64, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc908p-64, -0xe.1a1b30bcea13662p-4), asin(cf80.init(0x2p-64, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.6a09e4fde9d7161ap-64, 0xe.1a1b475d886e95p-4), asin(cf80.init(-0x2p-64, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.6a09e667f3bcc908p-64, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x2p-64, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.6a09e667f3bcbdb8p-64, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0x2p-64, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.6a09e667f3bcc908p-64, 0xe.1a1b30bcea13662p-4), asin(cf80.init(-0x2p-64, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.6a09e667f3bcc908p-64, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x2p-64, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.6a09e4fde9d7161ap-64, -0xe.1a1b475d886e95p-4), asin(cf80.init(-0x2p-64, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.6a09e667f3bcbdb8p-64, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0x2p-64, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.6a09e667f3bcc908p-64, -0xe.1a1b30bcea13662p-4), asin(cf80.init(-0x2p-64, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1746ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, 0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x1.921fb542d8c79e02p+0, 0x1.6a09e667f3bcc908p-32), asin(cf80.init(0x1p+0, 0x2p-64)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb5443d295cd2p+0, 0x5.a8279c73e2bc6368p-28), asin(cf80.init(0x1.0000000000001p+0, 0x2p-64)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54359cffaa2p+0, 0x2.3286b95ff53f16bp-32), asin(cf80.init(0x1.0000000000000002p+0, 0x2p-64)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb542d8c79e02p+0, 0x1.6a09e667f3bcc908p-32), asin(cf80.init(-0x1p+0, 0x2p-64)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1746ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, 0x2p-64)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb5443d295cd2p+0, 0x5.a8279c73e2bc6368p-28), asin(cf80.init(-0x1.0000000000001p+0, 0x2p-64)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54359cffaa2p+0, 0x2.3286b95ff53f16bp-32), asin(cf80.init(-0x1.0000000000000002p+0, 0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1746ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, -0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x1.921fb542d8c79e02p+0, -0x1.6a09e667f3bcc908p-32), asin(cf80.init(0x1p+0, -0x2p-64)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb5443d295cd2p+0, -0x5.a8279c73e2bc6368p-28), asin(cf80.init(0x1.0000000000001p+0, -0x2p-64)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54359cffaa2p+0, -0x2.3286b95ff53f16bp-32), asin(cf80.init(0x1.0000000000000002p+0, -0x2p-64)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb542d8c79e02p+0, -0x1.6a09e667f3bcc908p-32), asin(cf80.init(-0x1p+0, -0x2p-64)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1746ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, -0x2p-64)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb5443d295cd2p+0, -0x5.a8279c73e2bc6368p-28), asin(cf80.init(-0x1.0000000000001p+0, -0x2p-64)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54359cffaa2p+0, -0x2.3286b95ff53f16bp-32), asin(cf80.init(-0x1.0000000000000002p+0, -0x2p-64)));
    // try std.testing.expectEqual(cf80.init(0x5.a82793f7a75c5868p-152, 0xe.1a1b475d886e95p-4), asin(cf80.init(0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef3242p-152, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x5.a827999fcef2f6ep-152, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(0x8p-152, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x5.a827999fcef3242p-152, 0xe.1a1b30bcea13662p-4), asin(cf80.init(0x8p-152, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b475d886e95p-4), asin(cf80.init(0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea13662p-4), asin(cf80.init(0x0p+0, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x2.d413c9fbd3ae2c34p-1076, 0xe.1a1b475d886e95p-4), asin(cf80.init(0x4p-1076, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-1076, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x2.d413cccfe7797b7p-1076, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(0x4p-1076, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-1076, 0xe.1a1b30bcea13662p-4), asin(cf80.init(0x4p-1076, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccaeafd442eb8p-16388, 0xe.1a1b475d886e95p-4), asin(cf80.init(0xf.8p-16388, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f716p-16388, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0xf.8p-16388, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f6be8p-16388, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(0xf.8p-16388, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f716p-16388, 0xe.1a1b30bcea13662p-4), asin(cf80.init(0xf.8p-16388, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef3242p-152, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x5.a82793f7a75c5868p-152, -0xe.1a1b475d886e95p-4), asin(cf80.init(0x8p-152, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x5.a827999fcef2f6ep-152, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(0x8p-152, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x5.a827999fcef3242p-152, -0xe.1a1b30bcea13662p-4), asin(cf80.init(0x8p-152, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b475d886e95p-4), asin(cf80.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea13662p-4), asin(cf80.init(0x0p+0, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-1076, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x4p-1076, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x2.d413c9fbd3ae2c34p-1076, -0xe.1a1b475d886e95p-4), asin(cf80.init(0x4p-1076, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x2.d413cccfe7797b7p-1076, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(0x4p-1076, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-1076, -0xe.1a1b30bcea13662p-4), asin(cf80.init(0x4p-1076, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f716p-16388, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0xf.8p-16388, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccaeafd442eb8p-16388, -0xe.1a1b475d886e95p-4), asin(cf80.init(0xf.8p-16388, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f6be8p-16388, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(0xf.8p-16388, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f716p-16388, -0xe.1a1b30bcea13662p-4), asin(cf80.init(0xf.8p-16388, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b475d886e95p-4), asin(cf80.init(-0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea13662p-4), asin(cf80.init(-0x0p+0, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0x5.a82793f7a75c5868p-152, 0xe.1a1b475d886e95p-4), asin(cf80.init(-0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef3242p-152, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x5.a827999fcef2f6ep-152, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0x8p-152, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(-0x5.a827999fcef3242p-152, 0xe.1a1b30bcea13662p-4), asin(cf80.init(-0x8p-152, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0x2.d413c9fbd3ae2c34p-1076, 0xe.1a1b475d886e95p-4), asin(cf80.init(-0x4p-1076, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0x2.d413cccfe779921p-1076, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x2.d413cccfe7797b7p-1076, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0x4p-1076, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(-0x2.d413cccfe779921p-1076, 0xe.1a1b30bcea13662p-4), asin(cf80.init(-0x4p-1076, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccaeafd442eb8p-16388, 0xe.1a1b475d886e95p-4), asin(cf80.init(-0xf.8p-16388, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f716p-16388, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0xf.8p-16388, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f6be8p-16388, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0xf.8p-16388, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f716p-16388, 0xe.1a1b30bcea13662p-4), asin(cf80.init(-0xf.8p-16388, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b475d886e95p-4), asin(cf80.init(-0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea13662p-4), asin(cf80.init(-0x0p+0, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef3242p-152, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x5.a82793f7a75c5868p-152, -0xe.1a1b475d886e95p-4), asin(cf80.init(-0x8p-152, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(-0x5.a827999fcef2f6ep-152, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0x8p-152, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(-0x5.a827999fcef3242p-152, -0xe.1a1b30bcea13662p-4), asin(cf80.init(-0x8p-152, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0x2.d413cccfe779921p-1076, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x4p-1076, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x2.d413c9fbd3ae2c34p-1076, -0xe.1a1b475d886e95p-4), asin(cf80.init(-0x4p-1076, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(-0x2.d413cccfe7797b7p-1076, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0x4p-1076, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(-0x2.d413cccfe779921p-1076, -0xe.1a1b30bcea13662p-4), asin(cf80.init(-0x4p-1076, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f716p-16388, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0xf.8p-16388, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccaeafd442eb8p-16388, -0xe.1a1b475d886e95p-4), asin(cf80.init(-0xf.8p-16388, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f6be8p-16388, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0xf.8p-16388, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f716p-16388, -0xe.1a1b30bcea13662p-4), asin(cf80.init(-0xf.8p-16388, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2.d413cccfe779921p-76), asin(cf80.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), asin(cf80.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x8p-540), asin(cf80.init(0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xf.bf7df5c6a788f0cp-8196), asin(cf80.init(0x1p+0, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x5.a827999fcef31c98p-28), asin(cf80.init(0x1.0000000000001p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x5.a827999fcef31c98p-28), asin(cf80.init(0x1.0000000000001p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x5.a827999fcef31c98p-28), asin(cf80.init(0x1.0000000000001p+0, 0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x5.a827999fcef31c98p-28), asin(cf80.init(0x1.0000000000001p+0, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2p-32), asin(cf80.init(0x1.0000000000000002p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2p-32), asin(cf80.init(0x1.0000000000000002p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2p-32), asin(cf80.init(0x1.0000000000000002p+0, 0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2p-32), asin(cf80.init(0x1.0000000000000002p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x2.d413cccfe779921p-76), asin(cf80.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x0p+0), asin(cf80.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x8p-540), asin(cf80.init(-0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0xf.bf7df5c6a788f0cp-8196), asin(cf80.init(-0x1p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x5.a827999fcef31c98p-28), asin(cf80.init(-0x1.0000000000001p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x5.a827999fcef31c98p-28), asin(cf80.init(-0x1.0000000000001p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x5.a827999fcef31c98p-28), asin(cf80.init(-0x1.0000000000001p+0, 0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x5.a827999fcef31c98p-28), asin(cf80.init(-0x1.0000000000001p+0, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x2p-32), asin(cf80.init(-0x1.0000000000000002p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x2p-32), asin(cf80.init(-0x1.0000000000000002p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x2p-32), asin(cf80.init(-0x1.0000000000000002p+0, 0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x2p-32), asin(cf80.init(-0x1.0000000000000002p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), asin(cf80.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2.d413cccfe779921p-76), asin(cf80.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x8p-540), asin(cf80.init(0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xf.bf7df5c6a788f0cp-8196), asin(cf80.init(0x1p+0, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x5.a827999fcef31c98p-28), asin(cf80.init(0x1.0000000000001p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x5.a827999fcef31c98p-28), asin(cf80.init(0x1.0000000000001p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x5.a827999fcef31c98p-28), asin(cf80.init(0x1.0000000000001p+0, -0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x5.a827999fcef31c98p-28), asin(cf80.init(0x1.0000000000001p+0, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2p-32), asin(cf80.init(0x1.0000000000000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2p-32), asin(cf80.init(0x1.0000000000000002p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2p-32), asin(cf80.init(0x1.0000000000000002p+0, -0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2p-32), asin(cf80.init(0x1.0000000000000002p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x0p+0), asin(cf80.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x2.d413cccfe779921p-76), asin(cf80.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x8p-540), asin(cf80.init(-0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0xf.bf7df5c6a788f0cp-8196), asin(cf80.init(-0x1p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x5.a827999fcef31c98p-28), asin(cf80.init(-0x1.0000000000001p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x5.a827999fcef31c98p-28), asin(cf80.init(-0x1.0000000000001p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x5.a827999fcef31c98p-28), asin(cf80.init(-0x1.0000000000001p+0, -0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x5.a827999fcef31c98p-28), asin(cf80.init(-0x1.0000000000001p+0, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x2p-32), asin(cf80.init(-0x1.0000000000000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x2p-32), asin(cf80.init(-0x1.0000000000000002p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x2p-32), asin(cf80.init(-0x1.0000000000000002p+0, -0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x2p-32), asin(cf80.init(-0x1.0000000000000002p+0, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b475d886e95p-4), asin(cf80.init(0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea13662p-4), asin(cf80.init(0x0p+0, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b475d886e95p-4), asin(cf80.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea13662p-4), asin(cf80.init(0x0p+0, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b475d886e95p-4), asin(cf80.init(-0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea13662p-4), asin(cf80.init(-0x0p+0, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b475d886e95p-4), asin(cf80.init(-0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea13662p-4), asin(cf80.init(-0x0p+0, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), asin(cf80.init(0x1p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x5.a827999fcef31c98p-28), asin(cf80.init(0x1.0000000000001p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2p-32), asin(cf80.init(0x1.0000000000000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x0p+0), asin(cf80.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x5.a827999fcef31c98p-28), asin(cf80.init(-0x1.0000000000001p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x2p-32), asin(cf80.init(-0x1.0000000000000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), asin(cf80.init(0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x5.a827999fcef31c98p-28), asin(cf80.init(0x1.0000000000001p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2p-32), asin(cf80.init(0x1.0000000000000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x0p+0), asin(cf80.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x5.a827999fcef31c98p-28), asin(cf80.init(-0x1.0000000000001p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x2p-32), asin(cf80.init(-0x1.0000000000000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x2.d413c9fbd3ae2c34p-108, 0xe.1a1b475d886e95p-4), asin(cf80.init(0x4p-108, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-108, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x4p-108, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x2.d413cccfe7797b7p-108, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(0x4p-108, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-108, 0xe.1a1b30bcea13662p-4), asin(cf80.init(0x4p-108, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-108, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x4p-108, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x2.d413c9fbd3ae2c34p-108, -0xe.1a1b475d886e95p-4), asin(cf80.init(0x4p-108, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x2.d413cccfe7797b7p-108, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(0x4p-108, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-108, -0xe.1a1b30bcea13662p-4), asin(cf80.init(0x4p-108, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0x2.d413c9fbd3ae2c34p-108, 0xe.1a1b475d886e95p-4), asin(cf80.init(-0x4p-108, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0x2.d413cccfe779921p-108, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x4p-108, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x2.d413cccfe7797b7p-108, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0x4p-108, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(-0x2.d413cccfe779921p-108, 0xe.1a1b30bcea13662p-4), asin(cf80.init(-0x4p-108, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0x2.d413cccfe779921p-108, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x4p-108, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x2.d413c9fbd3ae2c34p-108, -0xe.1a1b475d886e95p-4), asin(cf80.init(-0x4p-108, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(-0x2.d413cccfe7797b7p-108, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0x4p-108, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(-0x2.d413cccfe779921p-108, -0xe.1a1b30bcea13662p-4), asin(cf80.init(-0x4p-108, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, 0x4p-108)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d17c6ap+0, 0x8p-56), asin(cf80.init(0x1p+0, 0x4p-108)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x5.a827999fcef31c98p-28), asin(cf80.init(0x1.0000000000001p+0, 0x4p-108)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2p-32), asin(cf80.init(0x1.0000000000000002p+0, 0x4p-108)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d17c6ap+0, 0x8p-56), asin(cf80.init(-0x1p+0, 0x4p-108)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, 0x4p-108)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x5.a827999fcef31c98p-28), asin(cf80.init(-0x1.0000000000001p+0, 0x4p-108)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x2p-32), asin(cf80.init(-0x1.0000000000000002p+0, 0x4p-108)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, -0x4p-108)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d17c6ap+0, -0x8p-56), asin(cf80.init(0x1p+0, -0x4p-108)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x5.a827999fcef31c98p-28), asin(cf80.init(0x1.0000000000001p+0, -0x4p-108)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2p-32), asin(cf80.init(0x1.0000000000000002p+0, -0x4p-108)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d17c6ap+0, -0x8p-56), asin(cf80.init(-0x1p+0, -0x4p-108)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, -0x4p-108)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x5.a827999fcef31c98p-28), asin(cf80.init(-0x1.0000000000001p+0, -0x4p-108)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x2p-32), asin(cf80.init(-0x1.0000000000000002p+0, -0x4p-108)));
    // try std.testing.expectEqual(cf80.init(0x5.a82793f7a75c5868p-152, 0xe.1a1b475d886e95p-4), asin(cf80.init(0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef3242p-152, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x5.a827999fcef2f6ep-152, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(0x8p-152, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x5.a827999fcef3242p-152, 0xe.1a1b30bcea13662p-4), asin(cf80.init(0x8p-152, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b475d886e95p-4), asin(cf80.init(0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea13662p-4), asin(cf80.init(0x0p+0, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccaeafd442eb5p-1028, 0xe.1a1b475d886e95p-4), asin(cf80.init(0xf.8p-1028, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f716p-1028, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0xf.8p-1028, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f6be5p-1028, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(0xf.8p-1028, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f716p-1028, 0xe.1a1b30bcea13662p-4), asin(cf80.init(0xf.8p-1028, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef3242p-152, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x5.a82793f7a75c5868p-152, -0xe.1a1b475d886e95p-4), asin(cf80.init(0x8p-152, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x5.a827999fcef2f6ep-152, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(0x8p-152, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x5.a827999fcef3242p-152, -0xe.1a1b30bcea13662p-4), asin(cf80.init(0x8p-152, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b475d886e95p-4), asin(cf80.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea13662p-4), asin(cf80.init(0x0p+0, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f716p-1028, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0xf.8p-1028, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccaeafd442eb5p-1028, -0xe.1a1b475d886e95p-4), asin(cf80.init(0xf.8p-1028, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f6be5p-1028, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(0xf.8p-1028, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f716p-1028, -0xe.1a1b30bcea13662p-4), asin(cf80.init(0xf.8p-1028, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b475d886e95p-4), asin(cf80.init(-0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea13662p-4), asin(cf80.init(-0x0p+0, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0x5.a82793f7a75c5868p-152, 0xe.1a1b475d886e95p-4), asin(cf80.init(-0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef3242p-152, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x5.a827999fcef2f6ep-152, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0x8p-152, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(-0x5.a827999fcef3242p-152, 0xe.1a1b30bcea13662p-4), asin(cf80.init(-0x8p-152, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccaeafd442eb5p-1028, 0xe.1a1b475d886e95p-4), asin(cf80.init(-0xf.8p-1028, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f716p-1028, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0xf.8p-1028, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f6be5p-1028, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0xf.8p-1028, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f716p-1028, 0xe.1a1b30bcea13662p-4), asin(cf80.init(-0xf.8p-1028, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b475d886e95p-4), asin(cf80.init(-0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea13662p-4), asin(cf80.init(-0x0p+0, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef3242p-152, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x5.a82793f7a75c5868p-152, -0xe.1a1b475d886e95p-4), asin(cf80.init(-0x8p-152, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(-0x5.a827999fcef2f6ep-152, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0x8p-152, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(-0x5.a827999fcef3242p-152, -0xe.1a1b30bcea13662p-4), asin(cf80.init(-0x8p-152, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f716p-1028, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0xf.8p-1028, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccaeafd442eb5p-1028, -0xe.1a1b475d886e95p-4), asin(cf80.init(-0xf.8p-1028, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f6be5p-1028, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0xf.8p-1028, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f716p-1028, -0xe.1a1b30bcea13662p-4), asin(cf80.init(-0xf.8p-1028, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2.d413cccfe779921p-76), asin(cf80.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), asin(cf80.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xf.bf7df5c6a788f0cp-516), asin(cf80.init(0x1p+0, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x5.a827999fcef31c98p-28), asin(cf80.init(0x1.0000000000001p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x5.a827999fcef31c98p-28), asin(cf80.init(0x1.0000000000001p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x5.a827999fcef31c98p-28), asin(cf80.init(0x1.0000000000001p+0, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2p-32), asin(cf80.init(0x1.0000000000000002p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2p-32), asin(cf80.init(0x1.0000000000000002p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2p-32), asin(cf80.init(0x1.0000000000000002p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x2.d413cccfe779921p-76), asin(cf80.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x0p+0), asin(cf80.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0xf.bf7df5c6a788f0cp-516), asin(cf80.init(-0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x5.a827999fcef31c98p-28), asin(cf80.init(-0x1.0000000000001p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x5.a827999fcef31c98p-28), asin(cf80.init(-0x1.0000000000001p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x5.a827999fcef31c98p-28), asin(cf80.init(-0x1.0000000000001p+0, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x2p-32), asin(cf80.init(-0x1.0000000000000002p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x2p-32), asin(cf80.init(-0x1.0000000000000002p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x2p-32), asin(cf80.init(-0x1.0000000000000002p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), asin(cf80.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2.d413cccfe779921p-76), asin(cf80.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xf.bf7df5c6a788f0cp-516), asin(cf80.init(0x1p+0, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x5.a827999fcef31c98p-28), asin(cf80.init(0x1.0000000000001p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x5.a827999fcef31c98p-28), asin(cf80.init(0x1.0000000000001p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x5.a827999fcef31c98p-28), asin(cf80.init(0x1.0000000000001p+0, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2p-32), asin(cf80.init(0x1.0000000000000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2p-32), asin(cf80.init(0x1.0000000000000002p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2p-32), asin(cf80.init(0x1.0000000000000002p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x0p+0), asin(cf80.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x2.d413cccfe779921p-76), asin(cf80.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0xf.bf7df5c6a788f0cp-516), asin(cf80.init(-0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x5.a827999fcef31c98p-28), asin(cf80.init(-0x1.0000000000001p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x5.a827999fcef31c98p-28), asin(cf80.init(-0x1.0000000000001p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x5.a827999fcef31c98p-28), asin(cf80.init(-0x1.0000000000001p+0, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x2p-32), asin(cf80.init(-0x1.0000000000000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x2p-32), asin(cf80.init(-0x1.0000000000000002p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x2p-32), asin(cf80.init(-0x1.0000000000000002p+0, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b475d886e95p-4), asin(cf80.init(0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea13662p-4), asin(cf80.init(0x0p+0, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b475d886e95p-4), asin(cf80.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea13662p-4), asin(cf80.init(0x0p+0, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b475d886e95p-4), asin(cf80.init(-0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea13662p-4), asin(cf80.init(-0x0p+0, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b475d886e95p-4), asin(cf80.init(-0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea13662p-4), asin(cf80.init(-0x0p+0, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), asin(cf80.init(0x1p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x5.a827999fcef31c98p-28), asin(cf80.init(0x1.0000000000001p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2p-32), asin(cf80.init(0x1.0000000000000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x0p+0), asin(cf80.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x5.a827999fcef31c98p-28), asin(cf80.init(-0x1.0000000000001p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x2p-32), asin(cf80.init(-0x1.0000000000000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), asin(cf80.init(0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x5.a827999fcef31c98p-28), asin(cf80.init(0x1.0000000000001p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2p-32), asin(cf80.init(0x1.0000000000000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x0p+0), asin(cf80.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x5.a827999fcef31c98p-28), asin(cf80.init(-0x1.0000000000001p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x2p-32), asin(cf80.init(-0x1.0000000000000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x5.a82793f7a75c5868p-116, 0xe.1a1b475d886e95p-4), asin(cf80.init(0x8p-116, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef3242p-116, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x8p-116, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x5.a827999fcef2f6ep-116, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(0x8p-116, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x5.a827999fcef3242p-116, 0xe.1a1b30bcea13662p-4), asin(cf80.init(0x8p-116, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef3242p-116, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x8p-116, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x5.a82793f7a75c5868p-116, -0xe.1a1b475d886e95p-4), asin(cf80.init(0x8p-116, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x5.a827999fcef2f6ep-116, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(0x8p-116, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x5.a827999fcef3242p-116, -0xe.1a1b30bcea13662p-4), asin(cf80.init(0x8p-116, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0x5.a82793f7a75c5868p-116, 0xe.1a1b475d886e95p-4), asin(cf80.init(-0x8p-116, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef3242p-116, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x8p-116, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x5.a827999fcef2f6ep-116, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0x8p-116, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(-0x5.a827999fcef3242p-116, 0xe.1a1b30bcea13662p-4), asin(cf80.init(-0x8p-116, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef3242p-116, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x8p-116, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x5.a82793f7a75c5868p-116, -0xe.1a1b475d886e95p-4), asin(cf80.init(-0x8p-116, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(-0x5.a827999fcef2f6ep-116, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0x8p-116, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(-0x5.a827999fcef3242p-116, -0xe.1a1b30bcea13662p-4), asin(cf80.init(-0x8p-116, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, 0x8p-116)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d183b4p+0, 0xb.504f333f9de6484p-60), asin(cf80.init(0x1p+0, 0x8p-116)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x5.a827999fcef31c98p-28), asin(cf80.init(0x1.0000000000001p+0, 0x8p-116)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2p-32), asin(cf80.init(0x1.0000000000000002p+0, 0x8p-116)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d183b4p+0, 0xb.504f333f9de6484p-60), asin(cf80.init(-0x1p+0, 0x8p-116)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, 0x8p-116)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x5.a827999fcef31c98p-28), asin(cf80.init(-0x1.0000000000001p+0, 0x8p-116)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x2p-32), asin(cf80.init(-0x1.0000000000000002p+0, 0x8p-116)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, -0x8p-116)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d183b4p+0, -0xb.504f333f9de6484p-60), asin(cf80.init(0x1p+0, -0x8p-116)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x5.a827999fcef31c98p-28), asin(cf80.init(0x1.0000000000001p+0, -0x8p-116)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2p-32), asin(cf80.init(0x1.0000000000000002p+0, -0x8p-116)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d183b4p+0, -0xb.504f333f9de6484p-60), asin(cf80.init(-0x1p+0, -0x8p-116)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, -0x8p-116)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x5.a827999fcef31c98p-28), asin(cf80.init(-0x1.0000000000001p+0, -0x8p-116)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x2p-32), asin(cf80.init(-0x1.0000000000000002p+0, -0x8p-116)));
    // try std.testing.expectEqual(cf80.init(0x5.a82793f7a75c5868p-152, 0xe.1a1b475d886e95p-4), asin(cf80.init(0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef3242p-152, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x5.a827999fcef2f6ep-152, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(0x8p-152, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x5.a827999fcef3242p-152, 0xe.1a1b30bcea13662p-4), asin(cf80.init(0x8p-152, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b475d886e95p-4), asin(cf80.init(0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea13662p-4), asin(cf80.init(0x0p+0, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x2.d413c9fbd3ae2c34p-1076, 0xe.1a1b475d886e95p-4), asin(cf80.init(0x4p-1076, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-1076, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x2.d413cccfe7797b7p-1076, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(0x4p-1076, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-1076, 0xe.1a1b30bcea13662p-4), asin(cf80.init(0x4p-1076, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccaeafd442eb8p-16388, 0xe.1a1b475d886e95p-4), asin(cf80.init(0xf.8p-16388, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f716p-16388, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0xf.8p-16388, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f6be8p-16388, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(0xf.8p-16388, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f716p-16388, 0xe.1a1b30bcea13662p-4), asin(cf80.init(0xf.8p-16388, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef3242p-152, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x5.a82793f7a75c5868p-152, -0xe.1a1b475d886e95p-4), asin(cf80.init(0x8p-152, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x5.a827999fcef2f6ep-152, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(0x8p-152, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x5.a827999fcef3242p-152, -0xe.1a1b30bcea13662p-4), asin(cf80.init(0x8p-152, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b475d886e95p-4), asin(cf80.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea13662p-4), asin(cf80.init(0x0p+0, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-1076, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x4p-1076, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x2.d413c9fbd3ae2c34p-1076, -0xe.1a1b475d886e95p-4), asin(cf80.init(0x4p-1076, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x2.d413cccfe7797b7p-1076, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(0x4p-1076, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-1076, -0xe.1a1b30bcea13662p-4), asin(cf80.init(0x4p-1076, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f716p-16388, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0xf.8p-16388, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccaeafd442eb8p-16388, -0xe.1a1b475d886e95p-4), asin(cf80.init(0xf.8p-16388, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f6be8p-16388, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(0xf.8p-16388, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f716p-16388, -0xe.1a1b30bcea13662p-4), asin(cf80.init(0xf.8p-16388, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b475d886e95p-4), asin(cf80.init(-0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea13662p-4), asin(cf80.init(-0x0p+0, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0x5.a82793f7a75c5868p-152, 0xe.1a1b475d886e95p-4), asin(cf80.init(-0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef3242p-152, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x5.a827999fcef2f6ep-152, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0x8p-152, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(-0x5.a827999fcef3242p-152, 0xe.1a1b30bcea13662p-4), asin(cf80.init(-0x8p-152, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0x2.d413c9fbd3ae2c34p-1076, 0xe.1a1b475d886e95p-4), asin(cf80.init(-0x4p-1076, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0x2.d413cccfe779921p-1076, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x2.d413cccfe7797b7p-1076, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0x4p-1076, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(-0x2.d413cccfe779921p-1076, 0xe.1a1b30bcea13662p-4), asin(cf80.init(-0x4p-1076, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccaeafd442eb8p-16388, 0xe.1a1b475d886e95p-4), asin(cf80.init(-0xf.8p-16388, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f716p-16388, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0xf.8p-16388, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f6be8p-16388, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0xf.8p-16388, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f716p-16388, 0xe.1a1b30bcea13662p-4), asin(cf80.init(-0xf.8p-16388, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b475d886e95p-4), asin(cf80.init(-0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea13662p-4), asin(cf80.init(-0x0p+0, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef3242p-152, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x5.a82793f7a75c5868p-152, -0xe.1a1b475d886e95p-4), asin(cf80.init(-0x8p-152, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(-0x5.a827999fcef2f6ep-152, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0x8p-152, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(-0x5.a827999fcef3242p-152, -0xe.1a1b30bcea13662p-4), asin(cf80.init(-0x8p-152, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0x2.d413cccfe779921p-1076, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x4p-1076, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x2.d413c9fbd3ae2c34p-1076, -0xe.1a1b475d886e95p-4), asin(cf80.init(-0x4p-1076, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(-0x2.d413cccfe7797b7p-1076, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0x4p-1076, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(-0x2.d413cccfe779921p-1076, -0xe.1a1b30bcea13662p-4), asin(cf80.init(-0x4p-1076, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f716p-16388, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0xf.8p-16388, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccaeafd442eb8p-16388, -0xe.1a1b475d886e95p-4), asin(cf80.init(-0xf.8p-16388, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f6be8p-16388, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0xf.8p-16388, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f716p-16388, -0xe.1a1b30bcea13662p-4), asin(cf80.init(-0xf.8p-16388, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2.d413cccfe779921p-76), asin(cf80.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), asin(cf80.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x8p-540), asin(cf80.init(0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xf.bf7df5c6a788f0cp-8196), asin(cf80.init(0x1p+0, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x5.a827999fcef31c98p-28), asin(cf80.init(0x1.0000000000001p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x5.a827999fcef31c98p-28), asin(cf80.init(0x1.0000000000001p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x5.a827999fcef31c98p-28), asin(cf80.init(0x1.0000000000001p+0, 0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x5.a827999fcef31c98p-28), asin(cf80.init(0x1.0000000000001p+0, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2p-32), asin(cf80.init(0x1.0000000000000002p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2p-32), asin(cf80.init(0x1.0000000000000002p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2p-32), asin(cf80.init(0x1.0000000000000002p+0, 0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2p-32), asin(cf80.init(0x1.0000000000000002p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x2.d413cccfe779921p-76), asin(cf80.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x0p+0), asin(cf80.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x8p-540), asin(cf80.init(-0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0xf.bf7df5c6a788f0cp-8196), asin(cf80.init(-0x1p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x5.a827999fcef31c98p-28), asin(cf80.init(-0x1.0000000000001p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x5.a827999fcef31c98p-28), asin(cf80.init(-0x1.0000000000001p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x5.a827999fcef31c98p-28), asin(cf80.init(-0x1.0000000000001p+0, 0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x5.a827999fcef31c98p-28), asin(cf80.init(-0x1.0000000000001p+0, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x2p-32), asin(cf80.init(-0x1.0000000000000002p+0, 0x8p-152)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x2p-32), asin(cf80.init(-0x1.0000000000000002p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x2p-32), asin(cf80.init(-0x1.0000000000000002p+0, 0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x2p-32), asin(cf80.init(-0x1.0000000000000002p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), asin(cf80.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2.d413cccfe779921p-76), asin(cf80.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x8p-540), asin(cf80.init(0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xf.bf7df5c6a788f0cp-8196), asin(cf80.init(0x1p+0, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x5.a827999fcef31c98p-28), asin(cf80.init(0x1.0000000000001p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x5.a827999fcef31c98p-28), asin(cf80.init(0x1.0000000000001p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x5.a827999fcef31c98p-28), asin(cf80.init(0x1.0000000000001p+0, -0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x5.a827999fcef31c98p-28), asin(cf80.init(0x1.0000000000001p+0, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2p-32), asin(cf80.init(0x1.0000000000000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2p-32), asin(cf80.init(0x1.0000000000000002p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2p-32), asin(cf80.init(0x1.0000000000000002p+0, -0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2p-32), asin(cf80.init(0x1.0000000000000002p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x0p+0), asin(cf80.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x2.d413cccfe779921p-76), asin(cf80.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x8p-540), asin(cf80.init(-0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0xf.bf7df5c6a788f0cp-8196), asin(cf80.init(-0x1p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x5.a827999fcef31c98p-28), asin(cf80.init(-0x1.0000000000001p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x5.a827999fcef31c98p-28), asin(cf80.init(-0x1.0000000000001p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x5.a827999fcef31c98p-28), asin(cf80.init(-0x1.0000000000001p+0, -0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x5.a827999fcef31c98p-28), asin(cf80.init(-0x1.0000000000001p+0, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x2p-32), asin(cf80.init(-0x1.0000000000000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x2p-32), asin(cf80.init(-0x1.0000000000000002p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x2p-32), asin(cf80.init(-0x1.0000000000000002p+0, -0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x2p-32), asin(cf80.init(-0x1.0000000000000002p+0, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b475d886e95p-4), asin(cf80.init(0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea13662p-4), asin(cf80.init(0x0p+0, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b475d886e95p-4), asin(cf80.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea13662p-4), asin(cf80.init(0x0p+0, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b475d886e95p-4), asin(cf80.init(-0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea13662p-4), asin(cf80.init(-0x0p+0, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b475d886e95p-4), asin(cf80.init(-0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea141b1p-4), asin(cf80.init(-0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea13662p-4), asin(cf80.init(-0x0p+0, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), asin(cf80.init(0x1p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x5.a827999fcef31c98p-28), asin(cf80.init(0x1.0000000000001p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2p-32), asin(cf80.init(0x1.0000000000000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x0p+0), asin(cf80.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x5.a827999fcef31c98p-28), asin(cf80.init(-0x1.0000000000001p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x2p-32), asin(cf80.init(-0x1.0000000000000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), asin(cf80.init(0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x5.a827999fcef31c98p-28), asin(cf80.init(0x1.0000000000001p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2p-32), asin(cf80.init(0x1.0000000000000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x0p+0), asin(cf80.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x1.ffffffaaaaaad112p-12), asin(cf80.init(-0x1.000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x5.a827999fcef31c98p-28), asin(cf80.init(-0x1.0000000000001p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x2p-32), asin(cf80.init(-0x1.0000000000000002p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.6a09e71cf8afedecp-24, 0xe.1a1b256c9ae8a2bp-4), asin(cf80.init(0x2p-24, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.6a09e71cf8afedecp-24, -0xe.1a1b256c9ae8a2bp-4), asin(cf80.init(0x2p-24, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0x1.6a09e71cf8afedecp-24, 0xe.1a1b256c9ae8a2bp-4), asin(cf80.init(-0x2p-24, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0x1.6a09e71cf8afedecp-24, -0xe.1a1b256c9ae8a2bp-4), asin(cf80.init(-0x2p-24, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.9202ecf11870c13p+0, 0x1.1c9e0143157395bcp-12), asin(cf80.init(0xf.fffffp-4, 0x2p-24)));
    try std.testing.expectEqual(cf80.init(-0x1.9202ecf11870c13p+0, 0x1.1c9e0143157395bcp-12), asin(cf80.init(-0xf.fffffp-4, 0x2p-24)));
    try std.testing.expectEqual(cf80.init(0x1.9202ecf11870c13p+0, -0x1.1c9e0143157395bcp-12), asin(cf80.init(0xf.fffffp-4, -0x2p-24)));
    try std.testing.expectEqual(cf80.init(-0x1.9202ecf11870c13p+0, -0x1.1c9e0143157395bcp-12), asin(cf80.init(-0xf.fffffp-4, -0x2p-24)));
    try std.testing.expectEqual(cf80.init(0xa.f5ccbf208755479p-132, 0xe.1a1b256c9add526p-4), asin(cf80.init(0xf.8p-132, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0xa.f5ccbf208755479p-132, -0xe.1a1b256c9add526p-4), asin(cf80.init(0xf.8p-132, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(-0xa.f5ccbf208755479p-132, 0xe.1a1b256c9add526p-4), asin(cf80.init(-0xf.8p-132, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(-0xa.f5ccbf208755479p-132, -0xe.1a1b256c9add526p-4), asin(cf80.init(-0xf.8p-132, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, 0xa.f5ccbc631426867p-120), asin(cf80.init(0xf.fffffp-4, 0xf.8p-132)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, 0xa.f5ccbc631426867p-120), asin(cf80.init(-0xf.fffffp-4, 0xf.8p-132)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, -0xa.f5ccbc631426867p-120), asin(cf80.init(0xf.fffffp-4, -0xf.8p-132)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, -0xa.f5ccbc631426867p-120), asin(cf80.init(-0xf.fffffp-4, -0xf.8p-132)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b256c9add526p-4), asin(cf80.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b256c9add526p-4), asin(cf80.init(0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b256c9add526p-4), asin(cf80.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b256c9add526p-4), asin(cf80.init(-0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, 0x0p+0), asin(cf80.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, 0x0p+0), asin(cf80.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, -0x0p+0), asin(cf80.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, -0x0p+0), asin(cf80.init(-0xf.fffffp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.c9f25c5bfeddf508p-24, 0x7.b30b2bb1458dd808p-4), asin(cf80.init(0x2p-24, 0x8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.c9f25c5bfeddf508p-24, -0x7.b30b2bb1458dd808p-4), asin(cf80.init(0x2p-24, -0x8p-4)));
    // try std.testing.expectEqual(cf80.init(-0x1.c9f25c5bfeddf508p-24, 0x7.b30b2bb1458dd808p-4), asin(cf80.init(-0x2p-24, 0x8p-4)));
    // try std.testing.expectEqual(cf80.init(-0x1.c9f25c5bfeddf508p-24, -0x7.b30b2bb1458dd808p-4), asin(cf80.init(-0x2p-24, -0x8p-4)));
    // try std.testing.expectEqual(cf80.init(0x8.60a91c16b99a2p-4, 0x2.4f34e8b2065f6e9cp-24), asin(cf80.init(0x8p-4, 0x2p-24)));
    // try std.testing.expectEqual(cf80.init(-0x8.60a91c16b99a2p-4, 0x2.4f34e8b2065f6e9cp-24), asin(cf80.init(-0x8p-4, 0x2p-24)));
    // try std.testing.expectEqual(cf80.init(0x8.60a91c16b99a2p-4, -0x2.4f34e8b2065f6e9cp-24), asin(cf80.init(0x8p-4, -0x2p-24)));
    // try std.testing.expectEqual(cf80.init(-0x8.60a91c16b99a2p-4, -0x2.4f34e8b2065f6e9cp-24), asin(cf80.init(-0x8p-4, -0x2p-24)));
    try std.testing.expectEqual(cf80.init(0xd.dd164bc8f73535ep-132, 0x7.b30b2bb14582653p-4), asin(cf80.init(0xf.8p-132, 0x8p-4)));
    try std.testing.expectEqual(cf80.init(0xd.dd164bc8f73535ep-132, -0x7.b30b2bb14582653p-4), asin(cf80.init(0xf.8p-132, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(-0xd.dd164bc8f73535ep-132, 0x7.b30b2bb14582653p-4), asin(cf80.init(-0xf.8p-132, 0x8p-4)));
    try std.testing.expectEqual(cf80.init(-0xd.dd164bc8f73535ep-132, -0x7.b30b2bb14582653p-4), asin(cf80.init(-0xf.8p-132, -0x8p-4)));
    // try std.testing.expectEqual(cf80.init(0x8.60a91c16b9b2c23p-4, 0x1.1e5da0b63b1836acp-128), asin(cf80.init(0x8p-4, 0xf.8p-132)));
    // try std.testing.expectEqual(cf80.init(-0x8.60a91c16b9b2c23p-4, 0x1.1e5da0b63b1836acp-128), asin(cf80.init(-0x8p-4, 0xf.8p-132)));
    // try std.testing.expectEqual(cf80.init(0x8.60a91c16b9b2c23p-4, -0x1.1e5da0b63b1836acp-128), asin(cf80.init(0x8p-4, -0xf.8p-132)));
    // try std.testing.expectEqual(cf80.init(-0x8.60a91c16b9b2c23p-4, -0x1.1e5da0b63b1836acp-128), asin(cf80.init(-0x8p-4, -0xf.8p-132)));
    try std.testing.expectEqual(cf80.init(0x1.fffffffffffd5556p-24, 0x2.000000000002aaacp-24), asin(cf80.init(0x2p-24, 0x2p-24)));
    try std.testing.expectEqual(cf80.init(0x1.fffffffffffd5556p-24, -0x2.000000000002aaacp-24), asin(cf80.init(0x2p-24, -0x2p-24)));
    try std.testing.expectEqual(cf80.init(-0x1.fffffffffffd5556p-24, 0x2.000000000002aaacp-24), asin(cf80.init(-0x2p-24, 0x2p-24)));
    try std.testing.expectEqual(cf80.init(-0x1.fffffffffffd5556p-24, -0x2.000000000002aaacp-24), asin(cf80.init(-0x2p-24, -0x2p-24)));
    try std.testing.expectEqual(cf80.init(0xf.7fffffffffe1p-132, 0x1.fffffffffffeaaaap-24), asin(cf80.init(0xf.8p-132, 0x2p-24)));
    try std.testing.expectEqual(cf80.init(0xf.7fffffffffe1p-132, -0x1.fffffffffffeaaaap-24), asin(cf80.init(0xf.8p-132, -0x2p-24)));
    try std.testing.expectEqual(cf80.init(-0xf.7fffffffffe1p-132, 0x1.fffffffffffeaaaap-24), asin(cf80.init(-0xf.8p-132, 0x2p-24)));
    try std.testing.expectEqual(cf80.init(-0xf.7fffffffffe1p-132, -0x1.fffffffffffeaaaap-24), asin(cf80.init(-0xf.8p-132, -0x2p-24)));
    try std.testing.expectEqual(cf80.init(0x2.0000000000015554p-24, 0xf.80000000001fp-132), asin(cf80.init(0x2p-24, 0xf.8p-132)));
    try std.testing.expectEqual(cf80.init(-0x2.0000000000015554p-24, 0xf.80000000001fp-132), asin(cf80.init(-0x2p-24, 0xf.8p-132)));
    try std.testing.expectEqual(cf80.init(0x2.0000000000015554p-24, -0xf.80000000001fp-132), asin(cf80.init(0x2p-24, -0xf.8p-132)));
    try std.testing.expectEqual(cf80.init(-0x2.0000000000015554p-24, -0xf.80000000001fp-132), asin(cf80.init(-0x2p-24, -0xf.8p-132)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x1.fffffffffffeaaaap-24), asin(cf80.init(0x0p+0, 0x2p-24)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x1.fffffffffffeaaaap-24), asin(cf80.init(0x0p+0, -0x2p-24)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0x1.fffffffffffeaaaap-24), asin(cf80.init(-0x0p+0, 0x2p-24)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0x1.fffffffffffeaaaap-24), asin(cf80.init(-0x0p+0, -0x2p-24)));
    try std.testing.expectEqual(cf80.init(0x2.0000000000015554p-24, 0x0p+0), asin(cf80.init(0x2p-24, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x2.0000000000015554p-24, 0x0p+0), asin(cf80.init(-0x2p-24, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x2.0000000000015554p-24, -0x0p+0), asin(cf80.init(0x2p-24, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x2.0000000000015554p-24, -0x0p+0), asin(cf80.init(-0x2p-24, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0xf.8p-132, 0xf.8p-132), asin(cf80.init(0xf.8p-132, 0xf.8p-132)));
    try std.testing.expectEqual(cf80.init(0xf.8p-132, -0xf.8p-132), asin(cf80.init(0xf.8p-132, -0xf.8p-132)));
    try std.testing.expectEqual(cf80.init(-0xf.8p-132, 0xf.8p-132), asin(cf80.init(-0xf.8p-132, 0xf.8p-132)));
    try std.testing.expectEqual(cf80.init(-0xf.8p-132, -0xf.8p-132), asin(cf80.init(-0xf.8p-132, -0xf.8p-132)));
    try std.testing.expectEqual(cf80.init(0xb.504f333f9de6484p-56, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x1p-52, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0xb.504f38e7c581522p-56, 0xe.1a1b256c9add526p-4), asin(cf80.init(0x1p-52, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0xb.504f333f9de6758p-56, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(0x1p-52, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf80.init(0xb.504f38e7c581522p-56, -0xe.1a1b256c9add526p-4), asin(cf80.init(0x1p-52, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0xb.504f333f9de6484p-56, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x1p-52, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0xb.504f333f9de6758p-56, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(0x1p-52, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf80.init(-0xb.504f333f9de6484p-56, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x1p-52, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0xb.504f38e7c581522p-56, 0xe.1a1b256c9add526p-4), asin(cf80.init(-0x1p-52, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0xb.504f333f9de6758p-56, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0x1p-52, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf80.init(-0xb.504f38e7c581522p-56, -0xe.1a1b256c9add526p-4), asin(cf80.init(-0x1p-52, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(-0xb.504f333f9de6484p-56, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x1p-52, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0xb.504f333f9de6758p-56, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0x1p-52, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, 0x4.0000000000000558p-28), asin(cf80.init(0x1p+0, 0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, 0xb.504f3613b1b4265p-44), asin(cf80.init(0xf.fffffp-4, 0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x1.921fb4f2da0c69c8p+0, 0x3.2504dde4b1a36bfcp-28), asin(cf80.init(0xf.ffffffffffff8p-4, 0x1p-52)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, 0xb.504f3613b1b4265p-44), asin(cf80.init(-0xf.fffffp-4, 0x1p-52)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, 0x4.0000000000000558p-28), asin(cf80.init(-0x1p+0, 0x1p-52)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb4f2da0c69c8p+0, 0x3.2504dde4b1a36bfcp-28), asin(cf80.init(-0xf.ffffffffffff8p-4, 0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, -0x4.0000000000000558p-28), asin(cf80.init(0x1p+0, -0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, -0xb.504f3613b1b4265p-44), asin(cf80.init(0xf.fffffp-4, -0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x1.921fb4f2da0c69c8p+0, -0x3.2504dde4b1a36bfcp-28), asin(cf80.init(0xf.ffffffffffff8p-4, -0x1p-52)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, -0xb.504f3613b1b4265p-44), asin(cf80.init(-0xf.fffffp-4, -0x1p-52)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, -0x4.0000000000000558p-28), asin(cf80.init(-0x1p+0, -0x1p-52)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb4f2da0c69c8p+0, -0x3.2504dde4b1a36bfcp-28), asin(cf80.init(-0xf.ffffffffffff8p-4, -0x1p-52)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef3242p-152, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x5.a8279c73e2c0a91p-152, 0xe.1a1b256c9add526p-4), asin(cf80.init(0x8p-152, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef33acp-152, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(0x8p-152, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b256c9add526p-4), asin(cf80.init(0x0p+0, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f716p-1028, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0xf.8p-1028, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0xa.f5ccbf208755479p-1028, 0xe.1a1b256c9add526p-4), asin(cf80.init(0xf.8p-1028, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f741ep-1028, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(0xf.8p-1028, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf80.init(0x5.a8279c73e2c0a91p-152, -0xe.1a1b256c9add526p-4), asin(cf80.init(0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef3242p-152, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef33acp-152, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(0x8p-152, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b256c9add526p-4), asin(cf80.init(0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf80.init(0xa.f5ccbf208755479p-1028, -0xe.1a1b256c9add526p-4), asin(cf80.init(0xf.8p-1028, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f716p-1028, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0xf.8p-1028, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f741ep-1028, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(0xf.8p-1028, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b256c9add526p-4), asin(cf80.init(-0x0p+0, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef3242p-152, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x5.a8279c73e2c0a91p-152, 0xe.1a1b256c9add526p-4), asin(cf80.init(-0x8p-152, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef33acp-152, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f716p-1028, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0xf.8p-1028, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0xa.f5ccbf208755479p-1028, 0xe.1a1b256c9add526p-4), asin(cf80.init(-0xf.8p-1028, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f741ep-1028, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0xf.8p-1028, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b256c9add526p-4), asin(cf80.init(-0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf80.init(-0x5.a8279c73e2c0a91p-152, -0xe.1a1b256c9add526p-4), asin(cf80.init(-0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef3242p-152, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef33acp-152, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0x8p-152, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf80.init(-0xa.f5ccbf208755479p-1028, -0xe.1a1b256c9add526p-4), asin(cf80.init(-0xf.8p-1028, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f716p-1028, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0xf.8p-1028, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f741ep-1028, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0xf.8p-1028, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2.d413cccfe779921p-76), asin(cf80.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), asin(cf80.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xf.bf7df5c6a788f0cp-516), asin(cf80.init(0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, 0x5.a8279b09d8da13d8p-140), asin(cf80.init(0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, 0x0p+0), asin(cf80.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, 0xa.f5ccbc631426867p-1016), asin(cf80.init(0xf.fffffp-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, 0x2.00000000000004p-124), asin(cf80.init(0xf.ffffffffffff8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, 0x0p+0), asin(cf80.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, 0x3.e0000000000007cp-1000), asin(cf80.init(0xf.ffffffffffff8p-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, 0x5.a8279b09d8da13d8p-140), asin(cf80.init(-0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, 0x0p+0), asin(cf80.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, 0xa.f5ccbc631426867p-1016), asin(cf80.init(-0xf.fffffp-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x2.d413cccfe779921p-76), asin(cf80.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x0p+0), asin(cf80.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0xf.bf7df5c6a788f0cp-516), asin(cf80.init(-0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, 0x2.00000000000004p-124), asin(cf80.init(-0xf.ffffffffffff8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, 0x0p+0), asin(cf80.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, 0x3.e0000000000007cp-1000), asin(cf80.init(-0xf.ffffffffffff8p-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), asin(cf80.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2.d413cccfe779921p-76), asin(cf80.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xf.bf7df5c6a788f0cp-516), asin(cf80.init(0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, -0x0p+0), asin(cf80.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, -0x5.a8279b09d8da13d8p-140), asin(cf80.init(0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, -0xa.f5ccbc631426867p-1016), asin(cf80.init(0xf.fffffp-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, -0x0p+0), asin(cf80.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, -0x2.00000000000004p-124), asin(cf80.init(0xf.ffffffffffff8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, -0x3.e0000000000007cp-1000), asin(cf80.init(0xf.ffffffffffff8p-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, -0x0p+0), asin(cf80.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, -0x5.a8279b09d8da13d8p-140), asin(cf80.init(-0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, -0xa.f5ccbc631426867p-1016), asin(cf80.init(-0xf.fffffp-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x0p+0), asin(cf80.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x2.d413cccfe779921p-76), asin(cf80.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0xf.bf7df5c6a788f0cp-516), asin(cf80.init(-0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, -0x0p+0), asin(cf80.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, -0x2.00000000000004p-124), asin(cf80.init(-0xf.ffffffffffff8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, -0x3.e0000000000007cp-1000), asin(cf80.init(-0xf.ffffffffffff8p-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b256c9add526p-4), asin(cf80.init(0x0p+0, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b256c9add526p-4), asin(cf80.init(0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b256c9add526p-4), asin(cf80.init(-0x0p+0, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b256c9add526p-4), asin(cf80.init(-0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), asin(cf80.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, 0x0p+0), asin(cf80.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, 0x0p+0), asin(cf80.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, 0x0p+0), asin(cf80.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x0p+0), asin(cf80.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, 0x0p+0), asin(cf80.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), asin(cf80.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, -0x0p+0), asin(cf80.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, -0x0p+0), asin(cf80.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, -0x0p+0), asin(cf80.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x0p+0), asin(cf80.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, -0x0p+0), asin(cf80.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0xe.4f92e2dff6ec9abp-56, 0x7.b30b2bb14582653p-4), asin(cf80.init(0x1p-52, 0x8p-4)));
    // try std.testing.expectEqual(cf80.init(0xe.4f92e2dff6ec9abp-56, -0x7.b30b2bb14582653p-4), asin(cf80.init(0x1p-52, -0x8p-4)));
    // try std.testing.expectEqual(cf80.init(-0xe.4f92e2dff6ec9abp-56, 0x7.b30b2bb14582653p-4), asin(cf80.init(-0x1p-52, 0x8p-4)));
    // try std.testing.expectEqual(cf80.init(-0xe.4f92e2dff6ec9abp-56, -0x7.b30b2bb14582653p-4), asin(cf80.init(-0x1p-52, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x8.60a91c16b9b2c23p-4, 0x1.279a74590331c4d2p-52), asin(cf80.init(0x8p-4, 0x1p-52)));
    try std.testing.expectEqual(cf80.init(-0x8.60a91c16b9b2c23p-4, 0x1.279a74590331c4d2p-52), asin(cf80.init(-0x8p-4, 0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x8.60a91c16b9b2c23p-4, -0x1.279a74590331c4d2p-52), asin(cf80.init(0x8p-4, -0x1p-52)));
    try std.testing.expectEqual(cf80.init(-0x8.60a91c16b9b2c23p-4, -0x1.279a74590331c4d2p-52), asin(cf80.init(-0x8p-4, -0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x7.27c9716ffb764d58p-152, 0x7.b30b2bb14582653p-4), asin(cf80.init(0x8p-152, 0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x7.b30b2bb14582653p-4), asin(cf80.init(0x0p+0, 0x8p-4)));
    try std.testing.expectEqual(cf80.init(0xd.dd164bc8f73535ep-1028, 0x7.b30b2bb14582653p-4), asin(cf80.init(0xf.8p-1028, 0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x7.27c9716ffb764d58p-152, -0x7.b30b2bb14582653p-4), asin(cf80.init(0x8p-152, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x7.b30b2bb14582653p-4), asin(cf80.init(0x0p+0, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(0xd.dd164bc8f73535ep-1028, -0x7.b30b2bb14582653p-4), asin(cf80.init(0xf.8p-1028, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0x7.b30b2bb14582653p-4), asin(cf80.init(-0x0p+0, 0x8p-4)));
    try std.testing.expectEqual(cf80.init(-0x7.27c9716ffb764d58p-152, 0x7.b30b2bb14582653p-4), asin(cf80.init(-0x8p-152, 0x8p-4)));
    try std.testing.expectEqual(cf80.init(-0xd.dd164bc8f73535ep-1028, 0x7.b30b2bb14582653p-4), asin(cf80.init(-0xf.8p-1028, 0x8p-4)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0x7.b30b2bb14582653p-4), asin(cf80.init(-0x0p+0, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(-0x7.27c9716ffb764d58p-152, -0x7.b30b2bb14582653p-4), asin(cf80.init(-0x8p-152, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(-0xd.dd164bc8f73535ep-1028, -0x7.b30b2bb14582653p-4), asin(cf80.init(-0xf.8p-1028, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x8.60a91c16b9b2c23p-4, 0x9.3cd3a2c8198e269p-152), asin(cf80.init(0x8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x8.60a91c16b9b2c23p-4, 0x0p+0), asin(cf80.init(0x8p-4, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x8.60a91c16b9b2c23p-4, 0x1.1e5da0b63b1836acp-1024), asin(cf80.init(0x8p-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(-0x8.60a91c16b9b2c23p-4, 0x9.3cd3a2c8198e269p-152), asin(cf80.init(-0x8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x8.60a91c16b9b2c23p-4, 0x0p+0), asin(cf80.init(-0x8p-4, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(-0x8.60a91c16b9b2c23p-4, 0x1.1e5da0b63b1836acp-1024), asin(cf80.init(-0x8p-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x8.60a91c16b9b2c23p-4, -0x0p+0), asin(cf80.init(0x8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x8.60a91c16b9b2c23p-4, -0x9.3cd3a2c8198e269p-152), asin(cf80.init(0x8p-4, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x8.60a91c16b9b2c23p-4, -0x1.1e5da0b63b1836acp-1024), asin(cf80.init(0x8p-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(-0x8.60a91c16b9b2c23p-4, -0x0p+0), asin(cf80.init(-0x8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x8.60a91c16b9b2c23p-4, -0x9.3cd3a2c8198e269p-152), asin(cf80.init(-0x8p-4, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(-0x8.60a91c16b9b2c23p-4, -0x1.1e5da0b63b1836acp-1024), asin(cf80.init(-0x8p-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1p-52, 0x1p-52), asin(cf80.init(0x1p-52, 0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x1p-52, -0x1p-52), asin(cf80.init(0x1p-52, -0x1p-52)));
    try std.testing.expectEqual(cf80.init(-0x1p-52, 0x1p-52), asin(cf80.init(-0x1p-52, 0x1p-52)));
    try std.testing.expectEqual(cf80.init(-0x1p-52, -0x1p-52), asin(cf80.init(-0x1p-52, -0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x8p-152, 0x1p-52), asin(cf80.init(0x8p-152, 0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x1p-52), asin(cf80.init(0x0p+0, 0x1p-52)));
    try std.testing.expectEqual(cf80.init(0xf.8p-1028, 0x1p-52), asin(cf80.init(0xf.8p-1028, 0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x8p-152, -0x1p-52), asin(cf80.init(0x8p-152, -0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x1p-52), asin(cf80.init(0x0p+0, -0x1p-52)));
    try std.testing.expectEqual(cf80.init(0xf.8p-1028, -0x1p-52), asin(cf80.init(0xf.8p-1028, -0x1p-52)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0x1p-52), asin(cf80.init(-0x0p+0, 0x1p-52)));
    try std.testing.expectEqual(cf80.init(-0x8p-152, 0x1p-52), asin(cf80.init(-0x8p-152, 0x1p-52)));
    try std.testing.expectEqual(cf80.init(-0xf.8p-1028, 0x1p-52), asin(cf80.init(-0xf.8p-1028, 0x1p-52)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0x1p-52), asin(cf80.init(-0x0p+0, -0x1p-52)));
    try std.testing.expectEqual(cf80.init(-0x8p-152, -0x1p-52), asin(cf80.init(-0x8p-152, -0x1p-52)));
    try std.testing.expectEqual(cf80.init(-0xf.8p-1028, -0x1p-52), asin(cf80.init(-0xf.8p-1028, -0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x1p-52, 0x8p-152), asin(cf80.init(0x1p-52, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1p-52, 0x0p+0), asin(cf80.init(0x1p-52, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1p-52, 0xf.8p-1028), asin(cf80.init(0x1p-52, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(-0x1p-52, 0x8p-152), asin(cf80.init(-0x1p-52, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1p-52, 0x0p+0), asin(cf80.init(-0x1p-52, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1p-52, 0xf.8p-1028), asin(cf80.init(-0x1p-52, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1p-52, -0x0p+0), asin(cf80.init(0x1p-52, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1p-52, -0x8p-152), asin(cf80.init(0x1p-52, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1p-52, -0xf.8p-1028), asin(cf80.init(0x1p-52, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(-0x1p-52, -0x0p+0), asin(cf80.init(-0x1p-52, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1p-52, -0x8p-152), asin(cf80.init(-0x1p-52, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1p-52, -0xf.8p-1028), asin(cf80.init(-0x1p-52, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x1p-52), asin(cf80.init(0x0p+0, 0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x1p-52), asin(cf80.init(0x0p+0, -0x1p-52)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0x1p-52), asin(cf80.init(-0x0p+0, 0x1p-52)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0x1p-52), asin(cf80.init(-0x0p+0, -0x1p-52)));
    try std.testing.expectEqual(cf80.init(0x1p-52, 0x0p+0), asin(cf80.init(0x1p-52, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1p-52, 0x0p+0), asin(cf80.init(-0x1p-52, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1p-52, -0x0p+0), asin(cf80.init(0x1p-52, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1p-52, -0x0p+0), asin(cf80.init(-0x1p-52, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x8p-152, 0x8p-152), asin(cf80.init(0x8p-152, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x8p-152, 0x0p+0), asin(cf80.init(0x8p-152, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x8p-152, 0xf.8p-1028), asin(cf80.init(0x8p-152, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x8p-152), asin(cf80.init(0x0p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x0p+0), asin(cf80.init(0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xf.8p-1028), asin(cf80.init(0x0p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0xf.8p-1028, 0x8p-152), asin(cf80.init(0xf.8p-1028, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0xf.8p-1028, 0x0p+0), asin(cf80.init(0xf.8p-1028, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0xf.8p-1028, 0xf.8p-1028), asin(cf80.init(0xf.8p-1028, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x8p-152, -0x0p+0), asin(cf80.init(0x8p-152, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x8p-152, -0x8p-152), asin(cf80.init(0x8p-152, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x8p-152, -0xf.8p-1028), asin(cf80.init(0x8p-152, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x0p+0), asin(cf80.init(0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x8p-152), asin(cf80.init(0x0p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xf.8p-1028), asin(cf80.init(0x0p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0xf.8p-1028, -0x0p+0), asin(cf80.init(0xf.8p-1028, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0xf.8p-1028, -0x8p-152), asin(cf80.init(0xf.8p-1028, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0xf.8p-1028, -0xf.8p-1028), asin(cf80.init(0xf.8p-1028, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0x8p-152), asin(cf80.init(-0x0p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0x0p+0), asin(cf80.init(-0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xf.8p-1028), asin(cf80.init(-0x0p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(-0x8p-152, 0x8p-152), asin(cf80.init(-0x8p-152, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x8p-152, 0x0p+0), asin(cf80.init(-0x8p-152, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x8p-152, 0xf.8p-1028), asin(cf80.init(-0x8p-152, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(-0xf.8p-1028, 0x8p-152), asin(cf80.init(-0xf.8p-1028, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0xf.8p-1028, 0x0p+0), asin(cf80.init(-0xf.8p-1028, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0xf.8p-1028, 0xf.8p-1028), asin(cf80.init(-0xf.8p-1028, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0x0p+0), asin(cf80.init(-0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0x8p-152), asin(cf80.init(-0x0p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xf.8p-1028), asin(cf80.init(-0x0p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(-0x8p-152, -0x0p+0), asin(cf80.init(-0x8p-152, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x8p-152, -0x8p-152), asin(cf80.init(-0x8p-152, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x8p-152, -0xf.8p-1028), asin(cf80.init(-0x8p-152, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(-0xf.8p-1028, -0x0p+0), asin(cf80.init(-0xf.8p-1028, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0xf.8p-1028, -0x8p-152), asin(cf80.init(-0xf.8p-1028, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0xf.8p-1028, -0xf.8p-1028), asin(cf80.init(-0xf.8p-1028, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc908p-64, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x2p-64, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e71cf8b02a44p-64, 0xe.1a1b256c9add526p-4), asin(cf80.init(0x2p-64, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bccebp-64, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(0x2p-64, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc90ap-64, 0xe.1a1b30bcea1366p-4), asin(cf80.init(0x2p-64, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e71cf8b02a44p-64, -0xe.1a1b256c9add526p-4), asin(cf80.init(0x2p-64, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc908p-64, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x2p-64, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bccebp-64, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(0x2p-64, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.6a09e667f3bcc90ap-64, -0xe.1a1b30bcea1366p-4), asin(cf80.init(0x2p-64, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(-0x1.6a09e667f3bcc908p-64, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x2p-64, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.6a09e71cf8b02a44p-64, 0xe.1a1b256c9add526p-4), asin(cf80.init(-0x2p-64, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0x1.6a09e667f3bccebp-64, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0x2p-64, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(-0x1.6a09e667f3bcc90ap-64, 0xe.1a1b30bcea1366p-4), asin(cf80.init(-0x2p-64, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(-0x1.6a09e71cf8b02a44p-64, -0xe.1a1b256c9add526p-4), asin(cf80.init(-0x2p-64, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(-0x1.6a09e667f3bcc908p-64, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x2p-64, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.6a09e667f3bccebp-64, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0x2p-64, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(-0x1.6a09e667f3bcc90ap-64, -0xe.1a1b30bcea1366p-4), asin(cf80.init(-0x2p-64, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb542d8c79e02p+0, 0x1.6a09e667f3bcc908p-32), asin(cf80.init(0x1p+0, 0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, 0x1.6a09e6c2763684f6p-52), asin(cf80.init(0xf.fffffp-4, 0x2p-64)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb50442d1046ap+0, 0x7.fffff00000700ff8p-40), asin(cf80.init(0xf.ffffffffffff8p-4, 0x2p-64)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb542764c51bap+0, 0x1.1c9e00de9cc05378p-32), asin(cf80.init(0xf.fffffffffffffffp-4, 0x2p-64)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, 0x1.6a09e6c2763684f6p-52), asin(cf80.init(-0xf.fffffp-4, 0x2p-64)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb542d8c79e02p+0, 0x1.6a09e667f3bcc908p-32), asin(cf80.init(-0x1p+0, 0x2p-64)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1046ap+0, 0x7.fffff00000700ff8p-40), asin(cf80.init(-0xf.ffffffffffff8p-4, 0x2p-64)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb542764c51bap+0, 0x1.1c9e00de9cc05378p-32), asin(cf80.init(-0xf.fffffffffffffffp-4, 0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x1.921fb542d8c79e02p+0, -0x1.6a09e667f3bcc908p-32), asin(cf80.init(0x1p+0, -0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, -0x1.6a09e6c2763684f6p-52), asin(cf80.init(0xf.fffffp-4, -0x2p-64)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb50442d1046ap+0, -0x7.fffff00000700ff8p-40), asin(cf80.init(0xf.ffffffffffff8p-4, -0x2p-64)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb542764c51bap+0, -0x1.1c9e00de9cc05378p-32), asin(cf80.init(0xf.fffffffffffffffp-4, -0x2p-64)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, -0x1.6a09e6c2763684f6p-52), asin(cf80.init(-0xf.fffffp-4, -0x2p-64)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb542d8c79e02p+0, -0x1.6a09e667f3bcc908p-32), asin(cf80.init(-0x1p+0, -0x2p-64)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1046ap+0, -0x7.fffff00000700ff8p-40), asin(cf80.init(-0xf.ffffffffffff8p-4, -0x2p-64)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb542764c51bap+0, -0x1.1c9e00de9cc05378p-32), asin(cf80.init(-0xf.fffffffffffffffp-4, -0x2p-64)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef3242p-152, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x5.a8279c73e2c0a91p-152, 0xe.1a1b256c9add526p-4), asin(cf80.init(0x8p-152, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef33acp-152, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef32428p-152, 0xe.1a1b30bcea1366p-4), asin(cf80.init(0x8p-152, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b256c9add526p-4), asin(cf80.init(0x0p+0, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea1366p-4), asin(cf80.init(0x0p+0, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-1076, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x2.d413ce39f1605488p-1076, 0xe.1a1b256c9add526p-4), asin(cf80.init(0x4p-1076, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x2.d413cccfe7799d6p-1076, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(0x4p-1076, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x2.d413cccfe7799214p-1076, 0xe.1a1b30bcea1366p-4), asin(cf80.init(0x4p-1076, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f716p-16388, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0xf.8p-16388, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccbf208755478p-16388, 0xe.1a1b256c9add526p-4), asin(cf80.init(0xf.8p-16388, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f742p-16388, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(0xf.8p-16388, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f716p-16388, 0xe.1a1b30bcea1366p-4), asin(cf80.init(0xf.8p-16388, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x5.a8279c73e2c0a91p-152, -0xe.1a1b256c9add526p-4), asin(cf80.init(0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef3242p-152, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef33acp-152, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(0x8p-152, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef32428p-152, -0xe.1a1b30bcea1366p-4), asin(cf80.init(0x8p-152, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b256c9add526p-4), asin(cf80.init(0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea1366p-4), asin(cf80.init(0x0p+0, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x2.d413ce39f1605488p-1076, -0xe.1a1b256c9add526p-4), asin(cf80.init(0x4p-1076, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-1076, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x4p-1076, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x2.d413cccfe7799d6p-1076, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(0x4p-1076, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x2.d413cccfe7799214p-1076, -0xe.1a1b30bcea1366p-4), asin(cf80.init(0x4p-1076, -0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccbf208755478p-16388, -0xe.1a1b256c9add526p-4), asin(cf80.init(0xf.8p-16388, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f716p-16388, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0xf.8p-16388, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f742p-16388, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(0xf.8p-16388, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f716p-16388, -0xe.1a1b30bcea1366p-4), asin(cf80.init(0xf.8p-16388, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b256c9add526p-4), asin(cf80.init(-0x0p+0, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea1366p-4), asin(cf80.init(-0x0p+0, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef3242p-152, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x5.a8279c73e2c0a91p-152, 0xe.1a1b256c9add526p-4), asin(cf80.init(-0x8p-152, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef33acp-152, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef32428p-152, 0xe.1a1b30bcea1366p-4), asin(cf80.init(-0x8p-152, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0x2.d413cccfe779921p-1076, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x2.d413ce39f1605488p-1076, 0xe.1a1b256c9add526p-4), asin(cf80.init(-0x4p-1076, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0x2.d413cccfe7799d6p-1076, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0x4p-1076, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(-0x2.d413cccfe7799214p-1076, 0xe.1a1b30bcea1366p-4), asin(cf80.init(-0x4p-1076, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f716p-16388, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0xf.8p-16388, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccbf208755478p-16388, 0xe.1a1b256c9add526p-4), asin(cf80.init(-0xf.8p-16388, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f742p-16388, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0xf.8p-16388, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f716p-16388, 0xe.1a1b30bcea1366p-4), asin(cf80.init(-0xf.8p-16388, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b256c9add526p-4), asin(cf80.init(-0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea1366p-4), asin(cf80.init(-0x0p+0, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(-0x5.a8279c73e2c0a91p-152, -0xe.1a1b256c9add526p-4), asin(cf80.init(-0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef3242p-152, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef33acp-152, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0x8p-152, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef32428p-152, -0xe.1a1b30bcea1366p-4), asin(cf80.init(-0x8p-152, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(-0x2.d413ce39f1605488p-1076, -0xe.1a1b256c9add526p-4), asin(cf80.init(-0x4p-1076, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0x2.d413cccfe779921p-1076, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x4p-1076, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x2.d413cccfe7799d6p-1076, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0x4p-1076, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(-0x2.d413cccfe7799214p-1076, -0xe.1a1b30bcea1366p-4), asin(cf80.init(-0x4p-1076, -0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccbf208755478p-16388, -0xe.1a1b256c9add526p-4), asin(cf80.init(-0xf.8p-16388, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f716p-16388, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0xf.8p-16388, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f742p-16388, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0xf.8p-16388, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f716p-16388, -0xe.1a1b30bcea1366p-4), asin(cf80.init(-0xf.8p-16388, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2.d413cccfe779921p-76), asin(cf80.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), asin(cf80.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x8p-540), asin(cf80.init(0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xf.bf7df5c6a788f0cp-8196), asin(cf80.init(0x1p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, 0x5.a8279b09d8da13d8p-140), asin(cf80.init(0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, 0x0p+0), asin(cf80.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, 0x2.d413cd84ec6d09ecp-1064), asin(cf80.init(0xf.fffffp-4, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, 0xa.f5ccbc631426867p-16376), asin(cf80.init(0xf.fffffp-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, 0x2.00000000000004p-124), asin(cf80.init(0xf.ffffffffffff8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, 0x0p+0), asin(cf80.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, 0x1.00000000000002p-1048), asin(cf80.init(0xf.ffffffffffff8p-4, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, 0x3.e0000000000007cp-16360), asin(cf80.init(0xf.ffffffffffff8p-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb542d8c79e02p+0, 0x5.a827999fcef32428p-120), asin(cf80.init(0xf.fffffffffffffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb542d8c79e02p+0, 0x0p+0), asin(cf80.init(0xf.fffffffffffffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb542d8c79e02p+0, 0x2.d413cccfe7799214p-1044), asin(cf80.init(0xf.fffffffffffffffp-4, 0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb542d8c79e02p+0, 0xa.f5ccb9a5a0f716p-16356), asin(cf80.init(0xf.fffffffffffffffp-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, 0x5.a8279b09d8da13d8p-140), asin(cf80.init(-0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, 0x0p+0), asin(cf80.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, 0x2.d413cd84ec6d09ecp-1064), asin(cf80.init(-0xf.fffffp-4, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, 0xa.f5ccbc631426867p-16376), asin(cf80.init(-0xf.fffffp-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x2.d413cccfe779921p-76), asin(cf80.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x0p+0), asin(cf80.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x8p-540), asin(cf80.init(-0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0xf.bf7df5c6a788f0cp-8196), asin(cf80.init(-0x1p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, 0x2.00000000000004p-124), asin(cf80.init(-0xf.ffffffffffff8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, 0x0p+0), asin(cf80.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, 0x1.00000000000002p-1048), asin(cf80.init(-0xf.ffffffffffff8p-4, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, 0x3.e0000000000007cp-16360), asin(cf80.init(-0xf.ffffffffffff8p-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb542d8c79e02p+0, 0x5.a827999fcef32428p-120), asin(cf80.init(-0xf.fffffffffffffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb542d8c79e02p+0, 0x0p+0), asin(cf80.init(-0xf.fffffffffffffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb542d8c79e02p+0, 0x2.d413cccfe7799214p-1044), asin(cf80.init(-0xf.fffffffffffffffp-4, 0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb542d8c79e02p+0, 0xa.f5ccb9a5a0f716p-16356), asin(cf80.init(-0xf.fffffffffffffffp-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), asin(cf80.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2.d413cccfe779921p-76), asin(cf80.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x8p-540), asin(cf80.init(0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xf.bf7df5c6a788f0cp-8196), asin(cf80.init(0x1p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, -0x0p+0), asin(cf80.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, -0x5.a8279b09d8da13d8p-140), asin(cf80.init(0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, -0x2.d413cd84ec6d09ecp-1064), asin(cf80.init(0xf.fffffp-4, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, -0xa.f5ccbc631426867p-16376), asin(cf80.init(0xf.fffffp-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, -0x0p+0), asin(cf80.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, -0x2.00000000000004p-124), asin(cf80.init(0xf.ffffffffffff8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, -0x1.00000000000002p-1048), asin(cf80.init(0xf.ffffffffffff8p-4, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, -0x3.e0000000000007cp-16360), asin(cf80.init(0xf.ffffffffffff8p-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb542d8c79e02p+0, -0x0p+0), asin(cf80.init(0xf.fffffffffffffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb542d8c79e02p+0, -0x5.a827999fcef32428p-120), asin(cf80.init(0xf.fffffffffffffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb542d8c79e02p+0, -0x2.d413cccfe7799214p-1044), asin(cf80.init(0xf.fffffffffffffffp-4, -0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb542d8c79e02p+0, -0xa.f5ccb9a5a0f716p-16356), asin(cf80.init(0xf.fffffffffffffffp-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, -0x0p+0), asin(cf80.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, -0x5.a8279b09d8da13d8p-140), asin(cf80.init(-0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, -0x2.d413cd84ec6d09ecp-1064), asin(cf80.init(-0xf.fffffp-4, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, -0xa.f5ccbc631426867p-16376), asin(cf80.init(-0xf.fffffp-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x0p+0), asin(cf80.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x2.d413cccfe779921p-76), asin(cf80.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x8p-540), asin(cf80.init(-0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0xf.bf7df5c6a788f0cp-8196), asin(cf80.init(-0x1p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, -0x0p+0), asin(cf80.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, -0x2.00000000000004p-124), asin(cf80.init(-0xf.ffffffffffff8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, -0x1.00000000000002p-1048), asin(cf80.init(-0xf.ffffffffffff8p-4, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, -0x3.e0000000000007cp-16360), asin(cf80.init(-0xf.ffffffffffff8p-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb542d8c79e02p+0, -0x0p+0), asin(cf80.init(-0xf.fffffffffffffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb542d8c79e02p+0, -0x5.a827999fcef32428p-120), asin(cf80.init(-0xf.fffffffffffffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb542d8c79e02p+0, -0x2.d413cccfe7799214p-1044), asin(cf80.init(-0xf.fffffffffffffffp-4, -0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb542d8c79e02p+0, -0xa.f5ccb9a5a0f716p-16356), asin(cf80.init(-0xf.fffffffffffffffp-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b256c9add526p-4), asin(cf80.init(0x0p+0, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea1366p-4), asin(cf80.init(0x0p+0, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b256c9add526p-4), asin(cf80.init(0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea1366p-4), asin(cf80.init(0x0p+0, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b256c9add526p-4), asin(cf80.init(-0x0p+0, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea1366p-4), asin(cf80.init(-0x0p+0, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b256c9add526p-4), asin(cf80.init(-0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea1366p-4), asin(cf80.init(-0x0p+0, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), asin(cf80.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, 0x0p+0), asin(cf80.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, 0x0p+0), asin(cf80.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb542d8c79e02p+0, 0x0p+0), asin(cf80.init(0xf.fffffffffffffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, 0x0p+0), asin(cf80.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x0p+0), asin(cf80.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, 0x0p+0), asin(cf80.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb542d8c79e02p+0, 0x0p+0), asin(cf80.init(-0xf.fffffffffffffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), asin(cf80.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, -0x0p+0), asin(cf80.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, -0x0p+0), asin(cf80.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb542d8c79e02p+0, -0x0p+0), asin(cf80.init(0xf.fffffffffffffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, -0x0p+0), asin(cf80.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x0p+0), asin(cf80.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, -0x0p+0), asin(cf80.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb542d8c79e02p+0, -0x0p+0), asin(cf80.init(-0xf.fffffffffffffffp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.c9f25c5bfedd9356p-64, 0x7.b30b2bb14582653p-4), asin(cf80.init(0x2p-64, 0x8p-4)));
    // try std.testing.expectEqual(cf80.init(0x1.c9f25c5bfedd9356p-64, -0x7.b30b2bb14582653p-4), asin(cf80.init(0x2p-64, -0x8p-4)));
    // try std.testing.expectEqual(cf80.init(-0x1.c9f25c5bfedd9356p-64, 0x7.b30b2bb14582653p-4), asin(cf80.init(-0x2p-64, 0x8p-4)));
    // try std.testing.expectEqual(cf80.init(-0x1.c9f25c5bfedd9356p-64, -0x7.b30b2bb14582653p-4), asin(cf80.init(-0x2p-64, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x8.60a91c16b9b2c23p-4, 0x2.4f34e8b2066389a4p-64), asin(cf80.init(0x8p-4, 0x2p-64)));
    try std.testing.expectEqual(cf80.init(-0x8.60a91c16b9b2c23p-4, 0x2.4f34e8b2066389a4p-64), asin(cf80.init(-0x8p-4, 0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x8.60a91c16b9b2c23p-4, -0x2.4f34e8b2066389a4p-64), asin(cf80.init(0x8p-4, -0x2p-64)));
    try std.testing.expectEqual(cf80.init(-0x8.60a91c16b9b2c23p-4, -0x2.4f34e8b2066389a4p-64), asin(cf80.init(-0x8p-4, -0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x7.27c9716ffb764d58p-152, 0x7.b30b2bb14582653p-4), asin(cf80.init(0x8p-152, 0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x7.b30b2bb14582653p-4), asin(cf80.init(0x0p+0, 0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x3.93e4b8b7fdbb26acp-1076, 0x7.b30b2bb14582653p-4), asin(cf80.init(0x4p-1076, 0x8p-4)));
    // try std.testing.expectEqual(cf80.init(0xd.dd164bc8f73536p-16388, 0x7.b30b2bb14582653p-4), asin(cf80.init(0xf.8p-16388, 0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x7.27c9716ffb764d58p-152, -0x7.b30b2bb14582653p-4), asin(cf80.init(0x8p-152, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x7.b30b2bb14582653p-4), asin(cf80.init(0x0p+0, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x3.93e4b8b7fdbb26acp-1076, -0x7.b30b2bb14582653p-4), asin(cf80.init(0x4p-1076, -0x8p-4)));
    // try std.testing.expectEqual(cf80.init(0xd.dd164bc8f73536p-16388, -0x7.b30b2bb14582653p-4), asin(cf80.init(0xf.8p-16388, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0x7.b30b2bb14582653p-4), asin(cf80.init(-0x0p+0, 0x8p-4)));
    try std.testing.expectEqual(cf80.init(-0x7.27c9716ffb764d58p-152, 0x7.b30b2bb14582653p-4), asin(cf80.init(-0x8p-152, 0x8p-4)));
    try std.testing.expectEqual(cf80.init(-0x3.93e4b8b7fdbb26acp-1076, 0x7.b30b2bb14582653p-4), asin(cf80.init(-0x4p-1076, 0x8p-4)));
    // try std.testing.expectEqual(cf80.init(-0xd.dd164bc8f73536p-16388, 0x7.b30b2bb14582653p-4), asin(cf80.init(-0xf.8p-16388, 0x8p-4)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0x7.b30b2bb14582653p-4), asin(cf80.init(-0x0p+0, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(-0x7.27c9716ffb764d58p-152, -0x7.b30b2bb14582653p-4), asin(cf80.init(-0x8p-152, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(-0x3.93e4b8b7fdbb26acp-1076, -0x7.b30b2bb14582653p-4), asin(cf80.init(-0x4p-1076, -0x8p-4)));
    // try std.testing.expectEqual(cf80.init(-0xd.dd164bc8f73536p-16388, -0x7.b30b2bb14582653p-4), asin(cf80.init(-0xf.8p-16388, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x8.60a91c16b9b2c23p-4, 0x9.3cd3a2c8198e269p-152), asin(cf80.init(0x8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x8.60a91c16b9b2c23p-4, 0x0p+0), asin(cf80.init(0x8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x8.60a91c16b9b2c23p-4, 0x4.9e69d1640cc71348p-1076), asin(cf80.init(0x8p-4, 0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x8.60a91c16b9b2c23p-4, 0x1.1e5da0b63b1836a8p-16384), asin(cf80.init(0x8p-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(-0x8.60a91c16b9b2c23p-4, 0x9.3cd3a2c8198e269p-152), asin(cf80.init(-0x8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x8.60a91c16b9b2c23p-4, 0x0p+0), asin(cf80.init(-0x8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x8.60a91c16b9b2c23p-4, 0x4.9e69d1640cc71348p-1076), asin(cf80.init(-0x8p-4, 0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(-0x8.60a91c16b9b2c23p-4, 0x1.1e5da0b63b1836a8p-16384), asin(cf80.init(-0x8p-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x8.60a91c16b9b2c23p-4, -0x0p+0), asin(cf80.init(0x8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x8.60a91c16b9b2c23p-4, -0x9.3cd3a2c8198e269p-152), asin(cf80.init(0x8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x8.60a91c16b9b2c23p-4, -0x4.9e69d1640cc71348p-1076), asin(cf80.init(0x8p-4, -0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x8.60a91c16b9b2c23p-4, -0x1.1e5da0b63b1836a8p-16384), asin(cf80.init(0x8p-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(-0x8.60a91c16b9b2c23p-4, -0x0p+0), asin(cf80.init(-0x8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x8.60a91c16b9b2c23p-4, -0x9.3cd3a2c8198e269p-152), asin(cf80.init(-0x8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x8.60a91c16b9b2c23p-4, -0x4.9e69d1640cc71348p-1076), asin(cf80.init(-0x8p-4, -0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(-0x8.60a91c16b9b2c23p-4, -0x1.1e5da0b63b1836a8p-16384), asin(cf80.init(-0x8p-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x2p-64, 0x2p-64), asin(cf80.init(0x2p-64, 0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x2p-64, -0x2p-64), asin(cf80.init(0x2p-64, -0x2p-64)));
    try std.testing.expectEqual(cf80.init(-0x2p-64, 0x2p-64), asin(cf80.init(-0x2p-64, 0x2p-64)));
    try std.testing.expectEqual(cf80.init(-0x2p-64, -0x2p-64), asin(cf80.init(-0x2p-64, -0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x8p-152, 0x2p-64), asin(cf80.init(0x8p-152, 0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x2p-64), asin(cf80.init(0x0p+0, 0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x4p-1076, 0x2p-64), asin(cf80.init(0x4p-1076, 0x2p-64)));
    try std.testing.expectEqual(cf80.init(0xf.8p-16388, 0x2p-64), asin(cf80.init(0xf.8p-16388, 0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x8p-152, -0x2p-64), asin(cf80.init(0x8p-152, -0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x2p-64), asin(cf80.init(0x0p+0, -0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x4p-1076, -0x2p-64), asin(cf80.init(0x4p-1076, -0x2p-64)));
    try std.testing.expectEqual(cf80.init(0xf.8p-16388, -0x2p-64), asin(cf80.init(0xf.8p-16388, -0x2p-64)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0x2p-64), asin(cf80.init(-0x0p+0, 0x2p-64)));
    try std.testing.expectEqual(cf80.init(-0x8p-152, 0x2p-64), asin(cf80.init(-0x8p-152, 0x2p-64)));
    try std.testing.expectEqual(cf80.init(-0x4p-1076, 0x2p-64), asin(cf80.init(-0x4p-1076, 0x2p-64)));
    try std.testing.expectEqual(cf80.init(-0xf.8p-16388, 0x2p-64), asin(cf80.init(-0xf.8p-16388, 0x2p-64)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0x2p-64), asin(cf80.init(-0x0p+0, -0x2p-64)));
    try std.testing.expectEqual(cf80.init(-0x8p-152, -0x2p-64), asin(cf80.init(-0x8p-152, -0x2p-64)));
    try std.testing.expectEqual(cf80.init(-0x4p-1076, -0x2p-64), asin(cf80.init(-0x4p-1076, -0x2p-64)));
    try std.testing.expectEqual(cf80.init(-0xf.8p-16388, -0x2p-64), asin(cf80.init(-0xf.8p-16388, -0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x2p-64, 0x8p-152), asin(cf80.init(0x2p-64, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x2p-64, 0x0p+0), asin(cf80.init(0x2p-64, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x2p-64, 0x4p-1076), asin(cf80.init(0x2p-64, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x2p-64, 0xf.8p-16388), asin(cf80.init(0x2p-64, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(-0x2p-64, 0x8p-152), asin(cf80.init(-0x2p-64, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x2p-64, 0x0p+0), asin(cf80.init(-0x2p-64, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x2p-64, 0x4p-1076), asin(cf80.init(-0x2p-64, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(-0x2p-64, 0xf.8p-16388), asin(cf80.init(-0x2p-64, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x2p-64, -0x0p+0), asin(cf80.init(0x2p-64, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x2p-64, -0x8p-152), asin(cf80.init(0x2p-64, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x2p-64, -0x4p-1076), asin(cf80.init(0x2p-64, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x2p-64, -0xf.8p-16388), asin(cf80.init(0x2p-64, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(-0x2p-64, -0x0p+0), asin(cf80.init(-0x2p-64, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x2p-64, -0x8p-152), asin(cf80.init(-0x2p-64, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x2p-64, -0x4p-1076), asin(cf80.init(-0x2p-64, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(-0x2p-64, -0xf.8p-16388), asin(cf80.init(-0x2p-64, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x2p-64), asin(cf80.init(0x0p+0, 0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x2p-64), asin(cf80.init(0x0p+0, -0x2p-64)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0x2p-64), asin(cf80.init(-0x0p+0, 0x2p-64)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0x2p-64), asin(cf80.init(-0x0p+0, -0x2p-64)));
    try std.testing.expectEqual(cf80.init(0x2p-64, 0x0p+0), asin(cf80.init(0x2p-64, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x2p-64, 0x0p+0), asin(cf80.init(-0x2p-64, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x2p-64, -0x0p+0), asin(cf80.init(0x2p-64, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x2p-64, -0x0p+0), asin(cf80.init(-0x2p-64, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x8p-152, 0x8p-152), asin(cf80.init(0x8p-152, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x8p-152, 0x0p+0), asin(cf80.init(0x8p-152, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x8p-152, 0x4p-1076), asin(cf80.init(0x8p-152, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x8p-152, 0xf.8p-16388), asin(cf80.init(0x8p-152, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x8p-152), asin(cf80.init(0x0p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x0p+0), asin(cf80.init(0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x4p-1076), asin(cf80.init(0x0p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xf.8p-16388), asin(cf80.init(0x0p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x4p-1076, 0x8p-152), asin(cf80.init(0x4p-1076, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x4p-1076, 0x0p+0), asin(cf80.init(0x4p-1076, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x4p-1076, 0x4p-1076), asin(cf80.init(0x4p-1076, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x4p-1076, 0xf.8p-16388), asin(cf80.init(0x4p-1076, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0xf.8p-16388, 0x8p-152), asin(cf80.init(0xf.8p-16388, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0xf.8p-16388, 0x0p+0), asin(cf80.init(0xf.8p-16388, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0xf.8p-16388, 0x4p-1076), asin(cf80.init(0xf.8p-16388, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0xf.8p-16388, 0xf.8p-16388), asin(cf80.init(0xf.8p-16388, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x8p-152, -0x0p+0), asin(cf80.init(0x8p-152, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x8p-152, -0x8p-152), asin(cf80.init(0x8p-152, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x8p-152, -0x4p-1076), asin(cf80.init(0x8p-152, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x8p-152, -0xf.8p-16388), asin(cf80.init(0x8p-152, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x0p+0), asin(cf80.init(0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x8p-152), asin(cf80.init(0x0p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x4p-1076), asin(cf80.init(0x0p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xf.8p-16388), asin(cf80.init(0x0p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x4p-1076, -0x0p+0), asin(cf80.init(0x4p-1076, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x4p-1076, -0x8p-152), asin(cf80.init(0x4p-1076, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x4p-1076, -0x4p-1076), asin(cf80.init(0x4p-1076, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x4p-1076, -0xf.8p-16388), asin(cf80.init(0x4p-1076, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0xf.8p-16388, -0x0p+0), asin(cf80.init(0xf.8p-16388, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0xf.8p-16388, -0x8p-152), asin(cf80.init(0xf.8p-16388, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0xf.8p-16388, -0x4p-1076), asin(cf80.init(0xf.8p-16388, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0xf.8p-16388, -0xf.8p-16388), asin(cf80.init(0xf.8p-16388, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0x8p-152), asin(cf80.init(-0x0p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0x0p+0), asin(cf80.init(-0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0x4p-1076), asin(cf80.init(-0x0p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xf.8p-16388), asin(cf80.init(-0x0p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(-0x8p-152, 0x8p-152), asin(cf80.init(-0x8p-152, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x8p-152, 0x0p+0), asin(cf80.init(-0x8p-152, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x8p-152, 0x4p-1076), asin(cf80.init(-0x8p-152, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(-0x8p-152, 0xf.8p-16388), asin(cf80.init(-0x8p-152, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(-0x4p-1076, 0x8p-152), asin(cf80.init(-0x4p-1076, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x4p-1076, 0x0p+0), asin(cf80.init(-0x4p-1076, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x4p-1076, 0x4p-1076), asin(cf80.init(-0x4p-1076, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(-0x4p-1076, 0xf.8p-16388), asin(cf80.init(-0x4p-1076, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(-0xf.8p-16388, 0x8p-152), asin(cf80.init(-0xf.8p-16388, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0xf.8p-16388, 0x0p+0), asin(cf80.init(-0xf.8p-16388, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0xf.8p-16388, 0x4p-1076), asin(cf80.init(-0xf.8p-16388, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(-0xf.8p-16388, 0xf.8p-16388), asin(cf80.init(-0xf.8p-16388, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0x0p+0), asin(cf80.init(-0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0x8p-152), asin(cf80.init(-0x0p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0x4p-1076), asin(cf80.init(-0x0p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xf.8p-16388), asin(cf80.init(-0x0p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(-0x8p-152, -0x0p+0), asin(cf80.init(-0x8p-152, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x8p-152, -0x8p-152), asin(cf80.init(-0x8p-152, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x8p-152, -0x4p-1076), asin(cf80.init(-0x8p-152, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(-0x8p-152, -0xf.8p-16388), asin(cf80.init(-0x8p-152, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(-0x4p-1076, -0x0p+0), asin(cf80.init(-0x4p-1076, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x4p-1076, -0x8p-152), asin(cf80.init(-0x4p-1076, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x4p-1076, -0x4p-1076), asin(cf80.init(-0x4p-1076, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(-0x4p-1076, -0xf.8p-16388), asin(cf80.init(-0x4p-1076, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(-0xf.8p-16388, -0x0p+0), asin(cf80.init(-0xf.8p-16388, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0xf.8p-16388, -0x8p-152), asin(cf80.init(-0xf.8p-16388, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0xf.8p-16388, -0x4p-1076), asin(cf80.init(-0xf.8p-16388, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(-0xf.8p-16388, -0xf.8p-16388), asin(cf80.init(-0xf.8p-16388, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef3242p-108, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x8p-108, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x5.a8279c73e2c0a91p-108, 0xe.1a1b256c9add526p-4), asin(cf80.init(0x8p-108, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef33acp-108, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(0x8p-108, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef32428p-108, 0xe.1a1b30bcea1366p-4), asin(cf80.init(0x8p-108, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x5.a8279c73e2c0a91p-108, -0xe.1a1b256c9add526p-4), asin(cf80.init(0x8p-108, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef3242p-108, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x8p-108, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef33acp-108, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(0x8p-108, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef32428p-108, -0xe.1a1b30bcea1366p-4), asin(cf80.init(0x8p-108, -0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef3242p-108, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x8p-108, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x5.a8279c73e2c0a91p-108, 0xe.1a1b256c9add526p-4), asin(cf80.init(-0x8p-108, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef33acp-108, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0x8p-108, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef32428p-108, 0xe.1a1b30bcea1366p-4), asin(cf80.init(-0x8p-108, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(-0x5.a8279c73e2c0a91p-108, -0xe.1a1b256c9add526p-4), asin(cf80.init(-0x8p-108, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef3242p-108, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x8p-108, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef33acp-108, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0x8p-108, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef32428p-108, -0xe.1a1b30bcea1366p-4), asin(cf80.init(-0x8p-108, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1791ap+0, 0xb.504f333f9de6484p-56), asin(cf80.init(0x1p+0, 0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, 0x5.a8279b09d8da13d8p-96), asin(cf80.init(0xf.fffffp-4, 0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, 0x2.00000000000004p-80), asin(cf80.init(0xf.ffffffffffff8p-4, 0x8p-108)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb542d8c79e02p+0, 0x5.a827999fcef32428p-76), asin(cf80.init(0xf.fffffffffffffffp-4, 0x8p-108)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, 0x5.a8279b09d8da13d8p-96), asin(cf80.init(-0xf.fffffp-4, 0x8p-108)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1791ap+0, 0xb.504f333f9de6484p-56), asin(cf80.init(-0x1p+0, 0x8p-108)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, 0x2.00000000000004p-80), asin(cf80.init(-0xf.ffffffffffff8p-4, 0x8p-108)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb542d8c79e02p+0, 0x5.a827999fcef32428p-76), asin(cf80.init(-0xf.fffffffffffffffp-4, 0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1791ap+0, -0xb.504f333f9de6484p-56), asin(cf80.init(0x1p+0, -0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, -0x5.a8279b09d8da13d8p-96), asin(cf80.init(0xf.fffffp-4, -0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, -0x2.00000000000004p-80), asin(cf80.init(0xf.ffffffffffff8p-4, -0x8p-108)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb542d8c79e02p+0, -0x5.a827999fcef32428p-76), asin(cf80.init(0xf.fffffffffffffffp-4, -0x8p-108)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, -0x5.a8279b09d8da13d8p-96), asin(cf80.init(-0xf.fffffp-4, -0x8p-108)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1791ap+0, -0xb.504f333f9de6484p-56), asin(cf80.init(-0x1p+0, -0x8p-108)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, -0x2.00000000000004p-80), asin(cf80.init(-0xf.ffffffffffff8p-4, -0x8p-108)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb542d8c79e02p+0, -0x5.a827999fcef32428p-76), asin(cf80.init(-0xf.fffffffffffffffp-4, -0x8p-108)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef3242p-152, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x5.a8279c73e2c0a91p-152, 0xe.1a1b256c9add526p-4), asin(cf80.init(0x8p-152, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef33acp-152, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef32428p-152, 0xe.1a1b30bcea1366p-4), asin(cf80.init(0x8p-152, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b256c9add526p-4), asin(cf80.init(0x0p+0, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea1366p-4), asin(cf80.init(0x0p+0, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f716p-1028, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0xf.8p-1028, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0xa.f5ccbf208755479p-1028, 0xe.1a1b256c9add526p-4), asin(cf80.init(0xf.8p-1028, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f741ep-1028, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(0xf.8p-1028, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f7161p-1028, 0xe.1a1b30bcea1366p-4), asin(cf80.init(0xf.8p-1028, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x5.a8279c73e2c0a91p-152, -0xe.1a1b256c9add526p-4), asin(cf80.init(0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef3242p-152, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef33acp-152, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(0x8p-152, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef32428p-152, -0xe.1a1b30bcea1366p-4), asin(cf80.init(0x8p-152, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b256c9add526p-4), asin(cf80.init(0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea1366p-4), asin(cf80.init(0x0p+0, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0xa.f5ccbf208755479p-1028, -0xe.1a1b256c9add526p-4), asin(cf80.init(0xf.8p-1028, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f716p-1028, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0xf.8p-1028, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f741ep-1028, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(0xf.8p-1028, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f7161p-1028, -0xe.1a1b30bcea1366p-4), asin(cf80.init(0xf.8p-1028, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b256c9add526p-4), asin(cf80.init(-0x0p+0, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea1366p-4), asin(cf80.init(-0x0p+0, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef3242p-152, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x5.a8279c73e2c0a91p-152, 0xe.1a1b256c9add526p-4), asin(cf80.init(-0x8p-152, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef33acp-152, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef32428p-152, 0xe.1a1b30bcea1366p-4), asin(cf80.init(-0x8p-152, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f716p-1028, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0xf.8p-1028, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0xa.f5ccbf208755479p-1028, 0xe.1a1b256c9add526p-4), asin(cf80.init(-0xf.8p-1028, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f741ep-1028, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0xf.8p-1028, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f7161p-1028, 0xe.1a1b30bcea1366p-4), asin(cf80.init(-0xf.8p-1028, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b256c9add526p-4), asin(cf80.init(-0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea1366p-4), asin(cf80.init(-0x0p+0, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(-0x5.a8279c73e2c0a91p-152, -0xe.1a1b256c9add526p-4), asin(cf80.init(-0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef3242p-152, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef33acp-152, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0x8p-152, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef32428p-152, -0xe.1a1b30bcea1366p-4), asin(cf80.init(-0x8p-152, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(-0xa.f5ccbf208755479p-1028, -0xe.1a1b256c9add526p-4), asin(cf80.init(-0xf.8p-1028, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f716p-1028, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0xf.8p-1028, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f741ep-1028, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0xf.8p-1028, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f7161p-1028, -0xe.1a1b30bcea1366p-4), asin(cf80.init(-0xf.8p-1028, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2.d413cccfe779921p-76), asin(cf80.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), asin(cf80.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xf.bf7df5c6a788f0cp-516), asin(cf80.init(0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, 0x5.a8279b09d8da13d8p-140), asin(cf80.init(0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, 0x0p+0), asin(cf80.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, 0xa.f5ccbc631426867p-1016), asin(cf80.init(0xf.fffffp-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, 0x2.00000000000004p-124), asin(cf80.init(0xf.ffffffffffff8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, 0x0p+0), asin(cf80.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, 0x3.e0000000000007cp-1000), asin(cf80.init(0xf.ffffffffffff8p-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.921fb542d8c79e02p+0, 0x5.a827999fcef32428p-120), asin(cf80.init(0xf.fffffffffffffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb542d8c79e02p+0, 0x0p+0), asin(cf80.init(0xf.fffffffffffffffp-4, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb542d8c79e02p+0, 0xa.f5ccb9a5a0f716p-996), asin(cf80.init(0xf.fffffffffffffffp-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, 0x5.a8279b09d8da13d8p-140), asin(cf80.init(-0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, 0x0p+0), asin(cf80.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, 0xa.f5ccbc631426867p-1016), asin(cf80.init(-0xf.fffffp-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x2.d413cccfe779921p-76), asin(cf80.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x0p+0), asin(cf80.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0xf.bf7df5c6a788f0cp-516), asin(cf80.init(-0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, 0x2.00000000000004p-124), asin(cf80.init(-0xf.ffffffffffff8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, 0x0p+0), asin(cf80.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, 0x3.e0000000000007cp-1000), asin(cf80.init(-0xf.ffffffffffff8p-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb542d8c79e02p+0, 0x5.a827999fcef32428p-120), asin(cf80.init(-0xf.fffffffffffffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb542d8c79e02p+0, 0x0p+0), asin(cf80.init(-0xf.fffffffffffffffp-4, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb542d8c79e02p+0, 0xa.f5ccb9a5a0f716p-996), asin(cf80.init(-0xf.fffffffffffffffp-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), asin(cf80.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2.d413cccfe779921p-76), asin(cf80.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xf.bf7df5c6a788f0cp-516), asin(cf80.init(0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, -0x0p+0), asin(cf80.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, -0x5.a8279b09d8da13d8p-140), asin(cf80.init(0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, -0xa.f5ccbc631426867p-1016), asin(cf80.init(0xf.fffffp-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, -0x0p+0), asin(cf80.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, -0x2.00000000000004p-124), asin(cf80.init(0xf.ffffffffffff8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, -0x3.e0000000000007cp-1000), asin(cf80.init(0xf.ffffffffffff8p-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x1.921fb542d8c79e02p+0, -0x0p+0), asin(cf80.init(0xf.fffffffffffffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb542d8c79e02p+0, -0x5.a827999fcef32428p-120), asin(cf80.init(0xf.fffffffffffffffp-4, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb542d8c79e02p+0, -0xa.f5ccb9a5a0f716p-996), asin(cf80.init(0xf.fffffffffffffffp-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, -0x0p+0), asin(cf80.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, -0x5.a8279b09d8da13d8p-140), asin(cf80.init(-0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, -0xa.f5ccbc631426867p-1016), asin(cf80.init(-0xf.fffffp-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x0p+0), asin(cf80.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x2.d413cccfe779921p-76), asin(cf80.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0xf.bf7df5c6a788f0cp-516), asin(cf80.init(-0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, -0x0p+0), asin(cf80.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, -0x2.00000000000004p-124), asin(cf80.init(-0xf.ffffffffffff8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, -0x3.e0000000000007cp-1000), asin(cf80.init(-0xf.ffffffffffff8p-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb542d8c79e02p+0, -0x0p+0), asin(cf80.init(-0xf.fffffffffffffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb542d8c79e02p+0, -0x5.a827999fcef32428p-120), asin(cf80.init(-0xf.fffffffffffffffp-4, -0x8p-152)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb542d8c79e02p+0, -0xa.f5ccb9a5a0f716p-996), asin(cf80.init(-0xf.fffffffffffffffp-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b256c9add526p-4), asin(cf80.init(0x0p+0, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea1366p-4), asin(cf80.init(0x0p+0, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b256c9add526p-4), asin(cf80.init(0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea1366p-4), asin(cf80.init(0x0p+0, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b256c9add526p-4), asin(cf80.init(-0x0p+0, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea1366p-4), asin(cf80.init(-0x0p+0, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b256c9add526p-4), asin(cf80.init(-0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea1366p-4), asin(cf80.init(-0x0p+0, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), asin(cf80.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, 0x0p+0), asin(cf80.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, 0x0p+0), asin(cf80.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb542d8c79e02p+0, 0x0p+0), asin(cf80.init(0xf.fffffffffffffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, 0x0p+0), asin(cf80.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x0p+0), asin(cf80.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, 0x0p+0), asin(cf80.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb542d8c79e02p+0, 0x0p+0), asin(cf80.init(-0xf.fffffffffffffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), asin(cf80.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, -0x0p+0), asin(cf80.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, -0x0p+0), asin(cf80.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb542d8c79e02p+0, -0x0p+0), asin(cf80.init(0xf.fffffffffffffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, -0x0p+0), asin(cf80.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x0p+0), asin(cf80.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, -0x0p+0), asin(cf80.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb542d8c79e02p+0, -0x0p+0), asin(cf80.init(-0xf.fffffffffffffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x7.27c9716ffb764d58p-108, 0x7.b30b2bb14582653p-4), asin(cf80.init(0x8p-108, 0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x7.27c9716ffb764d58p-108, -0x7.b30b2bb14582653p-4), asin(cf80.init(0x8p-108, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(-0x7.27c9716ffb764d58p-108, 0x7.b30b2bb14582653p-4), asin(cf80.init(-0x8p-108, 0x8p-4)));
    try std.testing.expectEqual(cf80.init(-0x7.27c9716ffb764d58p-108, -0x7.b30b2bb14582653p-4), asin(cf80.init(-0x8p-108, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x8.60a91c16b9b2c23p-4, 0x9.3cd3a2c8198e269p-108), asin(cf80.init(0x8p-4, 0x8p-108)));
    try std.testing.expectEqual(cf80.init(-0x8.60a91c16b9b2c23p-4, 0x9.3cd3a2c8198e269p-108), asin(cf80.init(-0x8p-4, 0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x8.60a91c16b9b2c23p-4, -0x9.3cd3a2c8198e269p-108), asin(cf80.init(0x8p-4, -0x8p-108)));
    try std.testing.expectEqual(cf80.init(-0x8.60a91c16b9b2c23p-4, -0x9.3cd3a2c8198e269p-108), asin(cf80.init(-0x8p-4, -0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x8p-108, 0x8p-108), asin(cf80.init(0x8p-108, 0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x8p-108, -0x8p-108), asin(cf80.init(0x8p-108, -0x8p-108)));
    try std.testing.expectEqual(cf80.init(-0x8p-108, 0x8p-108), asin(cf80.init(-0x8p-108, 0x8p-108)));
    try std.testing.expectEqual(cf80.init(-0x8p-108, -0x8p-108), asin(cf80.init(-0x8p-108, -0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x8p-152, 0x8p-108), asin(cf80.init(0x8p-152, 0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x8p-108), asin(cf80.init(0x0p+0, 0x8p-108)));
    try std.testing.expectEqual(cf80.init(0xf.8p-1028, 0x8p-108), asin(cf80.init(0xf.8p-1028, 0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x8p-152, -0x8p-108), asin(cf80.init(0x8p-152, -0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x8p-108), asin(cf80.init(0x0p+0, -0x8p-108)));
    try std.testing.expectEqual(cf80.init(0xf.8p-1028, -0x8p-108), asin(cf80.init(0xf.8p-1028, -0x8p-108)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0x8p-108), asin(cf80.init(-0x0p+0, 0x8p-108)));
    try std.testing.expectEqual(cf80.init(-0x8p-152, 0x8p-108), asin(cf80.init(-0x8p-152, 0x8p-108)));
    try std.testing.expectEqual(cf80.init(-0xf.8p-1028, 0x8p-108), asin(cf80.init(-0xf.8p-1028, 0x8p-108)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0x8p-108), asin(cf80.init(-0x0p+0, -0x8p-108)));
    try std.testing.expectEqual(cf80.init(-0x8p-152, -0x8p-108), asin(cf80.init(-0x8p-152, -0x8p-108)));
    try std.testing.expectEqual(cf80.init(-0xf.8p-1028, -0x8p-108), asin(cf80.init(-0xf.8p-1028, -0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x8p-108, 0x8p-152), asin(cf80.init(0x8p-108, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x8p-108, 0x0p+0), asin(cf80.init(0x8p-108, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x8p-108, 0xf.8p-1028), asin(cf80.init(0x8p-108, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(-0x8p-108, 0x8p-152), asin(cf80.init(-0x8p-108, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x8p-108, 0x0p+0), asin(cf80.init(-0x8p-108, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x8p-108, 0xf.8p-1028), asin(cf80.init(-0x8p-108, 0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x8p-108, -0x0p+0), asin(cf80.init(0x8p-108, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x8p-108, -0x8p-152), asin(cf80.init(0x8p-108, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x8p-108, -0xf.8p-1028), asin(cf80.init(0x8p-108, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(-0x8p-108, -0x0p+0), asin(cf80.init(-0x8p-108, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x8p-108, -0x8p-152), asin(cf80.init(-0x8p-108, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x8p-108, -0xf.8p-1028), asin(cf80.init(-0x8p-108, -0xf.8p-1028)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x8p-108), asin(cf80.init(0x0p+0, 0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x8p-108), asin(cf80.init(0x0p+0, -0x8p-108)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0x8p-108), asin(cf80.init(-0x0p+0, 0x8p-108)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0x8p-108), asin(cf80.init(-0x0p+0, -0x8p-108)));
    try std.testing.expectEqual(cf80.init(0x8p-108, 0x0p+0), asin(cf80.init(0x8p-108, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x8p-108, 0x0p+0), asin(cf80.init(-0x8p-108, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x8p-108, -0x0p+0), asin(cf80.init(0x8p-108, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x8p-108, -0x0p+0), asin(cf80.init(-0x8p-108, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0xb.504f333f9de6484p-116, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x1p-112, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0xb.504f38e7c581522p-116, 0xe.1a1b256c9add526p-4), asin(cf80.init(0x1p-112, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0xb.504f333f9de6758p-116, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(0x1p-112, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0xb.504f333f9de6485p-116, 0xe.1a1b30bcea1366p-4), asin(cf80.init(0x1p-112, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0xb.504f38e7c581522p-116, -0xe.1a1b256c9add526p-4), asin(cf80.init(0x1p-112, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0xb.504f333f9de6484p-116, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x1p-112, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0xb.504f333f9de6758p-116, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(0x1p-112, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0xb.504f333f9de6485p-116, -0xe.1a1b30bcea1366p-4), asin(cf80.init(0x1p-112, -0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0xb.504f333f9de6484p-116, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x1p-112, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0xb.504f38e7c581522p-116, 0xe.1a1b256c9add526p-4), asin(cf80.init(-0x1p-112, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0xb.504f333f9de6758p-116, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0x1p-112, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(-0xb.504f333f9de6485p-116, 0xe.1a1b30bcea1366p-4), asin(cf80.init(-0x1p-112, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(-0xb.504f38e7c581522p-116, -0xe.1a1b256c9add526p-4), asin(cf80.init(-0x1p-112, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0xb.504f333f9de6484p-116, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x1p-112, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0xb.504f333f9de6758p-116, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0x1p-112, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(-0xb.504f333f9de6485p-116, -0xe.1a1b30bcea1366p-4), asin(cf80.init(-0x1p-112, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1836ap+0, 0x1p-56), asin(cf80.init(0x1p+0, 0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, 0xb.504f3613b1b427bp-104), asin(cf80.init(0xf.fffffp-4, 0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, 0x4.00000000000008p-88), asin(cf80.init(0xf.ffffffffffff8p-4, 0x1p-112)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb542d8c79e02p+0, 0xb.504f333f9de6485p-84), asin(cf80.init(0xf.fffffffffffffffp-4, 0x1p-112)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, 0xb.504f3613b1b427bp-104), asin(cf80.init(-0xf.fffffp-4, 0x1p-112)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1836ap+0, 0x1p-56), asin(cf80.init(-0x1p+0, 0x1p-112)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, 0x4.00000000000008p-88), asin(cf80.init(-0xf.ffffffffffff8p-4, 0x1p-112)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb542d8c79e02p+0, 0xb.504f333f9de6485p-84), asin(cf80.init(-0xf.fffffffffffffffp-4, 0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1836ap+0, -0x1p-56), asin(cf80.init(0x1p+0, -0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, -0xb.504f3613b1b427bp-104), asin(cf80.init(0xf.fffffp-4, -0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, -0x4.00000000000008p-88), asin(cf80.init(0xf.ffffffffffff8p-4, -0x1p-112)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb542d8c79e02p+0, -0xb.504f333f9de6485p-84), asin(cf80.init(0xf.fffffffffffffffp-4, -0x1p-112)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, -0xb.504f3613b1b427bp-104), asin(cf80.init(-0xf.fffffp-4, -0x1p-112)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1836ap+0, -0x1p-56), asin(cf80.init(-0x1p+0, -0x1p-112)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, -0x4.00000000000008p-88), asin(cf80.init(-0xf.ffffffffffff8p-4, -0x1p-112)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb542d8c79e02p+0, -0xb.504f333f9de6485p-84), asin(cf80.init(-0xf.fffffffffffffffp-4, -0x1p-112)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef3242p-152, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x5.a8279c73e2c0a91p-152, 0xe.1a1b256c9add526p-4), asin(cf80.init(0x8p-152, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef33acp-152, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef32428p-152, 0xe.1a1b30bcea1366p-4), asin(cf80.init(0x8p-152, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b256c9add526p-4), asin(cf80.init(0x0p+0, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea1366p-4), asin(cf80.init(0x0p+0, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-1076, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x2.d413ce39f1605488p-1076, 0xe.1a1b256c9add526p-4), asin(cf80.init(0x4p-1076, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x2.d413cccfe7799d6p-1076, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(0x4p-1076, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x2.d413cccfe7799214p-1076, 0xe.1a1b30bcea1366p-4), asin(cf80.init(0x4p-1076, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f716p-16388, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0xf.8p-16388, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccbf208755478p-16388, 0xe.1a1b256c9add526p-4), asin(cf80.init(0xf.8p-16388, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f742p-16388, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(0xf.8p-16388, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f716p-16388, 0xe.1a1b30bcea1366p-4), asin(cf80.init(0xf.8p-16388, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x5.a8279c73e2c0a91p-152, -0xe.1a1b256c9add526p-4), asin(cf80.init(0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef3242p-152, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef33acp-152, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(0x8p-152, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x5.a827999fcef32428p-152, -0xe.1a1b30bcea1366p-4), asin(cf80.init(0x8p-152, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b256c9add526p-4), asin(cf80.init(0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea1366p-4), asin(cf80.init(0x0p+0, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x2.d413ce39f1605488p-1076, -0xe.1a1b256c9add526p-4), asin(cf80.init(0x4p-1076, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x2.d413cccfe779921p-1076, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x4p-1076, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x2.d413cccfe7799d6p-1076, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(0x4p-1076, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x2.d413cccfe7799214p-1076, -0xe.1a1b30bcea1366p-4), asin(cf80.init(0x4p-1076, -0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccbf208755478p-16388, -0xe.1a1b256c9add526p-4), asin(cf80.init(0xf.8p-16388, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f716p-16388, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0xf.8p-16388, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f742p-16388, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(0xf.8p-16388, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0xa.f5ccb9a5a0f716p-16388, -0xe.1a1b30bcea1366p-4), asin(cf80.init(0xf.8p-16388, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b256c9add526p-4), asin(cf80.init(-0x0p+0, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea1366p-4), asin(cf80.init(-0x0p+0, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef3242p-152, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x5.a8279c73e2c0a91p-152, 0xe.1a1b256c9add526p-4), asin(cf80.init(-0x8p-152, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef33acp-152, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef32428p-152, 0xe.1a1b30bcea1366p-4), asin(cf80.init(-0x8p-152, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0x2.d413cccfe779921p-1076, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x2.d413ce39f1605488p-1076, 0xe.1a1b256c9add526p-4), asin(cf80.init(-0x4p-1076, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0x2.d413cccfe7799d6p-1076, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0x4p-1076, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(-0x2.d413cccfe7799214p-1076, 0xe.1a1b30bcea1366p-4), asin(cf80.init(-0x4p-1076, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f716p-16388, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0xf.8p-16388, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccbf208755478p-16388, 0xe.1a1b256c9add526p-4), asin(cf80.init(-0xf.8p-16388, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f742p-16388, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0xf.8p-16388, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f716p-16388, 0xe.1a1b30bcea1366p-4), asin(cf80.init(-0xf.8p-16388, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b256c9add526p-4), asin(cf80.init(-0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea1366p-4), asin(cf80.init(-0x0p+0, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(-0x5.a8279c73e2c0a91p-152, -0xe.1a1b256c9add526p-4), asin(cf80.init(-0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef3242p-152, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef33acp-152, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0x8p-152, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(-0x5.a827999fcef32428p-152, -0xe.1a1b30bcea1366p-4), asin(cf80.init(-0x8p-152, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(-0x2.d413ce39f1605488p-1076, -0xe.1a1b256c9add526p-4), asin(cf80.init(-0x4p-1076, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0x2.d413cccfe779921p-1076, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x4p-1076, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x2.d413cccfe7799d6p-1076, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0x4p-1076, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(-0x2.d413cccfe7799214p-1076, -0xe.1a1b30bcea1366p-4), asin(cf80.init(-0x4p-1076, -0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccbf208755478p-16388, -0xe.1a1b256c9add526p-4), asin(cf80.init(-0xf.8p-16388, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f716p-16388, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0xf.8p-16388, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f742p-16388, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0xf.8p-16388, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(-0xa.f5ccb9a5a0f716p-16388, -0xe.1a1b30bcea1366p-4), asin(cf80.init(-0xf.8p-16388, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x2.d413cccfe779921p-76), asin(cf80.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), asin(cf80.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x8p-540), asin(cf80.init(0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0xf.bf7df5c6a788f0cp-8196), asin(cf80.init(0x1p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, 0x5.a8279b09d8da13d8p-140), asin(cf80.init(0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, 0x0p+0), asin(cf80.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, 0x2.d413cd84ec6d09ecp-1064), asin(cf80.init(0xf.fffffp-4, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, 0xa.f5ccbc631426867p-16376), asin(cf80.init(0xf.fffffp-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, 0x2.00000000000004p-124), asin(cf80.init(0xf.ffffffffffff8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, 0x0p+0), asin(cf80.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, 0x1.00000000000002p-1048), asin(cf80.init(0xf.ffffffffffff8p-4, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, 0x3.e0000000000007cp-16360), asin(cf80.init(0xf.ffffffffffff8p-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb542d8c79e02p+0, 0x5.a827999fcef32428p-120), asin(cf80.init(0xf.fffffffffffffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb542d8c79e02p+0, 0x0p+0), asin(cf80.init(0xf.fffffffffffffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb542d8c79e02p+0, 0x2.d413cccfe7799214p-1044), asin(cf80.init(0xf.fffffffffffffffp-4, 0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb542d8c79e02p+0, 0xa.f5ccb9a5a0f716p-16356), asin(cf80.init(0xf.fffffffffffffffp-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, 0x5.a8279b09d8da13d8p-140), asin(cf80.init(-0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, 0x0p+0), asin(cf80.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, 0x2.d413cd84ec6d09ecp-1064), asin(cf80.init(-0xf.fffffp-4, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, 0xa.f5ccbc631426867p-16376), asin(cf80.init(-0xf.fffffp-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x2.d413cccfe779921p-76), asin(cf80.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x0p+0), asin(cf80.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x8p-540), asin(cf80.init(-0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0xf.bf7df5c6a788f0cp-8196), asin(cf80.init(-0x1p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, 0x2.00000000000004p-124), asin(cf80.init(-0xf.ffffffffffff8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, 0x0p+0), asin(cf80.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, 0x1.00000000000002p-1048), asin(cf80.init(-0xf.ffffffffffff8p-4, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, 0x3.e0000000000007cp-16360), asin(cf80.init(-0xf.ffffffffffff8p-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb542d8c79e02p+0, 0x5.a827999fcef32428p-120), asin(cf80.init(-0xf.fffffffffffffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb542d8c79e02p+0, 0x0p+0), asin(cf80.init(-0xf.fffffffffffffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb542d8c79e02p+0, 0x2.d413cccfe7799214p-1044), asin(cf80.init(-0xf.fffffffffffffffp-4, 0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb542d8c79e02p+0, 0xa.f5ccb9a5a0f716p-16356), asin(cf80.init(-0xf.fffffffffffffffp-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), asin(cf80.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x2.d413cccfe779921p-76), asin(cf80.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x8p-540), asin(cf80.init(0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0xf.bf7df5c6a788f0cp-8196), asin(cf80.init(0x1p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, -0x0p+0), asin(cf80.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, -0x5.a8279b09d8da13d8p-140), asin(cf80.init(0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, -0x2.d413cd84ec6d09ecp-1064), asin(cf80.init(0xf.fffffp-4, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, -0xa.f5ccbc631426867p-16376), asin(cf80.init(0xf.fffffp-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, -0x0p+0), asin(cf80.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, -0x2.00000000000004p-124), asin(cf80.init(0xf.ffffffffffff8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, -0x1.00000000000002p-1048), asin(cf80.init(0xf.ffffffffffff8p-4, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, -0x3.e0000000000007cp-16360), asin(cf80.init(0xf.ffffffffffff8p-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1.921fb542d8c79e02p+0, -0x0p+0), asin(cf80.init(0xf.fffffffffffffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb542d8c79e02p+0, -0x5.a827999fcef32428p-120), asin(cf80.init(0xf.fffffffffffffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1.921fb542d8c79e02p+0, -0x2.d413cccfe7799214p-1044), asin(cf80.init(0xf.fffffffffffffffp-4, -0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(0x1.921fb542d8c79e02p+0, -0xa.f5ccb9a5a0f716p-16356), asin(cf80.init(0xf.fffffffffffffffp-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, -0x0p+0), asin(cf80.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, -0x5.a8279b09d8da13d8p-140), asin(cf80.init(-0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, -0x2.d413cd84ec6d09ecp-1064), asin(cf80.init(-0xf.fffffp-4, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, -0xa.f5ccbc631426867p-16376), asin(cf80.init(-0xf.fffffp-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x0p+0), asin(cf80.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x2.d413cccfe779921p-76), asin(cf80.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x8p-540), asin(cf80.init(-0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0xf.bf7df5c6a788f0cp-8196), asin(cf80.init(-0x1p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, -0x0p+0), asin(cf80.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, -0x2.00000000000004p-124), asin(cf80.init(-0xf.ffffffffffff8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, -0x1.00000000000002p-1048), asin(cf80.init(-0xf.ffffffffffff8p-4, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, -0x3.e0000000000007cp-16360), asin(cf80.init(-0xf.ffffffffffff8p-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb542d8c79e02p+0, -0x0p+0), asin(cf80.init(-0xf.fffffffffffffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb542d8c79e02p+0, -0x5.a827999fcef32428p-120), asin(cf80.init(-0xf.fffffffffffffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb542d8c79e02p+0, -0x2.d413cccfe7799214p-1044), asin(cf80.init(-0xf.fffffffffffffffp-4, -0x4p-1076)));
    // try std.testing.expectEqual(cf80.init(-0x1.921fb542d8c79e02p+0, -0xa.f5ccb9a5a0f716p-16356), asin(cf80.init(-0xf.fffffffffffffffp-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea13661p-4), asin(cf80.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b256c9add526p-4), asin(cf80.init(0x0p+0, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0xe.1a1b30bcea1366p-4), asin(cf80.init(0x0p+0, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b256c9add526p-4), asin(cf80.init(0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea13661p-4), asin(cf80.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, -0xe.1a1b30bcea1366p-4), asin(cf80.init(0x0p+0, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b256c9add526p-4), asin(cf80.init(-0x0p+0, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, 0xe.1a1b30bcea1366p-4), asin(cf80.init(-0x0p+0, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b256c9add526p-4), asin(cf80.init(-0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea13661p-4), asin(cf80.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea130b9p-4), asin(cf80.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf80.init(-0x0p+0, -0xe.1a1b30bcea1366p-4), asin(cf80.init(-0x0p+0, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, 0x0p+0), asin(cf80.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, 0x0p+0), asin(cf80.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, 0x0p+0), asin(cf80.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb542d8c79e02p+0, 0x0p+0), asin(cf80.init(0xf.fffffffffffffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, 0x0p+0), asin(cf80.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, 0x0p+0), asin(cf80.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, 0x0p+0), asin(cf80.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb542d8c79e02p+0, 0x0p+0), asin(cf80.init(-0xf.fffffffffffffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb54442d1846ap+0, -0x0p+0), asin(cf80.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.920914a5da6f90bep+0, -0x0p+0), asin(cf80.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb50442d1846ap+0, -0x0p+0), asin(cf80.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1.921fb542d8c79e02p+0, -0x0p+0), asin(cf80.init(0xf.fffffffffffffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.920914a5da6f90bep+0, -0x0p+0), asin(cf80.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb54442d1846ap+0, -0x0p+0), asin(cf80.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb50442d1846ap+0, -0x0p+0), asin(cf80.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1.921fb542d8c79e02p+0, -0x0p+0), asin(cf80.init(-0xf.fffffffffffffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0xe.4f92e2dff6ec9abp-116, 0x7.b30b2bb14582653p-4), asin(cf80.init(0x1p-112, 0x8p-4)));
    try std.testing.expectEqual(cf80.init(0xe.4f92e2dff6ec9abp-116, -0x7.b30b2bb14582653p-4), asin(cf80.init(0x1p-112, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(-0xe.4f92e2dff6ec9abp-116, 0x7.b30b2bb14582653p-4), asin(cf80.init(-0x1p-112, 0x8p-4)));
    try std.testing.expectEqual(cf80.init(-0xe.4f92e2dff6ec9abp-116, -0x7.b30b2bb14582653p-4), asin(cf80.init(-0x1p-112, -0x8p-4)));
    try std.testing.expectEqual(cf80.init(0x8.60a91c16b9b2c23p-4, 0x1.279a74590331c4d2p-112), asin(cf80.init(0x8p-4, 0x1p-112)));
    try std.testing.expectEqual(cf80.init(-0x8.60a91c16b9b2c23p-4, 0x1.279a74590331c4d2p-112), asin(cf80.init(-0x8p-4, 0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x8.60a91c16b9b2c23p-4, -0x1.279a74590331c4d2p-112), asin(cf80.init(0x8p-4, -0x1p-112)));
    try std.testing.expectEqual(cf80.init(-0x8.60a91c16b9b2c23p-4, -0x1.279a74590331c4d2p-112), asin(cf80.init(-0x8p-4, -0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x1p-112, 0x1p-112), asin(cf80.init(0x1p-112, 0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x1p-112, -0x1p-112), asin(cf80.init(0x1p-112, -0x1p-112)));
    try std.testing.expectEqual(cf80.init(-0x1p-112, 0x1p-112), asin(cf80.init(-0x1p-112, 0x1p-112)));
    try std.testing.expectEqual(cf80.init(-0x1p-112, -0x1p-112), asin(cf80.init(-0x1p-112, -0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x8p-152, 0x1p-112), asin(cf80.init(0x8p-152, 0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x1p-112), asin(cf80.init(0x0p+0, 0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x4p-1076, 0x1p-112), asin(cf80.init(0x4p-1076, 0x1p-112)));
    try std.testing.expectEqual(cf80.init(0xf.8p-16388, 0x1p-112), asin(cf80.init(0xf.8p-16388, 0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x8p-152, -0x1p-112), asin(cf80.init(0x8p-152, -0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x1p-112), asin(cf80.init(0x0p+0, -0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x4p-1076, -0x1p-112), asin(cf80.init(0x4p-1076, -0x1p-112)));
    try std.testing.expectEqual(cf80.init(0xf.8p-16388, -0x1p-112), asin(cf80.init(0xf.8p-16388, -0x1p-112)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0x1p-112), asin(cf80.init(-0x0p+0, 0x1p-112)));
    try std.testing.expectEqual(cf80.init(-0x8p-152, 0x1p-112), asin(cf80.init(-0x8p-152, 0x1p-112)));
    try std.testing.expectEqual(cf80.init(-0x4p-1076, 0x1p-112), asin(cf80.init(-0x4p-1076, 0x1p-112)));
    try std.testing.expectEqual(cf80.init(-0xf.8p-16388, 0x1p-112), asin(cf80.init(-0xf.8p-16388, 0x1p-112)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0x1p-112), asin(cf80.init(-0x0p+0, -0x1p-112)));
    try std.testing.expectEqual(cf80.init(-0x8p-152, -0x1p-112), asin(cf80.init(-0x8p-152, -0x1p-112)));
    try std.testing.expectEqual(cf80.init(-0x4p-1076, -0x1p-112), asin(cf80.init(-0x4p-1076, -0x1p-112)));
    try std.testing.expectEqual(cf80.init(-0xf.8p-16388, -0x1p-112), asin(cf80.init(-0xf.8p-16388, -0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x1p-112, 0x8p-152), asin(cf80.init(0x1p-112, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1p-112, 0x0p+0), asin(cf80.init(0x1p-112, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1p-112, 0x4p-1076), asin(cf80.init(0x1p-112, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1p-112, 0xf.8p-16388), asin(cf80.init(0x1p-112, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(-0x1p-112, 0x8p-152), asin(cf80.init(-0x1p-112, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1p-112, 0x0p+0), asin(cf80.init(-0x1p-112, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1p-112, 0x4p-1076), asin(cf80.init(-0x1p-112, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(-0x1p-112, 0xf.8p-16388), asin(cf80.init(-0x1p-112, 0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x1p-112, -0x0p+0), asin(cf80.init(0x1p-112, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1p-112, -0x8p-152), asin(cf80.init(0x1p-112, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x1p-112, -0x4p-1076), asin(cf80.init(0x1p-112, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x1p-112, -0xf.8p-16388), asin(cf80.init(0x1p-112, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(-0x1p-112, -0x0p+0), asin(cf80.init(-0x1p-112, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1p-112, -0x8p-152), asin(cf80.init(-0x1p-112, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(-0x1p-112, -0x4p-1076), asin(cf80.init(-0x1p-112, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(-0x1p-112, -0xf.8p-16388), asin(cf80.init(-0x1p-112, -0xf.8p-16388)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x1p-112), asin(cf80.init(0x0p+0, 0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x1p-112), asin(cf80.init(0x0p+0, -0x1p-112)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0x1p-112), asin(cf80.init(-0x0p+0, 0x1p-112)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0x1p-112), asin(cf80.init(-0x0p+0, -0x1p-112)));
    try std.testing.expectEqual(cf80.init(0x1p-112, 0x0p+0), asin(cf80.init(0x1p-112, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1p-112, 0x0p+0), asin(cf80.init(-0x1p-112, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x1p-112, -0x0p+0), asin(cf80.init(0x1p-112, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x1p-112, -0x0p+0), asin(cf80.init(-0x1p-112, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x7.409e85703b6b052p-4, 0x1.21e48c8df1874b5cp+0), asin(cf80.init(0xcp-4, 0x1.4p+0)));
    try std.testing.expectEqual(cf80.init(-0x9.2164d0607cc7488p-4, -0x1.fbbf409ccd55fc68p+0), asin(cf80.init(-0x2p+0, -0x3p+0)));

    try std.testing.expectEqual(cf128.init(0x0p+0, 0x0p+0), asin(cf128.init(0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0x0p+0), asin(cf128.init(-0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x0p+0), asin(cf128.init(0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0x0p+0), asin(cf128.init(-0x0p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0x1.31dc0090b63d86827e4baaad1909p+0), asin(cf128.init(0x0p+0, -0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0x1.31dc0090b63d86827e4baaad1909p+0), asin(cf128.init(-0x0p+0, -0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(0x0p+0, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(-0x0p+0, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(0x0p+0, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(-0x0p+0, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0x1.31dc0090b63d86827e4baaad1909p+0), asin(cf128.init(0x0p+0, 0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0x1.31dc0090b63d86827e4baaad1909p+0), asin(cf128.init(-0x0p+0, 0x1.8p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0xf.661657628b04ca5f0210254b4638p-4), asin(cf128.init(-0x1.8p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0xf.661657628b04ca5f0210254b4638p-4), asin(cf128.init(-0x1.8p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), asin(cf128.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), asin(cf128.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x8.60a91c16b9b2c232dd99707ab3d8p-4, 0x0p+0), asin(cf128.init(-0x8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x8.60a91c16b9b2c232dd99707ab3d8p-4, -0x0p+0), asin(cf128.init(-0x8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x8.60a91c16b9b2c232dd99707ab3d8p-4, 0x0p+0), asin(cf128.init(0x8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x8.60a91c16b9b2c232dd99707ab3d8p-4, -0x0p+0), asin(cf128.init(0x8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), asin(cf128.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), asin(cf128.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.661657628b04ca5f0210254b4638p-4), asin(cf128.init(0x1.8p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.661657628b04ca5f0210254b4638p-4), asin(cf128.init(0x1.8p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d14469898cc51701b8p+0, 0x2.359bac65ecc553d39385cc748cd6p+4), asin(cf128.init(0x4p+48, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d14469898cc51701b8p+0, -0x2.359bac65ecc553d39385cc748cd6p+4), asin(cf128.init(0x4p+48, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d14469898cc51701b8p+0, 0x2.359bac65ecc553d39385cc748cd6p+4), asin(cf128.init(-0x4p+48, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d14469898cc51701b8p+0, -0x2.359bac65ecc553d39385cc748cd6p+4), asin(cf128.init(-0x4p+48, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x3.ffffffffffffffffffffffffcaaap-52, 0x2.359bac65ecc553d39385cc748d56p+4), asin(cf128.init(0x1p+0, 0x4p+48)));
    try std.testing.expectEqual(cf128.init(-0x3.ffffffffffffffffffffffffcaaap-52, 0x2.359bac65ecc553d39385cc748d56p+4), asin(cf128.init(-0x1p+0, 0x4p+48)));
    try std.testing.expectEqual(cf128.init(0x3.ffffffffffffffffffffffffcaaap-52, -0x2.359bac65ecc553d39385cc748d56p+4), asin(cf128.init(0x1p+0, -0x4p+48)));
    try std.testing.expectEqual(cf128.init(-0x3.ffffffffffffffffffffffffcaaap-52, -0x2.359bac65ecc553d39385cc748d56p+4), asin(cf128.init(-0x1p+0, -0x4p+48)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x5.96a7e12e0b98bcf90bb682a4468p+4), asin(cf128.init(0xf.fffffp+124, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.5b4448e7fd9b091d321a9e787fbap+8), asin(cf128.init(0x1p+500, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x5.96a7e12e0b98bcf90bb682a4468p+4), asin(cf128.init(0xf.fffffp+124, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.5b4448e7fd9b091d321a9e787fbap+8), asin(cf128.init(0x1p+500, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x5.96a7e12e0b98bcf90bb682a4468p+4), asin(cf128.init(-0xf.fffffp+124, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x1.5b4448e7fd9b091d321a9e787fbap+8), asin(cf128.init(-0x1p+500, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x5.96a7e12e0b98bcf90bb682a4468p+4), asin(cf128.init(-0xf.fffffp+124, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x1.5b4448e7fd9b091d321a9e787fbap+8), asin(cf128.init(-0x1p+500, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.000001000001000001000001p-128, 0x5.96a7e12e0b98bcf90bb682a4468p+4), asin(cf128.init(0x1p+0, 0xf.fffffp+124)));
    // try std.testing.expectEqual(cf128.init(0x1p-500, 0x1.5b4448e7fd9b091d321a9e787fbap+8), asin(cf128.init(0x1p+0, 0x1p+500)));
    // try std.testing.expectEqual(cf128.init(-0x1.000001000001000001000001p-128, 0x5.96a7e12e0b98bcf90bb682a4468p+4), asin(cf128.init(-0x1p+0, 0xf.fffffp+124)));
    // try std.testing.expectEqual(cf128.init(-0x1p-500, 0x1.5b4448e7fd9b091d321a9e787fbap+8), asin(cf128.init(-0x1p+0, 0x1p+500)));
    // try std.testing.expectEqual(cf128.init(0x1.000001000001000001000001p-128, -0x5.96a7e12e0b98bcf90bb682a4468p+4), asin(cf128.init(0x1p+0, -0xf.fffffp+124)));
    // try std.testing.expectEqual(cf128.init(0x1p-500, -0x1.5b4448e7fd9b091d321a9e787fbap+8), asin(cf128.init(0x1p+0, -0x1p+500)));
    // try std.testing.expectEqual(cf128.init(-0x1.000001000001000001000001p-128, -0x5.96a7e12e0b98bcf90bb682a4468p+4), asin(cf128.init(-0x1p+0, -0xf.fffffp+124)));
    // try std.testing.expectEqual(cf128.init(-0x1p-500, -0x1.5b4448e7fd9b091d321a9e787fbap+8), asin(cf128.init(-0x1p+0, -0x1p+500)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x5.96a7e12e0b98bcf90bb682a4468p+4), asin(cf128.init(0xf.fffffp+124, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x2.c679d1f73f0fb620d358b213a7dp+8), asin(cf128.init(0xf.ffffffffffff8p+1020, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xd.8a6dd63831ae0fdceaf12f64a528p+8), asin(cf128.init(0x1p+5000, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x2.c679d1f73f0fb624d358b213a7dp+8), asin(cf128.init(0xf.ffffffffffffbffffffffffffcp+1020, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x5.96a7e12e0b98bcf90bb682a4468p+4), asin(cf128.init(0xf.fffffp+124, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x2.c679d1f73f0fb620d358b213a7dp+8), asin(cf128.init(0xf.ffffffffffff8p+1020, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xd.8a6dd63831ae0fdceaf12f64a528p+8), asin(cf128.init(0x1p+5000, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x2.c679d1f73f0fb624d358b213a7dp+8), asin(cf128.init(0xf.ffffffffffffbffffffffffffcp+1020, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x5.96a7e12e0b98bcf90bb682a4468p+4), asin(cf128.init(-0xf.fffffp+124, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x2.c679d1f73f0fb620d358b213a7dp+8), asin(cf128.init(-0xf.ffffffffffff8p+1020, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0xd.8a6dd63831ae0fdceaf12f64a528p+8), asin(cf128.init(-0x1p+5000, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x2.c679d1f73f0fb624d358b213a7dp+8), asin(cf128.init(-0xf.ffffffffffffbffffffffffffcp+1020, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x5.96a7e12e0b98bcf90bb682a4468p+4), asin(cf128.init(-0xf.fffffp+124, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x2.c679d1f73f0fb620d358b213a7dp+8), asin(cf128.init(-0xf.ffffffffffff8p+1020, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0xd.8a6dd63831ae0fdceaf12f64a528p+8), asin(cf128.init(-0x1p+5000, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x2.c679d1f73f0fb624d358b213a7dp+8), asin(cf128.init(-0xf.ffffffffffffbffffffffffffcp+1020, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.000001000001000001000001p-128, 0x5.96a7e12e0b98bcf90bb682a4468p+4), asin(cf128.init(0x1p+0, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf128.init(0x1.000000000000080000000000004p-1024, 0x2.c679d1f73f0fb620d358b213a7dp+8), asin(cf128.init(0x1p+0, 0xf.ffffffffffff8p+1020)));
    // try std.testing.expectEqual(cf128.init(0x1p-5000, 0xd.8a6dd63831ae0fdceaf12f64a528p+8), asin(cf128.init(0x1p+0, 0x1p+5000)));
    try std.testing.expectEqual(cf128.init(0x1.000000000000040000000000005p-1024, 0x2.c679d1f73f0fb624d358b213a7dp+8), asin(cf128.init(0x1p+0, 0xf.ffffffffffffbffffffffffffcp+1020)));
    // try std.testing.expectEqual(cf128.init(-0x1.000001000001000001000001p-128, 0x5.96a7e12e0b98bcf90bb682a4468p+4), asin(cf128.init(-0x1p+0, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf128.init(-0x1.000000000000080000000000004p-1024, 0x2.c679d1f73f0fb620d358b213a7dp+8), asin(cf128.init(-0x1p+0, 0xf.ffffffffffff8p+1020)));
    // try std.testing.expectEqual(cf128.init(-0x1p-5000, 0xd.8a6dd63831ae0fdceaf12f64a528p+8), asin(cf128.init(-0x1p+0, 0x1p+5000)));
    try std.testing.expectEqual(cf128.init(-0x1.000000000000040000000000005p-1024, 0x2.c679d1f73f0fb624d358b213a7dp+8), asin(cf128.init(-0x1p+0, 0xf.ffffffffffffbffffffffffffcp+1020)));
    // try std.testing.expectEqual(cf128.init(0x1.000001000001000001000001p-128, -0x5.96a7e12e0b98bcf90bb682a4468p+4), asin(cf128.init(0x1p+0, -0xf.fffffp+124)));
    try std.testing.expectEqual(cf128.init(0x1.000000000000080000000000004p-1024, -0x2.c679d1f73f0fb620d358b213a7dp+8), asin(cf128.init(0x1p+0, -0xf.ffffffffffff8p+1020)));
    // try std.testing.expectEqual(cf128.init(0x1p-5000, -0xd.8a6dd63831ae0fdceaf12f64a528p+8), asin(cf128.init(0x1p+0, -0x1p+5000)));
    try std.testing.expectEqual(cf128.init(0x1.000000000000040000000000005p-1024, -0x2.c679d1f73f0fb624d358b213a7dp+8), asin(cf128.init(0x1p+0, -0xf.ffffffffffffbffffffffffffcp+1020)));
    // try std.testing.expectEqual(cf128.init(-0x1.000001000001000001000001p-128, -0x5.96a7e12e0b98bcf90bb682a4468p+4), asin(cf128.init(-0x1p+0, -0xf.fffffp+124)));
    try std.testing.expectEqual(cf128.init(-0x1.000000000000080000000000004p-1024, -0x2.c679d1f73f0fb620d358b213a7dp+8), asin(cf128.init(-0x1p+0, -0xf.ffffffffffff8p+1020)));
    // try std.testing.expectEqual(cf128.init(-0x1p-5000, -0xd.8a6dd63831ae0fdceaf12f64a528p+8), asin(cf128.init(-0x1p+0, -0x1p+5000)));
    try std.testing.expectEqual(cf128.init(-0x1.000000000000040000000000005p-1024, -0x2.c679d1f73f0fb624d358b213a7dp+8), asin(cf128.init(-0x1p+0, -0xf.ffffffffffffbffffffffffffcp+1020)));
    try std.testing.expectEqual(cf128.init(0xc.90fdaa22168c234c4c6628b80dcp-4, 0x5.9bb167117aed1ea2e95111e7b934p+4), asin(cf128.init(0xf.8p+124, 0xf.8p+124)));
    try std.testing.expectEqual(cf128.init(0xc.90fdaa22168c234c4c6628b80dcp-4, 0x5.9c3371edca2738c66a05a04106ap+4), asin(cf128.init(0xf.fffffp+124, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf128.init(0x1.08420f7bdef7bdef7bdef7bdef7cp-896, 0x2.c671b1487a1c14069b4d13d8bd64p+8), asin(cf128.init(0xf.fffffp+124, 0xf.8p+1020)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x2.c671b1487a1c14069b4d13d8bd64p+8), asin(cf128.init(0xf.8p+1020, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf128.init(0xc.90fdaa22168c234c4c6628b80dcp-4, 0x2.c6ca6a547604fbc3713205b28966p+8), asin(cf128.init(0xf.8p+1020, 0xf.8p+1020)));
    try std.testing.expectEqual(cf128.init(0xc.90fdaa22168c234c4c6628b80dcp-4, 0x5.9c3371edca2738c66a05a04106ap+4), asin(cf128.init(0xf.fffffp+124, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf128.init(0xf.fffff00000007fffff80000004p-900, 0x2.c679d1f73f0fb620d358b213a7dp+8), asin(cf128.init(0xf.fffffp+124, 0xf.ffffffffffff8p+1020)));
    // try std.testing.expectEqual(cf128.init(0x1.08420f7bdef7bdef7bdef7bdef7cp-16256, 0x2.c5d2f4f5da6bc9849ecab2b79aa6p+12), asin(cf128.init(0xf.fffffp+124, 0xf.8p+16380)));
    try std.testing.expectEqual(cf128.init(0xf.fffff00000003fffffc0000005p-900, 0x2.c679d1f73f0fb624d358b213a7dp+8), asin(cf128.init(0xf.fffffp+124, 0xf.ffffffffffffbffffffffffffcp+1020)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x2.c679d1f73f0fb620d358b213a7dp+8), asin(cf128.init(0xf.ffffffffffff8p+1020, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf128.init(0xc.90fdaa22168c234c4c6628b80dcp-4, 0x2.c6d28b033af89ddda93da3ed73d2p+8), asin(cf128.init(0xf.ffffffffffff8p+1020, 0xf.ffffffffffff8p+1020)));
    // try std.testing.expectEqual(cf128.init(0x1.08421084210839ce739ce739ce74p-15360, 0x2.c5d2f4f5da6bc9849ecab2b79aa6p+12), asin(cf128.init(0xf.ffffffffffff8p+1020, 0xf.8p+16380)));
    try std.testing.expectEqual(cf128.init(0xc.90fdaa22168c034c4c6628b80fp-4, 0x2.c6d28b033af89ddfa93da3ed73d2p+8), asin(cf128.init(0xf.ffffffffffff8p+1020, 0xf.ffffffffffffbffffffffffffcp+1020)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x2.c5d2f4f5da6bc9849ecab2b79aa6p+12), asin(cf128.init(0xf.8p+16380, 0xf.fffffp+124)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x2.c5d2f4f5da6bc9849ecab2b79aa6p+12), asin(cf128.init(0xf.8p+16380, 0xf.ffffffffffff8p+1020)));
    // try std.testing.expectEqual(cf128.init(0xc.90fdaa22168c234c4c6628b80dcp-4, 0x2.c5d880869a2a58006c2901d53766p+12), asin(cf128.init(0xf.8p+16380, 0xf.8p+16380)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x2.c5d2f4f5da6bc9849ecab2b79aa6p+12), asin(cf128.init(0xf.8p+16380, 0xf.ffffffffffffbffffffffffffcp+1020)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x2.c679d1f73f0fb624d358b213a7dp+8), asin(cf128.init(0xf.ffffffffffffbffffffffffffcp+1020, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf128.init(0xc.90fdaa22168c434c4c6628b80c8p-4, 0x2.c6d28b033af89ddfa93da3ed73d2p+8), asin(cf128.init(0xf.ffffffffffffbffffffffffffcp+1020, 0xf.ffffffffffff8p+1020)));
    // try std.testing.expectEqual(cf128.init(0x1.0842108421083def7bdef7bdef3ap-15360, 0x2.c5d2f4f5da6bc9849ecab2b79aa6p+12), asin(cf128.init(0xf.ffffffffffffbffffffffffffcp+1020, 0xf.8p+16380)));
    try std.testing.expectEqual(cf128.init(0xc.90fdaa22168c234c4c6628b80dcp-4, 0x2.c6d28b033af89de1a93da3ed73d2p+8), asin(cf128.init(0xf.ffffffffffffbffffffffffffcp+1020, 0xf.ffffffffffffbffffffffffffcp+1020)));
    // try std.testing.expectEqual(cf128.init(0x8.990ce59d04a88bae6eb82b0af69p-132, 0x1.31dc0090b63d86827e4baaad1909p+0), asin(cf128.init(0xf.8p-132, 0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x8.990ce59d04a88bae6eb82b0af69p-132, -0x1.31dc0090b63d86827e4baaad1909p+0), asin(cf128.init(0xf.8p-132, -0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(-0x8.990ce59d04a88bae6eb82b0af69p-132, 0x1.31dc0090b63d86827e4baaad1909p+0), asin(cf128.init(-0xf.8p-132, 0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(-0x8.990ce59d04a88bae6eb82b0af69p-132, -0x1.31dc0090b63d86827e4baaad1909p+0), asin(cf128.init(-0xf.8p-132, -0x1.8p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.661657628b04ca5f0210254b4638p-4), asin(cf128.init(0x1.8p+0, 0xf.8p-132)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0xf.661657628b04ca5f0210254b4638p-4), asin(cf128.init(-0x1.8p+0, 0xf.8p-132)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.661657628b04ca5f0210254b4638p-4), asin(cf128.init(0x1.8p+0, -0xf.8p-132)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0xf.661657628b04ca5f0210254b4638p-4), asin(cf128.init(-0x1.8p+0, -0xf.8p-132)));
    // try std.testing.expectEqual(cf128.init(0x4.7006a80efa25716249a96089c994p-152, 0x1.31dc0090b63d86827e4baaad1909p+0), asin(cf128.init(0x8p-152, 0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0x1.31dc0090b63d86827e4baaad1909p+0), asin(cf128.init(0x0p+0, 0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x8.990ce59d04a88bae6eb82b0af69p-1028, 0x1.31dc0090b63d86827e4baaad1909p+0), asin(cf128.init(0xf.8p-1028, 0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x4.7006a80efa25716249a96089c994p-152, -0x1.31dc0090b63d86827e4baaad1909p+0), asin(cf128.init(0x8p-152, -0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0x1.31dc0090b63d86827e4baaad1909p+0), asin(cf128.init(0x0p+0, -0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x8.990ce59d04a88bae6eb82b0af69p-1028, -0x1.31dc0090b63d86827e4baaad1909p+0), asin(cf128.init(0xf.8p-1028, -0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0x1.31dc0090b63d86827e4baaad1909p+0), asin(cf128.init(-0x0p+0, 0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(-0x4.7006a80efa25716249a96089c994p-152, 0x1.31dc0090b63d86827e4baaad1909p+0), asin(cf128.init(-0x8p-152, 0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(-0x8.990ce59d04a88bae6eb82b0af69p-1028, 0x1.31dc0090b63d86827e4baaad1909p+0), asin(cf128.init(-0xf.8p-1028, 0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0x1.31dc0090b63d86827e4baaad1909p+0), asin(cf128.init(-0x0p+0, -0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(-0x4.7006a80efa25716249a96089c994p-152, -0x1.31dc0090b63d86827e4baaad1909p+0), asin(cf128.init(-0x8p-152, -0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(-0x8.990ce59d04a88bae6eb82b0af69p-1028, -0x1.31dc0090b63d86827e4baaad1909p+0), asin(cf128.init(-0xf.8p-1028, -0x1.8p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.661657628b04ca5f0210254b4638p-4), asin(cf128.init(0x1.8p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.661657628b04ca5f0210254b4638p-4), asin(cf128.init(0x1.8p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.661657628b04ca5f0210254b4638p-4), asin(cf128.init(0x1.8p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0xf.661657628b04ca5f0210254b4638p-4), asin(cf128.init(-0x1.8p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0xf.661657628b04ca5f0210254b4638p-4), asin(cf128.init(-0x1.8p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0xf.661657628b04ca5f0210254b4638p-4), asin(cf128.init(-0x1.8p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.661657628b04ca5f0210254b4638p-4), asin(cf128.init(0x1.8p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.661657628b04ca5f0210254b4638p-4), asin(cf128.init(0x1.8p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.661657628b04ca5f0210254b4638p-4), asin(cf128.init(0x1.8p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0xf.661657628b04ca5f0210254b4638p-4), asin(cf128.init(-0x1.8p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0xf.661657628b04ca5f0210254b4638p-4), asin(cf128.init(-0x1.8p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0xf.661657628b04ca5f0210254b4638p-4), asin(cf128.init(-0x1.8p+0, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(0x4.7006a80efa25716249a96089c994p-152, 0x1.31dc0090b63d86827e4baaad1909p+0), asin(cf128.init(0x8p-152, 0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0x1.31dc0090b63d86827e4baaad1909p+0), asin(cf128.init(0x0p+0, 0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.380354077d12b8b124d4b044e4cap-1076, 0x1.31dc0090b63d86827e4baaad1909p+0), asin(cf128.init(0x4p-1076, 0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x8.990ce59d04a88bae6eb82b0af68p-16388, 0x1.31dc0090b63d86827e4baaad1909p+0), asin(cf128.init(0xf.8p-16388, 0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x4.7006a80efa25716249a96089c994p-152, -0x1.31dc0090b63d86827e4baaad1909p+0), asin(cf128.init(0x8p-152, -0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0x1.31dc0090b63d86827e4baaad1909p+0), asin(cf128.init(0x0p+0, -0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.380354077d12b8b124d4b044e4cap-1076, -0x1.31dc0090b63d86827e4baaad1909p+0), asin(cf128.init(0x4p-1076, -0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(0x8.990ce59d04a88bae6eb82b0af68p-16388, -0x1.31dc0090b63d86827e4baaad1909p+0), asin(cf128.init(0xf.8p-16388, -0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0x1.31dc0090b63d86827e4baaad1909p+0), asin(cf128.init(-0x0p+0, 0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(-0x4.7006a80efa25716249a96089c994p-152, 0x1.31dc0090b63d86827e4baaad1909p+0), asin(cf128.init(-0x8p-152, 0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(-0x2.380354077d12b8b124d4b044e4cap-1076, 0x1.31dc0090b63d86827e4baaad1909p+0), asin(cf128.init(-0x4p-1076, 0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(-0x8.990ce59d04a88bae6eb82b0af68p-16388, 0x1.31dc0090b63d86827e4baaad1909p+0), asin(cf128.init(-0xf.8p-16388, 0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0x1.31dc0090b63d86827e4baaad1909p+0), asin(cf128.init(-0x0p+0, -0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(-0x4.7006a80efa25716249a96089c994p-152, -0x1.31dc0090b63d86827e4baaad1909p+0), asin(cf128.init(-0x8p-152, -0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(-0x2.380354077d12b8b124d4b044e4cap-1076, -0x1.31dc0090b63d86827e4baaad1909p+0), asin(cf128.init(-0x4p-1076, -0x1.8p+0)));
    // try std.testing.expectEqual(cf128.init(-0x8.990ce59d04a88bae6eb82b0af68p-16388, -0x1.31dc0090b63d86827e4baaad1909p+0), asin(cf128.init(-0xf.8p-16388, -0x1.8p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.661657628b04ca5f0210254b4638p-4), asin(cf128.init(0x1.8p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.661657628b04ca5f0210254b4638p-4), asin(cf128.init(0x1.8p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.661657628b04ca5f0210254b4638p-4), asin(cf128.init(0x1.8p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.661657628b04ca5f0210254b4638p-4), asin(cf128.init(0x1.8p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0xf.661657628b04ca5f0210254b4638p-4), asin(cf128.init(-0x1.8p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0xf.661657628b04ca5f0210254b4638p-4), asin(cf128.init(-0x1.8p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0xf.661657628b04ca5f0210254b4638p-4), asin(cf128.init(-0x1.8p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0xf.661657628b04ca5f0210254b4638p-4), asin(cf128.init(-0x1.8p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.661657628b04ca5f0210254b4638p-4), asin(cf128.init(0x1.8p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.661657628b04ca5f0210254b4638p-4), asin(cf128.init(0x1.8p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.661657628b04ca5f0210254b4638p-4), asin(cf128.init(0x1.8p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.661657628b04ca5f0210254b4638p-4), asin(cf128.init(0x1.8p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0xf.661657628b04ca5f0210254b4638p-4), asin(cf128.init(-0x1.8p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0xf.661657628b04ca5f0210254b4638p-4), asin(cf128.init(-0x1.8p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0xf.661657628b04ca5f0210254b4638p-4), asin(cf128.init(-0x1.8p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0xf.661657628b04ca5f0210254b4638p-4), asin(cf128.init(-0x1.8p+0, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x5.974d6a2eaa791e5431ae391e1f8p-4, 0xe.d170de964f5d75090748cab694p-4), asin(cf128.init(0x8p-4, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.974d6a2eaa791e5431ae391e1f8p-4, -0xe.d170de964f5d75090748cab694p-4), asin(cf128.init(0x8p-4, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.974d6a2eaa791e5431ae391e1f8p-4, 0xe.d170de964f5d75090748cab694p-4), asin(cf128.init(-0x8p-4, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.974d6a2eaa791e5431ae391e1f8p-4, -0xe.d170de964f5d75090748cab694p-4), asin(cf128.init(-0x8p-4, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0xe.55a315408aedba57d18ddd919c98p-4, 0xb.b9c8f86edeb47f0c9aabc8f22f1p-4), asin(cf128.init(0x1p+0, 0x8p-4)));
    try std.testing.expectEqual(cf128.init(-0xe.55a315408aedba57d18ddd919c98p-4, 0xb.b9c8f86edeb47f0c9aabc8f22f1p-4), asin(cf128.init(-0x1p+0, 0x8p-4)));
    try std.testing.expectEqual(cf128.init(0xe.55a315408aedba57d18ddd919c98p-4, -0xb.b9c8f86edeb47f0c9aabc8f22f1p-4), asin(cf128.init(0x1p+0, -0x8p-4)));
    try std.testing.expectEqual(cf128.init(-0xe.55a315408aedba57d18ddd919c98p-4, -0xb.b9c8f86edeb47f0c9aabc8f22f1p-4), asin(cf128.init(-0x1p+0, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x2.d2227fefb78c302b30b41aa58caep-4, 0xe.4787aa0d7d0a7c68f05f6cbceacp-4), asin(cf128.init(0x4p-4, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.d2227fefb78c302b30b41aa58caep-4, -0xe.4787aa0d7d0a7c68f05f6cbceacp-4), asin(cf128.init(0x4p-4, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x2.d2227fefb78c302b30b41aa58caep-4, 0xe.4787aa0d7d0a7c68f05f6cbceacp-4), asin(cf128.init(-0x4p-4, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x2.d2227fefb78c302b30b41aa58caep-4, -0xe.4787aa0d7d0a7c68f05f6cbceacp-4), asin(cf128.init(-0x4p-4, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.14edb2e773d6d4a9f6a56fd0f38cp+0, 0x8.281ac2ec921b31b06a0c6b93987p-4), asin(cf128.init(0x1p+0, 0x4p-4)));
    try std.testing.expectEqual(cf128.init(-0x1.14edb2e773d6d4a9f6a56fd0f38cp+0, 0x8.281ac2ec921b31b06a0c6b93987p-4), asin(cf128.init(-0x1p+0, 0x4p-4)));
    try std.testing.expectEqual(cf128.init(0x1.14edb2e773d6d4a9f6a56fd0f38cp+0, -0x8.281ac2ec921b31b06a0c6b93987p-4), asin(cf128.init(0x1p+0, -0x4p-4)));
    try std.testing.expectEqual(cf128.init(-0x1.14edb2e773d6d4a9f6a56fd0f38cp+0, -0x8.281ac2ec921b31b06a0c6b93987p-4), asin(cf128.init(-0x1p+0, -0x4p-4)));
    // try std.testing.expectEqual(cf128.init(0x5.7ae64f1be7bdad4010d892d450bp-12, 0xe.1a1bda9ed1cea5e015f30c2c5fdp-4), asin(cf128.init(0x7.cp-12, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.7ae64f1be7bdad4010d892d450bp-12, -0xe.1a1bda9ed1cea5e015f30c2c5fdp-4), asin(cf128.init(0x7.cp-12, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.7ae64f1be7bdad4010d892d450bp-12, 0xe.1a1bda9ed1cea5e015f30c2c5fdp-4), asin(cf128.init(-0x7.cp-12, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.7ae64f1be7bdad4010d892d450bp-12, -0xe.1a1bda9ed1cea5e015f30c2c5fdp-4), asin(cf128.init(-0x7.cp-12, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.86fd765f467248c3f67bb931fc45p+0, 0xb.23250757a42f7a1660fea7eb0a68p-8), asin(cf128.init(0x1p+0, 0x7.cp-12)));
    // try std.testing.expectEqual(cf128.init(-0x1.86fd765f467248c3f67bb931fc45p+0, 0xb.23250757a42f7a1660fea7eb0a68p-8), asin(cf128.init(-0x1p+0, 0x7.cp-12)));
    // try std.testing.expectEqual(cf128.init(0x1.86fd765f467248c3f67bb931fc45p+0, -0xb.23250757a42f7a1660fea7eb0a68p-8), asin(cf128.init(0x1p+0, -0x7.cp-12)));
    // try std.testing.expectEqual(cf128.init(-0x1.86fd765f467248c3f67bb931fc45p+0, -0xb.23250757a42f7a1660fea7eb0a68p-8), asin(cf128.init(-0x1p+0, -0x7.cp-12)));
    // try std.testing.expectEqual(cf128.init(0x5.7ae65cd2d07b8af3fea5bee1e1fp-32, 0xe.1a1b30bcea1366b7717f2664641p-4), asin(cf128.init(0x7.cp-32, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.7ae65cd2d07b8af3fea5bee1e1fp-32, -0xe.1a1b30bcea1366b7717f2664641p-4), asin(cf128.init(0x7.cp-32, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.7ae65cd2d07b8af3fea5bee1e1fp-32, 0xe.1a1b30bcea1366b7717f2664641p-4), asin(cf128.init(-0x7.cp-32, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.7ae65cd2d07b8af3fea5bee1e1fp-32, -0xe.1a1b30bcea1366b7717f2664641p-4), asin(cf128.init(-0x7.cp-32, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921cec97c2263875d8c94b142b98p+0, 0x2.c8ac80aee47d2c4db94bba30885p-16), asin(cf128.init(0x1p+0, 0x7.cp-32)));
    // try std.testing.expectEqual(cf128.init(-0x1.921cec97c2263875d8c94b142b98p+0, 0x2.c8ac80aee47d2c4db94bba30885p-16), asin(cf128.init(-0x1p+0, 0x7.cp-32)));
    // try std.testing.expectEqual(cf128.init(0x1.921cec97c2263875d8c94b142b98p+0, -0x2.c8ac80aee47d2c4db94bba30885p-16), asin(cf128.init(0x1p+0, -0x7.cp-32)));
    // try std.testing.expectEqual(cf128.init(-0x1.921cec97c2263875d8c94b142b98p+0, -0x2.c8ac80aee47d2c4db94bba30885p-16), asin(cf128.init(-0x1p+0, -0x7.cp-32)));
    // try std.testing.expectEqual(cf128.init(0x1.5eb99734b41ee2c06d633acbb341p-100, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x1.fp-100, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.5eb99734b41ee2c06d633acbb341p-100, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x1.fp-100, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.5eb99734b41ee2c06d633acbb341p-100, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x1.fp-100, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.5eb99734b41ee2c06d633acbb341p-100, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x1.fp-100, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d12b53f977220ff3e7p+0, 0x5.9159015a3070dd17787e4c897e84p-52), asin(cf128.init(0x1p+0, 0x1.fp-100)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d12b53f977220ff3e7p+0, 0x5.9159015a3070dd17787e4c897e84p-52), asin(cf128.init(-0x1p+0, 0x1.fp-100)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d12b53f977220ff3e7p+0, -0x5.9159015a3070dd17787e4c897e84p-52), asin(cf128.init(0x1p+0, -0x1.fp-100)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d12b53f977220ff3e7p+0, -0x5.9159015a3070dd17787e4c897e84p-52), asin(cf128.init(-0x1p+0, -0x1.fp-100)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f716036b19d65d9a08p-132, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0xf.8p-132, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f716036b19d65d9a08p-132, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0xf.8p-132, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f716036b19d65d9a08p-132, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0xf.8p-132, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f716036b19d65d9a08p-132, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0xf.8p-132, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d184688d94e5ba974p+0, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-68), asin(cf128.init(0x1p+0, 0xf.8p-132)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d184688d94e5ba974p+0, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-68), asin(cf128.init(-0x1p+0, 0xf.8p-132)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d184688d94e5ba974p+0, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-68), asin(cf128.init(0x1p+0, -0xf.8p-132)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d184688d94e5ba974p+0, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-68), asin(cf128.init(-0x1p+0, -0xf.8p-132)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9baa54p-152, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.5eb99734b41ee2c06d633acbb341p-1000, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x1.fp-1000, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9baa54p-152, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.5eb99734b41ee2c06d633acbb341p-1000, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x1.fp-1000, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9baa54p-152, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.5eb99734b41ee2c06d633acbb341p-1000, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x1.fp-1000, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9baa54p-152, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.5eb99734b41ee2c06d633acbb341p-1000, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x1.fp-1000, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469895f83da34bap+0, 0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), asin(cf128.init(0x1p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.645640568c1c3745de1f93225c09p-500), asin(cf128.init(0x1p+0, 0x1.fp-1000)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469895f83da34bap+0, 0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), asin(cf128.init(-0x1p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x1.645640568c1c3745de1f93225c09p-500), asin(cf128.init(-0x1p+0, 0x1.fp-1000)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), asin(cf128.init(0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469895f83da34bap+0, -0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(0x1p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.645640568c1c3745de1f93225c09p-500), asin(cf128.init(0x1p+0, -0x1.fp-1000)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), asin(cf128.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469895f83da34bap+0, -0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(-0x1p+0, -0x8p-152)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x1.645640568c1c3745de1f93225c09p-500), asin(cf128.init(-0x1p+0, -0x1.fp-1000)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9baa54p-152, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f716036b19d65d9a08p-1028, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0xf.8p-1028, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9baa54p-152, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f716036b19d65d9a08p-1028, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0xf.8p-1028, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9baa54p-152, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f716036b19d65d9a08p-1028, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0xf.8p-1028, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9baa54p-152, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f716036b19d65d9a08p-1028, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0xf.8p-1028, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469895f83da34bap+0, 0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), asin(cf128.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-516), asin(cf128.init(0x1p+0, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469895f83da34bap+0, 0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), asin(cf128.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-516), asin(cf128.init(-0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), asin(cf128.init(0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469895f83da34bap+0, -0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-516), asin(cf128.init(0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), asin(cf128.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469895f83da34bap+0, -0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-516), asin(cf128.init(-0x1p+0, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9baa54p-152, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52ap-1076, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x4p-1076, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.5eb99734b41ee2c06d633acbb341p-10000, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x1.fp-10000, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9baa54p-152, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52ap-1076, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x4p-1076, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.5eb99734b41ee2c06d633acbb341p-10000, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x1.fp-10000, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9baa54p-152, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x2.d413cccfe779921165f626cdd52ap-1076, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x4p-1076, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.5eb99734b41ee2c06d633acbb341p-10000, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x1.fp-10000, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9baa54p-152, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x2.d413cccfe779921165f626cdd52ap-1076, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x4p-1076, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.5eb99734b41ee2c06d633acbb341p-10000, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x1.fp-10000, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469895f83da34bap+0, 0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), asin(cf128.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x8p-540), asin(cf128.init(0x1p+0, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.645640568c1c3745de1f93225c09p-5000), asin(cf128.init(0x1p+0, 0x1.fp-10000)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469895f83da34bap+0, 0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), asin(cf128.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x8p-540), asin(cf128.init(-0x1p+0, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x1.645640568c1c3745de1f93225c09p-5000), asin(cf128.init(-0x1p+0, 0x1.fp-10000)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), asin(cf128.init(0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469895f83da34bap+0, -0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x8p-540), asin(cf128.init(0x1p+0, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.645640568c1c3745de1f93225c09p-5000), asin(cf128.init(0x1p+0, -0x1.fp-10000)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), asin(cf128.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469895f83da34bap+0, -0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x8p-540), asin(cf128.init(-0x1p+0, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x1.645640568c1c3745de1f93225c09p-5000), asin(cf128.init(-0x1p+0, -0x1.fp-10000)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9baa54p-152, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52ap-1076, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x4p-1076, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f716036b19d65d9ap-16388, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0xf.8p-16388, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9baa54p-152, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52ap-1076, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x4p-1076, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f716036b19d65d9ap-16388, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0xf.8p-16388, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9baa54p-152, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x2.d413cccfe779921165f626cdd52ap-1076, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x4p-1076, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f716036b19d65d9ap-16388, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0xf.8p-16388, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x0p+0, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9baa54p-152, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x8p-152, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x2.d413cccfe779921165f626cdd52ap-1076, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x4p-1076, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f716036b19d65d9ap-16388, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0xf.8p-16388, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469895f83da34bap+0, 0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), asin(cf128.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x8p-540), asin(cf128.init(0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196), asin(cf128.init(0x1p+0, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469895f83da34bap+0, 0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), asin(cf128.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x8p-540), asin(cf128.init(-0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196), asin(cf128.init(-0x1p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), asin(cf128.init(0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469895f83da34bap+0, -0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x8p-540), asin(cf128.init(0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196), asin(cf128.init(0x1p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), asin(cf128.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469895f83da34bap+0, -0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x8p-540), asin(cf128.init(-0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196), asin(cf128.init(-0x1p+0, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e4fde9d6d9c2edaa069f5e81p-24, 0xe.1a1b475d8879e549549f948a064p-4), asin(cf128.init(0x2p-24, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e4fde9d6d9c2edaa069f5e81p-24, -0xe.1a1b475d8879e549549f948a064p-4), asin(cf128.init(0x2p-24, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.6a09e4fde9d6d9c2edaa069f5e81p-24, 0xe.1a1b475d8879e549549f948a064p-4), asin(cf128.init(-0x2p-24, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.6a09e4fde9d6d9c2edaa069f5e81p-24, -0xe.1a1b475d8879e549549f948a064p-4), asin(cf128.init(-0x2p-24, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.9211252bae9f8badef5f68fe9431p+0, 0x2.3286b92909b7050671c3743fdfcp-12), asin(cf128.init(0x1.000002p+0, 0x2p-24)));
    // try std.testing.expectEqual(cf128.init(-0x1.9211252bae9f8badef5f68fe9431p+0, 0x2.3286b92909b7050671c3743fdfcp-12), asin(cf128.init(-0x1.000002p+0, 0x2p-24)));
    // try std.testing.expectEqual(cf128.init(0x1.9211252bae9f8badef5f68fe9431p+0, -0x2.3286b92909b7050671c3743fdfcp-12), asin(cf128.init(0x1.000002p+0, -0x2p-24)));
    // try std.testing.expectEqual(cf128.init(-0x1.9211252bae9f8badef5f68fe9431p+0, -0x2.3286b92909b7050671c3743fdfcp-12), asin(cf128.init(-0x1.000002p+0, -0x2p-24)));
    try std.testing.expectEqual(cf128.init(0xa.f5ccaeafd442eb48d65189b90e98p-132, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0xf.8p-132, 0x1.000002p+0)));
    try std.testing.expectEqual(cf128.init(0xa.f5ccaeafd442eb48d65189b90e98p-132, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0xf.8p-132, -0x1.000002p+0)));
    try std.testing.expectEqual(cf128.init(-0xa.f5ccaeafd442eb48d65189b90e98p-132, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0xf.8p-132, 0x1.000002p+0)));
    try std.testing.expectEqual(cf128.init(-0xa.f5ccaeafd442eb48d65189b90e98p-132, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0xf.8p-132, -0x1.000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, 0xf.8p-132)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, 0xf.8p-132)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, -0xf.8p-132)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, -0xf.8p-132)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0x0p+0, 0x1.000002p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0x0p+0, -0x1.000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0xb.504f27ef4eb8b0cf50d84c19dd08p-56, 0xe.1a1b475d886e94fa2cb045e524dp-4), asin(cf128.init(0x1p-52, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0xb.504f333f9de6484597d89b37543p-56, 0xe.1a1b30bcea13660d8f99e8dd27fp-4), asin(cf128.init(0x1p-52, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0xb.504f333f9de5edc31e3e9e482358p-56, 0xe.1a1b30bcea141b1282cde2bb89ap-4), asin(cf128.init(0x1p-52, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0xb.504f333f9de6484597d89b37543p-56, -0xe.1a1b30bcea13660d8f99e8dd27fp-4), asin(cf128.init(0x1p-52, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0xb.504f27ef4eb8b0cf50d84c19dd08p-56, -0xe.1a1b475d886e94fa2cb045e524dp-4), asin(cf128.init(0x1p-52, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0xb.504f333f9de5edc31e3e9e482358p-56, -0xe.1a1b30bcea141b1282cde2bb89ap-4), asin(cf128.init(0x1p-52, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf128.init(-0xb.504f27ef4eb8b0cf50d84c19dd08p-56, 0xe.1a1b475d886e94fa2cb045e524dp-4), asin(cf128.init(-0x1p-52, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0xb.504f333f9de6484597d89b37543p-56, 0xe.1a1b30bcea13660d8f99e8dd27fp-4), asin(cf128.init(-0x1p-52, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0xb.504f333f9de5edc31e3e9e482358p-56, 0xe.1a1b30bcea141b1282cde2bb89ap-4), asin(cf128.init(-0x1p-52, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(-0xb.504f333f9de6484597d89b37543p-56, -0xe.1a1b30bcea13660d8f99e8dd27fp-4), asin(cf128.init(-0x1p-52, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0xb.504f27ef4eb8b0cf50d84c19dd08p-56, -0xe.1a1b475d886e94fa2cb045e524dp-4), asin(cf128.init(-0x1p-52, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0xb.504f333f9de5edc31e3e9e482358p-56, -0xe.1a1b30bcea141b1282cde2bb89ap-4), asin(cf128.init(-0x1p-52, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442518469c98cc4e705b8p+0, 0x1.ffffffaaaaaad12110fa3da369b2p-12), asin(cf128.init(0x1.000002p+0, 0x1p-52)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898d1a6c570ep+0, 0x4.0000000000000555555555555544p-28), asin(cf128.init(0x1p+0, 0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x1.921fb51b122b9161a9d2d12fca11p+0, 0x6.3710864f5700aaeade062aa6c66p-28), asin(cf128.init(0x1.0000000000001p+0, 0x1p-52)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898d1a6c570ep+0, 0x4.0000000000000555555555555544p-28), asin(cf128.init(-0x1p+0, 0x1p-52)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442518469c98cc4e705b8p+0, 0x1.ffffffaaaaaad12110fa3da369b2p-12), asin(cf128.init(-0x1.000002p+0, 0x1p-52)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb51b122b9161a9d2d12fca11p+0, 0x6.3710864f5700aaeade062aa6c66p-28), asin(cf128.init(-0x1.0000000000001p+0, 0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442518469c98cc4e705b8p+0, -0x1.ffffffaaaaaad12110fa3da369b2p-12), asin(cf128.init(0x1.000002p+0, -0x1p-52)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898d1a6c570ep+0, -0x4.0000000000000555555555555544p-28), asin(cf128.init(0x1p+0, -0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x1.921fb51b122b9161a9d2d12fca11p+0, -0x6.3710864f5700aaeade062aa6c66p-28), asin(cf128.init(0x1.0000000000001p+0, -0x1p-52)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898d1a6c570ep+0, -0x4.0000000000000555555555555544p-28), asin(cf128.init(-0x1p+0, -0x1p-52)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442518469c98cc4e705b8p+0, -0x1.ffffffaaaaaad12110fa3da369b2p-12), asin(cf128.init(-0x1.000002p+0, -0x1p-52)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb51b122b9161a9d2d12fca11p+0, -0x6.3710864f5700aaeade062aa6c66p-28), asin(cf128.init(-0x1.0000000000001p+0, -0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x5.a82793f7a75c5867a86c260ceecp-152, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9baa54p-152, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef2f6e18f1f4f2411e8p-152, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(0x8p-152, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0xa.f5ccaeafd442eb48d65189b90e98p-1028, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0xf.8p-1028, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f716036b19d65d9a08p-1028, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0xf.8p-1028, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f6be55054ca955e2b8p-1028, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(0xf.8p-1028, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9baa54p-152, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x5.a82793f7a75c5867a86c260ceecp-152, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0x8p-152, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef2f6e18f1f4f2411e8p-152, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(0x8p-152, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f716036b19d65d9a08p-1028, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0xf.8p-1028, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0xa.f5ccaeafd442eb48d65189b90e98p-1028, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0xf.8p-1028, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f6be55054ca955e2b8p-1028, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(0xf.8p-1028, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(-0x0p+0, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf128.init(-0x5.a82793f7a75c5867a86c260ceecp-152, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9baa54p-152, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef2f6e18f1f4f2411e8p-152, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(-0x8p-152, 0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf128.init(-0xa.f5ccaeafd442eb48d65189b90e98p-1028, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0xf.8p-1028, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f716036b19d65d9a08p-1028, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0xf.8p-1028, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f6be55054ca955e2b8p-1028, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(-0xf.8p-1028, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(-0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9baa54p-152, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x5.a82793f7a75c5867a86c260ceecp-152, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0x8p-152, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef2f6e18f1f4f2411e8p-152, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(-0x8p-152, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f716036b19d65d9a08p-1028, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0xf.8p-1028, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0xa.f5ccaeafd442eb48d65189b90e98p-1028, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0xf.8p-1028, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f6be55054ca955e2b8p-1028, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(-0xf.8p-1028, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469895f83da34bap+0, 0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), asin(cf128.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-516), asin(cf128.init(0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(0x1.0000000000001p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(0x1.0000000000001p+0, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469895f83da34bap+0, 0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), asin(cf128.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-516), asin(cf128.init(-0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(-0x1.0000000000001p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(-0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(-0x1.0000000000001p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), asin(cf128.init(0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469895f83da34bap+0, -0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-516), asin(cf128.init(0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(0x1.0000000000001p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(0x1.0000000000001p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), asin(cf128.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469895f83da34bap+0, -0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-516), asin(cf128.init(-0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(-0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(-0x1.0000000000001p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(-0x1.0000000000001p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(-0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(-0x0p+0, -0x1.0000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), asin(cf128.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), asin(cf128.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(-0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), asin(cf128.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), asin(cf128.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(-0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.6a09e4fde9d71619ea1b09833bbp-64, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0x2p-64, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc908b2fb1366ea95p-64, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x2p-64, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcbdb863c7d3c9047ap-64, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(0x2p-64, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc90748f12cfef6d9p-64, 0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(0x2p-64, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc908b2fb1366ea95p-64, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x2p-64, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x1.6a09e4fde9d71619ea1b09833bbp-64, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0x2p-64, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcbdb863c7d3c9047ap-64, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(0x2p-64, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc90748f12cfef6d9p-64, -0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(0x2p-64, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.6a09e4fde9d71619ea1b09833bbp-64, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0x2p-64, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.6a09e667f3bcc908b2fb1366ea95p-64, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x2p-64, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.6a09e667f3bcbdb863c7d3c9047ap-64, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(-0x2p-64, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.6a09e667f3bcc90748f12cfef6d9p-64, 0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(-0x2p-64, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.6a09e667f3bcc908b2fb1366ea95p-64, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x2p-64, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.6a09e4fde9d71619ea1b09833bbp-64, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0x2p-64, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.6a09e667f3bcbdb863c7d3c9047ap-64, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(-0x2p-64, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.6a09e667f3bcc90748f12cfef6d9p-64, -0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(-0x2p-64, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d174698994c516fbb8p+0, 0x1.ffffffaaaaaad11110fa75a369e4p-12), asin(cf128.init(0x1.000002p+0, 0x2p-64)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb542d8c79e0195cffc0e8b14p+0, 0x1.6a09e667f3bcc908ef520f22e88ap-32), asin(cf128.init(0x1p+0, 0x2p-64)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb5443d295cd2bdd199e6446ap+0, 0x5.a8279c73e2bc6366ad7b0220ed14p-28), asin(cf128.init(0x1.0000000000001p+0, 0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54359cffaa1d34b83e3c7ebp+0, 0x2.3286b95ff53f16aed3237f4704acp-32), asin(cf128.init(0x1.0000000000000002p+0, 0x2p-64)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb542d8c79e0195cffc0e8b14p+0, 0x1.6a09e667f3bcc908ef520f22e88ap-32), asin(cf128.init(-0x1p+0, 0x2p-64)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d174698994c516fbb8p+0, 0x1.ffffffaaaaaad11110fa75a369e4p-12), asin(cf128.init(-0x1.000002p+0, 0x2p-64)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb5443d295cd2bdd199e6446ap+0, 0x5.a8279c73e2bc6366ad7b0220ed14p-28), asin(cf128.init(-0x1.0000000000001p+0, 0x2p-64)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54359cffaa1d34b83e3c7ebp+0, 0x2.3286b95ff53f16aed3237f4704acp-32), asin(cf128.init(-0x1.0000000000000002p+0, 0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d174698994c516fbb8p+0, -0x1.ffffffaaaaaad11110fa75a369e4p-12), asin(cf128.init(0x1.000002p+0, -0x2p-64)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb542d8c79e0195cffc0e8b14p+0, -0x1.6a09e667f3bcc908ef520f22e88ap-32), asin(cf128.init(0x1p+0, -0x2p-64)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb5443d295cd2bdd199e6446ap+0, -0x5.a8279c73e2bc6366ad7b0220ed14p-28), asin(cf128.init(0x1.0000000000001p+0, -0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54359cffaa1d34b83e3c7ebp+0, -0x2.3286b95ff53f16aed3237f4704acp-32), asin(cf128.init(0x1.0000000000000002p+0, -0x2p-64)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb542d8c79e0195cffc0e8b14p+0, -0x1.6a09e667f3bcc908ef520f22e88ap-32), asin(cf128.init(-0x1p+0, -0x2p-64)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d174698994c516fbb8p+0, -0x1.ffffffaaaaaad11110fa75a369e4p-12), asin(cf128.init(-0x1.000002p+0, -0x2p-64)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb5443d295cd2bdd199e6446ap+0, -0x5.a8279c73e2bc6366ad7b0220ed14p-28), asin(cf128.init(-0x1.0000000000001p+0, -0x2p-64)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54359cffaa1d34b83e3c7ebp+0, -0x2.3286b95ff53f16aed3237f4704acp-32), asin(cf128.init(-0x1.0000000000000002p+0, -0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x5.a82793f7a75c5867a86c260ceecp-152, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9baa54p-152, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef2f6e18f1f4f2411e8p-152, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(0x8p-152, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef3241d23c4b3fbdb64p-152, 0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(0x8p-152, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(0x0p+0, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0x2.d413c9fbd3ae2c33d4361306776p-1076, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0x4p-1076, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52ap-1076, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x4p-1076, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe7797b70c78fa79208f4p-1076, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(0x4p-1076, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779920e91e259fdedb2p-1076, 0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(0x4p-1076, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccaeafd442eb48d65189b90e8p-16388, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0xf.8p-16388, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f716036b19d65d9ap-16388, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0xf.8p-16388, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f6be55054ca955e2cp-16388, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(0xf.8p-16388, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f715f8754d1cb7f9p-16388, 0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(0xf.8p-16388, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9baa54p-152, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x5.a82793f7a75c5867a86c260ceecp-152, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0x8p-152, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef2f6e18f1f4f2411e8p-152, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(0x8p-152, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef3241d23c4b3fbdb64p-152, -0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(0x8p-152, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(0x0p+0, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52ap-1076, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x4p-1076, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x2.d413c9fbd3ae2c33d4361306776p-1076, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0x4p-1076, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe7797b70c78fa79208f4p-1076, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(0x4p-1076, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779920e91e259fdedb2p-1076, -0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(0x4p-1076, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f716036b19d65d9ap-16388, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0xf.8p-16388, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccaeafd442eb48d65189b90e8p-16388, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0xf.8p-16388, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f6be55054ca955e2cp-16388, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(0xf.8p-16388, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f715f8754d1cb7f9p-16388, -0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(0xf.8p-16388, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(-0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(-0x0p+0, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(-0x5.a82793f7a75c5867a86c260ceecp-152, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9baa54p-152, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef2f6e18f1f4f2411e8p-152, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(-0x8p-152, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef3241d23c4b3fbdb64p-152, 0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(-0x8p-152, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(-0x2.d413c9fbd3ae2c33d4361306776p-1076, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0x4p-1076, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x2.d413cccfe779921165f626cdd52ap-1076, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x4p-1076, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x2.d413cccfe7797b70c78fa79208f4p-1076, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(-0x4p-1076, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(-0x2.d413cccfe779920e91e259fdedb2p-1076, 0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(-0x4p-1076, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccaeafd442eb48d65189b90e8p-16388, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0xf.8p-16388, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f716036b19d65d9ap-16388, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0xf.8p-16388, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f6be55054ca955e2cp-16388, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(-0xf.8p-16388, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f715f8754d1cb7f9p-16388, 0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(-0xf.8p-16388, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(-0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(-0x0p+0, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9baa54p-152, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x5.a82793f7a75c5867a86c260ceecp-152, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0x8p-152, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef2f6e18f1f4f2411e8p-152, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(-0x8p-152, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef3241d23c4b3fbdb64p-152, -0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(-0x8p-152, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x2.d413cccfe779921165f626cdd52ap-1076, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x4p-1076, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x2.d413c9fbd3ae2c33d4361306776p-1076, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0x4p-1076, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x2.d413cccfe7797b70c78fa79208f4p-1076, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(-0x4p-1076, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(-0x2.d413cccfe779920e91e259fdedb2p-1076, -0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(-0x4p-1076, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f716036b19d65d9ap-16388, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0xf.8p-16388, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccaeafd442eb48d65189b90e8p-16388, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0xf.8p-16388, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f6be55054ca955e2cp-16388, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(-0xf.8p-16388, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f715f8754d1cb7f9p-16388, -0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(-0xf.8p-16388, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469895f83da34bap+0, 0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), asin(cf128.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x8p-540), asin(cf128.init(0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196), asin(cf128.init(0x1p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(0x1.0000000000001p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(0x1.0000000000001p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(0x1.0000000000001p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(0x1.0000000000000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(0x1.0000000000000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(0x1.0000000000000002p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(0x1.0000000000000002p+0, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469895f83da34bap+0, 0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), asin(cf128.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x8p-540), asin(cf128.init(-0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196), asin(cf128.init(-0x1p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(-0x1.0000000000001p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(-0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(-0x1.0000000000001p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(-0x1.0000000000001p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(-0x1.0000000000000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(-0x1.0000000000000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(-0x1.0000000000000002p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(-0x1.0000000000000002p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), asin(cf128.init(0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469895f83da34bap+0, -0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x8p-540), asin(cf128.init(0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196), asin(cf128.init(0x1p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(0x1.0000000000001p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(0x1.0000000000001p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(0x1.0000000000001p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(0x1.0000000000000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(0x1.0000000000000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(0x1.0000000000000002p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(0x1.0000000000000002p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), asin(cf128.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469895f83da34bap+0, -0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x8p-540), asin(cf128.init(-0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196), asin(cf128.init(-0x1p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(-0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(-0x1.0000000000001p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(-0x1.0000000000001p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(-0x1.0000000000001p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(-0x1.0000000000000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(-0x1.0000000000000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(-0x1.0000000000000002p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(-0x1.0000000000000002p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(0x0p+0, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(0x0p+0, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(-0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(-0x0p+0, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(-0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(-0x0p+0, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), asin(cf128.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(0x1.0000000000000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), asin(cf128.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(-0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(-0x1.0000000000000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), asin(cf128.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(0x1.0000000000000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), asin(cf128.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(-0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(-0x1.0000000000000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x2.d413c9fbd3ae2c33d4361306776p-108, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0x4p-108, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52ap-108, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x4p-108, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe7797b70c78fa79208f4p-108, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(0x4p-108, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779920e91e259fdedb2p-108, 0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(0x4p-108, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd476p-108, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(0x4p-108, 0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52ap-108, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x4p-108, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x2.d413c9fbd3ae2c33d4361306776p-108, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0x4p-108, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe7797b70c78fa79208f4p-108, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(0x4p-108, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779920e91e259fdedb2p-108, -0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(0x4p-108, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd476p-108, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(0x4p-108, -0x1.000000000000000000000000008p+0)));
    try std.testing.expectEqual(cf128.init(-0x2.d413c9fbd3ae2c33d4361306776p-108, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0x4p-108, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x2.d413cccfe779921165f626cdd52ap-108, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x4p-108, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x2.d413cccfe7797b70c78fa79208f4p-108, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(-0x4p-108, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(-0x2.d413cccfe779920e91e259fdedb2p-108, 0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(-0x4p-108, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(-0x2.d413cccfe779921165f626cdd476p-108, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(-0x4p-108, 0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(-0x2.d413cccfe779921165f626cdd52ap-108, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x4p-108, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x2.d413c9fbd3ae2c33d4361306776p-108, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0x4p-108, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x2.d413cccfe7797b70c78fa79208f4p-108, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(-0x4p-108, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(-0x2.d413cccfe779920e91e259fdedb2p-108, -0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(-0x4p-108, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(-0x2.d413cccfe779921165f626cdd476p-108, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(-0x4p-108, -0x1.000000000000000000000000008p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51501b8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, 0x4p-108)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d17c69898cc51701b8p+0, 0x8.0000000000000000000000000028p-56), asin(cf128.init(0x1p+0, 0x4p-108)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898c10120e84p+0, 0x5.a827999fcef31c97ec74cddd10f8p-28), asin(cf128.init(0x1.0000000000001p+0, 0x4p-108)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469896cc51701b8p+0, 0x1.ffffffffffffffffaaaaabaaaaabp-32), asin(cf128.init(0x1.0000000000000002p+0, 0x4p-108)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d180867aa53a381d8ap+0, 0x1.077225f1da571bac72dad86476ffp-52), asin(cf128.init(0x1.000000000000000000000000008p+0, 0x4p-108)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d17c69898cc51701b8p+0, 0x8.0000000000000000000000000028p-56), asin(cf128.init(-0x1p+0, 0x4p-108)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51501b8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, 0x4p-108)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898c10120e84p+0, 0x5.a827999fcef31c97ec74cddd10f8p-28), asin(cf128.init(-0x1.0000000000001p+0, 0x4p-108)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469896cc51701b8p+0, 0x1.ffffffffffffffffaaaaabaaaaabp-32), asin(cf128.init(-0x1.0000000000000002p+0, 0x4p-108)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d180867aa53a381d8ap+0, 0x1.077225f1da571bac72dad86476ffp-52), asin(cf128.init(-0x1.000000000000000000000000008p+0, 0x4p-108)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51501b8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, -0x4p-108)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d17c69898cc51701b8p+0, -0x8.0000000000000000000000000028p-56), asin(cf128.init(0x1p+0, -0x4p-108)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898c10120e84p+0, -0x5.a827999fcef31c97ec74cddd10f8p-28), asin(cf128.init(0x1.0000000000001p+0, -0x4p-108)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469896cc51701b8p+0, -0x1.ffffffffffffffffaaaaabaaaaabp-32), asin(cf128.init(0x1.0000000000000002p+0, -0x4p-108)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d180867aa53a381d8ap+0, -0x1.077225f1da571bac72dad86476ffp-52), asin(cf128.init(0x1.000000000000000000000000008p+0, -0x4p-108)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d17c69898cc51701b8p+0, -0x8.0000000000000000000000000028p-56), asin(cf128.init(-0x1p+0, -0x4p-108)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51501b8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, -0x4p-108)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898c10120e84p+0, -0x5.a827999fcef31c97ec74cddd10f8p-28), asin(cf128.init(-0x1.0000000000001p+0, -0x4p-108)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469896cc51701b8p+0, -0x1.ffffffffffffffffaaaaabaaaaabp-32), asin(cf128.init(-0x1.0000000000000002p+0, -0x4p-108)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d180867aa53a381d8ap+0, -0x1.077225f1da571bac72dad86476ffp-52), asin(cf128.init(-0x1.000000000000000000000000008p+0, -0x4p-108)));
    try std.testing.expectEqual(cf128.init(0x5.a82793f7a75c5867a86c260ceecp-152, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9baa54p-152, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef2f6e18f1f4f2411e8p-152, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(0x8p-152, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef3241d23c4b3fbdb64p-152, 0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(0x8p-152, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9ba8ecp-152, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(0x8p-152, 0x1.000000000000000000000000008p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(0x0p+0, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(0x0p+0, 0x1.000000000000000000000000008p+0)));
    try std.testing.expectEqual(cf128.init(0xa.f5ccaeafd442eb48d65189b90e98p-1028, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0xf.8p-1028, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f716036b19d65d9a08p-1028, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0xf.8p-1028, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f6be55054ca955e2b8p-1028, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(0xf.8p-1028, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f715f8754d1cb7f91p-1028, 0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(0xf.8p-1028, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f716036b19d65d9748p-1028, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(0xf.8p-1028, 0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9baa54p-152, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x5.a82793f7a75c5867a86c260ceecp-152, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0x8p-152, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef2f6e18f1f4f2411e8p-152, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(0x8p-152, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef3241d23c4b3fbdb64p-152, -0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(0x8p-152, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9ba8ecp-152, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(0x8p-152, -0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(0x0p+0, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(0x0p+0, -0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f716036b19d65d9a08p-1028, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0xf.8p-1028, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0xa.f5ccaeafd442eb48d65189b90e98p-1028, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0xf.8p-1028, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f6be55054ca955e2b8p-1028, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(0xf.8p-1028, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f715f8754d1cb7f91p-1028, -0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(0xf.8p-1028, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f716036b19d65d9748p-1028, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(0xf.8p-1028, -0x1.000000000000000000000000008p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(-0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(-0x0p+0, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(-0x0p+0, 0x1.000000000000000000000000008p+0)));
    try std.testing.expectEqual(cf128.init(-0x5.a82793f7a75c5867a86c260ceecp-152, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9baa54p-152, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef2f6e18f1f4f2411e8p-152, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(-0x8p-152, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef3241d23c4b3fbdb64p-152, 0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(-0x8p-152, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9ba8ecp-152, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(-0x8p-152, 0x1.000000000000000000000000008p+0)));
    try std.testing.expectEqual(cf128.init(-0xa.f5ccaeafd442eb48d65189b90e98p-1028, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0xf.8p-1028, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f716036b19d65d9a08p-1028, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0xf.8p-1028, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f6be55054ca955e2b8p-1028, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(-0xf.8p-1028, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f715f8754d1cb7f91p-1028, 0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(-0xf.8p-1028, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f716036b19d65d9748p-1028, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(-0xf.8p-1028, 0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(-0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(-0x0p+0, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(-0x0p+0, -0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9baa54p-152, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x5.a82793f7a75c5867a86c260ceecp-152, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0x8p-152, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef2f6e18f1f4f2411e8p-152, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(-0x8p-152, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef3241d23c4b3fbdb64p-152, -0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(-0x8p-152, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9ba8ecp-152, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(-0x8p-152, -0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f716036b19d65d9a08p-1028, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0xf.8p-1028, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0xa.f5ccaeafd442eb48d65189b90e98p-1028, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0xf.8p-1028, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f6be55054ca955e2b8p-1028, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(-0xf.8p-1028, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f715f8754d1cb7f91p-1028, -0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(-0xf.8p-1028, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f716036b19d65d9748p-1028, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(-0xf.8p-1028, -0x1.000000000000000000000000008p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469895f83da34bap+0, 0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), asin(cf128.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-516), asin(cf128.init(0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(0x1.0000000000001p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(0x1.0000000000001p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(0x1.0000000000000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(0x1.0000000000000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(0x1.0000000000000002p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51681b8p+0, 0x1.00000000000000000000001ffff5p-52), asin(cf128.init(0x1.000000000000000000000000008p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.ffffffffffffffffffffffffff58p-56), asin(cf128.init(0x1.000000000000000000000000008p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.ffffffffffffffffffffffffff58p-56), asin(cf128.init(0x1.000000000000000000000000008p+0, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469895f83da34bap+0, 0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), asin(cf128.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-516), asin(cf128.init(-0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(-0x1.0000000000001p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(-0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(-0x1.0000000000001p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(-0x1.0000000000000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(-0x1.0000000000000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(-0x1.0000000000000002p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51681b8p+0, 0x1.00000000000000000000001ffff5p-52), asin(cf128.init(-0x1.000000000000000000000000008p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0xf.ffffffffffffffffffffffffff58p-56), asin(cf128.init(-0x1.000000000000000000000000008p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0xf.ffffffffffffffffffffffffff58p-56), asin(cf128.init(-0x1.000000000000000000000000008p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), asin(cf128.init(0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469895f83da34bap+0, -0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-516), asin(cf128.init(0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(0x1.0000000000001p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(0x1.0000000000001p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(0x1.0000000000000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(0x1.0000000000000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(0x1.0000000000000002p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.ffffffffffffffffffffffffff58p-56), asin(cf128.init(0x1.000000000000000000000000008p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51681b8p+0, -0x1.00000000000000000000001ffff5p-52), asin(cf128.init(0x1.000000000000000000000000008p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.ffffffffffffffffffffffffff58p-56), asin(cf128.init(0x1.000000000000000000000000008p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), asin(cf128.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469895f83da34bap+0, -0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-516), asin(cf128.init(-0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(-0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(-0x1.0000000000001p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(-0x1.0000000000001p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(-0x1.0000000000000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(-0x1.0000000000000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(-0x1.0000000000000002p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0xf.ffffffffffffffffffffffffff58p-56), asin(cf128.init(-0x1.000000000000000000000000008p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51681b8p+0, -0x1.00000000000000000000001ffff5p-52), asin(cf128.init(-0x1.000000000000000000000000008p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0xf.ffffffffffffffffffffffffff58p-56), asin(cf128.init(-0x1.000000000000000000000000008p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(0x0p+0, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(0x0p+0, 0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(0x0p+0, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(0x0p+0, -0x1.000000000000000000000000008p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(-0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(-0x0p+0, 0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(-0x0p+0, 0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(-0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(-0x0p+0, -0x1.0000000000000002p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(-0x0p+0, -0x1.000000000000000000000000008p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), asin(cf128.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(0x1.0000000000000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.ffffffffffffffffffffffffff58p-56), asin(cf128.init(0x1.000000000000000000000000008p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), asin(cf128.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(-0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(-0x1.0000000000000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0xf.ffffffffffffffffffffffffff58p-56), asin(cf128.init(-0x1.000000000000000000000000008p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), asin(cf128.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(0x1.0000000000000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.ffffffffffffffffffffffffff58p-56), asin(cf128.init(0x1.000000000000000000000000008p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), asin(cf128.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(-0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(-0x1.0000000000000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0xf.ffffffffffffffffffffffffff58p-56), asin(cf128.init(-0x1.000000000000000000000000008p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x5.a82793f7a75c5867a86c260ceecp-116, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0x8p-116, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9baa54p-116, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x8p-116, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef2f6e18f1f4f2411e8p-116, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(0x8p-116, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef3241d23c4b3fbdb64p-116, 0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(0x8p-116, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9baa54p-116, 0xe.1a1b30bcea13660d8f99e8dd252p-4), asin(cf128.init(0x8p-116, 0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9ba8ecp-116, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(0x8p-116, 0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9baa54p-116, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x8p-116, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x5.a82793f7a75c5867a86c260ceecp-116, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0x8p-116, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef2f6e18f1f4f2411e8p-116, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(0x8p-116, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef3241d23c4b3fbdb64p-116, -0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(0x8p-116, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9baa54p-116, -0xe.1a1b30bcea13660d8f99e8dd252p-4), asin(cf128.init(0x8p-116, -0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9ba8ecp-116, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(0x8p-116, -0x1.000000000000000000000000008p+0)));
    try std.testing.expectEqual(cf128.init(-0x5.a82793f7a75c5867a86c260ceecp-116, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0x8p-116, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9baa54p-116, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x8p-116, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef2f6e18f1f4f2411e8p-116, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(-0x8p-116, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef3241d23c4b3fbdb64p-116, 0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(-0x8p-116, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9baa54p-116, 0xe.1a1b30bcea13660d8f99e8dd252p-4), asin(cf128.init(-0x8p-116, 0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9ba8ecp-116, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(-0x8p-116, 0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9baa54p-116, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x8p-116, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x5.a82793f7a75c5867a86c260ceecp-116, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0x8p-116, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef2f6e18f1f4f2411e8p-116, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(-0x8p-116, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef3241d23c4b3fbdb64p-116, -0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(-0x8p-116, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9baa54p-116, -0xe.1a1b30bcea13660d8f99e8dd252p-4), asin(cf128.init(-0x8p-116, -0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9ba8ecp-116, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(-0x8p-116, -0x1.000000000000000000000000008p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc516fdb8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, 0x8p-116)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d183b48499911d2354p+0, 0xb.504f333f9de6484597d89b3754bp-60), asin(cf128.init(0x1p+0, 0x8p-116)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc3acf7d2p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(0x1.0000000000001p+0, 0x8p-116)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898c851701b8p+0, 0x1.ffffffffffffffffaaaaaaaaaeabp-32), asin(cf128.init(0x1.0000000000000002p+0, 0x8p-116)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d1841195f3dcd7aa02p+0, 0x1.749199c6dc180964f2cb6bc17b15p-56), asin(cf128.init(0x1.0000000000000000000000000001p+0, 0x8p-116)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18461898dc51691b8p+0, 0x1.00001ffff600053ffca6025fbe2ap-52), asin(cf128.init(0x1.000000000000000000000000008p+0, 0x8p-116)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d183b48499911d2354p+0, 0xb.504f333f9de6484597d89b3754bp-60), asin(cf128.init(-0x1p+0, 0x8p-116)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc516fdb8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, 0x8p-116)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc3acf7d2p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(-0x1.0000000000001p+0, 0x8p-116)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898c851701b8p+0, 0x1.ffffffffffffffffaaaaaaaaaeabp-32), asin(cf128.init(-0x1.0000000000000002p+0, 0x8p-116)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d1841195f3dcd7aa02p+0, 0x1.749199c6dc180964f2cb6bc17b15p-56), asin(cf128.init(-0x1.0000000000000000000000000001p+0, 0x8p-116)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18461898dc51691b8p+0, 0x1.00001ffff600053ffca6025fbe2ap-52), asin(cf128.init(-0x1.000000000000000000000000008p+0, 0x8p-116)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc516fdb8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, -0x8p-116)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d183b48499911d2354p+0, -0xb.504f333f9de6484597d89b3754bp-60), asin(cf128.init(0x1p+0, -0x8p-116)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc3acf7d2p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(0x1.0000000000001p+0, -0x8p-116)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898c851701b8p+0, -0x1.ffffffffffffffffaaaaaaaaaeabp-32), asin(cf128.init(0x1.0000000000000002p+0, -0x8p-116)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d1841195f3dcd7aa02p+0, -0x1.749199c6dc180964f2cb6bc17b15p-56), asin(cf128.init(0x1.0000000000000000000000000001p+0, -0x8p-116)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18461898dc51691b8p+0, -0x1.00001ffff600053ffca6025fbe2ap-52), asin(cf128.init(0x1.000000000000000000000000008p+0, -0x8p-116)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d183b48499911d2354p+0, -0xb.504f333f9de6484597d89b3754bp-60), asin(cf128.init(-0x1p+0, -0x8p-116)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc516fdb8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, -0x8p-116)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc3acf7d2p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(-0x1.0000000000001p+0, -0x8p-116)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898c851701b8p+0, -0x1.ffffffffffffffffaaaaaaaaaeabp-32), asin(cf128.init(-0x1.0000000000000002p+0, -0x8p-116)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d1841195f3dcd7aa02p+0, -0x1.749199c6dc180964f2cb6bc17b15p-56), asin(cf128.init(-0x1.0000000000000000000000000001p+0, -0x8p-116)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18461898dc51691b8p+0, -0x1.00001ffff600053ffca6025fbe2ap-52), asin(cf128.init(-0x1.000000000000000000000000008p+0, -0x8p-116)));
    try std.testing.expectEqual(cf128.init(0x5.a82793f7a75c5867a86c260ceecp-152, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9baa54p-152, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef2f6e18f1f4f2411e8p-152, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(0x8p-152, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef3241d23c4b3fbdb64p-152, 0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(0x8p-152, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9baa54p-152, 0xe.1a1b30bcea13660d8f99e8dd252p-4), asin(cf128.init(0x8p-152, 0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9ba8ecp-152, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(0x8p-152, 0x1.000000000000000000000000008p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(0x0p+0, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd252p-4), asin(cf128.init(0x0p+0, 0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(0x0p+0, 0x1.000000000000000000000000008p+0)));
    try std.testing.expectEqual(cf128.init(0x2.d413c9fbd3ae2c33d4361306776p-1076, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0x4p-1076, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52ap-1076, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x4p-1076, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe7797b70c78fa79208f4p-1076, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(0x4p-1076, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779920e91e259fdedb2p-1076, 0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(0x4p-1076, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52ap-1076, 0xe.1a1b30bcea13660d8f99e8dd252p-4), asin(cf128.init(0x4p-1076, 0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd476p-1076, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(0x4p-1076, 0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccaeafd442eb48d65189b90e8p-16388, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0xf.8p-16388, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f716036b19d65d9ap-16388, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0xf.8p-16388, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f6be55054ca955e2cp-16388, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(0xf.8p-16388, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f715f8754d1cb7f9p-16388, 0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(0xf.8p-16388, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f716036b19d65d9ap-16388, 0xe.1a1b30bcea13660d8f99e8dd252p-4), asin(cf128.init(0xf.8p-16388, 0x1.0000000000000000000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f716036b19d65d974p-16388, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(0xf.8p-16388, 0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9baa54p-152, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x5.a82793f7a75c5867a86c260ceecp-152, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0x8p-152, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef2f6e18f1f4f2411e8p-152, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(0x8p-152, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef3241d23c4b3fbdb64p-152, -0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(0x8p-152, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9baa54p-152, -0xe.1a1b30bcea13660d8f99e8dd252p-4), asin(cf128.init(0x8p-152, -0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9ba8ecp-152, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(0x8p-152, -0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(0x0p+0, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd252p-4), asin(cf128.init(0x0p+0, -0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(0x0p+0, -0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52ap-1076, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x4p-1076, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x2.d413c9fbd3ae2c33d4361306776p-1076, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0x4p-1076, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe7797b70c78fa79208f4p-1076, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(0x4p-1076, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779920e91e259fdedb2p-1076, -0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(0x4p-1076, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52ap-1076, -0xe.1a1b30bcea13660d8f99e8dd252p-4), asin(cf128.init(0x4p-1076, -0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd476p-1076, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(0x4p-1076, -0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f716036b19d65d9ap-16388, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0xf.8p-16388, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccaeafd442eb48d65189b90e8p-16388, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0xf.8p-16388, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f6be55054ca955e2cp-16388, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(0xf.8p-16388, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f715f8754d1cb7f9p-16388, -0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(0xf.8p-16388, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f716036b19d65d9ap-16388, -0xe.1a1b30bcea13660d8f99e8dd252p-4), asin(cf128.init(0xf.8p-16388, -0x1.0000000000000000000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f716036b19d65d974p-16388, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(0xf.8p-16388, -0x1.000000000000000000000000008p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(-0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(-0x0p+0, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd252p-4), asin(cf128.init(-0x0p+0, 0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(-0x0p+0, 0x1.000000000000000000000000008p+0)));
    try std.testing.expectEqual(cf128.init(-0x5.a82793f7a75c5867a86c260ceecp-152, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0x8p-152, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9baa54p-152, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x8p-152, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef2f6e18f1f4f2411e8p-152, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(-0x8p-152, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef3241d23c4b3fbdb64p-152, 0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(-0x8p-152, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9baa54p-152, 0xe.1a1b30bcea13660d8f99e8dd252p-4), asin(cf128.init(-0x8p-152, 0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9ba8ecp-152, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(-0x8p-152, 0x1.000000000000000000000000008p+0)));
    try std.testing.expectEqual(cf128.init(-0x2.d413c9fbd3ae2c33d4361306776p-1076, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0x4p-1076, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x2.d413cccfe779921165f626cdd52ap-1076, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x4p-1076, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x2.d413cccfe7797b70c78fa79208f4p-1076, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(-0x4p-1076, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(-0x2.d413cccfe779920e91e259fdedb2p-1076, 0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(-0x4p-1076, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x2.d413cccfe779921165f626cdd52ap-1076, 0xe.1a1b30bcea13660d8f99e8dd252p-4), asin(cf128.init(-0x4p-1076, 0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(cf128.init(-0x2.d413cccfe779921165f626cdd476p-1076, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(-0x4p-1076, 0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccaeafd442eb48d65189b90e8p-16388, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0xf.8p-16388, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f716036b19d65d9ap-16388, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0xf.8p-16388, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f6be55054ca955e2cp-16388, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(-0xf.8p-16388, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f715f8754d1cb7f9p-16388, 0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(-0xf.8p-16388, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f716036b19d65d9ap-16388, 0xe.1a1b30bcea13660d8f99e8dd252p-4), asin(cf128.init(-0xf.8p-16388, 0x1.0000000000000000000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f716036b19d65d974p-16388, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(-0xf.8p-16388, 0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(-0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(-0x0p+0, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd252p-4), asin(cf128.init(-0x0p+0, -0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(-0x0p+0, -0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9baa54p-152, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x5.a82793f7a75c5867a86c260ceecp-152, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0x8p-152, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef2f6e18f1f4f2411e8p-152, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(-0x8p-152, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef3241d23c4b3fbdb64p-152, -0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(-0x8p-152, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9baa54p-152, -0xe.1a1b30bcea13660d8f99e8dd252p-4), asin(cf128.init(-0x8p-152, -0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9ba8ecp-152, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(-0x8p-152, -0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(-0x2.d413cccfe779921165f626cdd52ap-1076, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x4p-1076, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x2.d413c9fbd3ae2c33d4361306776p-1076, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0x4p-1076, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x2.d413cccfe7797b70c78fa79208f4p-1076, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(-0x4p-1076, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(-0x2.d413cccfe779920e91e259fdedb2p-1076, -0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(-0x4p-1076, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x2.d413cccfe779921165f626cdd52ap-1076, -0xe.1a1b30bcea13660d8f99e8dd252p-4), asin(cf128.init(-0x4p-1076, -0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(cf128.init(-0x2.d413cccfe779921165f626cdd476p-1076, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(-0x4p-1076, -0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f716036b19d65d9ap-16388, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0xf.8p-16388, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccaeafd442eb48d65189b90e8p-16388, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0xf.8p-16388, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f6be55054ca955e2cp-16388, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(-0xf.8p-16388, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f715f8754d1cb7f9p-16388, -0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(-0xf.8p-16388, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f716036b19d65d9ap-16388, -0xe.1a1b30bcea13660d8f99e8dd252p-4), asin(cf128.init(-0xf.8p-16388, -0x1.0000000000000000000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f716036b19d65d974p-16388, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(-0xf.8p-16388, -0x1.000000000000000000000000008p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469895f83da34bap+0, 0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), asin(cf128.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x8p-540), asin(cf128.init(0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196), asin(cf128.init(0x1p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(0x1.0000000000001p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(0x1.0000000000001p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(0x1.0000000000001p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(0x1.0000000000000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(0x1.0000000000000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(0x1.0000000000000002p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(0x1.0000000000000002p+0, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc5115991p+0, 0x1.6a09e667f3bcc908b30663b61dd5p-56), asin(cf128.init(0x1.0000000000000000000000000001p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.6a09e667f3bcc908b2fb1366ea95p-56), asin(cf128.init(0x1.0000000000000000000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.6a09e667f3bcc908b2fb1366ea95p-56), asin(cf128.init(0x1.0000000000000000000000000001p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.6a09e667f3bcc908b2fb1366ea95p-56), asin(cf128.init(0x1.0000000000000000000000000001p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51681b8p+0, 0x1.00000000000000000000001ffff5p-52), asin(cf128.init(0x1.000000000000000000000000008p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.ffffffffffffffffffffffffff58p-56), asin(cf128.init(0x1.000000000000000000000000008p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.ffffffffffffffffffffffffff58p-56), asin(cf128.init(0x1.000000000000000000000000008p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.ffffffffffffffffffffffffff58p-56), asin(cf128.init(0x1.000000000000000000000000008p+0, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469895f83da34bap+0, 0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), asin(cf128.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x8p-540), asin(cf128.init(-0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196), asin(cf128.init(-0x1p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(-0x1.0000000000001p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(-0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(-0x1.0000000000001p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(-0x1.0000000000001p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(-0x1.0000000000000002p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(-0x1.0000000000000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(-0x1.0000000000000002p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(-0x1.0000000000000002p+0, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc5115991p+0, 0x1.6a09e667f3bcc908b30663b61dd5p-56), asin(cf128.init(-0x1.0000000000000000000000000001p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x1.6a09e667f3bcc908b2fb1366ea95p-56), asin(cf128.init(-0x1.0000000000000000000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x1.6a09e667f3bcc908b2fb1366ea95p-56), asin(cf128.init(-0x1.0000000000000000000000000001p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x1.6a09e667f3bcc908b2fb1366ea95p-56), asin(cf128.init(-0x1.0000000000000000000000000001p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51681b8p+0, 0x1.00000000000000000000001ffff5p-52), asin(cf128.init(-0x1.000000000000000000000000008p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0xf.ffffffffffffffffffffffffff58p-56), asin(cf128.init(-0x1.000000000000000000000000008p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0xf.ffffffffffffffffffffffffff58p-56), asin(cf128.init(-0x1.000000000000000000000000008p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0xf.ffffffffffffffffffffffffff58p-56), asin(cf128.init(-0x1.000000000000000000000000008p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), asin(cf128.init(0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469895f83da34bap+0, -0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x8p-540), asin(cf128.init(0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196), asin(cf128.init(0x1p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(0x1.0000000000001p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(0x1.0000000000001p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(0x1.0000000000001p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(0x1.0000000000000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(0x1.0000000000000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(0x1.0000000000000002p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(0x1.0000000000000002p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.6a09e667f3bcc908b2fb1366ea95p-56), asin(cf128.init(0x1.0000000000000000000000000001p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc5115991p+0, -0x1.6a09e667f3bcc908b30663b61dd5p-56), asin(cf128.init(0x1.0000000000000000000000000001p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.6a09e667f3bcc908b2fb1366ea95p-56), asin(cf128.init(0x1.0000000000000000000000000001p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.6a09e667f3bcc908b2fb1366ea95p-56), asin(cf128.init(0x1.0000000000000000000000000001p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.ffffffffffffffffffffffffff58p-56), asin(cf128.init(0x1.000000000000000000000000008p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51681b8p+0, -0x1.00000000000000000000001ffff5p-52), asin(cf128.init(0x1.000000000000000000000000008p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.ffffffffffffffffffffffffff58p-56), asin(cf128.init(0x1.000000000000000000000000008p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.ffffffffffffffffffffffffff58p-56), asin(cf128.init(0x1.000000000000000000000000008p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), asin(cf128.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469895f83da34bap+0, -0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x8p-540), asin(cf128.init(-0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196), asin(cf128.init(-0x1p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(-0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(-0x1.0000000000001p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(-0x1.0000000000001p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(-0x1.0000000000001p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(-0x1.0000000000000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(-0x1.0000000000000002p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(-0x1.0000000000000002p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(-0x1.0000000000000002p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x1.6a09e667f3bcc908b2fb1366ea95p-56), asin(cf128.init(-0x1.0000000000000000000000000001p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc5115991p+0, -0x1.6a09e667f3bcc908b30663b61dd5p-56), asin(cf128.init(-0x1.0000000000000000000000000001p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x1.6a09e667f3bcc908b2fb1366ea95p-56), asin(cf128.init(-0x1.0000000000000000000000000001p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x1.6a09e667f3bcc908b2fb1366ea95p-56), asin(cf128.init(-0x1.0000000000000000000000000001p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0xf.ffffffffffffffffffffffffff58p-56), asin(cf128.init(-0x1.000000000000000000000000008p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51681b8p+0, -0x1.00000000000000000000001ffff5p-52), asin(cf128.init(-0x1.000000000000000000000000008p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0xf.ffffffffffffffffffffffffff58p-56), asin(cf128.init(-0x1.000000000000000000000000008p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0xf.ffffffffffffffffffffffffff58p-56), asin(cf128.init(-0x1.000000000000000000000000008p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(0x0p+0, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd252p-4), asin(cf128.init(0x0p+0, 0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(0x0p+0, 0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(0x0p+0, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd252p-4), asin(cf128.init(0x0p+0, -0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(0x0p+0, -0x1.000000000000000000000000008p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0x0p+0, 0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x0p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(-0x0p+0, 0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(-0x0p+0, 0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd252p-4), asin(cf128.init(-0x0p+0, 0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(-0x0p+0, 0x1.000000000000000000000000008p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b475d886e94fa2cb045e522p-4), asin(cf128.init(-0x0p+0, -0x1.000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea141b1282cde2bb86c8p-4), asin(cf128.init(-0x0p+0, -0x1.0000000000001p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea13662430384f5c60e8p-4), asin(cf128.init(-0x0p+0, -0x1.0000000000000002p+0)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd252p-4), asin(cf128.init(-0x0p+0, -0x1.0000000000000000000000000001p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2acp-4), asin(cf128.init(-0x0p+0, -0x1.000000000000000000000000008p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), asin(cf128.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(0x1.0000000000000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x1.6a09e667f3bcc908b2fb1366ea95p-56), asin(cf128.init(0x1.0000000000000000000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.ffffffffffffffffffffffffff58p-56), asin(cf128.init(0x1.000000000000000000000000008p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), asin(cf128.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(-0x1.0000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(-0x1.0000000000000002p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x1.6a09e667f3bcc908b2fb1366ea95p-56), asin(cf128.init(-0x1.0000000000000000000000000001p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0xf.ffffffffffffffffffffffffff58p-56), asin(cf128.init(-0x1.000000000000000000000000008p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), asin(cf128.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(0x1.0000000000000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x1.6a09e667f3bcc908b2fb1366ea95p-56), asin(cf128.init(0x1.0000000000000000000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.ffffffffffffffffffffffffff58p-56), asin(cf128.init(0x1.000000000000000000000000008p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), asin(cf128.init(-0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffaaaaaad11110fa35a369c4p-12), asin(cf128.init(-0x1.000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x5.a827999fcef31c97ec74cddd10ecp-28), asin(cf128.init(-0x1.0000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x1.ffffffffffffffffaaaaaaaaaaabp-32), asin(cf128.init(-0x1.0000000000000002p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x1.6a09e667f3bcc908b2fb1366ea95p-56), asin(cf128.init(-0x1.0000000000000000000000000001p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0xf.ffffffffffffffffffffffffff58p-56), asin(cf128.init(-0x1.000000000000000000000000008p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.6a09e71cf8afedecd2b47a1ef44bp-24, 0xe.1a1b256c9ae8a2ab14f0d352edcp-4), asin(cf128.init(0x2p-24, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.6a09e71cf8afedecd2b47a1ef44bp-24, -0xe.1a1b256c9ae8a2ab14f0d352edcp-4), asin(cf128.init(0x2p-24, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(-0x1.6a09e71cf8afedecd2b47a1ef44bp-24, 0xe.1a1b256c9ae8a2ab14f0d352edcp-4), asin(cf128.init(-0x2p-24, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(-0x1.6a09e71cf8afedecd2b47a1ef44bp-24, -0xe.1a1b256c9ae8a2ab14f0d352edcp-4), asin(cf128.init(-0x2p-24, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.9202ecf11870c12f45e27b294644p+0, 0x1.1c9e0143157395bb13651691b237p-12), asin(cf128.init(0xf.fffffp-4, 0x2p-24)));
    // try std.testing.expectEqual(cf128.init(-0x1.9202ecf11870c12f45e27b294644p+0, 0x1.1c9e0143157395bb13651691b237p-12), asin(cf128.init(-0xf.fffffp-4, 0x2p-24)));
    // try std.testing.expectEqual(cf128.init(0x1.9202ecf11870c12f45e27b294644p+0, -0x1.1c9e0143157395bb13651691b237p-12), asin(cf128.init(0xf.fffffp-4, -0x2p-24)));
    // try std.testing.expectEqual(cf128.init(-0x1.9202ecf11870c12f45e27b294644p+0, -0x1.1c9e0143157395bb13651691b237p-12), asin(cf128.init(-0xf.fffffp-4, -0x2p-24)));
    try std.testing.expectEqual(cf128.init(0xa.f5ccbf208755478d7d2a2f65526p-132, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0xf.8p-132, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0xa.f5ccbf208755478d7d2a2f65526p-132, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0xf.8p-132, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(-0xa.f5ccbf208755478d7d2a2f65526p-132, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0xf.8p-132, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(-0xa.f5ccbf208755478d7d2a2f65526p-132, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0xf.8p-132, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, 0xa.f5ccbc6314268676dab4784efaf8p-120), asin(cf128.init(0xf.fffffp-4, 0xf.8p-132)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, 0xa.f5ccbc6314268676dab4784efaf8p-120), asin(cf128.init(-0xf.fffffp-4, 0xf.8p-132)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, -0xa.f5ccbc6314268676dab4784efaf8p-120), asin(cf128.init(0xf.fffffp-4, -0xf.8p-132)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, -0xa.f5ccbc6314268676dab4784efaf8p-120), asin(cf128.init(-0xf.fffffp-4, -0xf.8p-132)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0x0p+0, -0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, 0x0p+0), asin(cf128.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, 0x0p+0), asin(cf128.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, -0x0p+0), asin(cf128.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, -0x0p+0), asin(cf128.init(-0xf.fffffp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.c9f25c5bfeddf50851cd932176d6p-24, 0x7.b30b2bb1458dd80b69bb3ea8703cp-4), asin(cf128.init(0x2p-24, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.c9f25c5bfeddf50851cd932176d6p-24, -0x7.b30b2bb1458dd80b69bb3ea8703cp-4), asin(cf128.init(0x2p-24, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x1.c9f25c5bfeddf50851cd932176d6p-24, 0x7.b30b2bb1458dd80b69bb3ea8703cp-4), asin(cf128.init(-0x2p-24, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x1.c9f25c5bfeddf50851cd932176d6p-24, -0x7.b30b2bb1458dd80b69bb3ea8703cp-4), asin(cf128.init(-0x2p-24, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x8.60a91c16b99a1ffe80d92cee3e48p-4, 0x2.4f34e8b2065f6e9b77d03156134p-24), asin(cf128.init(0x8p-4, 0x2p-24)));
    // try std.testing.expectEqual(cf128.init(-0x8.60a91c16b99a1ffe80d92cee3e48p-4, 0x2.4f34e8b2065f6e9b77d03156134p-24), asin(cf128.init(-0x8p-4, 0x2p-24)));
    // try std.testing.expectEqual(cf128.init(0x8.60a91c16b99a1ffe80d92cee3e48p-4, -0x2.4f34e8b2065f6e9b77d03156134p-24), asin(cf128.init(0x8p-4, -0x2p-24)));
    // try std.testing.expectEqual(cf128.init(-0x8.60a91c16b99a1ffe80d92cee3e48p-4, -0x2.4f34e8b2065f6e9b77d03156134p-24), asin(cf128.init(-0x8p-4, -0x2p-24)));
    // try std.testing.expectEqual(cf128.init(0xd.dd164bc8f73535dcfffe1e44805p-132, 0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(0xf.8p-132, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0xd.dd164bc8f73535dcfffe1e44805p-132, -0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(0xf.8p-132, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(-0xd.dd164bc8f73535dcfffe1e44805p-132, 0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(-0xf.8p-132, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(-0xd.dd164bc8f73535dcfffe1e44805p-132, -0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(-0xf.8p-132, -0x8p-4)));
    try std.testing.expectEqual(cf128.init(0x8.60a91c16b9b2c232dd99707ab3d8p-4, 0x1.1e5da0b63b1836ab88305d58a34cp-128), asin(cf128.init(0x8p-4, 0xf.8p-132)));
    try std.testing.expectEqual(cf128.init(-0x8.60a91c16b9b2c232dd99707ab3d8p-4, 0x1.1e5da0b63b1836ab88305d58a34cp-128), asin(cf128.init(-0x8p-4, 0xf.8p-132)));
    try std.testing.expectEqual(cf128.init(0x8.60a91c16b9b2c232dd99707ab3d8p-4, -0x1.1e5da0b63b1836ab88305d58a34cp-128), asin(cf128.init(0x8p-4, -0xf.8p-132)));
    try std.testing.expectEqual(cf128.init(-0x8.60a91c16b9b2c232dd99707ab3d8p-4, -0x1.1e5da0b63b1836ab88305d58a34cp-128), asin(cf128.init(-0x8p-4, -0xf.8p-132)));
    try std.testing.expectEqual(cf128.init(0x1.fffffffffffd55555555554bbbbcp-24, 0x2.000000000002aaaaaaaaaaa11112p-24), asin(cf128.init(0x2p-24, 0x2p-24)));
    try std.testing.expectEqual(cf128.init(0x1.fffffffffffd55555555554bbbbcp-24, -0x2.000000000002aaaaaaaaaaa11112p-24), asin(cf128.init(0x2p-24, -0x2p-24)));
    try std.testing.expectEqual(cf128.init(-0x1.fffffffffffd55555555554bbbbcp-24, 0x2.000000000002aaaaaaaaaaa11112p-24), asin(cf128.init(-0x2p-24, 0x2p-24)));
    try std.testing.expectEqual(cf128.init(-0x1.fffffffffffd55555555554bbbbcp-24, -0x2.000000000002aaaaaaaaaaa11112p-24), asin(cf128.init(-0x2p-24, -0x2p-24)));
    try std.testing.expectEqual(cf128.init(0xf.7fffffffffe100000000005dp-132, 0x1.fffffffffffeaaaaaaaaaaad1111p-24), asin(cf128.init(0xf.8p-132, 0x2p-24)));
    try std.testing.expectEqual(cf128.init(0xf.7fffffffffe100000000005dp-132, -0x1.fffffffffffeaaaaaaaaaaad1111p-24), asin(cf128.init(0xf.8p-132, -0x2p-24)));
    try std.testing.expectEqual(cf128.init(-0xf.7fffffffffe100000000005dp-132, 0x1.fffffffffffeaaaaaaaaaaad1111p-24), asin(cf128.init(-0xf.8p-132, 0x2p-24)));
    try std.testing.expectEqual(cf128.init(-0xf.7fffffffffe100000000005dp-132, -0x1.fffffffffffeaaaaaaaaaaad1111p-24), asin(cf128.init(-0xf.8p-132, -0x2p-24)));
    try std.testing.expectEqual(cf128.init(0x2.000000000001555555555557bbbcp-24, 0xf.80000000001f00000000005dp-132), asin(cf128.init(0x2p-24, 0xf.8p-132)));
    try std.testing.expectEqual(cf128.init(-0x2.000000000001555555555557bbbcp-24, 0xf.80000000001f00000000005dp-132), asin(cf128.init(-0x2p-24, 0xf.8p-132)));
    try std.testing.expectEqual(cf128.init(0x2.000000000001555555555557bbbcp-24, -0xf.80000000001f00000000005dp-132), asin(cf128.init(0x2p-24, -0xf.8p-132)));
    try std.testing.expectEqual(cf128.init(-0x2.000000000001555555555557bbbcp-24, -0xf.80000000001f00000000005dp-132), asin(cf128.init(-0x2p-24, -0xf.8p-132)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x1.fffffffffffeaaaaaaaaaaad1111p-24), asin(cf128.init(0x0p+0, 0x2p-24)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x1.fffffffffffeaaaaaaaaaaad1111p-24), asin(cf128.init(0x0p+0, -0x2p-24)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0x1.fffffffffffeaaaaaaaaaaad1111p-24), asin(cf128.init(-0x0p+0, 0x2p-24)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0x1.fffffffffffeaaaaaaaaaaad1111p-24), asin(cf128.init(-0x0p+0, -0x2p-24)));
    try std.testing.expectEqual(cf128.init(0x2.000000000001555555555557bbbcp-24, 0x0p+0), asin(cf128.init(0x2p-24, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x2.000000000001555555555557bbbcp-24, 0x0p+0), asin(cf128.init(-0x2p-24, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x2.000000000001555555555557bbbcp-24, -0x0p+0), asin(cf128.init(0x2p-24, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x2.000000000001555555555557bbbcp-24, -0x0p+0), asin(cf128.init(-0x2p-24, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0xf.8p-132, 0xf.8p-132), asin(cf128.init(0xf.8p-132, 0xf.8p-132)));
    try std.testing.expectEqual(cf128.init(0xf.8p-132, -0xf.8p-132), asin(cf128.init(0xf.8p-132, -0xf.8p-132)));
    try std.testing.expectEqual(cf128.init(-0xf.8p-132, 0xf.8p-132), asin(cf128.init(-0xf.8p-132, 0xf.8p-132)));
    try std.testing.expectEqual(cf128.init(-0xf.8p-132, -0xf.8p-132), asin(cf128.init(-0xf.8p-132, -0xf.8p-132)));
    // try std.testing.expectEqual(cf128.init(0xb.504f333f9de6484597d89b37543p-56, 0xe.1a1b30bcea13660d8f99e8dd27fp-4), asin(cf128.init(0x1p-52, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0xb.504f38e7c581521e70afaccbaf68p-56, 0xe.1a1b256c9add525bdc090dd47288p-4), asin(cf128.init(0x1p-52, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0xb.504f333f9de67586d4a599aeedbp-56, 0xe.1a1b30bcea130b8b15ffebedf4f8p-4), asin(cf128.init(0x1p-52, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf128.init(0xb.504f38e7c581521e70afaccbaf68p-56, -0xe.1a1b256c9add525bdc090dd47288p-4), asin(cf128.init(0x1p-52, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0xb.504f333f9de6484597d89b37543p-56, -0xe.1a1b30bcea13660d8f99e8dd27fp-4), asin(cf128.init(0x1p-52, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0xb.504f333f9de67586d4a599aeedbp-56, -0xe.1a1b30bcea130b8b15ffebedf4f8p-4), asin(cf128.init(0x1p-52, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0xb.504f333f9de6484597d89b37543p-56, 0xe.1a1b30bcea13660d8f99e8dd27fp-4), asin(cf128.init(-0x1p-52, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0xb.504f38e7c581521e70afaccbaf68p-56, 0xe.1a1b256c9add525bdc090dd47288p-4), asin(cf128.init(-0x1p-52, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(-0xb.504f333f9de67586d4a599aeedbp-56, 0xe.1a1b30bcea130b8b15ffebedf4f8p-4), asin(cf128.init(-0x1p-52, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf128.init(-0xb.504f38e7c581521e70afaccbaf68p-56, -0xe.1a1b256c9add525bdc090dd47288p-4), asin(cf128.init(-0x1p-52, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0xb.504f333f9de6484597d89b37543p-56, -0xe.1a1b30bcea13660d8f99e8dd27fp-4), asin(cf128.init(-0x1p-52, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0xb.504f333f9de67586d4a599aeedbp-56, -0xe.1a1b30bcea130b8b15ffebedf4f8p-4), asin(cf128.init(-0x1p-52, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898d1a6c570ep+0, 0x4.0000000000000555555555555544p-28), asin(cf128.init(0x1p+0, 0x1p-52)));
    // try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90bea9a1492bfffbp+0, 0xb.504f3613b1b4264a74c37cbad488p-44), asin(cf128.init(0xf.fffffp-4, 0x1p-52)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb4f2da0c69c778352d5194e4p+0, 0x3.2504dde4b1a36bfbaac38f7dc6cep-28), asin(cf128.init(0xf.ffffffffffff8p-4, 0x1p-52)));
    // try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90bea9a1492bfffbp+0, 0xb.504f3613b1b4264a74c37cbad488p-44), asin(cf128.init(-0xf.fffffp-4, 0x1p-52)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898d1a6c570ep+0, 0x4.0000000000000555555555555544p-28), asin(cf128.init(-0x1p+0, 0x1p-52)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb4f2da0c69c778352d5194e4p+0, 0x3.2504dde4b1a36bfbaac38f7dc6cep-28), asin(cf128.init(-0xf.ffffffffffff8p-4, 0x1p-52)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898d1a6c570ep+0, -0x4.0000000000000555555555555544p-28), asin(cf128.init(0x1p+0, -0x1p-52)));
    // try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90bea9a1492bfffbp+0, -0xb.504f3613b1b4264a74c37cbad488p-44), asin(cf128.init(0xf.fffffp-4, -0x1p-52)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb4f2da0c69c778352d5194e4p+0, -0x3.2504dde4b1a36bfbaac38f7dc6cep-28), asin(cf128.init(0xf.ffffffffffff8p-4, -0x1p-52)));
    // try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90bea9a1492bfffbp+0, -0xb.504f3613b1b4264a74c37cbad488p-44), asin(cf128.init(-0xf.fffffp-4, -0x1p-52)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898d1a6c570ep+0, -0x4.0000000000000555555555555544p-28), asin(cf128.init(-0x1p+0, -0x1p-52)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb4f2da0c69c778352d5194e4p+0, -0x3.2504dde4b1a36bfbaac38f7dc6cep-28), asin(cf128.init(-0xf.ffffffffffff8p-4, -0x1p-52)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9baa54p-152, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x5.a8279c73e2c0a90f3857d665d7fp-152, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0x8p-152, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x5.a827999fcef33ac36a52ccd77714p-152, 0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f716036b19d65d9a08p-1028, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0xf.8p-1028, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0xa.f5ccbf208755478d7d2a2f65526p-1028, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0xf.8p-1028, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f741da9e006ce176b8p-1028, 0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(0xf.8p-1028, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf128.init(0x5.a8279c73e2c0a90f3857d665d7fp-152, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9baa54p-152, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x5.a827999fcef33ac36a52ccd77714p-152, -0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(0x8p-152, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf128.init(0xa.f5ccbf208755478d7d2a2f65526p-1028, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0xf.8p-1028, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f716036b19d65d9a08p-1028, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0xf.8p-1028, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f741da9e006ce176b8p-1028, -0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(0xf.8p-1028, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9baa54p-152, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x5.a8279c73e2c0a90f3857d665d7fp-152, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0x8p-152, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(-0x5.a827999fcef33ac36a52ccd77714p-152, 0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(-0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f716036b19d65d9a08p-1028, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0xf.8p-1028, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0xa.f5ccbf208755478d7d2a2f65526p-1028, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0xf.8p-1028, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f741da9e006ce176b8p-1028, 0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(-0xf.8p-1028, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf128.init(-0x5.a8279c73e2c0a90f3857d665d7fp-152, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9baa54p-152, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x5.a827999fcef33ac36a52ccd77714p-152, -0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(-0x8p-152, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf128.init(-0xa.f5ccbf208755478d7d2a2f65526p-1028, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0xf.8p-1028, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f716036b19d65d9a08p-1028, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0xf.8p-1028, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f741da9e006ce176b8p-1028, -0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(-0xf.8p-1028, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469895f83da34bap+0, 0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), asin(cf128.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-516), asin(cf128.init(0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, 0x5.a8279b09d8da13da3f54e34189ccp-140), asin(cf128.init(0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, 0x0p+0), asin(cf128.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, 0xa.f5ccbc6314268676dab4784efaf8p-1016), asin(cf128.init(0xf.fffffp-4, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898c9a6c570ep+0, 0x2.000000000000040000000000000cp-124), asin(cf128.init(0xf.ffffffffffff8p-4, 0x8p-152)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898c9a6c570ep+0, 0x0p+0), asin(cf128.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898c9a6c570ep+0, 0x3.e0000000000007c0000000000018p-1000), asin(cf128.init(0xf.ffffffffffff8p-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, 0x5.a8279b09d8da13da3f54e34189ccp-140), asin(cf128.init(-0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, 0x0p+0), asin(cf128.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, 0xa.f5ccbc6314268676dab4784efaf8p-1016), asin(cf128.init(-0xf.fffffp-4, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469895f83da34bap+0, 0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), asin(cf128.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-516), asin(cf128.init(-0x1p+0, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898c9a6c570ep+0, 0x2.000000000000040000000000000cp-124), asin(cf128.init(-0xf.ffffffffffff8p-4, 0x8p-152)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898c9a6c570ep+0, 0x0p+0), asin(cf128.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898c9a6c570ep+0, 0x3.e0000000000007c0000000000018p-1000), asin(cf128.init(-0xf.ffffffffffff8p-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), asin(cf128.init(0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469895f83da34bap+0, -0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-516), asin(cf128.init(0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, -0x0p+0), asin(cf128.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, -0x5.a8279b09d8da13da3f54e34189ccp-140), asin(cf128.init(0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, -0xa.f5ccbc6314268676dab4784efaf8p-1016), asin(cf128.init(0xf.fffffp-4, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898c9a6c570ep+0, -0x0p+0), asin(cf128.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898c9a6c570ep+0, -0x2.000000000000040000000000000cp-124), asin(cf128.init(0xf.ffffffffffff8p-4, -0x8p-152)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898c9a6c570ep+0, -0x3.e0000000000007c0000000000018p-1000), asin(cf128.init(0xf.ffffffffffff8p-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, -0x0p+0), asin(cf128.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, -0x5.a8279b09d8da13da3f54e34189ccp-140), asin(cf128.init(-0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, -0xa.f5ccbc6314268676dab4784efaf8p-1016), asin(cf128.init(-0xf.fffffp-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), asin(cf128.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469895f83da34bap+0, -0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-516), asin(cf128.init(-0x1p+0, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898c9a6c570ep+0, -0x0p+0), asin(cf128.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898c9a6c570ep+0, -0x2.000000000000040000000000000cp-124), asin(cf128.init(-0xf.ffffffffffff8p-4, -0x8p-152)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898c9a6c570ep+0, -0x3.e0000000000007c0000000000018p-1000), asin(cf128.init(-0xf.ffffffffffff8p-4, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), asin(cf128.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, 0x0p+0), asin(cf128.init(0xf.fffffp-4, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898c9a6c570ep+0, 0x0p+0), asin(cf128.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, 0x0p+0), asin(cf128.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), asin(cf128.init(-0x1p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898c9a6c570ep+0, 0x0p+0), asin(cf128.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), asin(cf128.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, -0x0p+0), asin(cf128.init(0xf.fffffp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898c9a6c570ep+0, -0x0p+0), asin(cf128.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, -0x0p+0), asin(cf128.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), asin(cf128.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898c9a6c570ep+0, -0x0p+0), asin(cf128.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0xe.4f92e2dff6ec9ab294a33804a64p-56, 0x7.b30b2bb14582652f810812a5a5f8p-4), asin(cf128.init(0x1p-52, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0xe.4f92e2dff6ec9ab294a33804a64p-56, -0x7.b30b2bb14582652f810812a5a5f8p-4), asin(cf128.init(0x1p-52, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(-0xe.4f92e2dff6ec9ab294a33804a64p-56, 0x7.b30b2bb14582652f810812a5a5f8p-4), asin(cf128.init(-0x1p-52, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(-0xe.4f92e2dff6ec9ab294a33804a64p-56, -0x7.b30b2bb14582652f810812a5a5f8p-4), asin(cf128.init(-0x1p-52, -0x8p-4)));
    try std.testing.expectEqual(cf128.init(0x8.60a91c16b9b2c232dd99707aadbp-4, 0x1.279a74590331c4d218f81e4afaa2p-52), asin(cf128.init(0x8p-4, 0x1p-52)));
    try std.testing.expectEqual(cf128.init(-0x8.60a91c16b9b2c232dd99707aadbp-4, 0x1.279a74590331c4d218f81e4afaa2p-52), asin(cf128.init(-0x8p-4, 0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x8.60a91c16b9b2c232dd99707aadbp-4, -0x1.279a74590331c4d218f81e4afaa2p-52), asin(cf128.init(0x8p-4, -0x1p-52)));
    try std.testing.expectEqual(cf128.init(-0x8.60a91c16b9b2c232dd99707aadbp-4, -0x1.279a74590331c4d218f81e4afaa2p-52), asin(cf128.init(-0x8p-4, -0x1p-52)));
    // try std.testing.expectEqual(cf128.init(0x7.27c9716ffb764d594a519c0252cp-152, 0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(0x8p-152, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(0x0p+0, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0xd.dd164bc8f73535dcfffe1e44805p-1028, 0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(0xf.8p-1028, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x7.27c9716ffb764d594a519c0252cp-152, -0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(0x8p-152, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(0x0p+0, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0xd.dd164bc8f73535dcfffe1e44805p-1028, -0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(0xf.8p-1028, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(-0x0p+0, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x7.27c9716ffb764d594a519c0252cp-152, 0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(-0x8p-152, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(-0xd.dd164bc8f73535dcfffe1e44805p-1028, 0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(-0xf.8p-1028, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(-0x0p+0, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x7.27c9716ffb764d594a519c0252cp-152, -0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(-0x8p-152, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(-0xd.dd164bc8f73535dcfffe1e44805p-1028, -0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(-0xf.8p-1028, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x8.60a91c16b9b2c232dd99707ab3d8p-4, 0x9.3cd3a2c8198e2690c7c0f257d928p-152), asin(cf128.init(0x8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x8.60a91c16b9b2c232dd99707ab3d8p-4, 0x0p+0), asin(cf128.init(0x8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x8.60a91c16b9b2c232dd99707ab3d8p-4, 0x1.1e5da0b63b1836ab88305d58a34cp-1024), asin(cf128.init(0x8p-4, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(-0x8.60a91c16b9b2c232dd99707ab3d8p-4, 0x9.3cd3a2c8198e2690c7c0f257d928p-152), asin(cf128.init(-0x8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x8.60a91c16b9b2c232dd99707ab3d8p-4, 0x0p+0), asin(cf128.init(-0x8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x8.60a91c16b9b2c232dd99707ab3d8p-4, 0x1.1e5da0b63b1836ab88305d58a34cp-1024), asin(cf128.init(-0x8p-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x8.60a91c16b9b2c232dd99707ab3d8p-4, -0x0p+0), asin(cf128.init(0x8p-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x8.60a91c16b9b2c232dd99707ab3d8p-4, -0x9.3cd3a2c8198e2690c7c0f257d928p-152), asin(cf128.init(0x8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x8.60a91c16b9b2c232dd99707ab3d8p-4, -0x1.1e5da0b63b1836ab88305d58a34cp-1024), asin(cf128.init(0x8p-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(-0x8.60a91c16b9b2c232dd99707ab3d8p-4, -0x0p+0), asin(cf128.init(-0x8p-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x8.60a91c16b9b2c232dd99707ab3d8p-4, -0x9.3cd3a2c8198e2690c7c0f257d928p-152), asin(cf128.init(-0x8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x8.60a91c16b9b2c232dd99707ab3d8p-4, -0x1.1e5da0b63b1836ab88305d58a34cp-1024), asin(cf128.init(-0x8p-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0xf.fffffffffffffffffffffffffaa8p-56, 0x1.0000000000000000000000000055p-52), asin(cf128.init(0x1p-52, 0x1p-52)));
    try std.testing.expectEqual(cf128.init(0xf.fffffffffffffffffffffffffaa8p-56, -0x1.0000000000000000000000000055p-52), asin(cf128.init(0x1p-52, -0x1p-52)));
    try std.testing.expectEqual(cf128.init(-0xf.fffffffffffffffffffffffffaa8p-56, 0x1.0000000000000000000000000055p-52), asin(cf128.init(-0x1p-52, 0x1p-52)));
    try std.testing.expectEqual(cf128.init(-0xf.fffffffffffffffffffffffffaa8p-56, -0x1.0000000000000000000000000055p-52), asin(cf128.init(-0x1p-52, -0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x7.fffffffffffffffffffffffffcp-152, 0xf.fffffffffffffffffffffffffd58p-56), asin(cf128.init(0x8p-152, 0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xf.fffffffffffffffffffffffffd58p-56), asin(cf128.init(0x0p+0, 0x1p-52)));
    try std.testing.expectEqual(cf128.init(0xf.7ffffffffffffffffffffffff84p-1028, 0xf.fffffffffffffffffffffffffd58p-56), asin(cf128.init(0xf.8p-1028, 0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x7.fffffffffffffffffffffffffcp-152, -0xf.fffffffffffffffffffffffffd58p-56), asin(cf128.init(0x8p-152, -0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0xf.fffffffffffffffffffffffffd58p-56), asin(cf128.init(0x0p+0, -0x1p-52)));
    try std.testing.expectEqual(cf128.init(0xf.7ffffffffffffffffffffffff84p-1028, -0xf.fffffffffffffffffffffffffd58p-56), asin(cf128.init(0xf.8p-1028, -0x1p-52)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0xf.fffffffffffffffffffffffffd58p-56), asin(cf128.init(-0x0p+0, 0x1p-52)));
    try std.testing.expectEqual(cf128.init(-0x7.fffffffffffffffffffffffffcp-152, 0xf.fffffffffffffffffffffffffd58p-56), asin(cf128.init(-0x8p-152, 0x1p-52)));
    try std.testing.expectEqual(cf128.init(-0xf.7ffffffffffffffffffffffff84p-1028, 0xf.fffffffffffffffffffffffffd58p-56), asin(cf128.init(-0xf.8p-1028, 0x1p-52)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0xf.fffffffffffffffffffffffffd58p-56), asin(cf128.init(-0x0p+0, -0x1p-52)));
    try std.testing.expectEqual(cf128.init(-0x7.fffffffffffffffffffffffffcp-152, -0xf.fffffffffffffffffffffffffd58p-56), asin(cf128.init(-0x8p-152, -0x1p-52)));
    try std.testing.expectEqual(cf128.init(-0xf.7ffffffffffffffffffffffff84p-1028, -0xf.fffffffffffffffffffffffffd58p-56), asin(cf128.init(-0xf.8p-1028, -0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x1.000000000000000000000000002bp-52, 0x8.00000000000000000000000004p-152), asin(cf128.init(0x1p-52, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.000000000000000000000000002bp-52, 0x0p+0), asin(cf128.init(0x1p-52, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.000000000000000000000000002bp-52, 0xf.80000000000000000000000007cp-1028), asin(cf128.init(0x1p-52, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(-0x1.000000000000000000000000002bp-52, 0x8.00000000000000000000000004p-152), asin(cf128.init(-0x1p-52, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.000000000000000000000000002bp-52, 0x0p+0), asin(cf128.init(-0x1p-52, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.000000000000000000000000002bp-52, 0xf.80000000000000000000000007cp-1028), asin(cf128.init(-0x1p-52, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.000000000000000000000000002bp-52, -0x0p+0), asin(cf128.init(0x1p-52, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.000000000000000000000000002bp-52, -0x8.00000000000000000000000004p-152), asin(cf128.init(0x1p-52, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.000000000000000000000000002bp-52, -0xf.80000000000000000000000007cp-1028), asin(cf128.init(0x1p-52, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(-0x1.000000000000000000000000002bp-52, -0x0p+0), asin(cf128.init(-0x1p-52, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.000000000000000000000000002bp-52, -0x8.00000000000000000000000004p-152), asin(cf128.init(-0x1p-52, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.000000000000000000000000002bp-52, -0xf.80000000000000000000000007cp-1028), asin(cf128.init(-0x1p-52, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xf.fffffffffffffffffffffffffd58p-56), asin(cf128.init(0x0p+0, 0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0xf.fffffffffffffffffffffffffd58p-56), asin(cf128.init(0x0p+0, -0x1p-52)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0xf.fffffffffffffffffffffffffd58p-56), asin(cf128.init(-0x0p+0, 0x1p-52)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0xf.fffffffffffffffffffffffffd58p-56), asin(cf128.init(-0x0p+0, -0x1p-52)));
    try std.testing.expectEqual(cf128.init(0x1.000000000000000000000000002bp-52, 0x0p+0), asin(cf128.init(0x1p-52, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.000000000000000000000000002bp-52, 0x0p+0), asin(cf128.init(-0x1p-52, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.000000000000000000000000002bp-52, -0x0p+0), asin(cf128.init(0x1p-52, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.000000000000000000000000002bp-52, -0x0p+0), asin(cf128.init(-0x1p-52, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x8p-152, 0x8p-152), asin(cf128.init(0x8p-152, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x8p-152, 0x0p+0), asin(cf128.init(0x8p-152, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x8p-152, 0xf.8p-1028), asin(cf128.init(0x8p-152, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x8p-152), asin(cf128.init(0x0p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x0p+0), asin(cf128.init(0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xf.8p-1028), asin(cf128.init(0x0p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0xf.8p-1028, 0x8p-152), asin(cf128.init(0xf.8p-1028, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0xf.8p-1028, 0x0p+0), asin(cf128.init(0xf.8p-1028, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0xf.8p-1028, 0xf.8p-1028), asin(cf128.init(0xf.8p-1028, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x8p-152, -0x0p+0), asin(cf128.init(0x8p-152, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x8p-152, -0x8p-152), asin(cf128.init(0x8p-152, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x8p-152, -0xf.8p-1028), asin(cf128.init(0x8p-152, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x0p+0), asin(cf128.init(0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x8p-152), asin(cf128.init(0x0p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0xf.8p-1028), asin(cf128.init(0x0p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0xf.8p-1028, -0x0p+0), asin(cf128.init(0xf.8p-1028, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0xf.8p-1028, -0x8p-152), asin(cf128.init(0xf.8p-1028, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0xf.8p-1028, -0xf.8p-1028), asin(cf128.init(0xf.8p-1028, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0x8p-152), asin(cf128.init(-0x0p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0x0p+0), asin(cf128.init(-0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0xf.8p-1028), asin(cf128.init(-0x0p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(-0x8p-152, 0x8p-152), asin(cf128.init(-0x8p-152, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x8p-152, 0x0p+0), asin(cf128.init(-0x8p-152, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x8p-152, 0xf.8p-1028), asin(cf128.init(-0x8p-152, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(-0xf.8p-1028, 0x8p-152), asin(cf128.init(-0xf.8p-1028, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0xf.8p-1028, 0x0p+0), asin(cf128.init(-0xf.8p-1028, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0xf.8p-1028, 0xf.8p-1028), asin(cf128.init(-0xf.8p-1028, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0x0p+0), asin(cf128.init(-0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0x8p-152), asin(cf128.init(-0x0p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0xf.8p-1028), asin(cf128.init(-0x0p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(-0x8p-152, -0x0p+0), asin(cf128.init(-0x8p-152, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x8p-152, -0x8p-152), asin(cf128.init(-0x8p-152, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x8p-152, -0xf.8p-1028), asin(cf128.init(-0x8p-152, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(-0xf.8p-1028, -0x0p+0), asin(cf128.init(-0xf.8p-1028, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0xf.8p-1028, -0x8p-152), asin(cf128.init(-0xf.8p-1028, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0xf.8p-1028, -0xf.8p-1028), asin(cf128.init(-0xf.8p-1028, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc908b2fb1366ea95p-64, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x2p-64, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e71cf8b02a43ce15f59975fcp-64, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0x2p-64, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcceb0da94b335ddc5p-64, 0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(0x2p-64, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc9096800069ae474p-64, 0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(0x2p-64, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e71cf8b02a43ce15f59975fcp-64, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0x2p-64, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc908b2fb1366ea95p-64, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x2p-64, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcceb0da94b335ddc5p-64, -0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(0x2p-64, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x1.6a09e667f3bcc9096800069ae474p-64, -0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(0x2p-64, -0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0x1.6a09e667f3bcc908b2fb1366ea95p-64, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x2p-64, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.6a09e71cf8b02a43ce15f59975fcp-64, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0x2p-64, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0x1.6a09e667f3bcceb0da94b335ddc5p-64, 0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(-0x2p-64, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x1.6a09e667f3bcc9096800069ae474p-64, 0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(-0x2p-64, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0x1.6a09e71cf8b02a43ce15f59975fcp-64, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0x2p-64, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0x1.6a09e667f3bcc908b2fb1366ea95p-64, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x2p-64, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.6a09e667f3bcceb0da94b335ddc5p-64, -0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(-0x2p-64, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x1.6a09e667f3bcc9096800069ae474p-64, -0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(-0x2p-64, -0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb542d8c79e0195cffc0e8b14p+0, 0x1.6a09e667f3bcc908ef520f22e88ap-32), asin(cf128.init(0x1p+0, 0x2p-64)));
    // try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cecca8ep+0, 0x1.6a09e6c2763684f68fd483cb6f4ep-52), asin(cf128.init(0xf.fffffp-4, 0x2p-64)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d104698c0c9a57580ep+0, 0x7.fffff00000700ffbe00ad75a88ccp-40), asin(cf128.init(0xf.ffffffffffff8p-4, 0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x1.921fb542764c51ba6e1d05c46acdp+0, 0x1.1c9e00de9cc05377aa157a778caep-32), asin(cf128.init(0xf.fffffffffffffffp-4, 0x2p-64)));
    // try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cecca8ep+0, 0x1.6a09e6c2763684f68fd483cb6f4ep-52), asin(cf128.init(-0xf.fffffp-4, 0x2p-64)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb542d8c79e0195cffc0e8b14p+0, 0x1.6a09e667f3bcc908ef520f22e88ap-32), asin(cf128.init(-0x1p+0, 0x2p-64)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d104698c0c9a57580ep+0, 0x7.fffff00000700ffbe00ad75a88ccp-40), asin(cf128.init(-0xf.ffffffffffff8p-4, 0x2p-64)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb542764c51ba6e1d05c46acdp+0, 0x1.1c9e00de9cc05377aa157a778caep-32), asin(cf128.init(-0xf.fffffffffffffffp-4, 0x2p-64)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb542d8c79e0195cffc0e8b14p+0, -0x1.6a09e667f3bcc908ef520f22e88ap-32), asin(cf128.init(0x1p+0, -0x2p-64)));
    // try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cecca8ep+0, -0x1.6a09e6c2763684f68fd483cb6f4ep-52), asin(cf128.init(0xf.fffffp-4, -0x2p-64)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d104698c0c9a57580ep+0, -0x7.fffff00000700ffbe00ad75a88ccp-40), asin(cf128.init(0xf.ffffffffffff8p-4, -0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x1.921fb542764c51ba6e1d05c46acdp+0, -0x1.1c9e00de9cc05377aa157a778caep-32), asin(cf128.init(0xf.fffffffffffffffp-4, -0x2p-64)));
    // try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cecca8ep+0, -0x1.6a09e6c2763684f68fd483cb6f4ep-52), asin(cf128.init(-0xf.fffffp-4, -0x2p-64)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb542d8c79e0195cffc0e8b14p+0, -0x1.6a09e667f3bcc908ef520f22e88ap-32), asin(cf128.init(-0x1p+0, -0x2p-64)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d104698c0c9a57580ep+0, -0x7.fffff00000700ffbe00ad75a88ccp-40), asin(cf128.init(-0xf.ffffffffffff8p-4, -0x2p-64)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb542764c51ba6e1d05c46acdp+0, -0x1.1c9e00de9cc05377aa157a778caep-32), asin(cf128.init(-0xf.fffffffffffffffp-4, -0x2p-64)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9baa54p-152, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x5.a8279c73e2c0a90f3857d665d7fp-152, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0x8p-152, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x5.a827999fcef33ac36a52ccd77714p-152, 0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32425a0001a6b91dp-152, 0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(0x8p-152, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(0x0p+0, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52ap-1076, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x2.d413ce39f16054879c2beb32ebf8p-1076, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0x4p-1076, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x2.d413cccfe7799d61b529666bbb8ap-1076, 0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(0x4p-1076, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe7799212d0000d35c8e8p-1076, 0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(0x4p-1076, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f716036b19d65d9ap-16388, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0xf.8p-16388, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccbf208755478d7d2a2f65528p-16388, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0xf.8p-16388, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f741da9e006ce176cp-16388, 0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(0xf.8p-16388, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f71608e60033306a8p-16388, 0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(0xf.8p-16388, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x5.a8279c73e2c0a90f3857d665d7fp-152, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9baa54p-152, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x5.a827999fcef33ac36a52ccd77714p-152, -0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(0x8p-152, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32425a0001a6b91dp-152, -0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(0x8p-152, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(0x0p+0, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x2.d413ce39f16054879c2beb32ebf8p-1076, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0x4p-1076, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52ap-1076, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x4p-1076, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x2.d413cccfe7799d61b529666bbb8ap-1076, -0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(0x4p-1076, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe7799212d0000d35c8e8p-1076, -0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(0x4p-1076, -0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccbf208755478d7d2a2f65528p-16388, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0xf.8p-16388, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f716036b19d65d9ap-16388, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0xf.8p-16388, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f741da9e006ce176cp-16388, -0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(0xf.8p-16388, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f71608e60033306a8p-16388, -0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(0xf.8p-16388, -0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(-0x0p+0, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9baa54p-152, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x5.a8279c73e2c0a90f3857d665d7fp-152, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0x8p-152, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(-0x5.a827999fcef33ac36a52ccd77714p-152, 0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(-0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32425a0001a6b91dp-152, 0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(-0x8p-152, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0x2.d413cccfe779921165f626cdd52ap-1076, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x2.d413ce39f16054879c2beb32ebf8p-1076, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0x4p-1076, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(-0x2.d413cccfe7799d61b529666bbb8ap-1076, 0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(-0x4p-1076, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x2.d413cccfe7799212d0000d35c8e8p-1076, 0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(-0x4p-1076, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f716036b19d65d9ap-16388, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0xf.8p-16388, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccbf208755478d7d2a2f65528p-16388, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0xf.8p-16388, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f741da9e006ce176cp-16388, 0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(-0xf.8p-16388, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f71608e60033306a8p-16388, 0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(-0xf.8p-16388, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(-0x0p+0, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(-0x5.a8279c73e2c0a90f3857d665d7fp-152, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9baa54p-152, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x5.a827999fcef33ac36a52ccd77714p-152, -0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(-0x8p-152, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32425a0001a6b91dp-152, -0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(-0x8p-152, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(-0x2.d413ce39f16054879c2beb32ebf8p-1076, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0x4p-1076, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0x2.d413cccfe779921165f626cdd52ap-1076, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x4p-1076, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x2.d413cccfe7799d61b529666bbb8ap-1076, -0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(-0x4p-1076, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x2.d413cccfe7799212d0000d35c8e8p-1076, -0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(-0x4p-1076, -0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccbf208755478d7d2a2f65528p-16388, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0xf.8p-16388, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f716036b19d65d9ap-16388, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0xf.8p-16388, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f741da9e006ce176cp-16388, -0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(-0xf.8p-16388, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f71608e60033306a8p-16388, -0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(-0xf.8p-16388, -0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469895f83da34bap+0, 0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), asin(cf128.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x8p-540), asin(cf128.init(0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196), asin(cf128.init(0x1p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, 0x5.a8279b09d8da13da3f54e34189ccp-140), asin(cf128.init(0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, 0x0p+0), asin(cf128.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, 0x2.d413cd84ec6d09ed1faa71a0c4e6p-1064), asin(cf128.init(0xf.fffffp-4, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, 0xa.f5ccbc6314268676dab4784efaf8p-16376), asin(cf128.init(0xf.fffffp-4, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898c9a6c570ep+0, 0x2.000000000000040000000000000cp-124), asin(cf128.init(0xf.ffffffffffff8p-4, 0x8p-152)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898c9a6c570ep+0, 0x0p+0), asin(cf128.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898c9a6c570ep+0, 0x1.0000000000000200000000000006p-1048), asin(cf128.init(0xf.ffffffffffff8p-4, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898c9a6c570ep+0, 0x3.e0000000000007c0000000000018p-16360), asin(cf128.init(0xf.ffffffffffff8p-4, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb542d8c79e0195cffc0e3092p+0, 0x5.a827999fcef3242435f634039e14p-120), asin(cf128.init(0xf.fffffffffffffffp-4, 0x8p-152)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb542d8c79e0195cffc0e3092p+0, 0x0p+0), asin(cf128.init(0xf.fffffffffffffffp-4, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb542d8c79e0195cffc0e3092p+0, 0x2.d413cccfe77992121afb1a01cf0ap-1044), asin(cf128.init(0xf.fffffffffffffffp-4, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb542d8c79e0195cffc0e3092p+0, 0xa.f5ccb9a5a0f71606288d04c70248p-16356), asin(cf128.init(0xf.fffffffffffffffp-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, 0x5.a8279b09d8da13da3f54e34189ccp-140), asin(cf128.init(-0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, 0x0p+0), asin(cf128.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, 0x2.d413cd84ec6d09ed1faa71a0c4e6p-1064), asin(cf128.init(-0xf.fffffp-4, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, 0xa.f5ccbc6314268676dab4784efaf8p-16376), asin(cf128.init(-0xf.fffffp-4, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469895f83da34bap+0, 0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), asin(cf128.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x8p-540), asin(cf128.init(-0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196), asin(cf128.init(-0x1p+0, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898c9a6c570ep+0, 0x2.000000000000040000000000000cp-124), asin(cf128.init(-0xf.ffffffffffff8p-4, 0x8p-152)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898c9a6c570ep+0, 0x0p+0), asin(cf128.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898c9a6c570ep+0, 0x1.0000000000000200000000000006p-1048), asin(cf128.init(-0xf.ffffffffffff8p-4, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898c9a6c570ep+0, 0x3.e0000000000007c0000000000018p-16360), asin(cf128.init(-0xf.ffffffffffff8p-4, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb542d8c79e0195cffc0e3092p+0, 0x5.a827999fcef3242435f634039e14p-120), asin(cf128.init(-0xf.fffffffffffffffp-4, 0x8p-152)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb542d8c79e0195cffc0e3092p+0, 0x0p+0), asin(cf128.init(-0xf.fffffffffffffffp-4, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb542d8c79e0195cffc0e3092p+0, 0x2.d413cccfe77992121afb1a01cf0ap-1044), asin(cf128.init(-0xf.fffffffffffffffp-4, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb542d8c79e0195cffc0e3092p+0, 0xa.f5ccb9a5a0f71606288d04c70248p-16356), asin(cf128.init(-0xf.fffffffffffffffp-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), asin(cf128.init(0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469895f83da34bap+0, -0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x8p-540), asin(cf128.init(0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196), asin(cf128.init(0x1p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, -0x0p+0), asin(cf128.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, -0x5.a8279b09d8da13da3f54e34189ccp-140), asin(cf128.init(0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, -0x2.d413cd84ec6d09ed1faa71a0c4e6p-1064), asin(cf128.init(0xf.fffffp-4, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, -0xa.f5ccbc6314268676dab4784efaf8p-16376), asin(cf128.init(0xf.fffffp-4, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898c9a6c570ep+0, -0x0p+0), asin(cf128.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898c9a6c570ep+0, -0x2.000000000000040000000000000cp-124), asin(cf128.init(0xf.ffffffffffff8p-4, -0x8p-152)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898c9a6c570ep+0, -0x1.0000000000000200000000000006p-1048), asin(cf128.init(0xf.ffffffffffff8p-4, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898c9a6c570ep+0, -0x3.e0000000000007c0000000000018p-16360), asin(cf128.init(0xf.ffffffffffff8p-4, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb542d8c79e0195cffc0e3092p+0, -0x0p+0), asin(cf128.init(0xf.fffffffffffffffp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb542d8c79e0195cffc0e3092p+0, -0x5.a827999fcef3242435f634039e14p-120), asin(cf128.init(0xf.fffffffffffffffp-4, -0x8p-152)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb542d8c79e0195cffc0e3092p+0, -0x2.d413cccfe77992121afb1a01cf0ap-1044), asin(cf128.init(0xf.fffffffffffffffp-4, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb542d8c79e0195cffc0e3092p+0, -0xa.f5ccb9a5a0f71606288d04c70248p-16356), asin(cf128.init(0xf.fffffffffffffffp-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, -0x0p+0), asin(cf128.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, -0x5.a8279b09d8da13da3f54e34189ccp-140), asin(cf128.init(-0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, -0x2.d413cd84ec6d09ed1faa71a0c4e6p-1064), asin(cf128.init(-0xf.fffffp-4, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, -0xa.f5ccbc6314268676dab4784efaf8p-16376), asin(cf128.init(-0xf.fffffp-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), asin(cf128.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469895f83da34bap+0, -0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x8p-540), asin(cf128.init(-0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196), asin(cf128.init(-0x1p+0, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898c9a6c570ep+0, -0x0p+0), asin(cf128.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898c9a6c570ep+0, -0x2.000000000000040000000000000cp-124), asin(cf128.init(-0xf.ffffffffffff8p-4, -0x8p-152)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898c9a6c570ep+0, -0x1.0000000000000200000000000006p-1048), asin(cf128.init(-0xf.ffffffffffff8p-4, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898c9a6c570ep+0, -0x3.e0000000000007c0000000000018p-16360), asin(cf128.init(-0xf.ffffffffffff8p-4, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb542d8c79e0195cffc0e3092p+0, -0x0p+0), asin(cf128.init(-0xf.fffffffffffffffp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb542d8c79e0195cffc0e3092p+0, -0x5.a827999fcef3242435f634039e14p-120), asin(cf128.init(-0xf.fffffffffffffffp-4, -0x8p-152)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb542d8c79e0195cffc0e3092p+0, -0x2.d413cccfe77992121afb1a01cf0ap-1044), asin(cf128.init(-0xf.fffffffffffffffp-4, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb542d8c79e0195cffc0e3092p+0, -0xa.f5ccb9a5a0f71606288d04c70248p-16356), asin(cf128.init(-0xf.fffffffffffffffp-4, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(0x0p+0, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(0x0p+0, -0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(-0x0p+0, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(-0x0p+0, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), asin(cf128.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, 0x0p+0), asin(cf128.init(0xf.fffffp-4, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898c9a6c570ep+0, 0x0p+0), asin(cf128.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb542d8c79e0195cffc0e3092p+0, 0x0p+0), asin(cf128.init(0xf.fffffffffffffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, 0x0p+0), asin(cf128.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), asin(cf128.init(-0x1p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898c9a6c570ep+0, 0x0p+0), asin(cf128.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb542d8c79e0195cffc0e3092p+0, 0x0p+0), asin(cf128.init(-0xf.fffffffffffffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), asin(cf128.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, -0x0p+0), asin(cf128.init(0xf.fffffp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898c9a6c570ep+0, -0x0p+0), asin(cf128.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb542d8c79e0195cffc0e3092p+0, -0x0p+0), asin(cf128.init(0xf.fffffffffffffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, -0x0p+0), asin(cf128.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), asin(cf128.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898c9a6c570ep+0, -0x0p+0), asin(cf128.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb542d8c79e0195cffc0e3092p+0, -0x0p+0), asin(cf128.init(-0xf.fffffffffffffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.c9f25c5bfedd93565294670094bp-64, 0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(0x2p-64, 0x8p-4)));
    try std.testing.expectEqual(cf128.init(0x1.c9f25c5bfedd93565294670094bp-64, -0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(0x2p-64, -0x8p-4)));
    try std.testing.expectEqual(cf128.init(-0x1.c9f25c5bfedd93565294670094bp-64, 0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(-0x2p-64, 0x8p-4)));
    try std.testing.expectEqual(cf128.init(-0x1.c9f25c5bfedd93565294670094bp-64, -0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(-0x2p-64, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x8.60a91c16b9b2c232dd99707ab3d8p-4, 0x2.4f34e8b2066389a431f03c95f64ap-64), asin(cf128.init(0x8p-4, 0x2p-64)));
    // try std.testing.expectEqual(cf128.init(-0x8.60a91c16b9b2c232dd99707ab3d8p-4, 0x2.4f34e8b2066389a431f03c95f64ap-64), asin(cf128.init(-0x8p-4, 0x2p-64)));
    // try std.testing.expectEqual(cf128.init(0x8.60a91c16b9b2c232dd99707ab3d8p-4, -0x2.4f34e8b2066389a431f03c95f64ap-64), asin(cf128.init(0x8p-4, -0x2p-64)));
    // try std.testing.expectEqual(cf128.init(-0x8.60a91c16b9b2c232dd99707ab3d8p-4, -0x2.4f34e8b2066389a431f03c95f64ap-64), asin(cf128.init(-0x8p-4, -0x2p-64)));
    // try std.testing.expectEqual(cf128.init(0x7.27c9716ffb764d594a519c0252cp-152, 0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(0x8p-152, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(0x0p+0, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x3.93e4b8b7fdbb26aca528ce01296p-1076, 0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(0x4p-1076, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0xd.dd164bc8f73535dcfffe1e44804p-16388, 0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(0xf.8p-16388, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x7.27c9716ffb764d594a519c0252cp-152, -0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(0x8p-152, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(0x0p+0, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x3.93e4b8b7fdbb26aca528ce01296p-1076, -0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(0x4p-1076, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0xd.dd164bc8f73535dcfffe1e44804p-16388, -0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(0xf.8p-16388, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(-0x0p+0, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x7.27c9716ffb764d594a519c0252cp-152, 0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(-0x8p-152, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x3.93e4b8b7fdbb26aca528ce01296p-1076, 0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(-0x4p-1076, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(-0xd.dd164bc8f73535dcfffe1e44804p-16388, 0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(-0xf.8p-16388, 0x8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(-0x0p+0, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x7.27c9716ffb764d594a519c0252cp-152, -0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(-0x8p-152, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x3.93e4b8b7fdbb26aca528ce01296p-1076, -0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(-0x4p-1076, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(-0xd.dd164bc8f73535dcfffe1e44804p-16388, -0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(-0xf.8p-16388, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x8.60a91c16b9b2c232dd99707ab3d8p-4, 0x9.3cd3a2c8198e2690c7c0f257d928p-152), asin(cf128.init(0x8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x8.60a91c16b9b2c232dd99707ab3d8p-4, 0x0p+0), asin(cf128.init(0x8p-4, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x8.60a91c16b9b2c232dd99707ab3d8p-4, 0x4.9e69d1640cc7134863e0792bec94p-1076), asin(cf128.init(0x8p-4, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x8.60a91c16b9b2c232dd99707ab3d8p-4, 0x1.1e5da0b63b1836ab88305d58a34cp-16384), asin(cf128.init(0x8p-4, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(-0x8.60a91c16b9b2c232dd99707ab3d8p-4, 0x9.3cd3a2c8198e2690c7c0f257d928p-152), asin(cf128.init(-0x8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x8.60a91c16b9b2c232dd99707ab3d8p-4, 0x0p+0), asin(cf128.init(-0x8p-4, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x8.60a91c16b9b2c232dd99707ab3d8p-4, 0x4.9e69d1640cc7134863e0792bec94p-1076), asin(cf128.init(-0x8p-4, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(-0x8.60a91c16b9b2c232dd99707ab3d8p-4, 0x1.1e5da0b63b1836ab88305d58a34cp-16384), asin(cf128.init(-0x8p-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x8.60a91c16b9b2c232dd99707ab3d8p-4, -0x0p+0), asin(cf128.init(0x8p-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x8.60a91c16b9b2c232dd99707ab3d8p-4, -0x9.3cd3a2c8198e2690c7c0f257d928p-152), asin(cf128.init(0x8p-4, -0x8p-152)));
    // try std.testing.expectEqual(cf128.init(0x8.60a91c16b9b2c232dd99707ab3d8p-4, -0x4.9e69d1640cc7134863e0792bec94p-1076), asin(cf128.init(0x8p-4, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x8.60a91c16b9b2c232dd99707ab3d8p-4, -0x1.1e5da0b63b1836ab88305d58a34cp-16384), asin(cf128.init(0x8p-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(-0x8.60a91c16b9b2c232dd99707ab3d8p-4, -0x0p+0), asin(cf128.init(-0x8p-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x8.60a91c16b9b2c232dd99707ab3d8p-4, -0x9.3cd3a2c8198e2690c7c0f257d928p-152), asin(cf128.init(-0x8p-4, -0x8p-152)));
    // try std.testing.expectEqual(cf128.init(-0x8.60a91c16b9b2c232dd99707ab3d8p-4, -0x4.9e69d1640cc7134863e0792bec94p-1076), asin(cf128.init(-0x8p-4, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(-0x8.60a91c16b9b2c232dd99707ab3d8p-4, -0x1.1e5da0b63b1836ab88305d58a34cp-16384), asin(cf128.init(-0x8p-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x2p-64, 0x2p-64), asin(cf128.init(0x2p-64, 0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x2p-64, -0x2p-64), asin(cf128.init(0x2p-64, -0x2p-64)));
    try std.testing.expectEqual(cf128.init(-0x2p-64, 0x2p-64), asin(cf128.init(-0x2p-64, 0x2p-64)));
    try std.testing.expectEqual(cf128.init(-0x2p-64, -0x2p-64), asin(cf128.init(-0x2p-64, -0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x8p-152, 0x2p-64), asin(cf128.init(0x8p-152, 0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x2p-64), asin(cf128.init(0x0p+0, 0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x4p-1076, 0x2p-64), asin(cf128.init(0x4p-1076, 0x2p-64)));
    try std.testing.expectEqual(cf128.init(0xf.8p-16388, 0x2p-64), asin(cf128.init(0xf.8p-16388, 0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x8p-152, -0x2p-64), asin(cf128.init(0x8p-152, -0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x2p-64), asin(cf128.init(0x0p+0, -0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x4p-1076, -0x2p-64), asin(cf128.init(0x4p-1076, -0x2p-64)));
    try std.testing.expectEqual(cf128.init(0xf.8p-16388, -0x2p-64), asin(cf128.init(0xf.8p-16388, -0x2p-64)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0x2p-64), asin(cf128.init(-0x0p+0, 0x2p-64)));
    try std.testing.expectEqual(cf128.init(-0x8p-152, 0x2p-64), asin(cf128.init(-0x8p-152, 0x2p-64)));
    try std.testing.expectEqual(cf128.init(-0x4p-1076, 0x2p-64), asin(cf128.init(-0x4p-1076, 0x2p-64)));
    try std.testing.expectEqual(cf128.init(-0xf.8p-16388, 0x2p-64), asin(cf128.init(-0xf.8p-16388, 0x2p-64)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0x2p-64), asin(cf128.init(-0x0p+0, -0x2p-64)));
    try std.testing.expectEqual(cf128.init(-0x8p-152, -0x2p-64), asin(cf128.init(-0x8p-152, -0x2p-64)));
    try std.testing.expectEqual(cf128.init(-0x4p-1076, -0x2p-64), asin(cf128.init(-0x4p-1076, -0x2p-64)));
    try std.testing.expectEqual(cf128.init(-0xf.8p-16388, -0x2p-64), asin(cf128.init(-0xf.8p-16388, -0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x2p-64, 0x8p-152), asin(cf128.init(0x2p-64, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x2p-64, 0x0p+0), asin(cf128.init(0x2p-64, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x2p-64, 0x4p-1076), asin(cf128.init(0x2p-64, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x2p-64, 0xf.8p-16388), asin(cf128.init(0x2p-64, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(-0x2p-64, 0x8p-152), asin(cf128.init(-0x2p-64, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x2p-64, 0x0p+0), asin(cf128.init(-0x2p-64, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x2p-64, 0x4p-1076), asin(cf128.init(-0x2p-64, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(-0x2p-64, 0xf.8p-16388), asin(cf128.init(-0x2p-64, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x2p-64, -0x0p+0), asin(cf128.init(0x2p-64, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x2p-64, -0x8p-152), asin(cf128.init(0x2p-64, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x2p-64, -0x4p-1076), asin(cf128.init(0x2p-64, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x2p-64, -0xf.8p-16388), asin(cf128.init(0x2p-64, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(-0x2p-64, -0x0p+0), asin(cf128.init(-0x2p-64, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x2p-64, -0x8p-152), asin(cf128.init(-0x2p-64, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x2p-64, -0x4p-1076), asin(cf128.init(-0x2p-64, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(-0x2p-64, -0xf.8p-16388), asin(cf128.init(-0x2p-64, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x2p-64), asin(cf128.init(0x0p+0, 0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x2p-64), asin(cf128.init(0x0p+0, -0x2p-64)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0x2p-64), asin(cf128.init(-0x0p+0, 0x2p-64)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0x2p-64), asin(cf128.init(-0x0p+0, -0x2p-64)));
    try std.testing.expectEqual(cf128.init(0x2p-64, 0x0p+0), asin(cf128.init(0x2p-64, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x2p-64, 0x0p+0), asin(cf128.init(-0x2p-64, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x2p-64, -0x0p+0), asin(cf128.init(0x2p-64, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x2p-64, -0x0p+0), asin(cf128.init(-0x2p-64, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x8p-152, 0x8p-152), asin(cf128.init(0x8p-152, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x8p-152, 0x0p+0), asin(cf128.init(0x8p-152, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x8p-152, 0x4p-1076), asin(cf128.init(0x8p-152, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x8p-152, 0xf.8p-16388), asin(cf128.init(0x8p-152, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x8p-152), asin(cf128.init(0x0p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x0p+0), asin(cf128.init(0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x4p-1076), asin(cf128.init(0x0p+0, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xf.8p-16388), asin(cf128.init(0x0p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x4p-1076, 0x8p-152), asin(cf128.init(0x4p-1076, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x4p-1076, 0x0p+0), asin(cf128.init(0x4p-1076, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x4p-1076, 0x4p-1076), asin(cf128.init(0x4p-1076, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x4p-1076, 0xf.8p-16388), asin(cf128.init(0x4p-1076, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0xf.8p-16388, 0x8p-152), asin(cf128.init(0xf.8p-16388, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0xf.8p-16388, 0x0p+0), asin(cf128.init(0xf.8p-16388, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0xf.8p-16388, 0x4p-1076), asin(cf128.init(0xf.8p-16388, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0xf.8p-16388, 0xf.8p-16388), asin(cf128.init(0xf.8p-16388, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x8p-152, -0x0p+0), asin(cf128.init(0x8p-152, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x8p-152, -0x8p-152), asin(cf128.init(0x8p-152, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x8p-152, -0x4p-1076), asin(cf128.init(0x8p-152, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x8p-152, -0xf.8p-16388), asin(cf128.init(0x8p-152, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x0p+0), asin(cf128.init(0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x8p-152), asin(cf128.init(0x0p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x4p-1076), asin(cf128.init(0x0p+0, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xf.8p-16388), asin(cf128.init(0x0p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x4p-1076, -0x0p+0), asin(cf128.init(0x4p-1076, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x4p-1076, -0x8p-152), asin(cf128.init(0x4p-1076, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x4p-1076, -0x4p-1076), asin(cf128.init(0x4p-1076, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x4p-1076, -0xf.8p-16388), asin(cf128.init(0x4p-1076, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0xf.8p-16388, -0x0p+0), asin(cf128.init(0xf.8p-16388, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0xf.8p-16388, -0x8p-152), asin(cf128.init(0xf.8p-16388, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0xf.8p-16388, -0x4p-1076), asin(cf128.init(0xf.8p-16388, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0xf.8p-16388, -0xf.8p-16388), asin(cf128.init(0xf.8p-16388, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0x8p-152), asin(cf128.init(-0x0p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0x0p+0), asin(cf128.init(-0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0x4p-1076), asin(cf128.init(-0x0p+0, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xf.8p-16388), asin(cf128.init(-0x0p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(-0x8p-152, 0x8p-152), asin(cf128.init(-0x8p-152, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x8p-152, 0x0p+0), asin(cf128.init(-0x8p-152, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x8p-152, 0x4p-1076), asin(cf128.init(-0x8p-152, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(-0x8p-152, 0xf.8p-16388), asin(cf128.init(-0x8p-152, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(-0x4p-1076, 0x8p-152), asin(cf128.init(-0x4p-1076, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x4p-1076, 0x0p+0), asin(cf128.init(-0x4p-1076, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x4p-1076, 0x4p-1076), asin(cf128.init(-0x4p-1076, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(-0x4p-1076, 0xf.8p-16388), asin(cf128.init(-0x4p-1076, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(-0xf.8p-16388, 0x8p-152), asin(cf128.init(-0xf.8p-16388, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0xf.8p-16388, 0x0p+0), asin(cf128.init(-0xf.8p-16388, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0xf.8p-16388, 0x4p-1076), asin(cf128.init(-0xf.8p-16388, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(-0xf.8p-16388, 0xf.8p-16388), asin(cf128.init(-0xf.8p-16388, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0x0p+0), asin(cf128.init(-0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0x8p-152), asin(cf128.init(-0x0p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0x4p-1076), asin(cf128.init(-0x0p+0, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xf.8p-16388), asin(cf128.init(-0x0p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(-0x8p-152, -0x0p+0), asin(cf128.init(-0x8p-152, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x8p-152, -0x8p-152), asin(cf128.init(-0x8p-152, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x8p-152, -0x4p-1076), asin(cf128.init(-0x8p-152, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(-0x8p-152, -0xf.8p-16388), asin(cf128.init(-0x8p-152, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(-0x4p-1076, -0x0p+0), asin(cf128.init(-0x4p-1076, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x4p-1076, -0x8p-152), asin(cf128.init(-0x4p-1076, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x4p-1076, -0x4p-1076), asin(cf128.init(-0x4p-1076, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(-0x4p-1076, -0xf.8p-16388), asin(cf128.init(-0x4p-1076, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(-0xf.8p-16388, -0x0p+0), asin(cf128.init(-0xf.8p-16388, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0xf.8p-16388, -0x8p-152), asin(cf128.init(-0xf.8p-16388, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0xf.8p-16388, -0x4p-1076), asin(cf128.init(-0xf.8p-16388, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(-0xf.8p-16388, -0xf.8p-16388), asin(cf128.init(-0xf.8p-16388, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9baa54p-108, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x8p-108, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.a8279c73e2c0a90f3857d665d7fp-108, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0x8p-108, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef33ac36a52ccd77714p-108, 0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(0x8p-108, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32425a0001a6b91dp-108, 0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(0x8p-108, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9bab0cp-108, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(0x8p-108, 0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(0x5.a8279c73e2c0a90f3857d665d7fp-108, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0x8p-108, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9baa54p-108, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x8p-108, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef33ac36a52ccd77714p-108, -0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(0x8p-108, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32425a0001a6b91dp-108, -0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(0x8p-108, -0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9bab0cp-108, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(0x8p-108, -0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9baa54p-108, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x8p-108, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.a8279c73e2c0a90f3857d665d7fp-108, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0x8p-108, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef33ac36a52ccd77714p-108, 0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(-0x8p-108, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32425a0001a6b91dp-108, 0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(-0x8p-108, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9bab0cp-108, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(-0x8p-108, 0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(-0x5.a8279c73e2c0a90f3857d665d7fp-108, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0x8p-108, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9baa54p-108, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x8p-108, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef33ac36a52ccd77714p-108, -0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(-0x8p-108, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32425a0001a6b91dp-108, -0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(-0x8p-108, -0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9bab0cp-108, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(-0x8p-108, -0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d179193a5985791b7p+0, 0xb.504f333f9de6484597d89b375528p-56), asin(cf128.init(0x1p+0, 0x8p-108)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, 0x5.a8279b09d8da13da3f54e34189ccp-96), asin(cf128.init(0xf.fffffp-4, 0x8p-108)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898c9a6c570ep+0, 0x2.00000000000003ffffffffffffccp-80), asin(cf128.init(0xf.ffffffffffff8p-4, 0x8p-108)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb542d8c79e0195cffc0e3092p+0, 0x5.a827999fcef3242435f606c26144p-76), asin(cf128.init(0xf.fffffffffffffffp-4, 0x8p-108)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d176055ff74c3b83bep+0, 0x8.e4f006f4e6029bba2ce63a3e83dp-56), asin(cf128.init(0xf.fffffffffffffffffffffffffcp-4, 0x8p-108)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, 0x5.a8279b09d8da13da3f54e34189ccp-96), asin(cf128.init(-0xf.fffffp-4, 0x8p-108)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d179193a5985791b7p+0, 0xb.504f333f9de6484597d89b375528p-56), asin(cf128.init(-0x1p+0, 0x8p-108)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898c9a6c570ep+0, 0x2.00000000000003ffffffffffffccp-80), asin(cf128.init(-0xf.ffffffffffff8p-4, 0x8p-108)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb542d8c79e0195cffc0e3092p+0, 0x5.a827999fcef3242435f606c26144p-76), asin(cf128.init(-0xf.fffffffffffffffp-4, 0x8p-108)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d176055ff74c3b83bep+0, 0x8.e4f006f4e6029bba2ce63a3e83dp-56), asin(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, 0x8p-108)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d179193a5985791b7p+0, -0xb.504f333f9de6484597d89b375528p-56), asin(cf128.init(0x1p+0, -0x8p-108)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, -0x5.a8279b09d8da13da3f54e34189ccp-96), asin(cf128.init(0xf.fffffp-4, -0x8p-108)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898c9a6c570ep+0, -0x2.00000000000003ffffffffffffccp-80), asin(cf128.init(0xf.ffffffffffff8p-4, -0x8p-108)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb542d8c79e0195cffc0e3092p+0, -0x5.a827999fcef3242435f606c26144p-76), asin(cf128.init(0xf.fffffffffffffffp-4, -0x8p-108)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d176055ff74c3b83bep+0, -0x8.e4f006f4e6029bba2ce63a3e83dp-56), asin(cf128.init(0xf.fffffffffffffffffffffffffcp-4, -0x8p-108)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, -0x5.a8279b09d8da13da3f54e34189ccp-96), asin(cf128.init(-0xf.fffffp-4, -0x8p-108)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d179193a5985791b7p+0, -0xb.504f333f9de6484597d89b375528p-56), asin(cf128.init(-0x1p+0, -0x8p-108)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898c9a6c570ep+0, -0x2.00000000000003ffffffffffffccp-80), asin(cf128.init(-0xf.ffffffffffff8p-4, -0x8p-108)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb542d8c79e0195cffc0e3092p+0, -0x5.a827999fcef3242435f606c26144p-76), asin(cf128.init(-0xf.fffffffffffffffp-4, -0x8p-108)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d176055ff74c3b83bep+0, -0x8.e4f006f4e6029bba2ce63a3e83dp-56), asin(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, -0x8p-108)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9baa54p-152, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x5.a8279c73e2c0a90f3857d665d7fp-152, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0x8p-152, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x5.a827999fcef33ac36a52ccd77714p-152, 0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32425a0001a6b91dp-152, 0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(0x8p-152, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9bab0cp-152, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(0x8p-152, 0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(0x0p+0, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(0x0p+0, 0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f716036b19d65d9a08p-1028, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0xf.8p-1028, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0xa.f5ccbf208755478d7d2a2f65526p-1028, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0xf.8p-1028, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f741da9e006ce176b8p-1028, 0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(0xf.8p-1028, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f71608e60033306a8p-1028, 0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(0xf.8p-1028, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f716036b19d65d9b68p-1028, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(0xf.8p-1028, 0xf.fffffffffffffffffffffffffcp-4)));
    try std.testing.expectEqual(cf128.init(0x5.a8279c73e2c0a90f3857d665d7fp-152, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9baa54p-152, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x5.a827999fcef33ac36a52ccd77714p-152, -0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(0x8p-152, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32425a0001a6b91dp-152, -0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(0x8p-152, -0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9bab0cp-152, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(0x8p-152, -0xf.fffffffffffffffffffffffffcp-4)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(0x0p+0, -0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(0x0p+0, -0xf.fffffffffffffffffffffffffcp-4)));
    try std.testing.expectEqual(cf128.init(0xa.f5ccbf208755478d7d2a2f65526p-1028, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0xf.8p-1028, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f716036b19d65d9a08p-1028, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0xf.8p-1028, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f741da9e006ce176b8p-1028, -0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(0xf.8p-1028, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f71608e60033306a8p-1028, -0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(0xf.8p-1028, -0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f716036b19d65d9b68p-1028, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(0xf.8p-1028, -0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(-0x0p+0, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(-0x0p+0, 0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9baa54p-152, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x5.a8279c73e2c0a90f3857d665d7fp-152, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0x8p-152, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(-0x5.a827999fcef33ac36a52ccd77714p-152, 0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(-0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32425a0001a6b91dp-152, 0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(-0x8p-152, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9bab0cp-152, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(-0x8p-152, 0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f716036b19d65d9a08p-1028, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0xf.8p-1028, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0xa.f5ccbf208755478d7d2a2f65526p-1028, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0xf.8p-1028, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f741da9e006ce176b8p-1028, 0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(-0xf.8p-1028, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f71608e60033306a8p-1028, 0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(-0xf.8p-1028, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f716036b19d65d9b68p-1028, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(-0xf.8p-1028, 0xf.fffffffffffffffffffffffffcp-4)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(-0x0p+0, -0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(-0x0p+0, -0xf.fffffffffffffffffffffffffcp-4)));
    try std.testing.expectEqual(cf128.init(-0x5.a8279c73e2c0a90f3857d665d7fp-152, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9baa54p-152, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x5.a827999fcef33ac36a52ccd77714p-152, -0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(-0x8p-152, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32425a0001a6b91dp-152, -0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(-0x8p-152, -0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9bab0cp-152, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(-0x8p-152, -0xf.fffffffffffffffffffffffffcp-4)));
    try std.testing.expectEqual(cf128.init(-0xa.f5ccbf208755478d7d2a2f65526p-1028, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0xf.8p-1028, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f716036b19d65d9a08p-1028, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0xf.8p-1028, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f741da9e006ce176b8p-1028, -0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(-0xf.8p-1028, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f71608e60033306a8p-1028, -0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(-0xf.8p-1028, -0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f716036b19d65d9b68p-1028, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(-0xf.8p-1028, -0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469895f83da34bap+0, 0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), asin(cf128.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-516), asin(cf128.init(0x1p+0, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, 0x5.a8279b09d8da13da3f54e34189ccp-140), asin(cf128.init(0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, 0x0p+0), asin(cf128.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, 0xa.f5ccbc6314268676dab4784efaf8p-1016), asin(cf128.init(0xf.fffffp-4, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898c9a6c570ep+0, 0x2.000000000000040000000000000cp-124), asin(cf128.init(0xf.ffffffffffff8p-4, 0x8p-152)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898c9a6c570ep+0, 0x0p+0), asin(cf128.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898c9a6c570ep+0, 0x3.e0000000000007c0000000000018p-1000), asin(cf128.init(0xf.ffffffffffff8p-4, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb542d8c79e0195cffc0e3092p+0, 0x5.a827999fcef3242435f634039e14p-120), asin(cf128.init(0xf.fffffffffffffffp-4, 0x8p-152)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb542d8c79e0195cffc0e3092p+0, 0x0p+0), asin(cf128.init(0xf.fffffffffffffffp-4, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb542d8c79e0195cffc0e3092p+0, 0xa.f5ccb9a5a0f71606288d04c70248p-996), asin(cf128.init(0xf.fffffffffffffffp-4, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d179193a5985791b7p+0, 0xb.504f333f9de6484597d8958f2dc8p-100), asin(cf128.init(0xf.fffffffffffffffffffffffffcp-4, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d179193a5985791b7p+0, 0x0p+0), asin(cf128.init(0xf.fffffffffffffffffffffffffcp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d179193a5985791b7p+0, 0x1.5eb99734b41ee2c06d633acbb357p-972), asin(cf128.init(0xf.fffffffffffffffffffffffffcp-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, 0x5.a8279b09d8da13da3f54e34189ccp-140), asin(cf128.init(-0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, 0x0p+0), asin(cf128.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, 0xa.f5ccbc6314268676dab4784efaf8p-1016), asin(cf128.init(-0xf.fffffp-4, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469895f83da34bap+0, 0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), asin(cf128.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-516), asin(cf128.init(-0x1p+0, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898c9a6c570ep+0, 0x2.000000000000040000000000000cp-124), asin(cf128.init(-0xf.ffffffffffff8p-4, 0x8p-152)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898c9a6c570ep+0, 0x0p+0), asin(cf128.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898c9a6c570ep+0, 0x3.e0000000000007c0000000000018p-1000), asin(cf128.init(-0xf.ffffffffffff8p-4, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb542d8c79e0195cffc0e3092p+0, 0x5.a827999fcef3242435f634039e14p-120), asin(cf128.init(-0xf.fffffffffffffffp-4, 0x8p-152)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb542d8c79e0195cffc0e3092p+0, 0x0p+0), asin(cf128.init(-0xf.fffffffffffffffp-4, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb542d8c79e0195cffc0e3092p+0, 0xa.f5ccb9a5a0f71606288d04c70248p-996), asin(cf128.init(-0xf.fffffffffffffffp-4, 0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d179193a5985791b7p+0, 0xb.504f333f9de6484597d8958f2dc8p-100), asin(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d179193a5985791b7p+0, 0x0p+0), asin(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d179193a5985791b7p+0, 0x1.5eb99734b41ee2c06d633acbb357p-972), asin(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), asin(cf128.init(0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469895f83da34bap+0, -0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-516), asin(cf128.init(0x1p+0, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, -0x0p+0), asin(cf128.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, -0x5.a8279b09d8da13da3f54e34189ccp-140), asin(cf128.init(0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, -0xa.f5ccbc6314268676dab4784efaf8p-1016), asin(cf128.init(0xf.fffffp-4, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898c9a6c570ep+0, -0x0p+0), asin(cf128.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898c9a6c570ep+0, -0x2.000000000000040000000000000cp-124), asin(cf128.init(0xf.ffffffffffff8p-4, -0x8p-152)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898c9a6c570ep+0, -0x3.e0000000000007c0000000000018p-1000), asin(cf128.init(0xf.ffffffffffff8p-4, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb542d8c79e0195cffc0e3092p+0, -0x0p+0), asin(cf128.init(0xf.fffffffffffffffp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb542d8c79e0195cffc0e3092p+0, -0x5.a827999fcef3242435f634039e14p-120), asin(cf128.init(0xf.fffffffffffffffp-4, -0x8p-152)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb542d8c79e0195cffc0e3092p+0, -0xa.f5ccb9a5a0f71606288d04c70248p-996), asin(cf128.init(0xf.fffffffffffffffp-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d179193a5985791b7p+0, -0x0p+0), asin(cf128.init(0xf.fffffffffffffffffffffffffcp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d179193a5985791b7p+0, -0xb.504f333f9de6484597d8958f2dc8p-100), asin(cf128.init(0xf.fffffffffffffffffffffffffcp-4, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d179193a5985791b7p+0, -0x1.5eb99734b41ee2c06d633acbb357p-972), asin(cf128.init(0xf.fffffffffffffffffffffffffcp-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, -0x0p+0), asin(cf128.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, -0x5.a8279b09d8da13da3f54e34189ccp-140), asin(cf128.init(-0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, -0xa.f5ccbc6314268676dab4784efaf8p-1016), asin(cf128.init(-0xf.fffffp-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), asin(cf128.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469895f83da34bap+0, -0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-516), asin(cf128.init(-0x1p+0, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898c9a6c570ep+0, -0x0p+0), asin(cf128.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898c9a6c570ep+0, -0x2.000000000000040000000000000cp-124), asin(cf128.init(-0xf.ffffffffffff8p-4, -0x8p-152)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898c9a6c570ep+0, -0x3.e0000000000007c0000000000018p-1000), asin(cf128.init(-0xf.ffffffffffff8p-4, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb542d8c79e0195cffc0e3092p+0, -0x0p+0), asin(cf128.init(-0xf.fffffffffffffffp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb542d8c79e0195cffc0e3092p+0, -0x5.a827999fcef3242435f634039e14p-120), asin(cf128.init(-0xf.fffffffffffffffp-4, -0x8p-152)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb542d8c79e0195cffc0e3092p+0, -0xa.f5ccb9a5a0f71606288d04c70248p-996), asin(cf128.init(-0xf.fffffffffffffffp-4, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d179193a5985791b7p+0, -0x0p+0), asin(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d179193a5985791b7p+0, -0xb.504f333f9de6484597d8958f2dc8p-100), asin(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d179193a5985791b7p+0, -0x1.5eb99734b41ee2c06d633acbb357p-972), asin(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, -0xf.8p-1028)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(0x0p+0, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(0x0p+0, 0xf.fffffffffffffffffffffffffcp-4)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(0x0p+0, -0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(0x0p+0, -0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(-0x0p+0, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(-0x0p+0, 0xf.fffffffffffffffffffffffffcp-4)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(-0x0p+0, -0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(-0x0p+0, -0xf.fffffffffffffffffffffffffcp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), asin(cf128.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, 0x0p+0), asin(cf128.init(0xf.fffffp-4, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898c9a6c570ep+0, 0x0p+0), asin(cf128.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb542d8c79e0195cffc0e3092p+0, 0x0p+0), asin(cf128.init(0xf.fffffffffffffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d179193a5985791b7p+0, 0x0p+0), asin(cf128.init(0xf.fffffffffffffffffffffffffcp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, 0x0p+0), asin(cf128.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), asin(cf128.init(-0x1p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898c9a6c570ep+0, 0x0p+0), asin(cf128.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb542d8c79e0195cffc0e3092p+0, 0x0p+0), asin(cf128.init(-0xf.fffffffffffffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d179193a5985791b7p+0, 0x0p+0), asin(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), asin(cf128.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, -0x0p+0), asin(cf128.init(0xf.fffffp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898c9a6c570ep+0, -0x0p+0), asin(cf128.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb542d8c79e0195cffc0e3092p+0, -0x0p+0), asin(cf128.init(0xf.fffffffffffffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d179193a5985791b7p+0, -0x0p+0), asin(cf128.init(0xf.fffffffffffffffffffffffffcp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, -0x0p+0), asin(cf128.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), asin(cf128.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898c9a6c570ep+0, -0x0p+0), asin(cf128.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb542d8c79e0195cffc0e3092p+0, -0x0p+0), asin(cf128.init(-0xf.fffffffffffffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d179193a5985791b7p+0, -0x0p+0), asin(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x7.27c9716ffb764d594a519c0252cp-108, 0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(0x8p-108, 0x8p-4)));
    try std.testing.expectEqual(cf128.init(0x7.27c9716ffb764d594a519c0252cp-108, -0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(0x8p-108, -0x8p-4)));
    try std.testing.expectEqual(cf128.init(-0x7.27c9716ffb764d594a519c0252cp-108, 0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(-0x8p-108, 0x8p-4)));
    try std.testing.expectEqual(cf128.init(-0x7.27c9716ffb764d594a519c0252cp-108, -0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(-0x8p-108, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x8.60a91c16b9b2c232dd99707ab3d8p-4, 0x9.3cd3a2c8198e2690c7c0f257d928p-108), asin(cf128.init(0x8p-4, 0x8p-108)));
    // try std.testing.expectEqual(cf128.init(-0x8.60a91c16b9b2c232dd99707ab3d8p-4, 0x9.3cd3a2c8198e2690c7c0f257d928p-108), asin(cf128.init(-0x8p-4, 0x8p-108)));
    // try std.testing.expectEqual(cf128.init(0x8.60a91c16b9b2c232dd99707ab3d8p-4, -0x9.3cd3a2c8198e2690c7c0f257d928p-108), asin(cf128.init(0x8p-4, -0x8p-108)));
    // try std.testing.expectEqual(cf128.init(-0x8.60a91c16b9b2c232dd99707ab3d8p-4, -0x9.3cd3a2c8198e2690c7c0f257d928p-108), asin(cf128.init(-0x8p-4, -0x8p-108)));
    try std.testing.expectEqual(cf128.init(0x8p-108, 0x8p-108), asin(cf128.init(0x8p-108, 0x8p-108)));
    try std.testing.expectEqual(cf128.init(0x8p-108, -0x8p-108), asin(cf128.init(0x8p-108, -0x8p-108)));
    try std.testing.expectEqual(cf128.init(-0x8p-108, 0x8p-108), asin(cf128.init(-0x8p-108, 0x8p-108)));
    try std.testing.expectEqual(cf128.init(-0x8p-108, -0x8p-108), asin(cf128.init(-0x8p-108, -0x8p-108)));
    try std.testing.expectEqual(cf128.init(0x8p-152, 0x8p-108), asin(cf128.init(0x8p-152, 0x8p-108)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x8p-108), asin(cf128.init(0x0p+0, 0x8p-108)));
    try std.testing.expectEqual(cf128.init(0xf.8p-1028, 0x8p-108), asin(cf128.init(0xf.8p-1028, 0x8p-108)));
    try std.testing.expectEqual(cf128.init(0x8p-152, -0x8p-108), asin(cf128.init(0x8p-152, -0x8p-108)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x8p-108), asin(cf128.init(0x0p+0, -0x8p-108)));
    try std.testing.expectEqual(cf128.init(0xf.8p-1028, -0x8p-108), asin(cf128.init(0xf.8p-1028, -0x8p-108)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0x8p-108), asin(cf128.init(-0x0p+0, 0x8p-108)));
    try std.testing.expectEqual(cf128.init(-0x8p-152, 0x8p-108), asin(cf128.init(-0x8p-152, 0x8p-108)));
    try std.testing.expectEqual(cf128.init(-0xf.8p-1028, 0x8p-108), asin(cf128.init(-0xf.8p-1028, 0x8p-108)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0x8p-108), asin(cf128.init(-0x0p+0, -0x8p-108)));
    try std.testing.expectEqual(cf128.init(-0x8p-152, -0x8p-108), asin(cf128.init(-0x8p-152, -0x8p-108)));
    try std.testing.expectEqual(cf128.init(-0xf.8p-1028, -0x8p-108), asin(cf128.init(-0xf.8p-1028, -0x8p-108)));
    try std.testing.expectEqual(cf128.init(0x8p-108, 0x8p-152), asin(cf128.init(0x8p-108, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x8p-108, 0x0p+0), asin(cf128.init(0x8p-108, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x8p-108, 0xf.8p-1028), asin(cf128.init(0x8p-108, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(-0x8p-108, 0x8p-152), asin(cf128.init(-0x8p-108, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x8p-108, 0x0p+0), asin(cf128.init(-0x8p-108, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x8p-108, 0xf.8p-1028), asin(cf128.init(-0x8p-108, 0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x8p-108, -0x0p+0), asin(cf128.init(0x8p-108, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x8p-108, -0x8p-152), asin(cf128.init(0x8p-108, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x8p-108, -0xf.8p-1028), asin(cf128.init(0x8p-108, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(-0x8p-108, -0x0p+0), asin(cf128.init(-0x8p-108, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x8p-108, -0x8p-152), asin(cf128.init(-0x8p-108, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x8p-108, -0xf.8p-1028), asin(cf128.init(-0x8p-108, -0xf.8p-1028)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x8p-108), asin(cf128.init(0x0p+0, 0x8p-108)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x8p-108), asin(cf128.init(0x0p+0, -0x8p-108)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0x8p-108), asin(cf128.init(-0x0p+0, 0x8p-108)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0x8p-108), asin(cf128.init(-0x0p+0, -0x8p-108)));
    try std.testing.expectEqual(cf128.init(0x8p-108, 0x0p+0), asin(cf128.init(0x8p-108, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x8p-108, 0x0p+0), asin(cf128.init(-0x8p-108, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x8p-108, -0x0p+0), asin(cf128.init(0x8p-108, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x8p-108, -0x0p+0), asin(cf128.init(-0x8p-108, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0xb.504f333f9de6484597d89b3754a8p-116, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x1p-112, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0xb.504f38e7c581521e70afaccbafep-116, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0x1p-112, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0xb.504f333f9de67586d4a599aeee28p-116, 0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(0x1p-112, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0xb.504f333f9de6484b400034d723ap-116, 0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(0x1p-112, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0xb.504f333f9de6484597d89b3754bp-116, 0xe.1a1b30bcea13660d8f99e8dd251p-4), asin(cf128.init(0x1p-112, 0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0xb.504f333f9de6484597d89b375618p-116, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(0x1p-112, 0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(0xb.504f38e7c581521e70afaccbafep-116, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0x1p-112, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0xb.504f333f9de6484597d89b3754a8p-116, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x1p-112, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0xb.504f333f9de67586d4a599aeee28p-116, -0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(0x1p-112, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0xb.504f333f9de6484b400034d723ap-116, -0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(0x1p-112, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0xb.504f333f9de6484597d89b3754bp-116, -0xe.1a1b30bcea13660d8f99e8dd251p-4), asin(cf128.init(0x1p-112, -0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0xb.504f333f9de6484597d89b375618p-116, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(0x1p-112, -0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(-0xb.504f333f9de6484597d89b3754a8p-116, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x1p-112, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0xb.504f38e7c581521e70afaccbafep-116, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0x1p-112, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0xb.504f333f9de67586d4a599aeee28p-116, 0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(-0x1p-112, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0xb.504f333f9de6484b400034d723ap-116, 0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(-0x1p-112, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(-0xb.504f333f9de6484597d89b3754bp-116, 0xe.1a1b30bcea13660d8f99e8dd251p-4), asin(cf128.init(-0x1p-112, 0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0xb.504f333f9de6484597d89b375618p-116, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(-0x1p-112, 0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(-0xb.504f38e7c581521e70afaccbafep-116, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0x1p-112, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0xb.504f333f9de6484597d89b3754a8p-116, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x1p-112, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0xb.504f333f9de67586d4a599aeee28p-116, -0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(-0x1p-112, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0xb.504f333f9de6484b400034d723ap-116, -0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(-0x1p-112, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(-0xb.504f333f9de6484597d89b3754bp-116, -0xe.1a1b30bcea13660d8f99e8dd251p-4), asin(cf128.init(-0x1p-112, -0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0xb.504f333f9de6484597d89b375618p-116, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(-0x1p-112, -0xf.fffffffffffffffffffffffffcp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18369898cc51701b8p+0, 0x1p-56), asin(cf128.init(0x1p+0, 0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, 0xb.504f3613b1b427b47ea9c6831398p-104), asin(cf128.init(0xf.fffffp-4, 0x1p-112)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898c9a6c570ep+0, 0x4.0000000000000800000000000018p-88), asin(cf128.init(0xf.ffffffffffff8p-4, 0x1p-112)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb542d8c79e0195cffc0e3092p+0, 0xb.504f333f9de648486bec6805d218p-84), asin(cf128.init(0xf.fffffffffffffffp-4, 0x1p-112)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18323e6785a8ebc5ap+0, 0xc.94137792c68d8c69070afb6cf4c8p-60), asin(cf128.init(0xf.fffffffffffffffffffffffffff8p-4, 0x1p-112)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d1791923b95831fe01p+0, 0x1.6a071267f2bcd6099e2b62994a4ep-60), asin(cf128.init(0xf.fffffffffffffffffffffffffcp-4, 0x1p-112)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, 0xb.504f3613b1b427b47ea9c6831398p-104), asin(cf128.init(-0xf.fffffp-4, 0x1p-112)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18369898cc51701b8p+0, 0x1p-56), asin(cf128.init(-0x1p+0, 0x1p-112)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898c9a6c570ep+0, 0x4.0000000000000800000000000018p-88), asin(cf128.init(-0xf.ffffffffffff8p-4, 0x1p-112)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb542d8c79e0195cffc0e3092p+0, 0xb.504f333f9de648486bec6805d218p-84), asin(cf128.init(-0xf.fffffffffffffffp-4, 0x1p-112)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18323e6785a8ebc5ap+0, 0xc.94137792c68d8c69070afb6cf4c8p-60), asin(cf128.init(-0xf.fffffffffffffffffffffffffff8p-4, 0x1p-112)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d1791923b95831fe01p+0, 0x1.6a071267f2bcd6099e2b62994a4ep-60), asin(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, 0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18369898cc51701b8p+0, -0x1p-56), asin(cf128.init(0x1p+0, -0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, -0xb.504f3613b1b427b47ea9c6831398p-104), asin(cf128.init(0xf.fffffp-4, -0x1p-112)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898c9a6c570ep+0, -0x4.0000000000000800000000000018p-88), asin(cf128.init(0xf.ffffffffffff8p-4, -0x1p-112)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb542d8c79e0195cffc0e3092p+0, -0xb.504f333f9de648486bec6805d218p-84), asin(cf128.init(0xf.fffffffffffffffp-4, -0x1p-112)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18323e6785a8ebc5ap+0, -0xc.94137792c68d8c69070afb6cf4c8p-60), asin(cf128.init(0xf.fffffffffffffffffffffffffff8p-4, -0x1p-112)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d1791923b95831fe01p+0, -0x1.6a071267f2bcd6099e2b62994a4ep-60), asin(cf128.init(0xf.fffffffffffffffffffffffffcp-4, -0x1p-112)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, -0xb.504f3613b1b427b47ea9c6831398p-104), asin(cf128.init(-0xf.fffffp-4, -0x1p-112)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18369898cc51701b8p+0, -0x1p-56), asin(cf128.init(-0x1p+0, -0x1p-112)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898c9a6c570ep+0, -0x4.0000000000000800000000000018p-88), asin(cf128.init(-0xf.ffffffffffff8p-4, -0x1p-112)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb542d8c79e0195cffc0e3092p+0, -0xb.504f333f9de648486bec6805d218p-84), asin(cf128.init(-0xf.fffffffffffffffp-4, -0x1p-112)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18323e6785a8ebc5ap+0, -0xc.94137792c68d8c69070afb6cf4c8p-60), asin(cf128.init(-0xf.fffffffffffffffffffffffffff8p-4, -0x1p-112)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d1791923b95831fe01p+0, -0x1.6a071267f2bcd6099e2b62994a4ep-60), asin(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, -0x1p-112)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9baa54p-152, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x5.a8279c73e2c0a90f3857d665d7fp-152, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0x8p-152, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x5.a827999fcef33ac36a52ccd77714p-152, 0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32425a0001a6b91dp-152, 0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(0x8p-152, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9baa58p-152, 0xe.1a1b30bcea13660d8f99e8dd251p-4), asin(cf128.init(0x8p-152, 0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9bab0cp-152, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(0x8p-152, 0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(0x0p+0, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd251p-4), asin(cf128.init(0x0p+0, 0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(0x0p+0, 0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52ap-1076, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x2.d413ce39f16054879c2beb32ebf8p-1076, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0x4p-1076, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x2.d413cccfe7799d61b529666bbb8ap-1076, 0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(0x4p-1076, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe7799212d0000d35c8e8p-1076, 0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(0x4p-1076, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52cp-1076, 0xe.1a1b30bcea13660d8f99e8dd251p-4), asin(cf128.init(0x4p-1076, 0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd586p-1076, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(0x4p-1076, 0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f716036b19d65d9ap-16388, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0xf.8p-16388, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccbf208755478d7d2a2f65528p-16388, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0xf.8p-16388, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f741da9e006ce176cp-16388, 0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(0xf.8p-16388, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f71608e60033306a8p-16388, 0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(0xf.8p-16388, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f716036b19d65d9ap-16388, 0xe.1a1b30bcea13660d8f99e8dd251p-4), asin(cf128.init(0xf.8p-16388, 0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f716036b19d65d9b8p-16388, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(0xf.8p-16388, 0xf.fffffffffffffffffffffffffcp-4)));
    try std.testing.expectEqual(cf128.init(0x5.a8279c73e2c0a90f3857d665d7fp-152, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9baa54p-152, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x5.a827999fcef33ac36a52ccd77714p-152, -0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(0x8p-152, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32425a0001a6b91dp-152, -0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(0x8p-152, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9baa58p-152, -0xe.1a1b30bcea13660d8f99e8dd251p-4), asin(cf128.init(0x8p-152, -0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x5.a827999fcef32422cbec4d9bab0cp-152, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(0x8p-152, -0xf.fffffffffffffffffffffffffcp-4)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(0x0p+0, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd251p-4), asin(cf128.init(0x0p+0, -0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(0x0p+0, -0xf.fffffffffffffffffffffffffcp-4)));
    try std.testing.expectEqual(cf128.init(0x2.d413ce39f16054879c2beb32ebf8p-1076, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0x4p-1076, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52ap-1076, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x4p-1076, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x2.d413cccfe7799d61b529666bbb8ap-1076, -0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(0x4p-1076, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe7799212d0000d35c8e8p-1076, -0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(0x4p-1076, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd52cp-1076, -0xe.1a1b30bcea13660d8f99e8dd251p-4), asin(cf128.init(0x4p-1076, -0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x2.d413cccfe779921165f626cdd586p-1076, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(0x4p-1076, -0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccbf208755478d7d2a2f65528p-16388, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0xf.8p-16388, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f716036b19d65d9ap-16388, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0xf.8p-16388, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f741da9e006ce176cp-16388, -0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(0xf.8p-16388, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f71608e60033306a8p-16388, -0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(0xf.8p-16388, -0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f716036b19d65d9ap-16388, -0xe.1a1b30bcea13660d8f99e8dd251p-4), asin(cf128.init(0xf.8p-16388, -0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0xa.f5ccb9a5a0f716036b19d65d9b8p-16388, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(0xf.8p-16388, -0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(-0x0p+0, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd251p-4), asin(cf128.init(-0x0p+0, 0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(-0x0p+0, 0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9baa54p-152, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x8p-152, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x5.a8279c73e2c0a90f3857d665d7fp-152, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0x8p-152, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(-0x5.a827999fcef33ac36a52ccd77714p-152, 0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(-0x8p-152, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32425a0001a6b91dp-152, 0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(-0x8p-152, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9baa58p-152, 0xe.1a1b30bcea13660d8f99e8dd251p-4), asin(cf128.init(-0x8p-152, 0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9bab0cp-152, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(-0x8p-152, 0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(-0x2.d413cccfe779921165f626cdd52ap-1076, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x4p-1076, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x2.d413ce39f16054879c2beb32ebf8p-1076, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0x4p-1076, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(-0x2.d413cccfe7799d61b529666bbb8ap-1076, 0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(-0x4p-1076, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x2.d413cccfe7799212d0000d35c8e8p-1076, 0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(-0x4p-1076, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(-0x2.d413cccfe779921165f626cdd52cp-1076, 0xe.1a1b30bcea13660d8f99e8dd251p-4), asin(cf128.init(-0x4p-1076, 0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x2.d413cccfe779921165f626cdd586p-1076, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(-0x4p-1076, 0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f716036b19d65d9ap-16388, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0xf.8p-16388, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccbf208755478d7d2a2f65528p-16388, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0xf.8p-16388, 0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f741da9e006ce176cp-16388, 0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(-0xf.8p-16388, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f71608e60033306a8p-16388, 0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(-0xf.8p-16388, 0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f716036b19d65d9ap-16388, 0xe.1a1b30bcea13660d8f99e8dd251p-4), asin(cf128.init(-0xf.8p-16388, 0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f716036b19d65d9b8p-16388, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(-0xf.8p-16388, 0xf.fffffffffffffffffffffffffcp-4)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(-0x0p+0, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd251p-4), asin(cf128.init(-0x0p+0, -0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(-0x0p+0, -0xf.fffffffffffffffffffffffffcp-4)));
    try std.testing.expectEqual(cf128.init(-0x5.a8279c73e2c0a90f3857d665d7fp-152, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0x8p-152, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9baa54p-152, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x8p-152, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x5.a827999fcef33ac36a52ccd77714p-152, -0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(-0x8p-152, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32425a0001a6b91dp-152, -0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(-0x8p-152, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9baa58p-152, -0xe.1a1b30bcea13660d8f99e8dd251p-4), asin(cf128.init(-0x8p-152, -0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x5.a827999fcef32422cbec4d9bab0cp-152, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(-0x8p-152, -0xf.fffffffffffffffffffffffffcp-4)));
    try std.testing.expectEqual(cf128.init(-0x2.d413ce39f16054879c2beb32ebf8p-1076, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0x4p-1076, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0x2.d413cccfe779921165f626cdd52ap-1076, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x4p-1076, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x2.d413cccfe7799d61b529666bbb8ap-1076, -0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(-0x4p-1076, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x2.d413cccfe7799212d0000d35c8e8p-1076, -0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(-0x4p-1076, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(-0x2.d413cccfe779921165f626cdd52cp-1076, -0xe.1a1b30bcea13660d8f99e8dd251p-4), asin(cf128.init(-0x4p-1076, -0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x2.d413cccfe779921165f626cdd586p-1076, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(-0x4p-1076, -0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccbf208755478d7d2a2f65528p-16388, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0xf.8p-16388, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f716036b19d65d9ap-16388, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0xf.8p-16388, -0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f741da9e006ce176cp-16388, -0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(-0xf.8p-16388, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f71608e60033306a8p-16388, -0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(-0xf.8p-16388, -0xf.fffffffffffffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f716036b19d65d9ap-16388, -0xe.1a1b30bcea13660d8f99e8dd251p-4), asin(cf128.init(-0xf.8p-16388, -0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0xa.f5ccb9a5a0f716036b19d65d9b8p-16388, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(-0xf.8p-16388, -0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469895f83da34bap+0, 0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), asin(cf128.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x8p-540), asin(cf128.init(0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196), asin(cf128.init(0x1p+0, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, 0x5.a8279b09d8da13da3f54e34189ccp-140), asin(cf128.init(0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, 0x0p+0), asin(cf128.init(0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, 0x2.d413cd84ec6d09ed1faa71a0c4e6p-1064), asin(cf128.init(0xf.fffffp-4, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, 0xa.f5ccbc6314268676dab4784efaf8p-16376), asin(cf128.init(0xf.fffffp-4, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898c9a6c570ep+0, 0x2.000000000000040000000000000cp-124), asin(cf128.init(0xf.ffffffffffff8p-4, 0x8p-152)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898c9a6c570ep+0, 0x0p+0), asin(cf128.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898c9a6c570ep+0, 0x1.0000000000000200000000000006p-1048), asin(cf128.init(0xf.ffffffffffff8p-4, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898c9a6c570ep+0, 0x3.e0000000000007c0000000000018p-16360), asin(cf128.init(0xf.ffffffffffff8p-4, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb542d8c79e0195cffc0e3092p+0, 0x5.a827999fcef3242435f634039e14p-120), asin(cf128.init(0xf.fffffffffffffffp-4, 0x8p-152)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb542d8c79e0195cffc0e3092p+0, 0x0p+0), asin(cf128.init(0xf.fffffffffffffffp-4, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb542d8c79e0195cffc0e3092p+0, 0x2.d413cccfe77992121afb1a01cf0ap-1044), asin(cf128.init(0xf.fffffffffffffffp-4, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb542d8c79e0195cffc0e3092p+0, 0xa.f5ccb9a5a0f71606288d04c70248p-16356), asin(cf128.init(0xf.fffffffffffffffp-4, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18369898cc51701b8p+0, 0x7.ffffffffffffffffffp-96), asin(cf128.init(0xf.fffffffffffffffffffffffffff8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18369898cc51701b8p+0, 0x0p+0), asin(cf128.init(0xf.fffffffffffffffffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18369898cc51701b8p+0, 0x4p-1020), asin(cf128.init(0xf.fffffffffffffffffffffffffff8p-4, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18369898cc51701b8p+0, 0xf.8p-16332), asin(cf128.init(0xf.fffffffffffffffffffffffffff8p-4, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d179193a5985791b7p+0, 0xb.504f333f9de6484597d8958f2dc8p-100), asin(cf128.init(0xf.fffffffffffffffffffffffffcp-4, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d179193a5985791b7p+0, 0x0p+0), asin(cf128.init(0xf.fffffffffffffffffffffffffcp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d179193a5985791b7p+0, 0x5.a827999fcef32422cbec4d9baabp-1024), asin(cf128.init(0xf.fffffffffffffffffffffffffcp-4, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d179193a5985791b7p+0, 0x1.5eb99734b41ee2c06d633acbb357p-16332), asin(cf128.init(0xf.fffffffffffffffffffffffffcp-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, 0x5.a8279b09d8da13da3f54e34189ccp-140), asin(cf128.init(-0xf.fffffp-4, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, 0x0p+0), asin(cf128.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, 0x2.d413cd84ec6d09ed1faa71a0c4e6p-1064), asin(cf128.init(-0xf.fffffp-4, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, 0xa.f5ccbc6314268676dab4784efaf8p-16376), asin(cf128.init(-0xf.fffffp-4, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469895f83da34bap+0, 0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(-0x1p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), asin(cf128.init(-0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x8p-540), asin(cf128.init(-0x1p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196), asin(cf128.init(-0x1p+0, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898c9a6c570ep+0, 0x2.000000000000040000000000000cp-124), asin(cf128.init(-0xf.ffffffffffff8p-4, 0x8p-152)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898c9a6c570ep+0, 0x0p+0), asin(cf128.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898c9a6c570ep+0, 0x1.0000000000000200000000000006p-1048), asin(cf128.init(-0xf.ffffffffffff8p-4, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898c9a6c570ep+0, 0x3.e0000000000007c0000000000018p-16360), asin(cf128.init(-0xf.ffffffffffff8p-4, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb542d8c79e0195cffc0e3092p+0, 0x5.a827999fcef3242435f634039e14p-120), asin(cf128.init(-0xf.fffffffffffffffp-4, 0x8p-152)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb542d8c79e0195cffc0e3092p+0, 0x0p+0), asin(cf128.init(-0xf.fffffffffffffffp-4, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb542d8c79e0195cffc0e3092p+0, 0x2.d413cccfe77992121afb1a01cf0ap-1044), asin(cf128.init(-0xf.fffffffffffffffp-4, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb542d8c79e0195cffc0e3092p+0, 0xa.f5ccb9a5a0f71606288d04c70248p-16356), asin(cf128.init(-0xf.fffffffffffffffp-4, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18369898cc51701b8p+0, 0x7.ffffffffffffffffffp-96), asin(cf128.init(-0xf.fffffffffffffffffffffffffff8p-4, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18369898cc51701b8p+0, 0x0p+0), asin(cf128.init(-0xf.fffffffffffffffffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18369898cc51701b8p+0, 0x4p-1020), asin(cf128.init(-0xf.fffffffffffffffffffffffffff8p-4, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18369898cc51701b8p+0, 0xf.8p-16332), asin(cf128.init(-0xf.fffffffffffffffffffffffffff8p-4, 0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d179193a5985791b7p+0, 0xb.504f333f9de6484597d8958f2dc8p-100), asin(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d179193a5985791b7p+0, 0x0p+0), asin(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d179193a5985791b7p+0, 0x5.a827999fcef32422cbec4d9baabp-1024), asin(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d179193a5985791b7p+0, 0x1.5eb99734b41ee2c06d633acbb357p-16332), asin(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), asin(cf128.init(0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469895f83da34bap+0, -0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x8p-540), asin(cf128.init(0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196), asin(cf128.init(0x1p+0, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, -0x0p+0), asin(cf128.init(0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, -0x5.a8279b09d8da13da3f54e34189ccp-140), asin(cf128.init(0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, -0x2.d413cd84ec6d09ed1faa71a0c4e6p-1064), asin(cf128.init(0xf.fffffp-4, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, -0xa.f5ccbc6314268676dab4784efaf8p-16376), asin(cf128.init(0xf.fffffp-4, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898c9a6c570ep+0, -0x0p+0), asin(cf128.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898c9a6c570ep+0, -0x2.000000000000040000000000000cp-124), asin(cf128.init(0xf.ffffffffffff8p-4, -0x8p-152)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898c9a6c570ep+0, -0x1.0000000000000200000000000006p-1048), asin(cf128.init(0xf.ffffffffffff8p-4, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898c9a6c570ep+0, -0x3.e0000000000007c0000000000018p-16360), asin(cf128.init(0xf.ffffffffffff8p-4, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb542d8c79e0195cffc0e3092p+0, -0x0p+0), asin(cf128.init(0xf.fffffffffffffffp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb542d8c79e0195cffc0e3092p+0, -0x5.a827999fcef3242435f634039e14p-120), asin(cf128.init(0xf.fffffffffffffffp-4, -0x8p-152)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb542d8c79e0195cffc0e3092p+0, -0x2.d413cccfe77992121afb1a01cf0ap-1044), asin(cf128.init(0xf.fffffffffffffffp-4, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb542d8c79e0195cffc0e3092p+0, -0xa.f5ccb9a5a0f71606288d04c70248p-16356), asin(cf128.init(0xf.fffffffffffffffp-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18369898cc51701b8p+0, -0x0p+0), asin(cf128.init(0xf.fffffffffffffffffffffffffff8p-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d18369898cc51701b8p+0, -0x7.ffffffffffffffffffp-96), asin(cf128.init(0xf.fffffffffffffffffffffffffff8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18369898cc51701b8p+0, -0x4p-1020), asin(cf128.init(0xf.fffffffffffffffffffffffffff8p-4, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18369898cc51701b8p+0, -0xf.8p-16332), asin(cf128.init(0xf.fffffffffffffffffffffffffff8p-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d179193a5985791b7p+0, -0x0p+0), asin(cf128.init(0xf.fffffffffffffffffffffffffcp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb54442d179193a5985791b7p+0, -0xb.504f333f9de6484597d8958f2dc8p-100), asin(cf128.init(0xf.fffffffffffffffffffffffffcp-4, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d179193a5985791b7p+0, -0x5.a827999fcef32422cbec4d9baabp-1024), asin(cf128.init(0xf.fffffffffffffffffffffffffcp-4, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d179193a5985791b7p+0, -0x1.5eb99734b41ee2c06d633acbb357p-16332), asin(cf128.init(0xf.fffffffffffffffffffffffffcp-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, -0x0p+0), asin(cf128.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, -0x5.a8279b09d8da13da3f54e34189ccp-140), asin(cf128.init(-0xf.fffffp-4, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, -0x2.d413cd84ec6d09ed1faa71a0c4e6p-1064), asin(cf128.init(-0xf.fffffp-4, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, -0xa.f5ccbc6314268676dab4784efaf8p-16376), asin(cf128.init(-0xf.fffffp-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), asin(cf128.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469895f83da34bap+0, -0x2.d413cccfe779921165f626cdd52ap-76), asin(cf128.init(-0x1p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x8p-540), asin(cf128.init(-0x1p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0xf.bf7df5c6a788f0bd8bac8066d4f8p-8196), asin(cf128.init(-0x1p+0, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898c9a6c570ep+0, -0x0p+0), asin(cf128.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898c9a6c570ep+0, -0x2.000000000000040000000000000cp-124), asin(cf128.init(-0xf.ffffffffffff8p-4, -0x8p-152)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898c9a6c570ep+0, -0x1.0000000000000200000000000006p-1048), asin(cf128.init(-0xf.ffffffffffff8p-4, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898c9a6c570ep+0, -0x3.e0000000000007c0000000000018p-16360), asin(cf128.init(-0xf.ffffffffffff8p-4, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb542d8c79e0195cffc0e3092p+0, -0x0p+0), asin(cf128.init(-0xf.fffffffffffffffp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb542d8c79e0195cffc0e3092p+0, -0x5.a827999fcef3242435f634039e14p-120), asin(cf128.init(-0xf.fffffffffffffffp-4, -0x8p-152)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb542d8c79e0195cffc0e3092p+0, -0x2.d413cccfe77992121afb1a01cf0ap-1044), asin(cf128.init(-0xf.fffffffffffffffp-4, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb542d8c79e0195cffc0e3092p+0, -0xa.f5ccb9a5a0f71606288d04c70248p-16356), asin(cf128.init(-0xf.fffffffffffffffp-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18369898cc51701b8p+0, -0x0p+0), asin(cf128.init(-0xf.fffffffffffffffffffffffffff8p-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18369898cc51701b8p+0, -0x7.ffffffffffffffffffp-96), asin(cf128.init(-0xf.fffffffffffffffffffffffffff8p-4, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18369898cc51701b8p+0, -0x4p-1020), asin(cf128.init(-0xf.fffffffffffffffffffffffffff8p-4, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18369898cc51701b8p+0, -0xf.8p-16332), asin(cf128.init(-0xf.fffffffffffffffffffffffffff8p-4, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d179193a5985791b7p+0, -0x0p+0), asin(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb54442d179193a5985791b7p+0, -0xb.504f333f9de6484597d8958f2dc8p-100), asin(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d179193a5985791b7p+0, -0x5.a827999fcef32422cbec4d9baabp-1024), asin(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, -0x4p-1076)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d179193a5985791b7p+0, -0x1.5eb99734b41ee2c06d633acbb357p-16332), asin(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, -0xf.8p-16388)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(0x0p+0, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd251p-4), asin(cf128.init(0x0p+0, 0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(0x0p+0, 0xf.fffffffffffffffffffffffffcp-4)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(0x0p+0, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd251p-4), asin(cf128.init(0x0p+0, -0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(0x0p+0, -0xf.fffffffffffffffffffffffffcp-4)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x0p+0, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0x0p+0, 0xf.fffffp-4)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(-0x0p+0, 0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(-0x0p+0, 0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd251p-4), asin(cf128.init(-0x0p+0, 0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, 0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(-0x0p+0, 0xf.fffffffffffffffffffffffffcp-4)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b256c9add525bdc090dd46fbp-4), asin(cf128.init(-0x0p+0, -0xf.fffffp-4)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2518p-4), asin(cf128.init(-0x0p+0, -0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea130b8b15ffebedf22p-4), asin(cf128.init(-0x0p+0, -0xf.ffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea1366023f4ab59d873p-4), asin(cf128.init(-0x0p+0, -0xf.fffffffffffffffp-4)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd251p-4), asin(cf128.init(-0x0p+0, -0xf.fffffffffffffffffffffffffff8p-4)));
    // try std.testing.expectEqual(cf128.init(-0x0p+0, -0xe.1a1b30bcea13660d8f99e8dd2248p-4), asin(cf128.init(-0x0p+0, -0xf.fffffffffffffffffffffffffcp-4)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), asin(cf128.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, 0x0p+0), asin(cf128.init(0xf.fffffp-4, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898c9a6c570ep+0, 0x0p+0), asin(cf128.init(0xf.ffffffffffff8p-4, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb542d8c79e0195cffc0e3092p+0, 0x0p+0), asin(cf128.init(0xf.fffffffffffffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18369898cc51701b8p+0, 0x0p+0), asin(cf128.init(0xf.fffffffffffffffffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d179193a5985791b7p+0, 0x0p+0), asin(cf128.init(0xf.fffffffffffffffffffffffffcp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, 0x0p+0), asin(cf128.init(-0xf.fffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, 0x0p+0), asin(cf128.init(-0x1p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898c9a6c570ep+0, 0x0p+0), asin(cf128.init(-0xf.ffffffffffff8p-4, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb542d8c79e0195cffc0e3092p+0, 0x0p+0), asin(cf128.init(-0xf.fffffffffffffffp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18369898cc51701b8p+0, 0x0p+0), asin(cf128.init(-0xf.fffffffffffffffffffffffffff8p-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d179193a5985791b7p+0, 0x0p+0), asin(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), asin(cf128.init(0x1p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.920914a5da6f90beac755cf81addp+0, -0x0p+0), asin(cf128.init(0xf.fffffp-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb50442d18469898c9a6c570ep+0, -0x0p+0), asin(cf128.init(0xf.ffffffffffff8p-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.921fb542d8c79e0195cffc0e3092p+0, -0x0p+0), asin(cf128.init(0xf.fffffffffffffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d18369898cc51701b8p+0, -0x0p+0), asin(cf128.init(0xf.fffffffffffffffffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1.921fb54442d179193a5985791b7p+0, -0x0p+0), asin(cf128.init(0xf.fffffffffffffffffffffffffcp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.920914a5da6f90beac755cf81addp+0, -0x0p+0), asin(cf128.init(-0xf.fffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18469898cc51701b8p+0, -0x0p+0), asin(cf128.init(-0x1p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb50442d18469898c9a6c570ep+0, -0x0p+0), asin(cf128.init(-0xf.ffffffffffff8p-4, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x1.921fb542d8c79e0195cffc0e3092p+0, -0x0p+0), asin(cf128.init(-0xf.fffffffffffffffp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d18369898cc51701b8p+0, -0x0p+0), asin(cf128.init(-0xf.fffffffffffffffffffffffffff8p-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1.921fb54442d179193a5985791b7p+0, -0x0p+0), asin(cf128.init(-0xf.fffffffffffffffffffffffffcp-4, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0xe.4f92e2dff6ec9ab294a33804a58p-116, 0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(0x1p-112, 0x8p-4)));
    try std.testing.expectEqual(cf128.init(0xe.4f92e2dff6ec9ab294a33804a58p-116, -0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(0x1p-112, -0x8p-4)));
    try std.testing.expectEqual(cf128.init(-0xe.4f92e2dff6ec9ab294a33804a58p-116, 0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(-0x1p-112, 0x8p-4)));
    try std.testing.expectEqual(cf128.init(-0xe.4f92e2dff6ec9ab294a33804a58p-116, -0x7.b30b2bb14582652f810812a5a31cp-4), asin(cf128.init(-0x1p-112, -0x8p-4)));
    // try std.testing.expectEqual(cf128.init(0x8.60a91c16b9b2c232dd99707ab3d8p-4, 0x1.279a74590331c4d218f81e4afb25p-112), asin(cf128.init(0x8p-4, 0x1p-112)));
    // try std.testing.expectEqual(cf128.init(-0x8.60a91c16b9b2c232dd99707ab3d8p-4, 0x1.279a74590331c4d218f81e4afb25p-112), asin(cf128.init(-0x8p-4, 0x1p-112)));
    // try std.testing.expectEqual(cf128.init(0x8.60a91c16b9b2c232dd99707ab3d8p-4, -0x1.279a74590331c4d218f81e4afb25p-112), asin(cf128.init(0x8p-4, -0x1p-112)));
    // try std.testing.expectEqual(cf128.init(-0x8.60a91c16b9b2c232dd99707ab3d8p-4, -0x1.279a74590331c4d218f81e4afb25p-112), asin(cf128.init(-0x8p-4, -0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x1p-112, 0x1p-112), asin(cf128.init(0x1p-112, 0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x1p-112, -0x1p-112), asin(cf128.init(0x1p-112, -0x1p-112)));
    try std.testing.expectEqual(cf128.init(-0x1p-112, 0x1p-112), asin(cf128.init(-0x1p-112, 0x1p-112)));
    try std.testing.expectEqual(cf128.init(-0x1p-112, -0x1p-112), asin(cf128.init(-0x1p-112, -0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x8p-152, 0x1p-112), asin(cf128.init(0x8p-152, 0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x1p-112), asin(cf128.init(0x0p+0, 0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x4p-1076, 0x1p-112), asin(cf128.init(0x4p-1076, 0x1p-112)));
    try std.testing.expectEqual(cf128.init(0xf.8p-16388, 0x1p-112), asin(cf128.init(0xf.8p-16388, 0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x8p-152, -0x1p-112), asin(cf128.init(0x8p-152, -0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x1p-112), asin(cf128.init(0x0p+0, -0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x4p-1076, -0x1p-112), asin(cf128.init(0x4p-1076, -0x1p-112)));
    try std.testing.expectEqual(cf128.init(0xf.8p-16388, -0x1p-112), asin(cf128.init(0xf.8p-16388, -0x1p-112)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0x1p-112), asin(cf128.init(-0x0p+0, 0x1p-112)));
    try std.testing.expectEqual(cf128.init(-0x8p-152, 0x1p-112), asin(cf128.init(-0x8p-152, 0x1p-112)));
    try std.testing.expectEqual(cf128.init(-0x4p-1076, 0x1p-112), asin(cf128.init(-0x4p-1076, 0x1p-112)));
    try std.testing.expectEqual(cf128.init(-0xf.8p-16388, 0x1p-112), asin(cf128.init(-0xf.8p-16388, 0x1p-112)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0x1p-112), asin(cf128.init(-0x0p+0, -0x1p-112)));
    try std.testing.expectEqual(cf128.init(-0x8p-152, -0x1p-112), asin(cf128.init(-0x8p-152, -0x1p-112)));
    try std.testing.expectEqual(cf128.init(-0x4p-1076, -0x1p-112), asin(cf128.init(-0x4p-1076, -0x1p-112)));
    try std.testing.expectEqual(cf128.init(-0xf.8p-16388, -0x1p-112), asin(cf128.init(-0xf.8p-16388, -0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x1p-112, 0x8p-152), asin(cf128.init(0x1p-112, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1p-112, 0x0p+0), asin(cf128.init(0x1p-112, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1p-112, 0x4p-1076), asin(cf128.init(0x1p-112, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1p-112, 0xf.8p-16388), asin(cf128.init(0x1p-112, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(-0x1p-112, 0x8p-152), asin(cf128.init(-0x1p-112, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1p-112, 0x0p+0), asin(cf128.init(-0x1p-112, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1p-112, 0x4p-1076), asin(cf128.init(-0x1p-112, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(-0x1p-112, 0xf.8p-16388), asin(cf128.init(-0x1p-112, 0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x1p-112, -0x0p+0), asin(cf128.init(0x1p-112, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1p-112, -0x8p-152), asin(cf128.init(0x1p-112, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x1p-112, -0x4p-1076), asin(cf128.init(0x1p-112, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x1p-112, -0xf.8p-16388), asin(cf128.init(0x1p-112, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(-0x1p-112, -0x0p+0), asin(cf128.init(-0x1p-112, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1p-112, -0x8p-152), asin(cf128.init(-0x1p-112, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(-0x1p-112, -0x4p-1076), asin(cf128.init(-0x1p-112, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(-0x1p-112, -0xf.8p-16388), asin(cf128.init(-0x1p-112, -0xf.8p-16388)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x1p-112), asin(cf128.init(0x0p+0, 0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x1p-112), asin(cf128.init(0x0p+0, -0x1p-112)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0x1p-112), asin(cf128.init(-0x0p+0, 0x1p-112)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0x1p-112), asin(cf128.init(-0x0p+0, -0x1p-112)));
    try std.testing.expectEqual(cf128.init(0x1p-112, 0x0p+0), asin(cf128.init(0x1p-112, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1p-112, 0x0p+0), asin(cf128.init(-0x1p-112, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x1p-112, -0x0p+0), asin(cf128.init(0x1p-112, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x1p-112, -0x0p+0), asin(cf128.init(-0x1p-112, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x7.409e85703b6b0521eca1a6260bap-4, 0x1.21e48c8df1874b5cd0ce3cbbfb5bp+0), asin(cf128.init(0xcp-4, 0x1.4p+0)));
    try std.testing.expectEqual(cf128.init(-0x9.2164d0607cc74882fabe5a347698p-4, -0x1.fbbf409ccd55fc6792dad16bc591p+0), asin(cf128.init(-0x2p+0, -0x3p+0)));
}
