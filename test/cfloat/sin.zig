const std = @import("std");
const zml = @import("zml");
const cf32 = zml.cf32;
const cf64 = zml.cf64;
const cf80 = zml.cf80;
const cf128 = zml.cf128;
const sin = zml.cfloat.sin;

test sin {
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x0p+0), sin(cf32.init(0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, 0x0p+0), sin(cf32.init(-0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0x0p+0), sin(cf32.init(0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, -0x0p+0), sin(cf32.init(-0x0p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.49877p+0, 0x1.2c0f2ap+0), sin(cf32.init(0xcp-4, 0x1.4p+0)));
    try std.testing.expectEqual(cf32.init(-0x9.278d4p+0, 0x4.2b3d8p+0), sin(cf32.init(-0x2p+0, -0x3p+0)));
    // try std.testing.expectEqual(cf32.init(0xb.dcb17p+124, 0xc.bbaa7p+124), sin(cf32.init(0xcp-4, 0x5.98p+4)));
    // try std.testing.expectEqual(cf32.init(0xb.dcb17p+124, -0xc.bbaa7p+124), sin(cf32.init(0xcp-4, -0x5.98p+4)));
    // try std.testing.expectEqual(cf32.init(-0xb.dcb17p+124, 0xc.bbaa7p+124), sin(cf32.init(-0xcp-4, 0x5.98p+4)));
    // try std.testing.expectEqual(cf32.init(-0xb.dcb17p+124, -0xc.bbaa7p+124), sin(cf32.init(-0xcp-4, -0x5.98p+4)));
    try std.testing.expectEqual(cf32.init(std.math.inf(f32), std.math.inf(f32)), sin(cf32.init(0xcp-4, 0x2.c68p+8)));
    try std.testing.expectEqual(cf32.init(std.math.inf(f32), -std.math.inf(f32)), sin(cf32.init(0xcp-4, -0x2.c68p+8)));
    try std.testing.expectEqual(cf32.init(-std.math.inf(f32), std.math.inf(f32)), sin(cf32.init(-0xcp-4, 0x2.c68p+8)));
    try std.testing.expectEqual(cf32.init(-std.math.inf(f32), -std.math.inf(f32)), sin(cf32.init(-0xcp-4, -0x2.c68p+8)));
    try std.testing.expectEqual(cf32.init(std.math.inf(f32), std.math.inf(f32)), sin(cf32.init(0xcp-4, 0x2.c5d4p+12)));
    try std.testing.expectEqual(cf32.init(std.math.inf(f32), -std.math.inf(f32)), sin(cf32.init(0xcp-4, -0x2.c5d4p+12)));
    try std.testing.expectEqual(cf32.init(-std.math.inf(f32), std.math.inf(f32)), sin(cf32.init(-0xcp-4, 0x2.c5d4p+12)));
    try std.testing.expectEqual(cf32.init(-std.math.inf(f32), -std.math.inf(f32)), sin(cf32.init(-0xcp-4, -0x2.c5d4p+12)));
    try std.testing.expectEqual(cf32.init(std.math.inf(f32), std.math.inf(f32)), sin(cf32.init(0xcp-4, 0xf.424p+16)));
    try std.testing.expectEqual(cf32.init(std.math.inf(f32), -std.math.inf(f32)), sin(cf32.init(0xcp-4, -0xf.424p+16)));
    try std.testing.expectEqual(cf32.init(-std.math.inf(f32), std.math.inf(f32)), sin(cf32.init(-0xcp-4, 0xf.424p+16)));
    try std.testing.expectEqual(cf32.init(-std.math.inf(f32), -std.math.inf(f32)), sin(cf32.init(-0xcp-4, -0xf.424p+16)));
    // try std.testing.expectEqual(cf32.init(0x3.373464p+108, std.math.inf(f32)), sin(cf32.init(0x8p-152, 0xb.4p+4)));
    try std.testing.expectEqual(cf32.init(std.math.inf(f32), std.math.inf(f32)), sin(cf32.init(0x8p-152, 0x5.ap+8)));
    try std.testing.expectEqual(cf32.init(0x0p+0, std.math.inf(f32)), sin(cf32.init(0x0p+0, 0x5.ap+8)));
    try std.testing.expectEqual(cf32.init(std.math.inf(f32), std.math.inf(f32)), sin(cf32.init(0x8p-152, 0x5.8cap+12)));
    try std.testing.expectEqual(cf32.init(0x0p+0, std.math.inf(f32)), sin(cf32.init(0x0p+0, 0x5.8cap+12)));
    try std.testing.expectEqual(cf32.init(0x6.2c1d58p-128, 0x1.2cd9fcp+0), sin(cf32.init(0x4p-128, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(-0x6.2c1d58p-128, 0x1.2cd9fcp+0), sin(cf32.init(-0x4p-128, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x2.aaef38p-36, 0x5.55de7p+112), sin(cf32.init(0x8p-152, 0x5p+4)));
    try std.testing.expectEqual(cf32.init(-0x2.aaef38p-36, 0x5.55de7p+112), sin(cf32.init(-0x8p-152, 0x5p+4)));
    try std.testing.expectEqual(cf32.init(0x8p-152, 0x4p-128), sin(cf32.init(0x8p-152, 0x4p-128)));
    try std.testing.expectEqual(cf32.init(0x4p-128, 0x8p-152), sin(cf32.init(0x4p-128, 0x8p-152)));

    try std.testing.expectEqual(cf64.init(0x0p+0, 0x0p+0), sin(cf64.init(0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0x0p+0), sin(cf64.init(-0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x0p+0), sin(cf64.init(0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0x0p+0), sin(cf64.init(-0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x1.498770cd39c9ap+0, 0x1.2c0f29932c3a4p+0), sin(cf64.init(0xcp-4, 0x1.4p+0)));
    try std.testing.expectEqual(cf64.init(-0x9.278d418f3e97p+0, 0x4.2b3d7c8d1f888p+0), sin(cf64.init(-0x2p+0, -0x3p+0)));
    try std.testing.expectEqual(cf64.init(0xb.dcb174d885198p+124, 0xc.bbaa76be57908p+124), sin(cf64.init(0xcp-4, 0x5.98p+4)));
    try std.testing.expectEqual(cf64.init(0xb.dcb174d885198p+124, -0xc.bbaa76be57908p+124), sin(cf64.init(0xcp-4, -0x5.98p+4)));
    try std.testing.expectEqual(cf64.init(-0xb.dcb174d885198p+124, 0xc.bbaa76be57908p+124), sin(cf64.init(-0xcp-4, 0x5.98p+4)));
    try std.testing.expectEqual(cf64.init(-0xb.dcb174d885198p+124, -0xc.bbaa76be57908p+124), sin(cf64.init(-0xcp-4, -0x5.98p+4)));
    // try std.testing.expectEqual(cf64.init(0xb.2c35ffb60337p+1020, 0xb.fe39a718cb528p+1020), sin(cf64.init(0xcp-4, 0x2.c68p+8)));
    // try std.testing.expectEqual(cf64.init(0xb.2c35ffb60337p+1020, -0xb.fe39a718cb528p+1020), sin(cf64.init(0xcp-4, -0x2.c68p+8)));
    // try std.testing.expectEqual(cf64.init(-0xb.2c35ffb60337p+1020, 0xb.fe39a718cb528p+1020), sin(cf64.init(-0xcp-4, 0x2.c68p+8)));
    // try std.testing.expectEqual(cf64.init(-0xb.2c35ffb60337p+1020, -0xb.fe39a718cb528p+1020), sin(cf64.init(-0xcp-4, -0x2.c68p+8)));
    try std.testing.expectEqual(cf64.init(std.math.inf(f64), std.math.inf(f64)), sin(cf64.init(0xcp-4, 0x2.c5d4p+12)));
    try std.testing.expectEqual(cf64.init(std.math.inf(f64), -std.math.inf(f64)), sin(cf64.init(0xcp-4, -0x2.c5d4p+12)));
    try std.testing.expectEqual(cf64.init(-std.math.inf(f64), std.math.inf(f64)), sin(cf64.init(-0xcp-4, 0x2.c5d4p+12)));
    try std.testing.expectEqual(cf64.init(-std.math.inf(f64), -std.math.inf(f64)), sin(cf64.init(-0xcp-4, -0x2.c5d4p+12)));
    try std.testing.expectEqual(cf64.init(std.math.inf(f64), std.math.inf(f64)), sin(cf64.init(0xcp-4, 0xf.424p+16)));
    try std.testing.expectEqual(cf64.init(std.math.inf(f64), -std.math.inf(f64)), sin(cf64.init(0xcp-4, -0xf.424p+16)));
    try std.testing.expectEqual(cf64.init(-std.math.inf(f64), std.math.inf(f64)), sin(cf64.init(-0xcp-4, 0xf.424p+16)));
    try std.testing.expectEqual(cf64.init(-std.math.inf(f64), -std.math.inf(f64)), sin(cf64.init(-0xcp-4, -0xf.424p+16)));
    try std.testing.expectEqual(cf64.init(0x3.37346563b110ap+108, 0x6.6e68cac762214p+256), sin(cf64.init(0x8p-152, 0xb.4p+4)));
    try std.testing.expectEqual(cf64.init(std.math.inf(f64), std.math.inf(f64)), sin(cf64.init(0x8p-152, 0x5.ap+8)));
    try std.testing.expectEqual(cf64.init(0x0p+0, std.math.inf(f64)), sin(cf64.init(0x0p+0, 0x5.ap+8)));
    try std.testing.expectEqual(cf64.init(0x5.95116a53e849cp+1000, std.math.inf(f64)), sin(cf64.init(0x4p-1076, 0x5.ap+8)));
    try std.testing.expectEqual(cf64.init(std.math.inf(f64), std.math.inf(f64)), sin(cf64.init(0x8p-152, 0x5.8cap+12)));
    try std.testing.expectEqual(cf64.init(0x0p+0, std.math.inf(f64)), sin(cf64.init(0x0p+0, 0x5.8cap+12)));
    try std.testing.expectEqual(cf64.init(std.math.inf(f64), std.math.inf(f64)), sin(cf64.init(0x4p-1076, 0x5.8cap+12)));
    try std.testing.expectEqual(cf64.init(0x6.2c1d54767d54p-128, 0x1.2cd9fc44eb982p+0), sin(cf64.init(0x4p-128, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x6.2c1d54767d54p-1024, 0x1.2cd9fc44eb982p+0), sin(cf64.init(0x4p-1024, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0xc.583aa8ecfaa8p-972, 0x1.2cd9fc44eb982p+0), sin(cf64.init(0x8p-972, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x6.2c1d54767d54p-128, 0x1.2cd9fc44eb982p+0), sin(cf64.init(-0x4p-128, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0x6.2c1d54767d54p-1024, 0x1.2cd9fc44eb982p+0), sin(cf64.init(-0x4p-1024, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(-0xc.583aa8ecfaa8p-972, 0x1.2cd9fc44eb982p+0), sin(cf64.init(-0x8p-972, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x2.aaef37309e7d6p-36, 0x5.55de6e613cfacp+112), sin(cf64.init(0x8p-152, 0x5p+4)));
    try std.testing.expectEqual(cf64.init(0x1.55779b984f3ebp-960, 0x5.55de6e613cfacp+112), sin(cf64.init(0x4p-1076, 0x5p+4)));
    try std.testing.expectEqual(cf64.init(-0x2.aaef37309e7d6p-36, 0x5.55de6e613cfacp+112), sin(cf64.init(-0x8p-152, 0x5p+4)));
    try std.testing.expectEqual(cf64.init(-0x1.55779b984f3ebp-960, 0x5.55de6e613cfacp+112), sin(cf64.init(-0x4p-1076, 0x5p+4)));
    try std.testing.expectEqual(cf64.init(0x8p-152, 0x4p-128), sin(cf64.init(0x8p-152, 0x4p-128)));
    try std.testing.expectEqual(cf64.init(0x8p-152, 0x4p-1024), sin(cf64.init(0x8p-152, 0x4p-1024)));
    try std.testing.expectEqual(cf64.init(0x8p-152, 0x8p-972), sin(cf64.init(0x8p-152, 0x8p-972)));
    try std.testing.expectEqual(cf64.init(0x4p-1076, 0x4p-128), sin(cf64.init(0x4p-1076, 0x4p-128)));
    try std.testing.expectEqual(cf64.init(0x4p-1076, 0x4p-1024), sin(cf64.init(0x4p-1076, 0x4p-1024)));
    try std.testing.expectEqual(cf64.init(0x4p-1076, 0x8p-972), sin(cf64.init(0x4p-1076, 0x8p-972)));
    try std.testing.expectEqual(cf64.init(0x4p-128, 0x8p-152), sin(cf64.init(0x4p-128, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x4p-128, 0x4p-1076), sin(cf64.init(0x4p-128, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x4p-1024, 0x8p-152), sin(cf64.init(0x4p-1024, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x4p-1024, 0x4p-1076), sin(cf64.init(0x4p-1024, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x8p-972, 0x8p-152), sin(cf64.init(0x8p-972, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x8p-972, 0x4p-1076), sin(cf64.init(0x8p-972, 0x4p-1076)));

    try std.testing.expectEqual(cf80.init(0x0p+0, 0x0p+0), sin(cf80.init(0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0x0p+0), sin(cf80.init(-0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x0p+0), sin(cf80.init(0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0x0p+0), sin(cf80.init(-0x0p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.498770cd39c9a5b2p+0, 0x1.2c0f29932c3a3bb6p+0), sin(cf80.init(0xcp-4, 0x1.4p+0)));
    try std.testing.expectEqual(cf80.init(-0x9.278d418f3e96dbfp+0, 0x4.2b3d7c8d1f8867fp+0), sin(cf80.init(-0x2p+0, -0x3p+0)));
    try std.testing.expectEqual(cf80.init(0xb.dcb174d885199a5p+124, 0xc.bbaa76be57905b4p+124), sin(cf80.init(0xcp-4, 0x5.98p+4)));
    try std.testing.expectEqual(cf80.init(0xb.dcb174d885199a5p+124, -0xc.bbaa76be57905b4p+124), sin(cf80.init(0xcp-4, -0x5.98p+4)));
    try std.testing.expectEqual(cf80.init(-0xb.dcb174d885199a5p+124, 0xc.bbaa76be57905b4p+124), sin(cf80.init(-0xcp-4, 0x5.98p+4)));
    try std.testing.expectEqual(cf80.init(-0xb.dcb174d885199a5p+124, -0xc.bbaa76be57905b4p+124), sin(cf80.init(-0xcp-4, -0x5.98p+4)));
    try std.testing.expectEqual(cf80.init(0xb.2c35ffb60337071p+1020, 0xb.fe39a718cb52b27p+1020), sin(cf80.init(0xcp-4, 0x2.c68p+8)));
    try std.testing.expectEqual(cf80.init(0xb.2c35ffb60337071p+1020, -0xb.fe39a718cb52b27p+1020), sin(cf80.init(0xcp-4, -0x2.c68p+8)));
    try std.testing.expectEqual(cf80.init(-0xb.2c35ffb60337071p+1020, 0xb.fe39a718cb52b27p+1020), sin(cf80.init(-0xcp-4, 0x2.c68p+8)));
    try std.testing.expectEqual(cf80.init(-0xb.2c35ffb60337071p+1020, -0xb.fe39a718cb52b27p+1020), sin(cf80.init(-0xcp-4, -0x2.c68p+8)));
    try std.testing.expectEqual(cf80.init(0xb.46f43ab104a6259p+16380, 0xc.1aee93505374b41p+16380), sin(cf80.init(0xcp-4, 0x2.c5d4p+12)));
    try std.testing.expectEqual(cf80.init(0xb.46f43ab104a6259p+16380, -0xc.1aee93505374b41p+16380), sin(cf80.init(0xcp-4, -0x2.c5d4p+12)));
    try std.testing.expectEqual(cf80.init(-0xb.46f43ab104a6259p+16380, 0xc.1aee93505374b41p+16380), sin(cf80.init(-0xcp-4, 0x2.c5d4p+12)));
    try std.testing.expectEqual(cf80.init(-0xb.46f43ab104a6259p+16380, -0xc.1aee93505374b41p+16380), sin(cf80.init(-0xcp-4, -0x2.c5d4p+12)));
    try std.testing.expectEqual(cf80.init(std.math.inf(f80), std.math.inf(f80)), sin(cf80.init(0xcp-4, 0xf.424p+16)));
    try std.testing.expectEqual(cf80.init(std.math.inf(f80), -std.math.inf(f80)), sin(cf80.init(0xcp-4, -0xf.424p+16)));
    try std.testing.expectEqual(cf80.init(-std.math.inf(f80), std.math.inf(f80)), sin(cf80.init(-0xcp-4, 0xf.424p+16)));
    try std.testing.expectEqual(cf80.init(-std.math.inf(f80), -std.math.inf(f80)), sin(cf80.init(-0xcp-4, -0xf.424p+16)));
    try std.testing.expectEqual(cf80.init(0x3.37346563b110a9b8p+108, 0x6.6e68cac76221537p+256), sin(cf80.init(0x8p-152, 0xb.4p+4)));
    try std.testing.expectEqual(cf80.init(0xb.2a22d4a7d093462p+1924, 0x1.65445a94fa1268c4p+2076), sin(cf80.init(0x8p-152, 0x5.ap+8)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x1.65445a94fa1268c4p+2076), sin(cf80.init(0x0p+0, 0x5.ap+8)));
    try std.testing.expectEqual(cf80.init(0x5.95116a53e849a31p+1000, 0x1.65445a94fa1268c4p+2076), sin(cf80.init(0x4p-1076, 0x5.ap+8)));
    try std.testing.expectEqual(cf80.init(std.math.inf(f80), std.math.inf(f80)), sin(cf80.init(0x8p-152, 0x5.8cap+12)));
    try std.testing.expectEqual(cf80.init(0x0p+0, std.math.inf(f80)), sin(cf80.init(0x0p+0, 0x5.8cap+12)));
    try std.testing.expectEqual(cf80.init(std.math.inf(f80), std.math.inf(f80)), sin(cf80.init(0x4p-1076, 0x5.8cap+12)));
    try std.testing.expectEqual(cf80.init(0x2.bf701efd42c88e8p+16356, std.math.inf(f80)), sin(cf80.init(0x4p-16436, 0x5.8cap+12)));
    try std.testing.expectEqual(cf80.init(0x6.2c1d54767d541308p-128, 0x1.2cd9fc44eb9825a8p+0), sin(cf80.init(0x4p-128, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x6.2c1d54767d541308p-1024, 0x1.2cd9fc44eb9825a8p+0), sin(cf80.init(0x4p-1024, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x6.2c1d54767d541308p-16384, 0x1.2cd9fc44eb9825a8p+0), sin(cf80.init(0x4p-16384, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x3.160eaa3b3eaa0988p-16384, 0x1.2cd9fc44eb9825a8p+0), sin(cf80.init(0x2p-16384, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0xc.583aa8ecfaa8261p-972, 0x1.2cd9fc44eb9825a8p+0), sin(cf80.init(0x8p-972, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x6.2c1d54767d541308p-128, 0x1.2cd9fc44eb9825a8p+0), sin(cf80.init(-0x4p-128, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x6.2c1d54767d541308p-1024, 0x1.2cd9fc44eb9825a8p+0), sin(cf80.init(-0x4p-1024, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0x6.2c1d54767d541308p-16384, 0x1.2cd9fc44eb9825a8p+0), sin(cf80.init(-0x4p-16384, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(-0x3.160eaa3b3eaa0988p-16384, 0x1.2cd9fc44eb9825a8p+0), sin(cf80.init(-0x2p-16384, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(-0xc.583aa8ecfaa8261p-972, 0x1.2cd9fc44eb9825a8p+0), sin(cf80.init(-0x8p-972, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x2.aaef37309e7d679p-36, 0x5.55de6e613cfacf2p+112), sin(cf80.init(0x8p-152, 0x5p+4)));
    try std.testing.expectEqual(cf80.init(0x1.55779b984f3eb3c8p-960, 0x5.55de6e613cfacf2p+112), sin(cf80.init(0x4p-1076, 0x5p+4)));
    try std.testing.expectEqual(cf80.init(0x2.aaef37309e7d679p-16332, 0x5.55de6e613cfacf2p+112), sin(cf80.init(0x8p-16448, 0x5p+4)));
    try std.testing.expectEqual(cf80.init(-0x2.aaef37309e7d679p-36, 0x5.55de6e613cfacf2p+112), sin(cf80.init(-0x8p-152, 0x5p+4)));
    try std.testing.expectEqual(cf80.init(-0x1.55779b984f3eb3c8p-960, 0x5.55de6e613cfacf2p+112), sin(cf80.init(-0x4p-1076, 0x5p+4)));
    try std.testing.expectEqual(cf80.init(-0x2.aaef37309e7d679p-16332, 0x5.55de6e613cfacf2p+112), sin(cf80.init(-0x8p-16448, 0x5p+4)));
    try std.testing.expectEqual(cf80.init(0x8p-152, 0x4p-128), sin(cf80.init(0x8p-152, 0x4p-128)));
    try std.testing.expectEqual(cf80.init(0x8p-152, 0x4p-1024), sin(cf80.init(0x8p-152, 0x4p-1024)));
    try std.testing.expectEqual(cf80.init(0x8p-152, 0x4p-16384), sin(cf80.init(0x8p-152, 0x4p-16384)));
    try std.testing.expectEqual(cf80.init(0x8p-152, 0x2p-16384), sin(cf80.init(0x8p-152, 0x2p-16384)));
    try std.testing.expectEqual(cf80.init(0x8p-152, 0x8p-972), sin(cf80.init(0x8p-152, 0x8p-972)));
    try std.testing.expectEqual(cf80.init(0x4p-1076, 0x4p-128), sin(cf80.init(0x4p-1076, 0x4p-128)));
    try std.testing.expectEqual(cf80.init(0x4p-1076, 0x4p-1024), sin(cf80.init(0x4p-1076, 0x4p-1024)));
    try std.testing.expectEqual(cf80.init(0x4p-1076, 0x4p-16384), sin(cf80.init(0x4p-1076, 0x4p-16384)));
    try std.testing.expectEqual(cf80.init(0x4p-1076, 0x2p-16384), sin(cf80.init(0x4p-1076, 0x2p-16384)));
    try std.testing.expectEqual(cf80.init(0x4p-1076, 0x8p-972), sin(cf80.init(0x4p-1076, 0x8p-972)));
    try std.testing.expectEqual(cf80.init(0x8p-16448, 0x4p-128), sin(cf80.init(0x8p-16448, 0x4p-128)));
    try std.testing.expectEqual(cf80.init(0x8p-16448, 0x4p-1024), sin(cf80.init(0x8p-16448, 0x4p-1024)));
    try std.testing.expectEqual(cf80.init(0x8p-16448, 0x4p-16384), sin(cf80.init(0x8p-16448, 0x4p-16384)));
    try std.testing.expectEqual(cf80.init(0x8p-16448, 0x2p-16384), sin(cf80.init(0x8p-16448, 0x2p-16384)));
    try std.testing.expectEqual(cf80.init(0x8p-16448, 0x8p-972), sin(cf80.init(0x8p-16448, 0x8p-972)));
    try std.testing.expectEqual(cf80.init(0x4p-128, 0x8p-152), sin(cf80.init(0x4p-128, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x4p-128, 0x4p-1076), sin(cf80.init(0x4p-128, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x4p-128, 0x8p-16448), sin(cf80.init(0x4p-128, 0x8p-16448)));
    try std.testing.expectEqual(cf80.init(0x4p-1024, 0x8p-152), sin(cf80.init(0x4p-1024, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x4p-1024, 0x4p-1076), sin(cf80.init(0x4p-1024, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x4p-1024, 0x8p-16448), sin(cf80.init(0x4p-1024, 0x8p-16448)));
    try std.testing.expectEqual(cf80.init(0x4p-16384, 0x8p-152), sin(cf80.init(0x4p-16384, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x4p-16384, 0x4p-1076), sin(cf80.init(0x4p-16384, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x4p-16384, 0x8p-16448), sin(cf80.init(0x4p-16384, 0x8p-16448)));
    try std.testing.expectEqual(cf80.init(0x2p-16384, 0x8p-152), sin(cf80.init(0x2p-16384, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x2p-16384, 0x4p-1076), sin(cf80.init(0x2p-16384, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x2p-16384, 0x8p-16448), sin(cf80.init(0x2p-16384, 0x8p-16448)));
    try std.testing.expectEqual(cf80.init(0x8p-972, 0x8p-152), sin(cf80.init(0x8p-972, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x8p-972, 0x4p-1076), sin(cf80.init(0x8p-972, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x8p-972, 0x8p-16448), sin(cf80.init(0x8p-972, 0x8p-16448)));

    try std.testing.expectEqual(cf128.init(0x0p+0, 0x0p+0), sin(cf128.init(0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0x0p+0), sin(cf128.init(-0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x0p+0), sin(cf128.init(0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0x0p+0), sin(cf128.init(-0x0p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.498770cd39c9a5b290663a71f533p+0, 0x1.2c0f29932c3a3bb5105a4748968ep+0), sin(cf128.init(0xcp-4, 0x1.4p+0)));
    // try std.testing.expectEqual(cf128.init(-0x9.278d418f3e96dbebad2bf89d946p+0, 0x4.2b3d7c8d1f8867eddb7c338523bp+0), sin(cf128.init(-0x2p+0, -0x3p+0)));
    // try std.testing.expectEqual(cf128.init(0xb.dcb174d885199a507e02ee9c08c8p+124, 0xc.bbaa76be57905b422fc94309d298p+124), sin(cf128.init(0xcp-4, 0x5.98p+4)));
    // try std.testing.expectEqual(cf128.init(0xb.dcb174d885199a507e02ee9c08c8p+124, -0xc.bbaa76be57905b422fc94309d298p+124), sin(cf128.init(0xcp-4, -0x5.98p+4)));
    // try std.testing.expectEqual(cf128.init(-0xb.dcb174d885199a507e02ee9c08c8p+124, 0xc.bbaa76be57905b422fc94309d298p+124), sin(cf128.init(-0xcp-4, 0x5.98p+4)));
    // try std.testing.expectEqual(cf128.init(-0xb.dcb174d885199a507e02ee9c08c8p+124, -0xc.bbaa76be57905b422fc94309d298p+124), sin(cf128.init(-0xcp-4, -0x5.98p+4)));
    // try std.testing.expectEqual(cf128.init(0xb.2c35ffb60337070b74839cd40a3p+1020, 0xb.fe39a718cb52b2731922dd2e0be8p+1020), sin(cf128.init(0xcp-4, 0x2.c68p+8)));
    // try std.testing.expectEqual(cf128.init(0xb.2c35ffb60337070b74839cd40a3p+1020, -0xb.fe39a718cb52b2731922dd2e0be8p+1020), sin(cf128.init(0xcp-4, -0x2.c68p+8)));
    // try std.testing.expectEqual(cf128.init(-0xb.2c35ffb60337070b74839cd40a3p+1020, 0xb.fe39a718cb52b2731922dd2e0be8p+1020), sin(cf128.init(-0xcp-4, 0x2.c68p+8)));
    // try std.testing.expectEqual(cf128.init(-0xb.2c35ffb60337070b74839cd40a3p+1020, -0xb.fe39a718cb52b2731922dd2e0be8p+1020), sin(cf128.init(-0xcp-4, -0x2.c68p+8)));
    // try std.testing.expectEqual(cf128.init(0xb.46f43ab104a625930c1b0cbd6238p+16380, 0xc.1aee93505374b41257ed141f4e1p+16380), sin(cf128.init(0xcp-4, 0x2.c5d4p+12)));
    // try std.testing.expectEqual(cf128.init(0xb.46f43ab104a625930c1b0cbd6238p+16380, -0xc.1aee93505374b41257ed141f4e1p+16380), sin(cf128.init(0xcp-4, -0x2.c5d4p+12)));
    // try std.testing.expectEqual(cf128.init(-0xb.46f43ab104a625930c1b0cbd6238p+16380, 0xc.1aee93505374b41257ed141f4e1p+16380), sin(cf128.init(-0xcp-4, 0x2.c5d4p+12)));
    // try std.testing.expectEqual(cf128.init(-0xb.46f43ab104a625930c1b0cbd6238p+16380, -0xc.1aee93505374b41257ed141f4e1p+16380), sin(cf128.init(-0xcp-4, -0x2.c5d4p+12)));
    try std.testing.expectEqual(cf128.init(std.math.inf(f128), std.math.inf(f128)), sin(cf128.init(0xcp-4, 0xf.424p+16)));
    try std.testing.expectEqual(cf128.init(std.math.inf(f128), -std.math.inf(f128)), sin(cf128.init(0xcp-4, -0xf.424p+16)));
    try std.testing.expectEqual(cf128.init(-std.math.inf(f128), std.math.inf(f128)), sin(cf128.init(-0xcp-4, 0xf.424p+16)));
    try std.testing.expectEqual(cf128.init(-std.math.inf(f128), -std.math.inf(f128)), sin(cf128.init(-0xcp-4, -0xf.424p+16)));
    try std.testing.expectEqual(cf128.init(0x3.37346563b110a9b9667d97eb1e7ap+108, 0x6.6e68cac762215372ccfb2fd63cf4p+256), sin(cf128.init(0x8p-152, 0xb.4p+4)));
    try std.testing.expectEqual(cf128.init(0xb.2a22d4a7d0934623f733dc45db7p+1924, 0x1.65445a94fa1268c47ee67b88bb6ep+2076), sin(cf128.init(0x8p-152, 0x5.ap+8)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x1.65445a94fa1268c47ee67b88bb6ep+2076), sin(cf128.init(0x0p+0, 0x5.ap+8)));
    try std.testing.expectEqual(cf128.init(0x5.95116a53e849a311fb99ee22edb8p+1000, 0x1.65445a94fa1268c47ee67b88bb6ep+2076), sin(cf128.init(0x4p-1076, 0x5.ap+8)));
    try std.testing.expectEqual(cf128.init(std.math.inf(f128), std.math.inf(f128)), sin(cf128.init(0x8p-152, 0x5.8cap+12)));
    try std.testing.expectEqual(cf128.init(0x0p+0, std.math.inf(f128)), sin(cf128.init(0x0p+0, 0x5.8cap+12)));
    try std.testing.expectEqual(cf128.init(std.math.inf(f128), std.math.inf(f128)), sin(cf128.init(0x4p-1076, 0x5.8cap+12)));
    // try std.testing.expectEqual(cf128.init(0x2.bf701efd42c88e7efc2fdf7765fcp+16356, std.math.inf(f128)), sin(cf128.init(0x4p-16436, 0x5.8cap+12)));
    // try std.testing.expectEqual(cf128.init(0x6.2c1d54767d54130af4a040065a94p-128, 0x1.2cd9fc44eb9825a80249487f065p+0), sin(cf128.init(0x4p-128, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x6.2c1d54767d54130af4a040065a94p-1024, 0x1.2cd9fc44eb9825a80249487f065p+0), sin(cf128.init(0x4p-1024, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x6.2c1d54767d54130af4a040065a94p-16384, 0x1.2cd9fc44eb9825a80249487f065p+0), sin(cf128.init(0x4p-16384, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x3.160eaa3b3eaa09857a5020032d48p-16384, 0x1.2cd9fc44eb9825a80249487f065p+0), sin(cf128.init(0x2p-16384, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0xc.583aa8ecfaa82615e940800cb528p-972, 0x1.2cd9fc44eb9825a80249487f065p+0), sin(cf128.init(0x8p-972, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x6.2c1d54767d54130af4a040065a94p-128, 0x1.2cd9fc44eb9825a80249487f065p+0), sin(cf128.init(-0x4p-128, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x6.2c1d54767d54130af4a040065a94p-1024, 0x1.2cd9fc44eb9825a80249487f065p+0), sin(cf128.init(-0x4p-1024, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0x6.2c1d54767d54130af4a040065a94p-16384, 0x1.2cd9fc44eb9825a80249487f065p+0), sin(cf128.init(-0x4p-16384, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(-0x3.160eaa3b3eaa09857a5020032d48p-16384, 0x1.2cd9fc44eb9825a80249487f065p+0), sin(cf128.init(-0x2p-16384, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(-0xc.583aa8ecfaa82615e940800cb528p-972, 0x1.2cd9fc44eb9825a80249487f065p+0), sin(cf128.init(-0x8p-972, 0x1p+0)));
    try std.testing.expectEqual(cf128.init(0x2.aaef37309e7d67914a076951c492p-36, 0x5.55de6e613cfacf22940ed2a38924p+112), sin(cf128.init(0x8p-152, 0x5p+4)));
    try std.testing.expectEqual(cf128.init(0x1.55779b984f3eb3c8a503b4a8e249p-960, 0x5.55de6e613cfacf22940ed2a38924p+112), sin(cf128.init(0x4p-1076, 0x5p+4)));
    try std.testing.expectEqual(cf128.init(0x2.aaef37309e7d67914a076951c492p-16332, 0x5.55de6e613cfacf22940ed2a38924p+112), sin(cf128.init(0x8p-16448, 0x5p+4)));
    try std.testing.expectEqual(cf128.init(0x1.55779b984f3eb3c8a503b4a8e249p-16332, 0x5.55de6e613cfacf22940ed2a38924p+112), sin(cf128.init(0x4p-16448, 0x5p+4)));
    try std.testing.expectEqual(cf128.init(0x1.55779b984f3eb3c8a503b4a8e249p-16380, 0x5.55de6e613cfacf22940ed2a38924p+112), sin(cf128.init(0x4p-16496, 0x5p+4)));
    try std.testing.expectEqual(cf128.init(-0x2.aaef37309e7d67914a076951c492p-36, 0x5.55de6e613cfacf22940ed2a38924p+112), sin(cf128.init(-0x8p-152, 0x5p+4)));
    try std.testing.expectEqual(cf128.init(-0x1.55779b984f3eb3c8a503b4a8e249p-960, 0x5.55de6e613cfacf22940ed2a38924p+112), sin(cf128.init(-0x4p-1076, 0x5p+4)));
    try std.testing.expectEqual(cf128.init(-0x2.aaef37309e7d67914a076951c492p-16332, 0x5.55de6e613cfacf22940ed2a38924p+112), sin(cf128.init(-0x8p-16448, 0x5p+4)));
    try std.testing.expectEqual(cf128.init(-0x1.55779b984f3eb3c8a503b4a8e249p-16332, 0x5.55de6e613cfacf22940ed2a38924p+112), sin(cf128.init(-0x4p-16448, 0x5p+4)));
    try std.testing.expectEqual(cf128.init(-0x1.55779b984f3eb3c8a503b4a8e249p-16380, 0x5.55de6e613cfacf22940ed2a38924p+112), sin(cf128.init(-0x4p-16496, 0x5p+4)));
    try std.testing.expectEqual(cf128.init(0x8p-152, 0x4p-128), sin(cf128.init(0x8p-152, 0x4p-128)));
    try std.testing.expectEqual(cf128.init(0x8p-152, 0x4p-1024), sin(cf128.init(0x8p-152, 0x4p-1024)));
    try std.testing.expectEqual(cf128.init(0x8p-152, 0x4p-16384), sin(cf128.init(0x8p-152, 0x4p-16384)));
    try std.testing.expectEqual(cf128.init(0x8p-152, 0x2p-16384), sin(cf128.init(0x8p-152, 0x2p-16384)));
    try std.testing.expectEqual(cf128.init(0x8p-152, 0x8p-972), sin(cf128.init(0x8p-152, 0x8p-972)));
    try std.testing.expectEqual(cf128.init(0x4p-1076, 0x4p-128), sin(cf128.init(0x4p-1076, 0x4p-128)));
    try std.testing.expectEqual(cf128.init(0x4p-1076, 0x4p-1024), sin(cf128.init(0x4p-1076, 0x4p-1024)));
    try std.testing.expectEqual(cf128.init(0x4p-1076, 0x4p-16384), sin(cf128.init(0x4p-1076, 0x4p-16384)));
    try std.testing.expectEqual(cf128.init(0x4p-1076, 0x2p-16384), sin(cf128.init(0x4p-1076, 0x2p-16384)));
    try std.testing.expectEqual(cf128.init(0x4p-1076, 0x8p-972), sin(cf128.init(0x4p-1076, 0x8p-972)));
    try std.testing.expectEqual(cf128.init(0x8p-16448, 0x4p-128), sin(cf128.init(0x8p-16448, 0x4p-128)));
    try std.testing.expectEqual(cf128.init(0x8p-16448, 0x4p-1024), sin(cf128.init(0x8p-16448, 0x4p-1024)));
    try std.testing.expectEqual(cf128.init(0x8p-16448, 0x4p-16384), sin(cf128.init(0x8p-16448, 0x4p-16384)));
    try std.testing.expectEqual(cf128.init(0x8p-16448, 0x2p-16384), sin(cf128.init(0x8p-16448, 0x2p-16384)));
    try std.testing.expectEqual(cf128.init(0x8p-16448, 0x8p-972), sin(cf128.init(0x8p-16448, 0x8p-972)));
    try std.testing.expectEqual(cf128.init(0x4p-16448, 0x4p-128), sin(cf128.init(0x4p-16448, 0x4p-128)));
    try std.testing.expectEqual(cf128.init(0x4p-16448, 0x4p-1024), sin(cf128.init(0x4p-16448, 0x4p-1024)));
    try std.testing.expectEqual(cf128.init(0x4p-16448, 0x4p-16384), sin(cf128.init(0x4p-16448, 0x4p-16384)));
    try std.testing.expectEqual(cf128.init(0x4p-16448, 0x2p-16384), sin(cf128.init(0x4p-16448, 0x2p-16384)));
    try std.testing.expectEqual(cf128.init(0x4p-16448, 0x8p-972), sin(cf128.init(0x4p-16448, 0x8p-972)));
    try std.testing.expectEqual(cf128.init(0x4p-16496, 0x4p-128), sin(cf128.init(0x4p-16496, 0x4p-128)));
    try std.testing.expectEqual(cf128.init(0x4p-16496, 0x4p-1024), sin(cf128.init(0x4p-16496, 0x4p-1024)));
    try std.testing.expectEqual(cf128.init(0x4p-16496, 0x4p-16384), sin(cf128.init(0x4p-16496, 0x4p-16384)));
    try std.testing.expectEqual(cf128.init(0x4p-16496, 0x2p-16384), sin(cf128.init(0x4p-16496, 0x2p-16384)));
    try std.testing.expectEqual(cf128.init(0x4p-16496, 0x8p-972), sin(cf128.init(0x4p-16496, 0x8p-972)));
    try std.testing.expectEqual(cf128.init(0x4p-128, 0x8p-152), sin(cf128.init(0x4p-128, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x4p-128, 0x4p-1076), sin(cf128.init(0x4p-128, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x4p-128, 0x8p-16448), sin(cf128.init(0x4p-128, 0x8p-16448)));
    try std.testing.expectEqual(cf128.init(0x4p-128, 0x4p-16448), sin(cf128.init(0x4p-128, 0x4p-16448)));
    try std.testing.expectEqual(cf128.init(0x4p-128, 0x4p-16496), sin(cf128.init(0x4p-128, 0x4p-16496)));
    try std.testing.expectEqual(cf128.init(0x4p-1024, 0x8p-152), sin(cf128.init(0x4p-1024, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x4p-1024, 0x4p-1076), sin(cf128.init(0x4p-1024, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x4p-1024, 0x8p-16448), sin(cf128.init(0x4p-1024, 0x8p-16448)));
    try std.testing.expectEqual(cf128.init(0x4p-1024, 0x4p-16448), sin(cf128.init(0x4p-1024, 0x4p-16448)));
    try std.testing.expectEqual(cf128.init(0x4p-1024, 0x4p-16496), sin(cf128.init(0x4p-1024, 0x4p-16496)));
    try std.testing.expectEqual(cf128.init(0x4p-16384, 0x8p-152), sin(cf128.init(0x4p-16384, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x4p-16384, 0x4p-1076), sin(cf128.init(0x4p-16384, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x4p-16384, 0x8p-16448), sin(cf128.init(0x4p-16384, 0x8p-16448)));
    try std.testing.expectEqual(cf128.init(0x4p-16384, 0x4p-16448), sin(cf128.init(0x4p-16384, 0x4p-16448)));
    try std.testing.expectEqual(cf128.init(0x4p-16384, 0x4p-16496), sin(cf128.init(0x4p-16384, 0x4p-16496)));
    try std.testing.expectEqual(cf128.init(0x2p-16384, 0x8p-152), sin(cf128.init(0x2p-16384, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x2p-16384, 0x4p-1076), sin(cf128.init(0x2p-16384, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x2p-16384, 0x8p-16448), sin(cf128.init(0x2p-16384, 0x8p-16448)));
    try std.testing.expectEqual(cf128.init(0x2p-16384, 0x4p-16448), sin(cf128.init(0x2p-16384, 0x4p-16448)));
    try std.testing.expectEqual(cf128.init(0x2p-16384, 0x4p-16496), sin(cf128.init(0x2p-16384, 0x4p-16496)));
    try std.testing.expectEqual(cf128.init(0x8p-972, 0x8p-152), sin(cf128.init(0x8p-972, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x8p-972, 0x4p-1076), sin(cf128.init(0x8p-972, 0x4p-1076)));
    try std.testing.expectEqual(cf128.init(0x8p-972, 0x8p-16448), sin(cf128.init(0x8p-972, 0x8p-16448)));
    try std.testing.expectEqual(cf128.init(0x8p-972, 0x4p-16448), sin(cf128.init(0x8p-972, 0x4p-16448)));
    try std.testing.expectEqual(cf128.init(0x8p-972, 0x4p-16496), sin(cf128.init(0x8p-972, 0x4p-16496)));
}
