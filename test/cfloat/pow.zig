const std = @import("std");
const zml = @import("zml");
const cf32 = zml.cf32;
const cf64 = zml.cf64;
const cf80 = zml.cf80;
const cf128 = zml.cf128;
const pow = zml.cfloat.pow;

test pow {
    try std.testing.expectEqual(cf32.init(0x1p+0, 0x0p+0), pow(cf32.init(0x1p+0, 0x0p+0), cf32.init(0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x4p+8, 0x0p+0), pow(cf32.init(0x2p+0, 0x0p+0), cf32.init(0xap+0, 0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x1p+0, 0x8.fa605p-24), pow(cf32.init(0x2.b7e154p+0, 0x0p+0), cf32.init(0x0p+0, 0x6.487ed8p+0)));
    // try std.testing.expectEqual(cf32.init(0x1p+0, 0xf.a6049p-28), pow(cf32.init(0x2.b7e154p+0, 0x0p+0), cf32.init(0x0p+0, 0x6.487edp+0)));
    // try std.testing.expectEqual(cf32.init(0x1p+0, -0x4.48dadp-28), pow(cf32.init(0x2.b7e15p+0, 0x0p+0), cf32.init(0x0p+0, 0x6.487ed8p+0)));
    // try std.testing.expectEqual(cf32.init(0x1p+0, -0x8.448dbp-24), pow(cf32.init(0x2.b7e15p+0, 0x0p+0), cf32.init(0x0p+0, 0x6.487edp+0)));
    // try std.testing.expectEqual(cf32.init(-0x7.7p+4, -0x7.8p+4), pow(cf32.init(0x2p+0, 0x3p+0), cf32.init(0x4p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.e14e48p-4, 0x5.8b7ae8p-4), pow(cf32.init(0xcp-4, 0x1.4p+0), cf32.init(0xcp-4, 0x1.4p+0)));
    // try std.testing.expectEqual(cf32.init(0x1.5aea04p-4, 0x8.366b2p-4), pow(cf32.init(0xcp-4, 0x1.4p+0), cf32.init(0x1p+0, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0xcp-4, 0x1.4p+0), pow(cf32.init(0xcp-4, 0x1.4p+0), cf32.init(0x1p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf32.init(0x5.4f283p-4, 0x2.19f68p-4), pow(cf32.init(0xcp-4, 0x1.4p+0), cf32.init(0x0p+0, 0x1p+0)));

    try std.testing.expectEqual(cf64.init(0x1p+0, 0x0p+0), pow(cf64.init(0x1p+0, 0x0p+0), cf64.init(0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x4p+8, 0x0p+0), pow(cf64.init(0x2p+0, 0x0p+0), cf64.init(0xap+0, 0x0p+0)));
    // try std.testing.expectEqual(cf64.init(0xf.fffffffffd7bp-4, 0x8.fa60505acb798p-24), pow(cf64.init(0x2.b7e154p+0, 0x0p+0), cf64.init(0x0p+0, 0x6.487ed8p+0)));
    // try std.testing.expectEqual(cf64.init(0xf.fffffffffff88p-4, 0xf.a6048a88f5ed8p-28), pow(cf64.init(0x2.b7e154p+0, 0x0p+0), cf64.init(0x0p+0, 0x6.487edp+0)));
    // try std.testing.expectEqual(cf64.init(0xf.fffffffffedb8p-4, 0x6.0b6b93c85aaf8p-24), pow(cf64.init(0x2.b7e154p+0, 0x0p+0), cf64.init(0x0p+0, 0x6.487ed5110b464p+0)));
    // try std.testing.expectEqual(cf64.init(0xf.fffffffffedb8p-4, 0x6.0b6b93885aaf4p-24), pow(cf64.init(0x2.b7e154p+0, 0x0p+0), cf64.init(0x0p+0, 0x6.487ed5110b46p+0)));
    // try std.testing.expectEqual(cf64.init(0xf.ffffffffffff8p-4, -0x4.48dacf23d53e8p-28), pow(cf64.init(0x2.b7e15p+0, 0x0p+0), cf64.init(0x0p+0, 0x6.487ed8p+0)));
    // try std.testing.expectEqual(cf64.init(0xf.fffffffffdddp-4, -0x8.448da8dece708p-24), pow(cf64.init(0x2.b7e15p+0, 0x0p+0), cf64.init(0x0p+0, 0x6.487edp+0)));
    // try std.testing.expectEqual(cf64.init(0xf.ffffffffffaep-4, -0x3.33826533a2e5cp-24), pow(cf64.init(0x2.b7e15p+0, 0x0p+0), cf64.init(0x0p+0, 0x6.487ed5110b464p+0)));
    // try std.testing.expectEqual(cf64.init(0xf.ffffffffffaep-4, -0x3.33826573a2e5ap-24), pow(cf64.init(0x2.b7e15p+0, 0x0p+0), cf64.init(0x0p+0, 0x6.487ed5110b46p+0)));
    // try std.testing.expectEqual(cf64.init(0xf.ffffffffffbbp-4, 0x2.eef4ba203d346p-24), pow(cf64.init(0x2.b7e151628aed4p+0, 0x0p+0), cf64.init(0x0p+0, 0x6.487ed8p+0)));
    // try std.testing.expectEqual(cf64.init(0xf.ffffffffff328p-4, -0x5.110b45dfc2b2p-24), pow(cf64.init(0x2.b7e151628aed4p+0, 0x0p+0), cf64.init(0x0p+0, 0x6.487edp+0)));
    // try std.testing.expectEqual(cf64.init(0x1p+0, 0x6.03d388c77c5e4p-52), pow(cf64.init(0x2.b7e151628aed4p+0, 0x0p+0), cf64.init(0x0p+0, 0x6.487ed5110b464p+0)));
    // try std.testing.expectEqual(cf64.init(0x1p+0, 0x2.03d388c77c5e2p-52), pow(cf64.init(0x2.b7e151628aed4p+0, 0x0p+0), cf64.init(0x0p+0, 0x6.487ed5110b46p+0)));
    // try std.testing.expectEqual(cf64.init(0xf.ffffffffffbbp-4, 0x2.eef4b9d645c48p-24), pow(cf64.init(0x2.b7e151628aed2p+0, 0x0p+0), cf64.init(0x0p+0, 0x6.487ed8p+0)));
    // try std.testing.expectEqual(cf64.init(0xf.ffffffffff328p-4, -0x5.110b4629ba218p-24), pow(cf64.init(0x2.b7e151628aed2p+0, 0x0p+0), cf64.init(0x0p+0, 0x6.487edp+0)));
    // try std.testing.expectEqual(cf64.init(0x1p+0, 0x1.645c8b3db4eeap-52), pow(cf64.init(0x2.b7e151628aed2p+0, 0x0p+0), cf64.init(0x0p+0, 0x6.487ed5110b464p+0)));
    // try std.testing.expectEqual(cf64.init(0x1p+0, -0x2.9ba374c24b116p-52), pow(cf64.init(0x2.b7e151628aed2p+0, 0x0p+0), cf64.init(0x0p+0, 0x6.487ed5110b46p+0)));
    // try std.testing.expectEqual(cf64.init(-0x7.7p+4, -0x7.8p+4), pow(cf64.init(0x2p+0, 0x3p+0), cf64.init(0x4p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.e14e4796fd3f1p-4, 0x5.8b7ae4dbf0a78p-4), pow(cf64.init(0xcp-4, 0x1.4p+0), cf64.init(0xcp-4, 0x1.4p+0)));
    // try std.testing.expectEqual(cf64.init(0x1.5aea037cc815bp-4, 0x8.366b1e23e5118p-4), pow(cf64.init(0xcp-4, 0x1.4p+0), cf64.init(0x1p+0, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0xcp-4, 0x1.4p+0), pow(cf64.init(0xcp-4, 0x1.4p+0), cf64.init(0x1p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x5.4f283113fa8a4p-4, 0x2.19f6810e8fdb4p-4), pow(cf64.init(0xcp-4, 0x1.4p+0), cf64.init(0x0p+0, 0x1p+0)));

    try std.testing.expectEqual(cf80.init(0x1p+0, 0x0p+0), pow(cf80.init(0x1p+0, 0x0p+0), cf80.init(0x0p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x4p+8, 0x0p+0), pow(cf80.init(0x2p+0, 0x0p+0), cf80.init(0xap+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0xf.fffffffffd7b28dp-4, 0x8.fa60505acb795d3p-24), pow(cf80.init(0x2.b7e154p+0, 0x0p+0), cf80.init(0x0p+0, 0x6.487ed8p+0)));
    // try std.testing.expectEqual(cf80.init(0xf.fffffffffff859p-4, 0xf.a6048a88f5ed86cp-28), pow(cf80.init(0x2.b7e154p+0, 0x0p+0), cf80.init(0x0p+0, 0x6.487edp+0)));
    // try std.testing.expectEqual(cf80.init(0xf.fffffffffedbb39p-4, 0x6.0b6b93c85aaf6e08p-24), pow(cf80.init(0x2.b7e154p+0, 0x0p+0), cf80.init(0x0p+0, 0x6.487ed5110b464p+0)));
    // try std.testing.expectEqual(cf80.init(0xf.fffffffffedbb39p-4, 0x6.0b6b93885aaf3078p-24), pow(cf80.init(0x2.b7e154p+0, 0x0p+0), cf80.init(0x0p+0, 0x6.487ed5110b46p+0)));
    // try std.testing.expectEqual(cf80.init(0xf.fffffffffedbb39p-4, 0x6.0b6b939a02af417p-24), pow(cf80.init(0x2.b7e154p+0, 0x0p+0), cf80.init(0x0p+0, 0x6.487ed5110b4611a8p+0)));
    // try std.testing.expectEqual(cf80.init(0xf.fffffffffedbb39p-4, 0x6.0b6b9399faaf4168p-24), pow(cf80.init(0x2.b7e154p+0, 0x0p+0), cf80.init(0x0p+0, 0x6.487ed5110b4611ap+0)));
    // try std.testing.expectEqual(cf80.init(0xf.ffffffffffff6d2p-4, -0x4.48dacf23d53e61b8p-28), pow(cf80.init(0x2.b7e15p+0, 0x0p+0), cf80.init(0x0p+0, 0x6.487ed8p+0)));
    // try std.testing.expectEqual(cf80.init(0xf.fffffffffddd265p-4, -0x8.448da8dece7042cp-24), pow(cf80.init(0x2.b7e15p+0, 0x0p+0), cf80.init(0x0p+0, 0x6.487edp+0)));
    // try std.testing.expectEqual(cf80.init(0xf.ffffffffffae04ap-4, -0x3.33826533a2e5c254p-24), pow(cf80.init(0x2.b7e15p+0, 0x0p+0), cf80.init(0x0p+0, 0x6.487ed5110b464p+0)));
    // try std.testing.expectEqual(cf80.init(0xf.ffffffffffae04ap-4, -0x3.33826573a2e5a1b8p-24), pow(cf80.init(0x2.b7e15p+0, 0x0p+0), cf80.init(0x0p+0, 0x6.487ed5110b46p+0)));
    // try std.testing.expectEqual(cf80.init(0xf.ffffffffffae04ap-4, -0x3.33826561fae5aab8p-24), pow(cf80.init(0x2.b7e15p+0, 0x0p+0), cf80.init(0x0p+0, 0x6.487ed5110b4611a8p+0)));
    // try std.testing.expectEqual(cf80.init(0xf.ffffffffffae04ap-4, -0x3.3382656202e5aab4p-24), pow(cf80.init(0x2.b7e15p+0, 0x0p+0), cf80.init(0x0p+0, 0x6.487ed5110b4611ap+0)));
    // try std.testing.expectEqual(cf80.init(0xf.ffffffffffbb291p-4, 0x2.eef4ba203d346ec4p-24), pow(cf80.init(0x2.b7e151628aed4p+0, 0x0p+0), cf80.init(0x0p+0, 0x6.487ed8p+0)));
    // try std.testing.expectEqual(cf80.init(0xf.ffffffffff32a36p-4, -0x5.110b45dfc2b1ee88p-24), pow(cf80.init(0x2.b7e151628aed4p+0, 0x0p+0), cf80.init(0x0p+0, 0x6.487edp+0)));
    // try std.testing.expectEqual(cf80.init(0x1p+0, 0x6.03d388c77c5e31ap-52), pow(cf80.init(0x2.b7e151628aed4p+0, 0x0p+0), cf80.init(0x0p+0, 0x6.487ed5110b464p+0)));
    // try std.testing.expectEqual(cf80.init(0x1p+0, 0x2.03d388c77c5e11dcp-52), pow(cf80.init(0x2.b7e151628aed4p+0, 0x0p+0), cf80.init(0x0p+0, 0x6.487ed5110b46p+0)));
    // try std.testing.expectEqual(cf80.init(0x1p+0, 0x3.1e5388c77c5e1aap-52), pow(cf80.init(0x2.b7e151628aed4p+0, 0x0p+0), cf80.init(0x0p+0, 0x6.487ed5110b4611a8p+0)));
    // try std.testing.expectEqual(cf80.init(0x1p+0, 0x3.1dd388c77c5e1a9cp-52), pow(cf80.init(0x2.b7e151628aed4p+0, 0x0p+0), cf80.init(0x0p+0, 0x6.487ed5110b4611ap+0)));
    // try std.testing.expectEqual(cf80.init(0xf.ffffffffffbb291p-4, 0x2.eef4b9d645c473ap-24), pow(cf80.init(0x2.b7e151628aed2p+0, 0x0p+0), cf80.init(0x0p+0, 0x6.487ed8p+0)));
    // try std.testing.expectEqual(cf80.init(0xf.ffffffffff32a36p-4, -0x5.110b4629ba218b8p-24), pow(cf80.init(0x2.b7e151628aed2p+0, 0x0p+0), cf80.init(0x0p+0, 0x6.487edp+0)));
    // try std.testing.expectEqual(cf80.init(0x1p+0, 0x1.645c8b3db4ee9d0cp-52), pow(cf80.init(0x2.b7e151628aed2p+0, 0x0p+0), cf80.init(0x0p+0, 0x6.487ed5110b464p+0)));
    // try std.testing.expectEqual(cf80.init(0x1p+0, -0x2.9ba374c24b1153ap-52), pow(cf80.init(0x2.b7e151628aed2p+0, 0x0p+0), cf80.init(0x0p+0, 0x6.487ed5110b46p+0)));
    // try std.testing.expectEqual(cf80.init(0x1p+0, -0x1.812374c24b1157dap-52), pow(cf80.init(0x2.b7e151628aed2p+0, 0x0p+0), cf80.init(0x0p+0, 0x6.487ed5110b4611a8p+0)));
    // try std.testing.expectEqual(cf80.init(0x1p+0, -0x1.81a374c24b1157d8p-52), pow(cf80.init(0x2.b7e151628aed2p+0, 0x0p+0), cf80.init(0x0p+0, 0x6.487ed5110b4611ap+0)));
    // try std.testing.expectEqual(cf80.init(0xf.ffffffffffbb291p-4, 0x2.eef4b9ee5cba8c0cp-24), pow(cf80.init(0x2.b7e151628aed2a6cp+0, 0x0p+0), cf80.init(0x0p+0, 0x6.487ed8p+0)));
    // try std.testing.expectEqual(cf80.init(0xf.ffffffffff32a36p-4, -0x5.110b4611a32b91cp-24), pow(cf80.init(0x2.b7e151628aed2a6cp+0, 0x0p+0), cf80.init(0x0p+0, 0x6.487edp+0)));
    // try std.testing.expectEqual(cf80.init(0x1p+0, 0x2.e5cbec1074429a08p-52), pow(cf80.init(0x2.b7e151628aed2a6cp+0, 0x0p+0), cf80.init(0x0p+0, 0x6.487ed5110b464p+0)));
    // try std.testing.expectEqual(cf80.init(0x1p+0, -0x1.1a3413ef8bbd65fap-52), pow(cf80.init(0x2.b7e151628aed2a6cp+0, 0x0p+0), cf80.init(0x0p+0, 0x6.487ed5110b46p+0)));
    // try std.testing.expectEqual(cf80.init(0x1p+0, 0x4.bec1074429a07668p-64), pow(cf80.init(0x2.b7e151628aed2a6cp+0, 0x0p+0), cf80.init(0x0p+0, 0x6.487ed5110b4611a8p+0)));
    // try std.testing.expectEqual(cf80.init(0x1p+0, -0x3.413ef8bbd65f8998p-64), pow(cf80.init(0x2.b7e151628aed2a6cp+0, 0x0p+0), cf80.init(0x0p+0, 0x6.487ed5110b4611ap+0)));
    // try std.testing.expectEqual(cf80.init(0xf.ffffffffffbb291p-4, 0x2.eef4b9ee537b9e0cp-24), pow(cf80.init(0x2.b7e151628aed2a68p+0, 0x0p+0), cf80.init(0x0p+0, 0x6.487ed8p+0)));
    // try std.testing.expectEqual(cf80.init(0xf.ffffffffff32a36p-4, -0x5.110b4611ac6a7fbp-24), pow(cf80.init(0x2.b7e151628aed2a68p+0, 0x0p+0), cf80.init(0x0p+0, 0x6.487edp+0)));
    // try std.testing.expectEqual(cf80.init(0x1p+0, 0x2.e537fd30c309ac14p-52), pow(cf80.init(0x2.b7e151628aed2a68p+0, 0x0p+0), cf80.init(0x0p+0, 0x6.487ed5110b464p+0)));
    // try std.testing.expectEqual(cf80.init(0x1p+0, -0x1.1ac802cf3cf653e6p-52), pow(cf80.init(0x2.b7e151628aed2a68p+0, 0x0p+0), cf80.init(0x0p+0, 0x6.487ed5110b46p+0)));
    // try std.testing.expectEqual(cf80.init(0x1p+0, -0x4.802cf3cf653e8188p-64), pow(cf80.init(0x2.b7e151628aed2a68p+0, 0x0p+0), cf80.init(0x0p+0, 0x6.487ed5110b4611a8p+0)));
    // try std.testing.expectEqual(cf80.init(0x1p+0, -0xc.802cf3cf653e818p-64), pow(cf80.init(0x2.b7e151628aed2a68p+0, 0x0p+0), cf80.init(0x0p+0, 0x6.487ed5110b4611ap+0)));
    // try std.testing.expectEqual(cf80.init(-0x7.7p+4, -0x7.8p+4), pow(cf80.init(0x2p+0, 0x3p+0), cf80.init(0x4p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.e14e4796fd3f1602p-4, 0x5.8b7ae4dbf0a79338p-4), pow(cf80.init(0xcp-4, 0x1.4p+0), cf80.init(0xcp-4, 0x1.4p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.5aea037cc815ad16p-4, 0x8.366b1e23e511576p-4), pow(cf80.init(0xcp-4, 0x1.4p+0), cf80.init(0x1p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0xcp-4, 0x1.4p+0), pow(cf80.init(0xcp-4, 0x1.4p+0), cf80.init(0x1p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x5.4f283113fa8a5258p-4, 0x2.19f6810e8fdb408cp-4), pow(cf80.init(0xcp-4, 0x1.4p+0), cf80.init(0x0p+0, 0x1p+0)));

    try std.testing.expectEqual(cf128.init(0x1p+0, 0x0p+0), pow(cf128.init(0x1p+0, 0x0p+0), cf128.init(0x0p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x4p+8, 0x0p+0), pow(cf128.init(0x2p+0, 0x0p+0), cf128.init(0xap+0, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.fffffffffd7b28d5c92c7abae9bp-4, 0x8.fa60505acb795d31d8828462e6a8p-24), pow(cf128.init(0x2.b7e154p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed8p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.fffffffffff858fe6f01a77dffdp-4, 0xf.a6048a88f5ed86bbfddbf1bd821p-28), pow(cf128.init(0x2.b7e154p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487edp+0)));
    // try std.testing.expectEqual(cf128.init(0xf.fffffffffedbb395359d3f1411e8p-4, 0x6.0b6b93c85aaf6e06365ed9368c6cp-24), pow(cf128.init(0x2.b7e154p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b464p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.fffffffffedbb3954dcaed79f6p-4, 0x6.0b6b93885aaf307456583db1dcap-24), pow(cf128.init(0x2.b7e154p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b46p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.fffffffffedbb395471f533d338p-4, 0x6.0b6b939a02af4170b4c610596148p-24), pow(cf128.init(0x2.b7e154p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a8p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.fffffffffedbb395472258f30038p-4, 0x6.0b6b9399faaf4169028a0f85f0bp-24), pow(cf128.init(0x2.b7e154p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611ap+0)));
    // try std.testing.expectEqual(cf128.init(0xf.fffffffffedbb3954720063c3b08p-4, 0x6.0b6b939a00d5748348fdb4fd1514p-24), pow(cf128.init(0x2.b7e154p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a62633145c06e4p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.fffffffffedbb3954720063c3b08p-4, 0x6.0b6b939a00d5748348fdb0fd151p-24), pow(cf128.init(0x2.b7e154p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a62633145c06ep+0)));
    // try std.testing.expectEqual(cf128.init(0xf.fffffffffedbb3954720063c3b08p-4, 0x6.0b6b939a00d5748348fed0fd1624p-24), pow(cf128.init(0x2.b7e154p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a62633145c08p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.fffffffffedbb3954720063c3b08p-4, 0x6.0b6b939a00d5748348fcd0fd1438p-24), pow(cf128.init(0x2.b7e154p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a62633145c06p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffffff6d236dbabdebbb08p-4, -0x4.48dacf23d53e61b713c9d2f46434p-28), pow(cf128.init(0x2.b7e15p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed8p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.fffffffffddd264f0fca0f5b9908p-4, -0x8.448da8dece7042b950121c28a188p-24), pow(cf128.init(0x2.b7e15p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487edp+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffffae04a3506559435a2p-4, -0x3.33826533a2e5c2544573ca0273fcp-24), pow(cf128.init(0x2.b7e15p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b464p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffffae04a343974fb491b8p-4, -0x3.33826573a2e5a1b8d0004544c53ep-24), pow(cf128.init(0x2.b7e15p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b46p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffffae04a3471fa717af5p-4, -0x3.33826561fae5aab7b34743c39ebp-24), pow(cf128.init(0x2.b7e15p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a8p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffffae04a3471e0d567d7p-4, -0x3.3382656202e5aab39fd8955306f8p-24), pow(cf128.init(0x2.b7e15p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611ap+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffffae04a3471f484bf0c8p-4, -0x3.33826561fcbf77a265db08251f5p-24), pow(cf128.init(0x2.b7e15p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a62633145c06e4p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffffae04a3471f484bf0c8p-4, -0x3.33826561fcbf77a265db0c251f4ep-24), pow(cf128.init(0x2.b7e15p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a62633145c06ep+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffffae04a3471f484bf0c8p-4, -0x3.33826561fcbf77a265d9ec251fe2p-24), pow(cf128.init(0x2.b7e15p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a62633145c08p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffffae04a3471f484bf0c8p-4, -0x3.33826561fcbf77a265dbec251edcp-24), pow(cf128.init(0x2.b7e15p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a62633145c06p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffffbb29091bbe2435d8fp-4, 0x2.eef4ba203d346ec486fd3d07aaa4p-24), pow(cf128.init(0x2.b7e151628aed4p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed8p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffff32a3662bdcc1f98e48p-4, -0x5.110b45dfc2b1ee86f90695ac39ecp-24), pow(cf128.init(0x2.b7e151628aed4p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487edp+0)));
    // try std.testing.expectEqual(cf128.init(0xf.fffffffffffffffffffffffede9p-4, 0x6.03d388c77c5e319e62c40266170cp-52), pow(cf128.init(0x2.b7e151628aed4p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b464p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffffffffffffffffffdf88p-4, 0x2.03d388c77c5e11dbe10acafa316ap-52), pow(cf128.init(0x2.b7e151628aed4p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b46p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffffffffffffffffffb23p-4, 0x3.1e5388c77c5e1a9eea1483e45b94p-52), pow(cf128.init(0x2.b7e151628aed4p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a8p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffffffffffffffffffb25p-4, 0x3.1dd388c77c5e1a9af1c44cbd6e16p-52), pow(cf128.init(0x2.b7e151628aed4p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611ap+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffffffffffffffffffb238p-4, 0x3.1e35ebf8c21e88ddfef54c3a6c44p-52), pow(cf128.init(0x2.b7e151628aed4p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a62633145c06e4p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffffffffffffffffffb238p-4, 0x3.1e35ebf8c21e889dfef54c3a6c42p-52), pow(cf128.init(0x2.b7e151628aed4p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a62633145c06ep+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffffffffffffffffffb238p-4, 0x3.1e35ebf8c21e9a9dfef54c3a6cd2p-52), pow(cf128.init(0x2.b7e151628aed4p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a62633145c08p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffffffffffffffffffb238p-4, 0x3.1e35ebf8c21e7a9dfef54c3a6bd4p-52), pow(cf128.init(0x2.b7e151628aed4p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a62633145c06p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffffbb2909294dbe30279p-4, 0x2.eef4b9d645c4739fb50712af3512p-24), pow(cf128.init(0x2.b7e151628aed2p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed8p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffff32a3661470a4141cf8p-4, -0x5.110b4629ba218b7e6faceb4a4c9cp-24), pow(cf128.init(0x2.b7e151628aed2p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487edp+0)));
    // try std.testing.expectEqual(cf128.init(0xf.fffffffffffffffffffffffff08p-4, 0x1.645c8b3db4ee9d0b9d154b5c11c8p-52), pow(cf128.init(0x2.b7e151628aed2p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b464p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffffffffffffffffffc998p-4, -0x2.9ba374c24b1153a038379231842ep-52), pow(cf128.init(0x2.b7e151628aed2p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b46p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffffffffffffffffffede8p-4, -0x1.812374c24b1157dad07f3d925622p-52), pow(cf128.init(0x2.b7e151628aed2p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a8p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffffffffffffffffffedd8p-4, -0x1.81a374c24b1157d8e5f9e72e07d4p-52), pow(cf128.init(0x2.b7e151628aed2p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611ap+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffffffffffffffffffedep-4, -0x1.814111910550e99a5f041d45fdbep-52), pow(cf128.init(0x2.b7e151628aed2p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a62633145c06e4p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffffffffffffffffffedep-4, -0x1.814111910550e9da5f041d45fdbdp-52), pow(cf128.init(0x2.b7e151628aed2p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a62633145c06ep+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffffffffffffffffffedep-4, -0x1.814111910550d7da5f041d45fe02p-52), pow(cf128.init(0x2.b7e151628aed2p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a62633145c08p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffffffffffffffffffedep-4, -0x1.814111910550f7da5f041d45fd87p-52), pow(cf128.init(0x2.b7e151628aed2p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a62633145c06p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffffbb290924e3196a67cp-4, 0x2.eef4b9ee5cba8c0ad2e8fe56ebe6p-24), pow(cf128.init(0x2.b7e151628aed2a6cp+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed8p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffff32a3661c117a50dc5p-4, -0x5.110b4611a32b91bf57681f8adcfcp-24), pow(cf128.init(0x2.b7e151628aed2a6cp+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487edp+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffffffffffffffffffbcd8p-4, 0x2.e5cbec1074429a08bc3eb1402858p-52), pow(cf128.init(0x2.b7e151628aed2a6cp+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b464p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.fffffffffffffffffffffffff648p-4, -0x1.1a3413ef8bbd65f91b75f6123e71p-52), pow(cf128.init(0x2.b7e151628aed2a6cp+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b46p+0)));
    // try std.testing.expectEqual(cf128.init(0x1p+0, 0x4.bec1074429a0766ac4096de1f708p-64), pow(cf128.init(0x2.b7e151628aed2a6cp+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a8p+0)));
    // try std.testing.expectEqual(cf128.init(0x1p+0, -0x3.413ef8bbd65f8998eb5fe0c2df16p-64), pow(cf128.init(0x2.b7e151628aed2a6cp+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611ap+0)));
    // try std.testing.expectEqual(cf128.init(0x1p+0, 0x2.e4f41ba030847669e9c7d60e9182p-64), pow(cf128.init(0x2.b7e151628aed2a6cp+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a62633145c06e4p+0)));
    // try std.testing.expectEqual(cf128.init(0x1p+0, 0x2.e4f41ba030807669e9c7d60e918p-64), pow(cf128.init(0x2.b7e151628aed2a6cp+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a62633145c06ep+0)));
    // try std.testing.expectEqual(cf128.init(0x1p+0, 0x2.e4f41ba031a07669e9c7d60e9204p-64), pow(cf128.init(0x2.b7e151628aed2a6cp+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a62633145c08p+0)));
    // try std.testing.expectEqual(cf128.init(0x1p+0, 0x2.e4f41ba02fa07669e9c7d60e9118p-64), pow(cf128.init(0x2.b7e151628aed2a6cp+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a62633145c06p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffffbb290924e4cb5da7p-4, 0x2.eef4b9ee537b9e0b6e4ebf7ea0e8p-24), pow(cf128.init(0x2.b7e151628aed2a68p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed8p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffff32a3661c0e8ccd1f98p-4, -0x5.110b4611ac6a7fb2f656f46890acp-24), pow(cf128.init(0x2.b7e151628aed2a68p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487edp+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffffffffffffffffffbcfp-4, 0x2.e537fd30c309ac14f9e72bb0767ap-52), pow(cf128.init(0x2.b7e151628aed2a68p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b464p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.fffffffffffffffffffffffff64p-4, -0x1.1ac802cf3cf653e6faf7ee16b482p-52), pow(cf128.init(0x2.b7e151628aed2a68p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b46p+0)));
    // try std.testing.expectEqual(cf128.init(0x1p+0, -0x4.802cf3cf653e81889e19a21520f4p-64), pow(cf128.init(0x2.b7e151628aed2a68p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a8p+0)));
    // try std.testing.expectEqual(cf128.init(0x1p+0, -0xc.802cf3cf653e818087d7d5a37f78p-64), pow(cf128.init(0x2.b7e151628aed2a68p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611ap+0)));
    // try std.testing.expectEqual(cf128.init(0x1p+0, -0x6.59f9df735e5a8186bf2689fbf714p-64), pow(cf128.init(0x2.b7e151628aed2a68p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a62633145c06e4p+0)));
    // try std.testing.expectEqual(cf128.init(0x1p+0, -0x6.59f9df735e5e8186bf2689fbf71p-64), pow(cf128.init(0x2.b7e151628aed2a68p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a62633145c06ep+0)));
    // try std.testing.expectEqual(cf128.init(0x1p+0, -0x6.59f9df735d3e8186bf2689fbf834p-64), pow(cf128.init(0x2.b7e151628aed2a68p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a62633145c08p+0)));
    // try std.testing.expectEqual(cf128.init(0x1p+0, -0x6.59f9df735f3e8186bf2689fbf62cp-64), pow(cf128.init(0x2.b7e151628aed2a68p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a62633145c06p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffffbb290924e3a142dfb8p-4, 0x2.eef4b9ee59d597edd8caff9af914p-24), pow(cf128.init(0x2.b7e151628aed2a6abf7158809cf6p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed8p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffff32a3661c108faf46f8p-4, -0x5.110b4611a61085d8a21cb6efb24p-24), pow(cf128.init(0x2.b7e151628aed2a6abf7158809cf6p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487edp+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffffffffffffffffffbcep-4, 0x2.e59d9cceba3f9218571dcc6fc01ep-52), pow(cf128.init(0x2.b7e151628aed2a6abf7158809cf6p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b464p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.fffffffffffffffffffffffff648p-4, -0x1.1a62633145c06de7a8e233903b9cp-52), pow(cf128.init(0x2.b7e151628aed2a6abf7158809cf6p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b46p+0)));
    // try std.testing.expectEqual(cf128.init(0x1p+0, 0x1.d9cceba3f9218571dcc6fc42acc5p-64), pow(cf128.init(0x2.b7e151628aed2a6abf7158809cf6p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a8p+0)));
    // try std.testing.expectEqual(cf128.init(0x1p+0, -0x6.2633145c06de7a8e233903bd534p-64), pow(cf128.init(0x2.b7e151628aed2a6abf7158809cf6p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611ap+0)));
    // try std.testing.expectEqual(cf128.init(0x1p+0, 0x5.8571dcc6fc42acc4044b87cbaaacp-112), pow(cf128.init(0x2.b7e151628aed2a6abf7158809cf6p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a62633145c06e4p+0)));
    // try std.testing.expectEqual(cf128.init(0x1p+0, 0x1.8571dcc6fc42acc4044b87cbaaacp-112), pow(cf128.init(0x2.b7e151628aed2a6abf7158809cf6p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a62633145c06ep+0)));
    // try std.testing.expectEqual(cf128.init(0x1p+0, 0x1.218571dcc6fc42acc4044b87cbabp-104), pow(cf128.init(0x2.b7e151628aed2a6abf7158809cf6p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a62633145c08p+0)));
    // try std.testing.expectEqual(cf128.init(0x1p+0, -0xd.e7a8e233903bd533bfbb47834558p-108), pow(cf128.init(0x2.b7e151628aed2a6abf7158809cf6p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a62633145c06p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffffbb290924e3a142dfb8p-4, 0x2.eef4b9ee59d597edd8cafafb8216p-24), pow(cf128.init(0x2.b7e151628aed2a6abf7158809cf4p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed8p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffff32a3661c108faf46f8p-4, -0x5.110b4611a61085d8a21cbb8f2938p-24), pow(cf128.init(0x2.b7e151628aed2a6abf7158809cf4p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487edp+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffffffffffffffffffbcep-4, 0x2.e59d9cceba3f91ce5fadf3d34924p-52), pow(cf128.init(0x2.b7e151628aed2a6abf7158809cf4p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b464p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.fffffffffffffffffffffffff648p-4, -0x1.1a62633145c06e31a0520c2cb293p-52), pow(cf128.init(0x2.b7e151628aed2a6abf7158809cf4p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b46p+0)));
    // try std.testing.expectEqual(cf128.init(0x1p+0, 0x1.d9cceba3f91ce5fadf3d34d330ccp-64), pow(cf128.init(0x2.b7e151628aed2a6abf7158809cf4p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a8p+0)));
    // try std.testing.expectEqual(cf128.init(0x1p+0, -0x6.2633145c06e31a0520c2cb2ccf3p-64), pow(cf128.init(0x2.b7e151628aed2a6abf7158809cf4p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611ap+0)));
    // try std.testing.expectEqual(cf128.init(0x1p+0, 0xe.5fadf3d34d330ccf5693ad882e68p-116), pow(cf128.init(0x2.b7e151628aed2a6abf7158809cf4p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a62633145c06e4p+0)));
    // try std.testing.expectEqual(cf128.init(0x1p+0, -0x3.1a0520c2cb2ccf330a96c5277d18p-112), pow(cf128.init(0x2.b7e151628aed2a6abf7158809cf4p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a62633145c06ep+0)));
    // try std.testing.expectEqual(cf128.init(0x1p+0, 0x1.1ce5fadf3d34d330ccf5693ad883p-104), pow(cf128.init(0x2.b7e151628aed2a6abf7158809cf4p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a62633145c08p+0)));
    // try std.testing.expectEqual(cf128.init(0x1p+0, -0xe.31a0520c2cb2ccf330a96c5277dp-108), pow(cf128.init(0x2.b7e151628aed2a6abf7158809cf4p+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a62633145c06p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffffbb290924e3a142dfb8p-4, 0x2.eef4b9ee59d597edd8cb16b84c14p-24), pow(cf128.init(0x2.b7e151628aed2a6abf7158809dp+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed8p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffff32a3661c108faf46f8p-4, -0x5.110b4611a61085d8a21c9fd25f6p-24), pow(cf128.init(0x2.b7e151628aed2a6abf7158809dp+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487edp+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffffffffffffffffffbcep-4, 0x2.e59d9cceba3f938a2c4d077e13p-52), pow(cf128.init(0x2.b7e151628aed2a6abf7158809dp+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b464p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.fffffffffffffffffffffffff648p-4, -0x1.1a62633145c06c75d3b2f881e8cap-52), pow(cf128.init(0x2.b7e151628aed2a6abf7158809dp+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b46p+0)));
    // try std.testing.expectEqual(cf128.init(0x1p+0, 0x1.d9cceba3f938a2c4d077e170189fp-64), pow(cf128.init(0x2.b7e151628aed2a6abf7158809dp+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a8p+0)));
    // try std.testing.expectEqual(cf128.init(0x1p+0, -0x6.2633145c06c75d3b2f881e8fe78p-64), pow(cf128.init(0x2.b7e151628aed2a6abf7158809dp+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611ap+0)));
    // try std.testing.expectEqual(cf128.init(0x1p+0, 0x1.ca2c4d077e17018974eb7088b716p-108), pow(cf128.init(0x2.b7e151628aed2a6abf7158809dp+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a62633145c06e4p+0)));
    // try std.testing.expectEqual(cf128.init(0x1p+0, 0x1.8a2c4d077e17018974eb7088b715p-108), pow(cf128.init(0x2.b7e151628aed2a6abf7158809dp+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a62633145c06ep+0)));
    // try std.testing.expectEqual(cf128.init(0x1p+0, 0x1.38a2c4d077e17018974eb7088b76p-104), pow(cf128.init(0x2.b7e151628aed2a6abf7158809dp+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a62633145c08p+0)));
    // try std.testing.expectEqual(cf128.init(0x1p+0, -0xc.75d3b2f881e8fe768b148f774928p-108), pow(cf128.init(0x2.b7e151628aed2a6abf7158809dp+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a62633145c06p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffffbb290924e3a142dfb8p-4, 0x2.eef4b9ee59d597edd8c8c6fccc3ap-24), pow(cf128.init(0x2.b7e151628aed2a6abf7158809cp+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed8p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffff32a3661c108faf46f8p-4, -0x5.110b4611a61085d8a21eef8ddc48p-24), pow(cf128.init(0x2.b7e151628aed2a6abf7158809cp+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487edp+0)));
    // try std.testing.expectEqual(cf128.init(0xf.ffffffffffffffffffffffffbcep-4, 0x2.e59d9cceba3f6e8e7460b942961p-52), pow(cf128.init(0x2.b7e151628aed2a6abf7158809cp+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b464p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.fffffffffffffffffffffffff648p-4, -0x1.1a62633145c091718b9f46bd6442p-52), pow(cf128.init(0x2.b7e151628aed2a6abf7158809cp+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b46p+0)));
    // try std.testing.expectEqual(cf128.init(0x1p+0, 0x1.d9cceba3f6e8e7460b9429b21c69p-64), pow(cf128.init(0x2.b7e151628aed2a6abf7158809cp+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a8p+0)));
    // try std.testing.expectEqual(cf128.init(0x1p+0, -0x6.2633145c091718b9f46bd64de0c8p-64), pow(cf128.init(0x2.b7e151628aed2a6abf7158809cp+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611ap+0)));
    // try std.testing.expectEqual(cf128.init(0x1p+0, -0x2.3318b9f46bd64de2f0226f7108d6p-104), pow(cf128.init(0x2.b7e151628aed2a6abf7158809cp+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a62633145c06e4p+0)));
    // try std.testing.expectEqual(cf128.init(0x1p+0, -0x2.3718b9f46bd64de2f0226f7108d4p-104), pow(cf128.init(0x2.b7e151628aed2a6abf7158809cp+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a62633145c06ep+0)));
    // try std.testing.expectEqual(cf128.init(0x1p+0, -0x1.1718b9f46bd64de2f0226f710939p-104), pow(cf128.init(0x2.b7e151628aed2a6abf7158809cp+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a62633145c08p+0)));
    // try std.testing.expectEqual(cf128.init(0x1p+0, -0x3.1718b9f46bd64de2f0226f710886p-104), pow(cf128.init(0x2.b7e151628aed2a6abf7158809cp+0, 0x0p+0), cf128.init(0x0p+0, 0x6.487ed5110b4611a62633145c06p+0)));
    // try std.testing.expectEqual(cf128.init(-0x7.7p+4, -0x7.8p+4), pow(cf128.init(0x2p+0, 0x3p+0), cf128.init(0x4p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.e14e4796fd3f16019f9eb01485e3p-4, 0x5.8b7ae4dbf0a7933416f4a46c0bbcp-4), pow(cf128.init(0xcp-4, 0x1.4p+0), cf128.init(0xcp-4, 0x1.4p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.5aea037cc815ad16ef12e71ae37dp-4, 0x8.366b1e23e511575a102515116418p-4), pow(cf128.init(0xcp-4, 0x1.4p+0), cf128.init(0x1p+0, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0xcp-4, 0x1.4p+0), pow(cf128.init(0xcp-4, 0x1.4p+0), cf128.init(0x1p+0, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x5.4f283113fa8a525b30b312aa4efp-4, 0x2.19f6810e8fdb408ac45c5250ac94p-4), pow(cf128.init(0xcp-4, 0x1.4p+0), cf128.init(0x0p+0, 0x1p+0)));
}
