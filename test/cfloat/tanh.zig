const std = @import("std");
const zml = @import("zml");
const cf32 = zml.cf32;
const cf64 = zml.cf64;
const cf80 = zml.cf80;
const cf128 = zml.cf128;
const tanh = zml.cfloat.tanh;

test tanh {
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x0p+0), tanh(cf32.init(0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0x0p+0), tanh(cf32.init(0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, 0x0p+0), tanh(cf32.init(-0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x0p+0, -0x0p+0), tanh(cf32.init(-0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x1p+0), tanh(cf32.init(0x0p+0, 0xc.90fdbp-4)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, 0xf.fffffp-4), tanh(cf32.init(0x0p+0, 0xc.90fdap-4)));
    // try std.testing.expectEqual(cf32.init(0x1.5f6336p+0, 0x6.2c386p-4), tanh(cf32.init(0xcp-4, 0x1.4p+0)));
    // try std.testing.expectEqual(cf32.init(-0xf.72387p-4, 0x2.87c84cp-8), tanh(cf32.init(-0x2p+0, -0x3p+0)));
    try std.testing.expectEqual(cf32.init(0x1p+0, 0x8.1cfa8p-132), tanh(cf32.init(0x2.dp+4, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1p+0, 0x2.60a8p-136), tanh(cf32.init(0x2.fp+4, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1p+0, 0x0p+0), tanh(cf32.init(0x1.63p+8, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1p+0, 0x0p+0), tanh(cf32.init(0x1.6dp+8, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1p+0, 0x0p+0), tanh(cf32.init(0x1.63p+12, 0x1p+0)));
    try std.testing.expectEqual(cf32.init(0x1p+0, 0x0p+0), tanh(cf32.init(0x1.63ap+12, 0x1p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, -0x1.5d1494p+24), tanh(cf32.init(0x0p+0, 0x1.921fb6p+0)));
    // try std.testing.expectEqual(cf32.init(0xe.8fe81p-4, 0x3.ea076p-4), tanh(cf32.init(0x1p+0, 0x8p+124)));
    try std.testing.expectEqual(cf32.init(0xd.c2635p-4, -0x3.60b26p-4), tanh(cf32.init(0x1p+0, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf32.init(0xd.c2635p-4, -0x3.60b26p-4), tanh(cf32.init(0x1p+0, 0xf.fffffp+124)));
    try std.testing.expectEqual(cf32.init(0x1p+0, 0x0p+0), tanh(cf32.init(0xc.35p+12, 0xc.35p+12)));
    try std.testing.expectEqual(cf32.init(0x1p+0, -0x0p+0), tanh(cf32.init(0xc.35p+12, -0xc.35p+12)));
    try std.testing.expectEqual(cf32.init(-0x1p+0, 0x0p+0), tanh(cf32.init(-0xc.35p+12, 0xc.35p+12)));
    try std.testing.expectEqual(cf32.init(-0x1p+0, -0x0p+0), tanh(cf32.init(-0xc.35p+12, -0xc.35p+12)));
    // try std.testing.expectEqual(cf32.init(0xe.e008fp-104, -0x1.5d1494p+24), tanh(cf32.init(0x8p-152, 0x1.921fb6p+0)));
    // try std.testing.expectEqual(cf32.init(0xe.e008fp-104, -0x1.5d1494p+24), tanh(cf32.init(0x8p-152, 0x1.921fb6p+0)));
    // try std.testing.expectEqual(cf32.init(0x4.fc7fbp-104, 0xc.a1bdap+20), tanh(cf32.init(0x8p-152, 0x1.921fb4p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, -0x1.5d1494p+24), tanh(cf32.init(0x0p+0, 0x1.921fb6p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, 0xc.a1bdap+20), tanh(cf32.init(0x0p+0, 0x1.921fb4p+0)));
    // try std.testing.expectEqual(cf32.init(0xe.e008fp-104, -0x1.5d1494p+24), tanh(cf32.init(0x8p-152, 0x1.921fb6p+0)));
    // try std.testing.expectEqual(cf32.init(0x4.fc7fbp-104, 0xc.a1bdap+20), tanh(cf32.init(0x8p-152, 0x1.921fb4p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, -0x1.5d1494p+24), tanh(cf32.init(0x0p+0, 0x1.921fb6p+0)));
    // try std.testing.expectEqual(cf32.init(0x0p+0, 0xc.a1bdap+20), tanh(cf32.init(0x0p+0, 0x1.921fb4p+0)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x4p-128), tanh(cf32.init(0x0p+0, 0x4p-128)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0x4p-128), tanh(cf32.init(0x0p+0, -0x4p-128)));
    try std.testing.expectEqual(cf32.init(0x0p+0, 0x8p-152), tanh(cf32.init(0x0p+0, 0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x0p+0, -0x8p-152), tanh(cf32.init(0x0p+0, -0x8p-152)));
    try std.testing.expectEqual(cf32.init(0x4p-128, 0x0p+0), tanh(cf32.init(0x4p-128, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x4p-128, 0x0p+0), tanh(cf32.init(-0x4p-128, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(0x8p-152, 0x0p+0), tanh(cf32.init(0x8p-152, 0x0p+0)));
    try std.testing.expectEqual(cf32.init(-0x8p-152, 0x0p+0), tanh(cf32.init(-0x8p-152, 0x0p+0)));

    try std.testing.expectEqual(cf64.init(0x0p+0, 0x0p+0), tanh(cf64.init(0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x0p+0), tanh(cf64.init(0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, 0x0p+0), tanh(cf64.init(-0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x0p+0, -0x0p+0), tanh(cf64.init(-0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x1.000000bbbd2ecp+0), tanh(cf64.init(0x0p+0, 0xc.90fdbp-4)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, 0xf.ffffebbbd2f48p-4), tanh(cf64.init(0x0p+0, 0xc.90fdap-4)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x1.0000000000001p+0), tanh(cf64.init(0x0p+0, 0xc.90fdaa22168c8p-4)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, 0xf.ffffffffffff8p-4), tanh(cf64.init(0x0p+0, 0xc.90fdaa22168cp-4)));
    // try std.testing.expectEqual(cf64.init(0x1.5f6335b1af42cp+0, 0x6.2c386076356ecp-4), tanh(cf64.init(0xcp-4, 0x1.4p+0)));
    // try std.testing.expectEqual(cf64.init(-0xf.723876a6b9718p-4, 0x2.87c84b87ef36ap-8), tanh(cf64.init(-0x2p+0, -0x3p+0)));
    try std.testing.expectEqual(cf64.init(0x1p+0, 0x8.1cfa783d16f48p-132), tanh(cf64.init(0x2.dp+4, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1p+0, 0x2.60a8b2f7f5242p-136), tanh(cf64.init(0x2.fp+4, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1p+0, 0x1.76a2c6f034b4cp-1024), tanh(cf64.init(0x1.63p+8, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1p+0, 0xc.f47f4p-1056), tanh(cf64.init(0x1.6dp+8, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1p+0, 0x0p+0), tanh(cf64.init(0x1.63p+12, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x1p+0, 0x0p+0), tanh(cf64.init(0x1.63ap+12, 0x1p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x1.5d14946dc9897p+24), tanh(cf64.init(0x0p+0, 0x1.921fb6p+0)));
    // try std.testing.expectEqual(cf64.init(0xe.8fe80b8795b7p-4, 0x3.ea075fdf18c8ap-4), tanh(cf64.init(0x1p+0, 0x8p+124)));
    // try std.testing.expectEqual(cf64.init(0xd.c26353c0682p-4, -0x3.60b2616c1339ap-4), tanh(cf64.init(0x1p+0, 0xf.fffffp+124)));
    // try std.testing.expectEqual(cf64.init(0xe.0ec57df9e9488p-4, -0x3.9b7edf84053dep-4), tanh(cf64.init(0x1p+0, 0x8p+1020)));
    // try std.testing.expectEqual(cf64.init(0xd.c26353c0682p-4, -0x3.60b2616c1339ap-4), tanh(cf64.init(0x1p+0, 0xf.fffffp+124)));
    // try std.testing.expectEqual(cf64.init(0xc.2f859c7fb353p-4, -0x8.891dda2c06578p-12), tanh(cf64.init(0x1p+0, 0xf.ffffffffffff8p+1020)));
    try std.testing.expectEqual(cf64.init(0x1p+0, 0x0p+0), tanh(cf64.init(0xc.35p+12, 0xc.35p+12)));
    try std.testing.expectEqual(cf64.init(0x1p+0, -0x0p+0), tanh(cf64.init(0xc.35p+12, -0xc.35p+12)));
    try std.testing.expectEqual(cf64.init(-0x1p+0, 0x0p+0), tanh(cf64.init(-0xc.35p+12, 0xc.35p+12)));
    try std.testing.expectEqual(cf64.init(-0x1p+0, -0x0p+0), tanh(cf64.init(-0xc.35p+12, -0xc.35p+12)));
    try std.testing.expectEqual(cf64.init(0xe.e008f2d6f5c38p-104, -0x1.5d14946dc9897p+24), tanh(cf64.init(0x8p-152, 0x1.921fb6p+0)));
    try std.testing.expectEqual(cf64.init(0xe.e008f2d6f5c38p-104, -0x1.5d14946dc9897p+24), tanh(cf64.init(0x8p-152, 0x1.921fb6p+0)));
    // try std.testing.expectEqual(cf64.init(0x4.fc7fb3865f34p-104, 0xc.a1bd99b5b586p+20), tanh(cf64.init(0x8p-152, 0x1.921fb4p+0)));
    try std.testing.expectEqual(cf64.init(0x6.932c3dab5e518p-44, 0x3.a052cf8639b6ap+52), tanh(cf64.init(0x8p-152, 0x1.921fb54442d18p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x1.5d14946dc9897p+24), tanh(cf64.init(0x0p+0, 0x1.921fb6p+0)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, 0xc.a1bd99b5b586p+20), tanh(cf64.init(0x0p+0, 0x1.921fb4p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x3.a052cf8639b6ap+52), tanh(cf64.init(0x0p+0, 0x1.921fb54442d18p+0)));
    try std.testing.expectEqual(cf64.init(0x7.7004796b7aep-1028, -0x1.5d14946dc9897p+24), tanh(cf64.init(0x4p-1076, 0x1.921fb6p+0)));
    // try std.testing.expectEqual(cf64.init(0x2.7e3fd9c32f98p-1028, 0xc.a1bd99b5b586p+20), tanh(cf64.init(0x4p-1076, 0x1.921fb4p+0)));
    try std.testing.expectEqual(cf64.init(0x3.49961ed5af28cp-968, 0x3.a052cf8639b6ap+52), tanh(cf64.init(0x4p-1076, 0x1.921fb54442d18p+0)));
    try std.testing.expectEqual(cf64.init(0xe.e008f2d6f5c38p-104, -0x1.5d14946dc9897p+24), tanh(cf64.init(0x8p-152, 0x1.921fb6p+0)));
    // try std.testing.expectEqual(cf64.init(0x4.fc7fb3865f34p-104, 0xc.a1bd99b5b586p+20), tanh(cf64.init(0x8p-152, 0x1.921fb4p+0)));
    // try std.testing.expectEqual(cf64.init(0xf.408f476314478p-48, -0x1.617a15494767ap+52), tanh(cf64.init(0x8p-152, 0x1.921fb54442d19p+0)));
    try std.testing.expectEqual(cf64.init(0x6.932c3dab5e518p-44, 0x3.a052cf8639b6ap+52), tanh(cf64.init(0x8p-152, 0x1.921fb54442d18p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x1.5d14946dc9897p+24), tanh(cf64.init(0x0p+0, 0x1.921fb6p+0)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, 0xc.a1bd99b5b586p+20), tanh(cf64.init(0x0p+0, 0x1.921fb4p+0)));
    // try std.testing.expectEqual(cf64.init(0x0p+0, -0x1.617a15494767ap+52), tanh(cf64.init(0x0p+0, 0x1.921fb54442d19p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x3.a052cf8639b6ap+52), tanh(cf64.init(0x0p+0, 0x1.921fb54442d18p+0)));
    try std.testing.expectEqual(cf64.init(0x7.7004796b7aep-1028, -0x1.5d14946dc9897p+24), tanh(cf64.init(0x4p-1076, 0x1.921fb6p+0)));
    // try std.testing.expectEqual(cf64.init(0x2.7e3fd9c32f98p-1028, 0xc.a1bd99b5b586p+20), tanh(cf64.init(0x4p-1076, 0x1.921fb4p+0)));
    // try std.testing.expectEqual(cf64.init(0x7.a047a3b18a23cp-972, -0x1.617a15494767ap+52), tanh(cf64.init(0x4p-1076, 0x1.921fb54442d19p+0)));
    try std.testing.expectEqual(cf64.init(0x3.49961ed5af28cp-968, 0x3.a052cf8639b6ap+52), tanh(cf64.init(0x4p-1076, 0x1.921fb54442d18p+0)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x4p-128), tanh(cf64.init(0x0p+0, 0x4p-128)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x4p-1024), tanh(cf64.init(0x0p+0, 0x4p-1024)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x8p-972), tanh(cf64.init(0x0p+0, 0x8p-972)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x4p-128), tanh(cf64.init(0x0p+0, -0x4p-128)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x4p-1024), tanh(cf64.init(0x0p+0, -0x4p-1024)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x8p-972), tanh(cf64.init(0x0p+0, -0x8p-972)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x8p-152), tanh(cf64.init(0x0p+0, 0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x0p+0, 0x4p-1076), tanh(cf64.init(0x0p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x8p-152), tanh(cf64.init(0x0p+0, -0x8p-152)));
    try std.testing.expectEqual(cf64.init(0x0p+0, -0x4p-1076), tanh(cf64.init(0x0p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf64.init(0x4p-128, 0x0p+0), tanh(cf64.init(0x4p-128, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x4p-1024, 0x0p+0), tanh(cf64.init(0x4p-1024, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x8p-972, 0x0p+0), tanh(cf64.init(0x8p-972, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x4p-128, 0x0p+0), tanh(cf64.init(-0x4p-128, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x4p-1024, 0x0p+0), tanh(cf64.init(-0x4p-1024, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x8p-972, 0x0p+0), tanh(cf64.init(-0x8p-972, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x8p-152, 0x0p+0), tanh(cf64.init(0x8p-152, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(0x4p-1076, 0x0p+0), tanh(cf64.init(0x4p-1076, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x8p-152, 0x0p+0), tanh(cf64.init(-0x8p-152, 0x0p+0)));
    try std.testing.expectEqual(cf64.init(-0x4p-1076, 0x0p+0), tanh(cf64.init(-0x4p-1076, 0x0p+0)));

    try std.testing.expectEqual(cf80.init(0x0p+0, 0x0p+0), tanh(cf80.init(0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x0p+0), tanh(cf80.init(0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, 0x0p+0), tanh(cf80.init(-0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x0p+0, -0x0p+0), tanh(cf80.init(-0x0p+0, -0x0p+0)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0x1.000000bbbd2ec06ep+0), tanh(cf80.init(0x0p+0, 0xc.90fdbp-4)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0xf.ffffebbbd2f48f3p-4), tanh(cf80.init(0x0p+0, 0xc.90fdap-4)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x1.0000000000000b96p+0), tanh(cf80.init(0x0p+0, 0xc.90fdaa22168c8p-4)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xf.ffffffffffffb96p-4), tanh(cf80.init(0x0p+0, 0xc.90fdaa22168cp-4)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0x1p+0), tanh(cf80.init(0x0p+0, 0xc.90fdaa22168c235p-4)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0xf.ffffffffffffffep-4), tanh(cf80.init(0x0p+0, 0xc.90fdaa22168c234p-4)));
    try std.testing.expectEqual(cf80.init(0x1.5f6335b1af42bd62p+0, 0x6.2c386076356eap-4), tanh(cf80.init(0xcp-4, 0x1.4p+0)));
    // try std.testing.expectEqual(cf80.init(-0xf.723876a6b971785p-4, 0x2.87c84b87ef36a32cp-8), tanh(cf80.init(-0x2p+0, -0x3p+0)));
    // try std.testing.expectEqual(cf80.init(0x1p+0, 0x8.1cfa783d16f462ap-132), tanh(cf80.init(0x2.dp+4, 0x1p+0)));
    // try std.testing.expectEqual(cf80.init(0x1p+0, 0x2.60a8b2f7f5241554p-136), tanh(cf80.init(0x2.fp+4, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1p+0, 0x1.76a2c6f034b4a7fcp-1024), tanh(cf80.init(0x1.63p+8, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1p+0, 0xc.f47f20686b62b7p-1056), tanh(cf80.init(0x1.6dp+8, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1p+0, 0xe.6442e59c9ba2ap-16392), tanh(cf80.init(0x1.63p+12, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x1p+0, 0x7.f673edp-16420), tanh(cf80.init(0x1.63ap+12, 0x1p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x1.5d14946dc98975d6p+24), tanh(cf80.init(0x0p+0, 0x1.921fb6p+0)));
    // try std.testing.expectEqual(cf80.init(0xe.8fe80b8795b6ed3p-4, 0x3.ea075fdf18c8a74cp-4), tanh(cf80.init(0x1p+0, 0x8p+124)));
    // try std.testing.expectEqual(cf80.init(0xd.c26353c068203bfp-4, -0x3.60b2616c13399068p-4), tanh(cf80.init(0x1p+0, 0xf.fffffp+124)));
    // try std.testing.expectEqual(cf80.init(0xe.0ec57df9e9489b8p-4, -0x3.9b7edf84053dda48p-4), tanh(cf80.init(0x1p+0, 0x8p+1020)));
    // try std.testing.expectEqual(cf80.init(0xd.c26353c068203bfp-4, -0x3.60b2616c13399068p-4), tanh(cf80.init(0x1p+0, 0xf.fffffp+124)));
    // try std.testing.expectEqual(cf80.init(0xc.2f859c7fb353152p-4, -0x8.891dda2c0657714p-12), tanh(cf80.init(0x1p+0, 0xf.ffffffffffff8p+1020)));
    // try std.testing.expectEqual(cf80.init(0xd.039cb06618c08cp-4, 0x2.92e1ce9b08cb660cp-4), tanh(cf80.init(0x1p+0, 0x8p+16380)));
    try std.testing.expectEqual(cf80.init(0x1p+0, 0x0p+0), tanh(cf80.init(0xc.35p+12, 0xc.35p+12)));
    try std.testing.expectEqual(cf80.init(0x1p+0, -0x0p+0), tanh(cf80.init(0xc.35p+12, -0xc.35p+12)));
    try std.testing.expectEqual(cf80.init(-0x1p+0, 0x0p+0), tanh(cf80.init(-0xc.35p+12, 0xc.35p+12)));
    try std.testing.expectEqual(cf80.init(-0x1p+0, -0x0p+0), tanh(cf80.init(-0xc.35p+12, -0xc.35p+12)));
    // try std.testing.expectEqual(cf80.init(0xe.e008f2d6f5c347p-104, -0x1.5d14946dc98975d6p+24), tanh(cf80.init(0x8p-152, 0x1.921fb6p+0)));
    // try std.testing.expectEqual(cf80.init(0xe.e008f2d6f5c347p-104, -0x1.5d14946dc98975d6p+24), tanh(cf80.init(0x8p-152, 0x1.921fb6p+0)));
    // try std.testing.expectEqual(cf80.init(0x4.fc7fb3865f33f68p-104, 0xc.a1bd99b5b58623dp+20), tanh(cf80.init(0x8p-152, 0x1.921fb4p+0)));
    // try std.testing.expectEqual(cf80.init(0x6.932c3dab5e519e3p-44, 0x3.a052cf8639b69c18p+52), tanh(cf80.init(0x8p-152, 0x1.921fb54442d18p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x1.5d14946dc98975d6p+24), tanh(cf80.init(0x0p+0, 0x1.921fb6p+0)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0xc.a1bd99b5b58623dp+20), tanh(cf80.init(0x0p+0, 0x1.921fb4p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x3.a052cf8639b69c18p+52), tanh(cf80.init(0x0p+0, 0x1.921fb54442d18p+0)));
    // try std.testing.expectEqual(cf80.init(0x7.7004796b7ae1a38p-1028, -0x1.5d14946dc98975d6p+24), tanh(cf80.init(0x4p-1076, 0x1.921fb6p+0)));
    // try std.testing.expectEqual(cf80.init(0x2.7e3fd9c32f99fb4p-1028, 0xc.a1bd99b5b58623dp+20), tanh(cf80.init(0x4p-1076, 0x1.921fb4p+0)));
    // try std.testing.expectEqual(cf80.init(0x3.49961ed5af28cf18p-968, 0x3.a052cf8639b69c18p+52), tanh(cf80.init(0x4p-1076, 0x1.921fb54442d18p+0)));
    // try std.testing.expectEqual(cf80.init(0xe.e008f2d6f5c347p-104, -0x1.5d14946dc98975d6p+24), tanh(cf80.init(0x8p-152, 0x1.921fb6p+0)));
    // try std.testing.expectEqual(cf80.init(0x4.fc7fb3865f33f68p-104, 0xc.a1bd99b5b58623dp+20), tanh(cf80.init(0x8p-152, 0x1.921fb4p+0)));
    // try std.testing.expectEqual(cf80.init(0xf.408f476314478bfp-48, -0x1.617a15494767a048p+52), tanh(cf80.init(0x8p-152, 0x1.921fb54442d19p+0)));
    // try std.testing.expectEqual(cf80.init(0x6.932c3dab5e519e3p-44, 0x3.a052cf8639b69c18p+52), tanh(cf80.init(0x8p-152, 0x1.921fb54442d18p+0)));
    // try std.testing.expectEqual(cf80.init(0x2.55e3001b8e1413fcp-20, -0x2.29478136aaf68d7cp+64), tanh(cf80.init(0x8p-152, 0x1.921fb54442d1846ap+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x1.5d14946dc98975d6p+24), tanh(cf80.init(0x0p+0, 0x1.921fb6p+0)));
    // try std.testing.expectEqual(cf80.init(0x0p+0, 0xc.a1bd99b5b58623dp+20), tanh(cf80.init(0x0p+0, 0x1.921fb4p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x1.617a15494767a048p+52), tanh(cf80.init(0x0p+0, 0x1.921fb54442d19p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x3.a052cf8639b69c18p+52), tanh(cf80.init(0x0p+0, 0x1.921fb54442d18p+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x2.29478136aaf68d7cp+64), tanh(cf80.init(0x0p+0, 0x1.921fb54442d1846ap+0)));
    // try std.testing.expectEqual(cf80.init(0x7.7004796b7ae1a38p-1028, -0x1.5d14946dc98975d6p+24), tanh(cf80.init(0x4p-1076, 0x1.921fb6p+0)));
    // try std.testing.expectEqual(cf80.init(0x2.7e3fd9c32f99fb4p-1028, 0xc.a1bd99b5b58623dp+20), tanh(cf80.init(0x4p-1076, 0x1.921fb4p+0)));
    // try std.testing.expectEqual(cf80.init(0x7.a047a3b18a23c5f8p-972, -0x1.617a15494767a048p+52), tanh(cf80.init(0x4p-1076, 0x1.921fb54442d19p+0)));
    // try std.testing.expectEqual(cf80.init(0x3.49961ed5af28cf18p-968, 0x3.a052cf8639b69c18p+52), tanh(cf80.init(0x4p-1076, 0x1.921fb54442d18p+0)));
    // try std.testing.expectEqual(cf80.init(0x1.2af1800dc70a09fep-944, -0x2.29478136aaf68d7cp+64), tanh(cf80.init(0x4p-1076, 0x1.921fb54442d1846ap+0)));
    try std.testing.expectEqual(cf80.init(0xe.e008f2d6f5cp-16400, -0x1.5d14946dc98975d6p+24), tanh(cf80.init(0x8p-16448, 0x1.921fb6p+0)));
    // try std.testing.expectEqual(cf80.init(0x4.fc7fb3865f3p-16400, 0xc.a1bd99b5b58623dp+20), tanh(cf80.init(0x8p-16448, 0x1.921fb4p+0)));
    // try std.testing.expectEqual(cf80.init(0xf.408f476314478bfp-16344, -0x1.617a15494767a048p+52), tanh(cf80.init(0x8p-16448, 0x1.921fb54442d19p+0)));
    // try std.testing.expectEqual(cf80.init(0x6.932c3dab5e519e3p-16340, 0x3.a052cf8639b69c18p+52), tanh(cf80.init(0x8p-16448, 0x1.921fb54442d18p+0)));
    // try std.testing.expectEqual(cf80.init(0x2.55e3001b8e1413fcp-16316, -0x2.29478136aaf68d7cp+64), tanh(cf80.init(0x8p-16448, 0x1.921fb54442d1846ap+0)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x4p-128), tanh(cf80.init(0x0p+0, 0x4p-128)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x4p-1024), tanh(cf80.init(0x0p+0, 0x4p-1024)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x4p-16384), tanh(cf80.init(0x0p+0, 0x4p-16384)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x2p-16384), tanh(cf80.init(0x0p+0, 0x2p-16384)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x8p-972), tanh(cf80.init(0x0p+0, 0x8p-972)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x4p-128), tanh(cf80.init(0x0p+0, -0x4p-128)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x4p-1024), tanh(cf80.init(0x0p+0, -0x4p-1024)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x4p-16384), tanh(cf80.init(0x0p+0, -0x4p-16384)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x2p-16384), tanh(cf80.init(0x0p+0, -0x2p-16384)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x8p-972), tanh(cf80.init(0x0p+0, -0x8p-972)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x8p-152), tanh(cf80.init(0x0p+0, 0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x4p-1076), tanh(cf80.init(0x0p+0, 0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x0p+0, 0x8p-16448), tanh(cf80.init(0x0p+0, 0x8p-16448)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x8p-152), tanh(cf80.init(0x0p+0, -0x8p-152)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x4p-1076), tanh(cf80.init(0x0p+0, -0x4p-1076)));
    try std.testing.expectEqual(cf80.init(0x0p+0, -0x8p-16448), tanh(cf80.init(0x0p+0, -0x8p-16448)));
    try std.testing.expectEqual(cf80.init(0x4p-128, 0x0p+0), tanh(cf80.init(0x4p-128, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x4p-1024, 0x0p+0), tanh(cf80.init(0x4p-1024, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x4p-16384, 0x0p+0), tanh(cf80.init(0x4p-16384, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x2p-16384, 0x0p+0), tanh(cf80.init(0x2p-16384, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x8p-972, 0x0p+0), tanh(cf80.init(0x8p-972, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x4p-128, 0x0p+0), tanh(cf80.init(-0x4p-128, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x4p-1024, 0x0p+0), tanh(cf80.init(-0x4p-1024, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x4p-16384, 0x0p+0), tanh(cf80.init(-0x4p-16384, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x2p-16384, 0x0p+0), tanh(cf80.init(-0x2p-16384, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x8p-972, 0x0p+0), tanh(cf80.init(-0x8p-972, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x8p-152, 0x0p+0), tanh(cf80.init(0x8p-152, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x4p-1076, 0x0p+0), tanh(cf80.init(0x4p-1076, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(0x8p-16448, 0x0p+0), tanh(cf80.init(0x8p-16448, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x8p-152, 0x0p+0), tanh(cf80.init(-0x8p-152, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x4p-1076, 0x0p+0), tanh(cf80.init(-0x4p-1076, 0x0p+0)));
    try std.testing.expectEqual(cf80.init(-0x8p-16448, 0x0p+0), tanh(cf80.init(-0x8p-16448, 0x0p+0)));

    try std.testing.expectEqual(cf128.init(0x0p+0, 0x0p+0), tanh(cf128.init(0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x0p+0), tanh(cf128.init(0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, 0x0p+0), tanh(cf128.init(-0x0p+0, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x0p+0, -0x0p+0), tanh(cf128.init(-0x0p+0, -0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x1.000000bbbd2ec06d6d6fff3655a3p+0), tanh(cf128.init(0x0p+0, 0xc.90fdbp-4)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xf.ffffebbbd2f48f30fa9c07dc0468p-4), tanh(cf128.init(0x0p+0, 0xc.90fdap-4)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0x1.0000000000000b9676733ae8fe8bp+0), tanh(cf128.init(0x0p+0, 0xc.90fdaa22168c8p-4)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xf.ffffffffffffb9676733ae8fe518p-4), tanh(cf128.init(0x0p+0, 0xc.90fdaa22168cp-4)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x1.000000000000000076733ae8fe48p+0), tanh(cf128.init(0x0p+0, 0xc.90fdaa22168c235p-4)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xf.ffffffffffffffe76733ae8fe48p-4), tanh(cf128.init(0x0p+0, 0xc.90fdaa22168c234p-4)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x1.0000000000000000000000000001p+0), tanh(cf128.init(0x0p+0, 0xc.90fdaa22168c234c4c6628b80dc8p-4)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0x1p+0), tanh(cf128.init(0x0p+0, 0xc.90fdaa22168c234c4c6628b80dcp-4)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x1.0000000000000000000000000048p+0), tanh(cf128.init(0x0p+0, 0xc.90fdaa22168c234c4c6628b81p-4)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0xf.fffffffffffffffffffffffffc8p-4), tanh(cf128.init(0x0p+0, 0xc.90fdaa22168c234c4c6628b80cp-4)));
    try std.testing.expectEqual(cf128.init(0x1.5f6335b1af42bd62464d7689818cp+0, 0x6.2c386076356ea000be129c14b8c4p-4), tanh(cf128.init(0xcp-4, 0x1.4p+0)));
    try std.testing.expectEqual(cf128.init(-0xf.723876a6b9717849ff07dfd9889p-4, 0x2.87c84b87ef36a32deb7b60c8a6d6p-8), tanh(cf128.init(-0x2p+0, -0x3p+0)));
    // try std.testing.expectEqual(cf128.init(0x1p+0, 0x8.1cfa783d16f462a5a6cd1741d1bp-132), tanh(cf128.init(0x2.dp+4, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1p+0, 0x2.60a8b2f7f5241555288ba7825782p-136), tanh(cf128.init(0x2.fp+4, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1p+0, 0x1.76a2c6f034b4a7fc921d45c1e929p-1024), tanh(cf128.init(0x1.63p+8, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1p+0, 0xc.f47f20686b62b7024c3d69ff0358p-1056), tanh(cf128.init(0x1.6dp+8, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1p+0, 0xe.6442e59c9ba29e34d4429f85ccp-16392), tanh(cf128.init(0x1.63p+12, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x1p+0, 0x7.f673ecc6b39aff738e8p-16420), tanh(cf128.init(0x1.63ap+12, 0x1p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0x1.5d14946dc98975d6421a55284fep+24), tanh(cf128.init(0x0p+0, 0x1.921fb6p+0)));
    // try std.testing.expectEqual(cf128.init(0xe.8fe80b8795b6ed2c28e53930ce48p-4, 0x3.ea075fdf18c8a74bfc7e25465e78p-4), tanh(cf128.init(0x1p+0, 0x8p+124)));
    // try std.testing.expectEqual(cf128.init(0xd.c26353c068203bf3a2f7a9b94dcp-4, -0x3.60b2616c1339906858c23a90d002p-4), tanh(cf128.init(0x1p+0, 0xf.fffffp+124)));
    // try std.testing.expectEqual(cf128.init(0xe.0ec57df9e9489b83c566cd1868b8p-4, -0x3.9b7edf84053dda473c3ba3e75286p-4), tanh(cf128.init(0x1p+0, 0x8p+1020)));
    // try std.testing.expectEqual(cf128.init(0xd.c26353c068203bf3a2f7a9b94dcp-4, -0x3.60b2616c1339906858c23a90d002p-4), tanh(cf128.init(0x1p+0, 0xf.fffffp+124)));
    // try std.testing.expectEqual(cf128.init(0xc.2f859c7fb3531523e975e1dad058p-4, -0x8.891dda2c06577145af81f4f5604p-12), tanh(cf128.init(0x1p+0, 0xf.ffffffffffff8p+1020)));
    // try std.testing.expectEqual(cf128.init(0xd.039cb06618c08bfe358cf75c6128p-4, 0x2.92e1ce9b08cb660c9a8081990afcp-4), tanh(cf128.init(0x1p+0, 0x8p+16380)));
    // try std.testing.expectEqual(cf128.init(0x1.33b2569c333811735902f282a0fp+0, 0x3.89f37a0888a0e05652b04c0aa334p-4), tanh(cf128.init(0x1p+0, 0xf.ffffffffffffbffffffffffffcp+1020)));
    try std.testing.expectEqual(cf128.init(0x1p+0, 0x0p+0), tanh(cf128.init(0xc.35p+12, 0xc.35p+12)));
    try std.testing.expectEqual(cf128.init(0x1p+0, -0x0p+0), tanh(cf128.init(0xc.35p+12, -0xc.35p+12)));
    try std.testing.expectEqual(cf128.init(-0x1p+0, 0x0p+0), tanh(cf128.init(-0xc.35p+12, 0xc.35p+12)));
    try std.testing.expectEqual(cf128.init(-0x1p+0, -0x0p+0), tanh(cf128.init(-0xc.35p+12, -0xc.35p+12)));
    // try std.testing.expectEqual(cf128.init(0xe.e008f2d6f5c347063d6ad04df2bp-104, -0x1.5d14946dc98975d6421a55284fep+24), tanh(cf128.init(0x8p-152, 0x1.921fb6p+0)));
    // try std.testing.expectEqual(cf128.init(0xe.e008f2d6f5c347063d6ad04df2bp-104, -0x1.5d14946dc98975d6421a55284fep+24), tanh(cf128.init(0x8p-152, 0x1.921fb6p+0)));
    // try std.testing.expectEqual(cf128.init(0x4.fc7fb3865f33f6829c9b9ed04c98p-104, 0xc.a1bd99b5b58623cd91404ccd8ca8p+20), tanh(cf128.init(0x8p-152, 0x1.921fb4p+0)));
    // try std.testing.expectEqual(cf128.init(0x6.932c3dab5e519e3180080e7f12c8p-44, 0x3.a052cf8639b69c1871a036cababcp+52), tanh(cf128.init(0x8p-152, 0x1.921fb54442d18p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0x1.5d14946dc98975d6421a55284fep+24), tanh(cf128.init(0x0p+0, 0x1.921fb6p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xc.a1bd99b5b58623cd91404ccd8ca8p+20), tanh(cf128.init(0x0p+0, 0x1.921fb4p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0x3.a052cf8639b69c1871a036cababcp+52), tanh(cf128.init(0x0p+0, 0x1.921fb54442d18p+0)));
    // try std.testing.expectEqual(cf128.init(0x7.7004796b7ae1a3831eb56826f958p-1028, -0x1.5d14946dc98975d6421a55284fep+24), tanh(cf128.init(0x4p-1076, 0x1.921fb6p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.7e3fd9c32f99fb414e4dcf68264cp-1028, 0xc.a1bd99b5b58623cd91404ccd8ca8p+20), tanh(cf128.init(0x4p-1076, 0x1.921fb4p+0)));
    // try std.testing.expectEqual(cf128.init(0x3.49961ed5af28cf18c004073f8964p-968, 0x3.a052cf8639b69c1871a036cababcp+52), tanh(cf128.init(0x4p-1076, 0x1.921fb54442d18p+0)));
    // try std.testing.expectEqual(cf128.init(0xe.e008f2d6f5c347063d6ad04df2bp-104, -0x1.5d14946dc98975d6421a55284fep+24), tanh(cf128.init(0x8p-152, 0x1.921fb6p+0)));
    // try std.testing.expectEqual(cf128.init(0x4.fc7fb3865f33f6829c9b9ed04c98p-104, 0xc.a1bd99b5b58623cd91404ccd8ca8p+20), tanh(cf128.init(0x8p-152, 0x1.921fb4p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.408f476314478bec5855a362f72p-48, -0x1.617a15494767a04882c320317f3ep+52), tanh(cf128.init(0x8p-152, 0x1.921fb54442d19p+0)));
    // try std.testing.expectEqual(cf128.init(0x6.932c3dab5e519e3180080e7f12c8p-44, 0x3.a052cf8639b69c1871a036cababcp+52), tanh(cf128.init(0x8p-152, 0x1.921fb54442d18p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.55e3001b8e1413fcf7193625f37ap-20, -0x2.29478136aaf68d7b3b807fb349bap+64), tanh(cf128.init(0x8p-152, 0x1.921fb54442d1846ap+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0x1.5d14946dc98975d6421a55284fep+24), tanh(cf128.init(0x0p+0, 0x1.921fb6p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0xc.a1bd99b5b58623cd91404ccd8ca8p+20), tanh(cf128.init(0x0p+0, 0x1.921fb4p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0x1.617a15494767a04882c320317f3ep+52), tanh(cf128.init(0x0p+0, 0x1.921fb54442d19p+0)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0x3.a052cf8639b69c1871a036cababcp+52), tanh(cf128.init(0x0p+0, 0x1.921fb54442d18p+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x2.29478136aaf68d7b3b807fb349bap+64), tanh(cf128.init(0x0p+0, 0x1.921fb54442d1846ap+0)));
    // try std.testing.expectEqual(cf128.init(0x7.7004796b7ae1a3831eb56826f958p-1028, -0x1.5d14946dc98975d6421a55284fep+24), tanh(cf128.init(0x4p-1076, 0x1.921fb6p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.7e3fd9c32f99fb414e4dcf68264cp-1028, 0xc.a1bd99b5b58623cd91404ccd8ca8p+20), tanh(cf128.init(0x4p-1076, 0x1.921fb4p+0)));
    // try std.testing.expectEqual(cf128.init(0x7.a047a3b18a23c5f62c2ad1b17b9p-972, -0x1.617a15494767a04882c320317f3ep+52), tanh(cf128.init(0x4p-1076, 0x1.921fb54442d19p+0)));
    // try std.testing.expectEqual(cf128.init(0x3.49961ed5af28cf18c004073f8964p-968, 0x3.a052cf8639b69c1871a036cababcp+52), tanh(cf128.init(0x4p-1076, 0x1.921fb54442d18p+0)));
    // try std.testing.expectEqual(cf128.init(0x1.2af1800dc70a09fe7b8c9b12f9bdp-944, -0x2.29478136aaf68d7b3b807fb349bap+64), tanh(cf128.init(0x4p-1076, 0x1.921fb54442d1846ap+0)));
    // try std.testing.expectEqual(cf128.init(0xe.e008f2d6f5c347063d6ad04cp-16400, -0x1.5d14946dc98975d6421a55284fep+24), tanh(cf128.init(0x8p-16448, 0x1.921fb6p+0)));
    // try std.testing.expectEqual(cf128.init(0x4.fc7fb3865f33f6829c9b9edp-16400, 0xc.a1bd99b5b58623cd91404ccd8ca8p+20), tanh(cf128.init(0x8p-16448, 0x1.921fb4p+0)));
    // try std.testing.expectEqual(cf128.init(0xf.408f476314478bec5855a362f72p-16344, -0x1.617a15494767a04882c320317f3ep+52), tanh(cf128.init(0x8p-16448, 0x1.921fb54442d19p+0)));
    // try std.testing.expectEqual(cf128.init(0x6.932c3dab5e519e3180080e7f12c8p-16340, 0x3.a052cf8639b69c1871a036cababcp+52), tanh(cf128.init(0x8p-16448, 0x1.921fb54442d18p+0)));
    // try std.testing.expectEqual(cf128.init(0x2.55e3001b8e1413fcf7193625f37ap-16316, -0x2.29478136aaf68d7b3b807fb349bap+64), tanh(cf128.init(0x8p-16448, 0x1.921fb54442d1846ap+0)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x4p-128), tanh(cf128.init(0x0p+0, 0x4p-128)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x4p-1024), tanh(cf128.init(0x0p+0, 0x4p-1024)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x4p-16384), tanh(cf128.init(0x0p+0, 0x4p-16384)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0x2p-16384), tanh(cf128.init(0x0p+0, 0x2p-16384)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x8p-972), tanh(cf128.init(0x0p+0, 0x8p-972)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x4p-128), tanh(cf128.init(0x0p+0, -0x4p-128)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x4p-1024), tanh(cf128.init(0x0p+0, -0x4p-1024)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x4p-16384), tanh(cf128.init(0x0p+0, -0x4p-16384)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0x2p-16384), tanh(cf128.init(0x0p+0, -0x2p-16384)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x8p-972), tanh(cf128.init(0x0p+0, -0x8p-972)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x8p-152), tanh(cf128.init(0x0p+0, 0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x0p+0, 0x4p-1076), tanh(cf128.init(0x0p+0, 0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0x8p-16448), tanh(cf128.init(0x0p+0, 0x8p-16448)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0x4p-16448), tanh(cf128.init(0x0p+0, 0x4p-16448)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, 0x4p-16496), tanh(cf128.init(0x0p+0, 0x4p-16496)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x8p-152), tanh(cf128.init(0x0p+0, -0x8p-152)));
    try std.testing.expectEqual(cf128.init(0x0p+0, -0x4p-1076), tanh(cf128.init(0x0p+0, -0x4p-1076)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0x8p-16448), tanh(cf128.init(0x0p+0, -0x8p-16448)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0x4p-16448), tanh(cf128.init(0x0p+0, -0x4p-16448)));
    // try std.testing.expectEqual(cf128.init(0x0p+0, -0x4p-16496), tanh(cf128.init(0x0p+0, -0x4p-16496)));
    try std.testing.expectEqual(cf128.init(0x4p-128, 0x0p+0), tanh(cf128.init(0x4p-128, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x4p-1024, 0x0p+0), tanh(cf128.init(0x4p-1024, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x4p-16384, 0x0p+0), tanh(cf128.init(0x4p-16384, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x2p-16384, 0x0p+0), tanh(cf128.init(0x2p-16384, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x8p-972, 0x0p+0), tanh(cf128.init(0x8p-972, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x4p-128, 0x0p+0), tanh(cf128.init(-0x4p-128, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x4p-1024, 0x0p+0), tanh(cf128.init(-0x4p-1024, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x4p-16384, 0x0p+0), tanh(cf128.init(-0x4p-16384, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x2p-16384, 0x0p+0), tanh(cf128.init(-0x2p-16384, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x8p-972, 0x0p+0), tanh(cf128.init(-0x8p-972, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x8p-152, 0x0p+0), tanh(cf128.init(0x8p-152, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(0x4p-1076, 0x0p+0), tanh(cf128.init(0x4p-1076, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x8p-16448, 0x0p+0), tanh(cf128.init(0x8p-16448, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x4p-16448, 0x0p+0), tanh(cf128.init(0x4p-16448, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(0x4p-16496, 0x0p+0), tanh(cf128.init(0x4p-16496, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x8p-152, 0x0p+0), tanh(cf128.init(-0x8p-152, 0x0p+0)));
    try std.testing.expectEqual(cf128.init(-0x4p-1076, 0x0p+0), tanh(cf128.init(-0x4p-1076, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x8p-16448, 0x0p+0), tanh(cf128.init(-0x8p-16448, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x4p-16448, 0x0p+0), tanh(cf128.init(-0x4p-16448, 0x0p+0)));
    // try std.testing.expectEqual(cf128.init(-0x4p-16496, 0x0p+0), tanh(cf128.init(-0x4p-16496, 0x0p+0)));
}
